{"cells":[{"metadata":{"_uuid":"3a6f08be83859bcd84f4e122a72229ec72926c1c","trusted":true,"_cell_guid":"d314f34c-fadb-4c9a-9e84-24b0d1321946"},"cell_type":"code","source":"library(ggplot2) # Data visualization\nlibrary(readr) # CSV file I/O, e.g. the read_csv function\nlibrary(stringr)\nlibrary(caret)\nlibrary(dplyr)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"660c140f7bba9a068b9ebfdfab56ee610f93ff19","_cell_guid":"36bbe9d7-04fa-4800-8f24-7c906665f4cd"},"cell_type":"markdown","source":"Load and review the training data","outputs":[],"execution_count":null},{"metadata":{"_uuid":"a1a38206c2f480f06fec9c1ea720d8a301370c3b","trusted":true,"_cell_guid":"7cdb8308-c997-4ca7-9624-22433cd5f4f9"},"cell_type":"code","source":"# Any results you write to the current directory are saved as output.\ntraining <- read_csv(\"../input/train.csv\")\ntraining$set <- \"Training\"\n\ntest <- read_csv(\"../input/test.csv\")\ntest$Survived <- NA\ntest$set <- \"Test\"\n\n# Combining test and training for feature engineering only\ncombined <- as.data.frame(bind_rows(training, test))\nnrow(combined)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"70301972366c3c90736af28db8d521ae60fde9d2","trusted":true,"_cell_guid":"9868d3e0-8909-425b-8f10-5bddcc30efa4"},"cell_type":"code","source":"str(training)\nsummary(training)\nsapply(combined, function(x) sum(is.na(x)))","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"563930fcb200989cbe19bac4937b44694904d61f","trusted":true,"_cell_guid":"12275b62-d938-4579-ba70-4d87cdce0daf"},"cell_type":"code","source":"combined$Sex <- as.factor(combined$Sex)\ncombined$Embarked <- as.factor(combined$Embarked)\ncombined$SurvivedLabel <- NA","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"5c76ac88d00efe9bdc2844416a1796648e2cdded","trusted":true,"_cell_guid":"a265059e-b89d-43b3-84f4-7f93037d5e7c"},"cell_type":"code","source":"combined$SurvivedLabel <- NA\nfor (i in 1:nrow(combined)){ \n    if(combined[i,13]=='Training'){\n        combined[i,14] <- as.numeric(combined[i,2])\n        } else {\n         combined[i,14] <- NA\n    }\n    }\n\ncombined$SurvivedLabel <- as.factor(combined$SurvivedLabel)\nstr(combined$SurvivedLabel)\nsapply(combined, function(x) sum(is.na(x)))","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"86dee2e8430d774e618539d65c46b330ed29836c","trusted":true,"_cell_guid":"77a91c54-5526-4d12-9f05-9825fc7e4663"},"cell_type":"code","source":"combined$PclassLabel <- cut(combined$Pclass, \n                       breaks = c(0, 1.5, 2.5, 3.5), \n                       labels = c(\"First\",\"Second\",\"Third\"),\n                       right = FALSE)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"c30e942e81ffdbceeb5dea94128db3f34aec9980","trusted":true,"_cell_guid":"26dd6880-3659-4295-8fcd-3542294ba3ca"},"cell_type":"code","source":"combined$AgeBracket <- cut(combined$Age,\n                          breaks = c(0,18,Inf),\n                          labels = c(\"Child\",\"Adult\"),\n                          right=FALSE)\n\nprint(c(\"Number of NAs:\", sum(is.na(combined$AgeBracket))))","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"124d8541430779d9df88b0d2da937d5b4b2f3f41","_cell_guid":"ec7ec194-050f-4ddf-bd3d-a08e66a8acc1"},"cell_type":"markdown","source":"If we don't have an Age / AgeRange then can we imply it from the person's title?\n\nChild: Master\n\nAdult: Mrs | Rev | Dr\n\nUnknown: Miss, Ms","outputs":[],"execution_count":null},{"metadata":{"_uuid":"89284bebffbf3bfd208fc51a72654d2a4f0b8bb3","trusted":true,"_cell_guid":"7865d706-7370-40a2-a967-0b72e54d32d0"},"cell_type":"code","source":"combined$NameTitle <- str_extract(combined$Name, \"Mrs|Mr|Miss|Master|Ms|Rev|Dr|Mme|Major|Col|Capt|Mlle|Don|Countess|Jonkheer\")\n# Re-do the above to be regex based so that that any title could be parsed\ncombined$NameTitle <- as.factor(combined$NameTitle)\n","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"4a66252eb9c181cbe4d8f6dcee7c00e05898cee0","_cell_guid":"df64d924-6dad-4275-8281-1f6ddf0d1fe6"},"cell_type":"markdown","source":"Are \"Mr\" generally adults or is this used with children too?","outputs":[],"execution_count":null},{"metadata":{"_uuid":"28d9651ab8a13cd23f696fa44a9f569d79fedccd","trusted":true,"_cell_guid":"896d24d8-286a-4cdc-a693-dcd0cbfd3549"},"cell_type":"code","source":"mr <- combined[combined$NameTitle == \"Mr\",]\nsummary(mr$Age)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"6a1ed9774f52710e9b9819166060bc2ab1cfd910","trusted":true,"_cell_guid":"00ec5589-aade-4a97-80e3-4c535ab7604a"},"cell_type":"code","source":"miss <- combined[combined$NameTitle == \"Miss\",]\nsummary(miss$Age)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"5c5ac1632e1ea30c56c24d36e43c6dab1e0bd57f","trusted":true,"_cell_guid":"91ca2f0c-952f-4250-bc71-18456da68afb"},"cell_type":"code","source":"ageFromTitle <<- function(unknowns){ \n    child <- c(\"Master\", \"Mlle\")\n    adult <- c(\"Mrs\", \"Mr\", \"Rev\", \"Dr\", \"Mme\",\n               \"Major\", \"Col\", \"Capt\", \"Don\",\"Donna\", \"Countess\", \"Jonkheer\",\n              \"Sir\", \"Miss\")\n\n    for (i in 1:nrow(combined)){   \n           if(is.na(combined$Age[i])){\n                 if(combined$NameTitle[i] %in% child){\n                    combined$AgeBracket[i] <<- levels(combined$AgeBracket)[1]\n                } \n                if(combined$NameTitle[i] %in% adult){\n                    combined$AgeBracket[i] <<- levels(combined$AgeBracket)[2]   \n                } \n             }  \n        }\n    }\nageFromTitle(combined)\nprint(c(\"Age bracket NAs after:\", sum(is.na(combined$AgeBracket))))","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"b4ae392c6b8fefcf1a3c165bfee2c966559a0b9c","trusted":true,"_cell_guid":"76e3ab29-2d31-49ec-9679-2c23860ec4ab"},"cell_type":"code","source":"combined$SibSpLabel <-  cut(combined$SibSp,\n                          breaks = c(0,1,3,Inf),\n                          labels = c(\"None\",\"Some\",\"Lots\"),\n                          right=FALSE)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"bd00b0c6fb377904980b4940919f3eed57eac3c1","trusted":true,"_cell_guid":"34d5b278-20f7-4738-8ba8-60b3bcbc0b0b"},"cell_type":"code","source":"combined$ParchLabel <- cut(combined$Parch,\n                          breaks = c(0,1,3,Inf),\n                          labels = c(\"None\",\"Some\",\"Lots\"),\n                          right=FALSE)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"92edc61bdb6ebdd0c198c17608357f2d9a47c5f4","trusted":true,"_cell_guid":"b86b0d05-c77a-4bee-b866-4c276dc2a968"},"cell_type":"code","source":"combined$SurvivedLabel <- factor(combined$SurvivedLabel, levels=c(0,1), labels=c(\"No\", \"Yes\"))","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"ce819dea8a3884a547ce384541563d8784114524","trusted":true,"_cell_guid":"4258b5d4-4329-45a9-af0a-120559ca159b"},"cell_type":"code","source":"str(combined[combined$set==\"Training\",c(5,12,14:16,18:19)])\n#sapply(combined[combined$set==\"Training\",c(13:19)], function(x) sum(is.na(x)))","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"679505a7e009e37649b177971cd136ae1bb013c9","_cell_guid":"2f34a1c7-8b03-400d-9fe1-e4734f6742a2"},"cell_type":"markdown","source":"**MODELS**","outputs":[],"execution_count":null},{"metadata":{"trusted":true,"_uuid":"e2b143011ba73e6817f503bcaffe3a4fdefeb8c3"},"cell_type":"code","source":"library(caretEnsemble)\n\nset.seed(447)\ncontrol <- trainControl(method=\"repeatedcv\", number=10, repeats=3, savePredictions=\"final\", classProbs=TRUE)\nbaseAlgo <- c('lda', 'rpart', 'glm','rf', 'knn', 'svmRadial')\nbaseModels <- caretList(SurvivedLabel~., \n                         combined[combined$set==\"Training\",c(5,14:16,18:19)],\n                        trControl=control, \n                        methodList=baseAlgo\n                       )\nresults <- resamples(baseModels)\nsummary(results)\ndotplot(results)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"8a2b6cfa182ef892218ec9439becc160b77998b5"},"cell_type":"markdown","source":"**TO DO**\n1. Review https://cran.r-project.org/web/packages/caretEnsemble/vignettes/caretEnsemble-intro.html\n2. More feature engineering and check var importance","outputs":[],"execution_count":null},{"metadata":{"_uuid":"2ccd65d49206def729a161fac6d3f7403bd33842","_cell_guid":"e9ffb019-d463-40ad-b9ae-70f9481ffcac"},"cell_type":"markdown","source":"**PREDICTION**","outputs":[],"execution_count":null},{"metadata":{"_uuid":"ea4efccc3ede16c7b8f9983932ba8b0fe646f081","trusted":true,"_cell_guid":"e67fdfb5-10d3-4b51-8eba-7e8037bee00c"},"cell_type":"code","source":"pred <- predict(model, newdata = combined[combined$set==\"Test\",c(5,12,14:16,18:19)])\nsapply( combined[combined$set==\"Training\",c(5,12,14:16,18:19)], function(x) sum(is.na(x)))","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"9f80181d92ff024407bfdb510ac6e56f6045d598","trusted":true,"_cell_guid":"bc56b87a-d6e2-4604-8ad8-a8d1b2fbfb48"},"cell_type":"code","source":"predictions <- data.frame(PassengerID = test[,1], Survived = pred)\nwrite.csv(predictions, file = 'rf_mod_Solution.csv', row.names = F)","execution_count":null,"outputs":[]}],"metadata":{"kernelspec":{"display_name":"R","language":"R","name":"ir"},"language_info":{"mimetype":"text/x-r-source","name":"R","pygments_lexer":"r","version":"3.4.2","file_extension":".r","codemirror_mode":"r"}},"nbformat":4,"nbformat_minor":1}