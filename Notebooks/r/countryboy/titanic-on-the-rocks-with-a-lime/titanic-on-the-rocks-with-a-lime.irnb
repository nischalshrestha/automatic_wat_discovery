{"nbformat": 4, "nbformat_minor": 1, "metadata": {"language_info": {"pygments_lexer": "r", "mimetype": "text/x-r-source", "name": "R", "codemirror_mode": "r", "file_extension": ".r", "version": "3.4.1"}, "kernelspec": {"language": "R", "display_name": "R", "name": "ir"}}, "cells": [{"source": ["## Import Data\n", "Loading the train and test files, then merging to complete missing value treatment and feature engineering."], "metadata": {"_uuid": "da5b47e947e3c2f3c9e93fee919577f5dd433e5c", "_cell_guid": "705dfd24-cd61-42ea-8b6f-6c6961e1d945"}, "cell_type": "markdown"}, {"execution_count": null, "outputs": [], "metadata": {"_uuid": "f8a8de73239bab92607ff227168de35e2dd89708", "_cell_guid": "23d29906-1e8c-428e-a335-dbe75f7bd935"}, "cell_type": "code", "source": ["library(dplyr)\n", "library(VIM)\n", "library(mice)\n", "library(funModeling)\n", "library(caret)\n", "library(lime)\n", "\n", "train <- read.csv(\"../input/train.csv\", stringsAsFactors = FALSE, na.strings=c(\"\",\"NA\"))\n", "test <- read.csv(\"../input/test.csv\", stringsAsFactors = FALSE, na.strings=c(\"\",\"NA\"))\n", "df_combined <- bind_rows(train, test) #http://dplyr.tidyverse.org/reference/bind.html\n", "\n", "str(df_combined)"]}, {"source": ["## What's Missing?\n", "It's known that the **Survived** column has missing values since we combined the train/test sets and test had N/A values for each record. But the graph below shows that we have additional missing values in the **Cabin**, **Age**, **Embarked** and **Fare** columns."], "metadata": {"_uuid": "8b8ed41da9a8159edbc22cf9a29dae9850dbb06d", "_cell_guid": "316e64d9-7bb9-401a-bf04-63dd4f0e4dd0"}, "cell_type": "markdown"}, {"execution_count": null, "outputs": [], "metadata": {"_uuid": "d9adbfedb382167b374e52428e2aec827aed6d6d", "_cell_guid": "6aa958d1-7a9d-44e9-ab02-7839825320ff"}, "cell_type": "code", "source": ["aggr_plot <- aggr(df_combined, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, \n", "                  labels=names(df_combined), cex.axis=.7, gap=3, ylab=c(\"Histogram of missing data\",\"Pattern\"))"]}, {"source": ["Confirming the columns with missing data using a different technique..."], "metadata": {"_uuid": "a4785a385e04f3874b31eeb2406311f9aee78ccd", "_cell_guid": "2c0f5add-832a-495d-bfc6-d19f48138c65"}, "cell_type": "markdown"}, {"execution_count": null, "outputs": [], "metadata": {"_uuid": "1588417503d7c50a70d4bcbc6c070b300ad03906", "_cell_guid": "5b3c4675-40cf-4186-82ae-45d5fa545ff2"}, "cell_type": "code", "source": ["miss_cols <- colnames(df_combined)[colSums(is.na(df_combined)) > 0]\n", "miss_cols"]}, {"source": ["Which rows are missing **Fare** data?"], "metadata": {"_uuid": "ac7d58fa170adb9fe7157417a6140826f10bc89e", "_cell_guid": "d80a05a6-f2e2-4cfe-ad3e-5e1312161d96"}, "cell_type": "markdown"}, {"execution_count": null, "outputs": [], "metadata": {"_uuid": "894bf12cbdfc42d712eeb24a0e58dae0af00706c", "_cell_guid": "f4849fad-003b-4d67-acd5-b6f395c4ee7a"}, "cell_type": "code", "source": ["subset(df_combined, is.na(Fare) == TRUE)"]}, {"execution_count": null, "outputs": [], "metadata": {"_uuid": "8cbbc625123c7bee22331401fc8e0dc0aa219187", "_cell_guid": "4ff68ccd-c144-4a94-8c2d-a44615f4d1f4"}, "cell_type": "code", "source": ["df_combined$Fare[1044] <- median(df_combined[df_combined$Pclass == '3' & df_combined$Embarked == 'S', ]$Fare, na.rm = TRUE)"]}, {"source": ["How many rows are missing **Age** data?"], "metadata": {"_uuid": "3db4d42106e7f52439bce0e25252eb6e0cabdd11", "_cell_guid": "3c1067d4-d732-4515-a5e9-5d30a0d00065"}, "cell_type": "markdown"}, {"execution_count": null, "outputs": [], "metadata": {"_uuid": "25bdf6384227fad6c8278d9fe40ad2353ff37182", "_cell_guid": "342c407b-55e7-4b69-b7bc-db253c7eb328"}, "cell_type": "code", "source": ["nrow(subset(df_combined, is.na(Age) == TRUE))"]}, {"source": ["Lets utilize the MICE package to impute the missing values"], "metadata": {"_uuid": "abb47f564eec72d3e1f842584e9726a3c752030e", "_cell_guid": "8102f135-3229-4dfd-961f-d3973aa1620e"}, "cell_type": "markdown"}, {"execution_count": null, "outputs": [], "metadata": {"_uuid": "ee4f8a3fc70de4199339daaec6ddc2ae40071048", "_cell_guid": "e5be1962-9508-4241-8d87-f5fd840ebe76"}, "cell_type": "code", "source": ["set.seed(42)\n", "\n", "mice_mod <- mice(df_combined[, !names(df_combined) %in% \n", "                      c('PassengerId','Name','Ticket','Cabin','Survived')], method='rf') "]}, {"execution_count": null, "outputs": [], "metadata": {"_uuid": "39bd31a97f5c95b03788d1595f71b170c93c91e3", "_cell_guid": "9560092d-2dc5-43d7-a589-1691d20b1065"}, "cell_type": "code", "source": ["mice_output <- complete(mice_mod)\n", "\n", "df_combined$Age <- mice_output$Age"]}, {"source": ["Which rows are missing **Embarked** codes?"], "metadata": {"_uuid": "15835c85cc211078115948d6bb5e3b6117bb7473", "_cell_guid": "f68d426c-62b0-450c-92b1-8081c4484b8f"}, "cell_type": "markdown"}, {"execution_count": null, "outputs": [], "metadata": {"_uuid": "084d5ce417e4653e942cc90024a1cfe9da22efc3", "_cell_guid": "b1796846-d35c-4968-a40a-8e8ee1fd21d4"}, "cell_type": "code", "source": ["subset(df_combined, is.na(Embarked) == TRUE)"]}, {"source": ["Which **Embark** code has the most people that paid **Fare** >= 80?"], "metadata": {"_uuid": "a7d14635287a5d2b781254843e67edd774a664d1", "_cell_guid": "2320320c-5a5f-48e8-828f-ee6d94e7fa9f"}, "cell_type": "markdown"}, {"execution_count": null, "outputs": [], "metadata": {"_uuid": "1438fd8e8012b16ce6e000e04c5135600c8c82bd", "_cell_guid": "4f02208c-b679-4c12-ba64-6013e7505eaa"}, "cell_type": "code", "source": ["table(subset(df_combined, Fare >= 80, select = c(\"Embarked\")))"]}, {"execution_count": null, "outputs": [], "metadata": {"_uuid": "de3dfee3ef4f435748faf30d029c52762deec9a7", "_cell_guid": "fe4c1a5e-efaf-462a-8128-3ce38018df60"}, "cell_type": "code", "source": ["df_combined$Embarked[c(62, 830)] <- 'C'"]}, {"source": ["How many rows are missing **Cabin** codes?\n", "\n", "Well...that's quite a few. Lets just exclude this from the model for now and see what kind of results we get. Otherwise we could probably try to impute what level they were on and just not necessarily the specific cabin number."], "metadata": {"_uuid": "42c07fa35b412ce560972fb6f08fcc764f12fdbc", "_cell_guid": "7187eddf-470e-4bdf-a7b0-f3e40a014b59"}, "cell_type": "markdown"}, {"execution_count": null, "outputs": [], "metadata": {"_uuid": "84e4e8fe1a5cf23e2e75134b9d90b6e3b2e79e0b", "_cell_guid": "3c26fa58-33ca-416c-959d-4c2d1bfa358e"}, "cell_type": "code", "source": ["nrow(subset(df_combined, is.na(Cabin) == TRUE))"]}, {"source": ["Now which columns are missing data?\n", "We should be good moving forward since we're going to drop **Cabin**."], "metadata": {"_uuid": "6d4a5d2fc789950a5a046ab4ff89c4f73617713f", "_cell_guid": "7bccdbb7-c4fd-4ddd-892b-166fb714afe1"}, "cell_type": "markdown"}, {"execution_count": null, "outputs": [], "metadata": {"_uuid": "24a8b80d283076b76e9b5d77a7339935a67204b5", "_cell_guid": "d74a4ae2-c567-4851-aa05-761a98a26db7"}, "cell_type": "code", "source": ["miss_cols <- colnames(df_combined)[colSums(is.na(df_combined)) > 0]\n", "miss_cols"]}, {"source": ["## What's Important?"], "metadata": {"_uuid": "647b8da179bb973989afeb7f0b9e6f8404b2dde4", "_cell_guid": "943a9624-fe27-4340-ad04-693193d927b5"}, "cell_type": "markdown"}, {"execution_count": null, "outputs": [], "metadata": {"_uuid": "a4a7498a5688e2334a6bd84db12d83c36170bdaa", "_cell_guid": "4fea15a7-2215-4ff0-914b-18edfc525c95"}, "cell_type": "code", "source": ["nums <- sapply(df_combined, is.numeric)\n", "cats <- sapply(df_combined, is.character)\n", "names(df_combined[,nums])\n", "names(df_combined[,cats])"]}, {"source": ["Convert columns that should be categorical to factors"], "metadata": {"_uuid": "9db3175db8ae251b69a26b37015a612285a4b861", "_cell_guid": "fa334f77-eb0b-4c05-9983-9ec708cee2a0"}, "cell_type": "markdown"}, {"execution_count": null, "outputs": [], "metadata": {"_uuid": "c96209771ef925174c43d24d450fe6713ffaa1e9", "_cell_guid": "72796c0d-f6a8-48bd-b9fa-79d47ea2d88c"}, "cell_type": "code", "source": ["cols <- c(\"PassengerId\", \"Survived\", \"Pclass\", \"Name\", \"Sex\", \"Ticket\", \"Cabin\", \"Embarked\")\n", "df_combined[cols] <- lapply(df_combined[cols], factor)"]}, {"source": ["How many levels does each factor have? \n", "\n", "I won't dig into **PassengerId**, **Name**, **Ticket** or **Cabin** since they have too many levels."], "metadata": {"_uuid": "9f7ca340b53fd56e523c9330c78d0cc59355a7fd", "_cell_guid": "afd25953-1876-4711-8564-fe5051f79894"}, "cell_type": "markdown"}, {"execution_count": null, "outputs": [], "metadata": {"_uuid": "371ad645eb4bd9aeb220a2bb5eb6acd8551a967c", "_cell_guid": "def75531-1e37-4e71-a5f6-4ab1cc673f14"}, "cell_type": "code", "source": ["lapply(df_combined[cols], nlevels)"]}, {"source": ["Numeric variable names"], "metadata": {"_uuid": "d19d02e1ce6fcedf2f8bce48603221a682a8b6d9", "_cell_guid": "400b738d-7037-4917-b056-908a642ee09b"}, "cell_type": "markdown"}, {"execution_count": null, "outputs": [], "metadata": {"_uuid": "38f11c8726fd2c4bba69bcb6be4979755c917707", "_cell_guid": "2865daae-c40a-4893-b83f-764524deb73f"}, "cell_type": "code", "source": ["names(df_combined[,-which(names(df_combined) %in% cols)])"]}, {"source": ["Build cross plots for each variable with respect to the target"], "metadata": {"_uuid": "73e2f5cde4e5573d2af308ed387d59dac9b7efe7", "_cell_guid": "5d0e21dc-faa4-424d-b8af-6ad284c916ba"}, "cell_type": "markdown"}, {"execution_count": null, "outputs": [], "metadata": {"_uuid": "bc64c3dc7b262d48413f1912136c11809b488cb0", "_cell_guid": "71c7d5ee-0c19-4867-8dad-a653d582ff8c"}, "cell_type": "code", "source": ["var_list <- c(\"Pclass\",\"Sex\",\"Embarked\",\"Age\",\"SibSp\",\"Parch\",\"Fare\")\n", "plots <- function(var_list) {\n", "    cross_plot(df_combined[1:891,], str_input=var_list, str_target=\"Survived\")\n", "}\n", "lapply(var_list, plots)"]}, {"source": ["## Cross plot takeaways:\n", "1. Chance of survival increases moving from **Pclass** 3 at 24% to **Pclass** 1 at 63%\n", "2. Chance of survival is higher for women at 74% versus men at 19%\n", "3. Chance of survival is higher for **Embarked** code 'C' at 56% versus **Embarked** code 'S' at 34%\n", "4. Chance of survival appears to be higher for children (**Age** ~ 18 and below) and passengers in their mid 30's.\n", "5. Chance of survival appears to increase for small families and subsequently decreases as the family size grows larger. Individuals appear to have a lower chance of survival.\n", "6. Chance of survival tends to generally increase as **Fare** increases."], "metadata": {"_uuid": "20ad45241ca13e96353bfb5d4718ee541c7c3a5d", "_cell_guid": "fc33b20a-e71d-4cc7-9421-076100dad32d"}, "cell_type": "markdown"}, {"source": ["## Feature Engineering"], "metadata": {"_uuid": "d2e190aca65d45442efaa1f11697903c40d7fcfa", "_cell_guid": "50e31e4f-92b7-47be-a59d-0eb51eacbbb4"}, "cell_type": "markdown"}, {"source": ["Lets run with a few hypothesis and see how they play out...\n", "\n", "If Game of Thrones has taught me anything its that Lords and Ladies get preferential treatment. Is that the case here?Our Fare cross plot above seemed to indicate that survival increased as the price got higher.  Lets create a bucket for each passenger based on his/her title."], "metadata": {"_uuid": "7f09c0b5ac766ce7c49b41d2d84b303e2d7eb0eb", "_cell_guid": "34ad487f-4c94-4d37-bcf7-957544cc3fcf"}, "cell_type": "markdown"}, {"execution_count": null, "outputs": [], "metadata": {"_uuid": "1fc2941f2a61b304500e3eb05e10dc5bcadd3293", "scrolled": true, "_cell_guid": "5110e418-f798-452e-a414-7d7b674d57d6"}, "cell_type": "code", "source": ["df_combined$Title <- gsub('(.*, )|(\\\\..*)', '', df_combined$Name)\n", "tab <- prop.table(table(df_combined$Title))\n", "df <- data.frame(Title=names(tab), proportion=as.numeric(tab))\n", "df <- df[order(-df$proportion),]\n", "df"]}, {"execution_count": null, "outputs": [], "metadata": {"_uuid": "293ace72c9c310d2f704a3425db354b5f6a40177", "_cell_guid": "0ee5eb7f-a8c6-4380-af2a-8f0c0731c24e"}, "cell_type": "code", "source": ["other_title <- c('Dr','Rev','Col','Major','Capt','Don','Dona','Jonkheer','Lady','Sir','the Countess')\n", "df_combined$Title[df_combined$Title == 'Mlle'] <- 'Miss' #http://www.dictionary.com/browse/mademoiselle?s=t\n", "df_combined$Title[df_combined$Title == 'Ms'] <- 'Miss' \n", "df_combined$Title[df_combined$Title == 'Mme'] <- 'Mrs' #http://www.dictionary.com/browse/madame\n", "df_combined$Title[df_combined$Title %in% other_title] <- 'Other'"]}, {"execution_count": null, "outputs": [], "metadata": {"_uuid": "a172bc201df079218a4d933fd27e974cbf0beb73", "_cell_guid": "8fa955b4-b5e7-4829-9cd1-88a44337c326"}, "cell_type": "code", "source": ["table(df_combined$Title)"]}, {"source": ["I imagine most families would be attempting to find each other before heading to the life boats. Mothers and fathers looking for children and vice versa. Gathering family members could cause unrecoverable time loss. Is that a factor?"], "metadata": {"_uuid": "216024b78f8892c78d08be6d1cf3fd6a8b79815e", "_cell_guid": "c1632cc1-b6ea-4ae0-998d-782e690596ab"}, "cell_type": "markdown"}, {"source": ["Count up all the family members..."], "metadata": {"_uuid": "6a9451f32ade10440a5c86830e25c9ed6c3a3235", "_cell_guid": "d5d31536-b68d-4822-b4b5-8d9ff2672d8a"}, "cell_type": "markdown"}, {"execution_count": null, "outputs": [], "metadata": {"_uuid": "92da603aa6136504fd7b7f9f65ce1332b3d958a5", "_cell_guid": "591e8fc6-41c7-4bb9-a771-e22490054136"}, "cell_type": "code", "source": ["df_combined$Family_Member_Count <- df_combined$SibSp + df_combined$Parch + 1"]}, {"source": ["Identify the mothers and fathers..."], "metadata": {"_uuid": "abc16e24f7a17d24f902b679b0a5f8c9946d8209", "_cell_guid": "31b356db-afdb-43d5-8315-f4ab9e172188"}, "cell_type": "markdown"}, {"execution_count": null, "outputs": [], "metadata": {"_uuid": "65a05a298f5d4bef8da3339d7295a7b40037e237", "_cell_guid": "9c7f382e-b0a3-4503-b4b4-f88435054738"}, "cell_type": "code", "source": ["df_combined$Parent <- 'Not Parent'\n", "df_combined$Parent[df_combined$Sex == 'female' & df_combined$Parch > 0 & df_combined$Age > 18 & df_combined$Title != 'Miss'] <- 'Mother'\n", "df_combined$Parent[df_combined$Sex == 'male' & df_combined$Parch > 0 & df_combined$Age > 18] <- 'Father'"]}, {"source": ["Convert the new categorical features to factors..."], "metadata": {"_uuid": "b9eff06e25935ebaca5aad286b6cab1078966f6a", "_cell_guid": "e3228d26-5941-40b4-90aa-3fffb5186b34"}, "cell_type": "markdown"}, {"execution_count": null, "outputs": [], "metadata": {"_uuid": "b4227867c587f8a0da754b6e2c5d3b3b7fb02b71", "_cell_guid": "fb57d6b3-3e42-49eb-932f-763c56586eba"}, "cell_type": "code", "source": ["df_combined$Parent <- factor(df_combined$Parent)\n", "df_combined$Title <- factor(df_combined$Title)"]}, {"source": ["## Create Train and Test Sets"], "metadata": {"_uuid": "6e3361eb837952fcc898e09798ec70f94a37e72d", "_cell_guid": "3502dd5d-cfc1-4da1-94b0-45578a3d4d72"}, "cell_type": "markdown"}, {"execution_count": null, "outputs": [], "metadata": {"_uuid": "07e4b36986e7d4a3636d8b3b6d7792d5e9414ec3", "_cell_guid": "cc69cd4f-2e38-4774-bacf-88c21f158286"}, "cell_type": "code", "source": ["train <- df_combined[1:891,c(\"Pclass\",\"Sex\",\"Age\",\"SibSp\",\"Parch\",\"Fare\",\"Embarked\",\"Title\",\"Family_Member_Count\",\"Parent\")]\n", "test <- df_combined[892:1309,c(\"Pclass\",\"Sex\",\"Age\",\"SibSp\",\"Parch\",\"Fare\",\"Embarked\",\"Title\",\"Family_Member_Count\",\"Parent\")]\n", "target <- as.factor(df_combined[[2]][1:891])"]}, {"execution_count": null, "outputs": [], "metadata": {"_uuid": "1e86bae5dfd1f66fc981bda47ca48f008a2de725", "_cell_guid": "8e69d2f3-7e78-49f3-b0aa-d115e1e269f7"}, "cell_type": "code", "source": ["levels(target) <- c(\"Not_Survive\", \"Survive\")"]}, {"source": ["## Create Train Control Object"], "metadata": {"_uuid": "ca0877873ff79fd881a98a5d2d12951a4cc3dad2", "_cell_guid": "83f637ac-cae4-4931-be35-c707af6551f4"}, "cell_type": "markdown"}, {"execution_count": null, "outputs": [], "metadata": {"_uuid": "45c8084ab6dc25bdb5dcf22fa7e757285cf8a6db", "_cell_guid": "e14d8dcf-9361-4fe0-97c3-1d96a67ba6d9"}, "cell_type": "code", "source": ["myControl <- trainControl(\n", "  method = \"repeatedcv\",\n", "  number = 10,\n", "  repeats = 3,\n", "  classProbs = TRUE, # IMPORTANT!\n", "  verboseIter = TRUE,    \n", ")"]}, {"source": ["## Build Random Forest Model"], "metadata": {"_uuid": "f841dad144e231eedc1f6aa4db7b658927a9e9a4", "_cell_guid": "82d0fc81-35aa-4671-9d37-95b32e8677d0"}, "cell_type": "markdown"}, {"execution_count": null, "outputs": [], "metadata": {"_uuid": "64637fe6a12f100e2f146bb7fed5e04a5eda08b4", "_cell_guid": "76ba91fd-83d1-4a70-a346-99d5d3925d99"}, "cell_type": "code", "source": ["model <- train(train, target, method = 'rf', metric = \"Accuracy\", ntree = 500, trControl = myControl)"]}, {"execution_count": null, "outputs": [], "metadata": {"_uuid": "b074ded60de64dd8827b8b383728a2ab93128731", "_cell_guid": "2e476254-0296-44a6-9e70-297faf563a59"}, "cell_type": "code", "source": ["model"]}, {"execution_count": null, "outputs": [], "metadata": {"_uuid": "15c98f05402baad7b71af59042fec2b1f76f29a0", "_cell_guid": "ea63d9ae-5ffb-4ca0-b2c8-0bf36189b1d6"}, "cell_type": "code", "source": ["preds <- predict(model, train, type = \"raw\")"]}, {"execution_count": null, "outputs": [], "metadata": {"_uuid": "b264044d08028188566c82ebbd86c77e20bc1d28", "_cell_guid": "9606fc6a-d240-414d-b43e-9a9d41ce21f0"}, "cell_type": "code", "source": ["head(preds)"]}, {"source": ["## Create Confusion Matrix\n", "It appears as though our model is performing well enough to move forward based on our Accuracy score below."], "metadata": {"_uuid": "aa505a40fdc6182b0ff3aa6a53d1257078213251", "_cell_guid": "5f7480d0-a823-4548-89a9-5e6286b96da3"}, "cell_type": "markdown"}, {"execution_count": null, "outputs": [], "metadata": {"_uuid": "d702bd9e2506e6e738ce135e9515bffcf7ccf69c", "_cell_guid": "08446241-335e-4280-be1f-3e6d0aa54f28"}, "cell_type": "code", "source": ["confusionMatrix(target, preds)"]}, {"source": ["## Explain the prediction with LIME\n", "Should we trust our black box model? Why is it making these specific predictions? LIME will help provide a window into the decision making process."], "metadata": {"_uuid": "d9b524f6132c6f14df3fc404a8c1d0860e9a93d1", "_cell_guid": "4f2e4966-13cb-4eb4-bcda-e78f1fd7def7"}, "cell_type": "markdown"}, {"execution_count": null, "outputs": [], "metadata": {"_uuid": "e6e4e7e46c90b3df7c665bc6f747792ab5391a40", "_cell_guid": "2f0369ac-355b-4a90-8465-a6404b1ffd06"}, "cell_type": "code", "source": ["explainer <- lime(train, model)"]}, {"execution_count": null, "outputs": [], "metadata": {"_uuid": "77af8e81490d99334c8862ca8c76570ba8dd0a63", "_cell_guid": "77e4ebec-d3ab-4ea3-babe-48f91e00d2b4"}, "cell_type": "code", "source": ["explanation <- explain(test[5:8,], explainer, n_labels = 1, n_features = length(names(test)))"]}, {"execution_count": null, "outputs": [], "metadata": {"_uuid": "7b83745795f523d9f2de43bc1e32a22f63e2f7f2", "_cell_guid": "8145d2cd-02c5-41f6-af68-4b6ad050297d"}, "cell_type": "code", "source": ["plot_features(explanation)"]}, {"source": ["## Create Solution for Submission "], "metadata": {"_uuid": "9f0b9a4657e46a75ab3bc3aea8b133ec73825bc8", "_cell_guid": "7e10e8c3-80ea-49fd-8ef2-10764b34f2f2"}, "cell_type": "markdown"}, {"execution_count": null, "outputs": [], "metadata": {"_uuid": "68c1a508b63edb4742cdf1bac2c13a8c94a9ebfd", "_cell_guid": "c902a4b9-7d24-490e-aff0-37a761148724"}, "cell_type": "code", "source": ["my_prediction <- predict(model, newdata = test, type = \"raw\")\n", "\n", "my_solution <- data.frame(PassengerId = df_combined[892:1309,1], Survived = my_prediction)\n", "\n", "my_solution$Survived <- ifelse(my_solution$Survived == 'Not_Survive', 0, 1)\n", "\n", "write.csv(my_solution, file = \"my_solution.csv\", row.names = FALSE)"]}]}