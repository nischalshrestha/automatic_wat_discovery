{"nbformat": 4, "metadata": {"language_info": {"codemirror_mode": "r", "file_extension": ".r", "mimetype": "text/x-r-source", "pygments_lexer": "r", "name": "R", "version": "3.4.1"}, "kernelspec": {"display_name": "R", "name": "ir", "language": "R"}}, "nbformat_minor": 0, "cells": [{"metadata": {"_uuid": "57630315c3d4b2582e209f0fa8f50e4a6cb83097", "_cell_guid": "c87dfc59-1c11-49dd-ae45-409c16861582", "collapsed": false, "_execution_state": "idle"}, "source": "# Consumo dos dados", "outputs": [], "cell_type": "markdown", "execution_count": null}, {"metadata": {"_uuid": "2cf1e8be4faf4614b1efc19004717d5a9152cb81", "trusted": false, "_cell_guid": "367eb94d-a2da-4176-b024-9fa2b42e0574", "_execution_state": "idle"}, "source": "library(ggplot2)\nlibrary(dplyr)\nlibrary(randomForest)\n\ntrain <- read.csv(file = \"../input/train.csv\", stringsAsFactor = FALSE)\ntest <- read.csv(file = \"../input/test.csv\", stringsAsFactor = FALSE)\n\ntrain$isTrain <- T\ntest$isTrain <- F\n\nfull <- bind_rows(train, test)\n\nglimpse(full)\n", "outputs": [], "cell_type": "code", "execution_count": 1}, {"metadata": {"_uuid": "ee64ee78142f0c5202eb89c2351ae1ba7d5d9fc1", "_cell_guid": "010a13b4-1500-4298-ba6f-6eab50db4cb7", "collapsed": false, "_execution_state": "idle"}, "source": "# An\u00e1lise das vari\u00e1veis", "outputs": [], "cell_type": "markdown", "execution_count": null}, {"metadata": {"_uuid": "554701159b24bcc3d144ee7ceec4ce350966db85", "_cell_guid": "0719a556-00ce-4045-a862-06276bd6f5bf", "trusted": false, "collapsed": false, "_execution_state": "idle"}, "source": "summary(full)", "outputs": [], "cell_type": "code", "execution_count": 1}, {"metadata": {"_uuid": "d5802e51660e9c10ec341091cc5f16c7e901cd54", "_cell_guid": "796b4bc2-d50d-4a5d-b3ab-7fb636d78694", "collapsed": false, "_execution_state": "idle"}, "source": "# A Rose sobrevive", "outputs": [], "cell_type": "markdown", "execution_count": null}, {"metadata": {"_uuid": "0b917113ad00b5169c1627e0bb985af235b73a16", "_cell_guid": "10278de1-1416-4088-bddb-8db2ed655b87", "trusted": false, "collapsed": false, "_execution_state": "idle"}, "source": "full$isFemale <- F\nfull$isFemale[full$Sex == \"female\"] <- T\n\nggplot(full[full$isTrain,], aes(x = isFemale, fill = factor(Survived))) + geom_bar(stat='count', position='dodge')", "outputs": [], "cell_type": "code", "execution_count": 1}, {"metadata": {"_uuid": "896cd64bd065853c429270cd322dbb2842d3eda9", "_cell_guid": "940d5e7f-9682-4cdb-a5c3-a3decd4105d5", "trusted": false, "collapsed": false, "_execution_state": "idle"}, "source": "full$underTen <- F\nfull$underTen[full$Age > 0 & full$Age < 10] <- T\n\nggplot(full[full$isTrain,], aes(x = underTen, fill = factor(Survived))) + \n    geom_bar(stat='count', position='dodge')", "outputs": [], "cell_type": "code", "execution_count": 1}, {"metadata": {"_uuid": "c6c160517a78a2d804ff5cc831aa48f8b5638143", "_cell_guid": "91897bbe-b8e2-443d-b3a1-fc75b4afdc4e", "collapsed": false, "_execution_state": "idle"}, "source": "# Pague ou morra!", "outputs": [], "cell_type": "markdown", "execution_count": null}, {"metadata": {"_uuid": "e6ef3740149b2fd4a46f7e1ac2916886b03f321a", "_cell_guid": "1be02d3c-57e1-4fad-a18d-d11d581e9da1", "trusted": false, "collapsed": false, "_execution_state": "idle"}, "source": "full$Fare <- round(full$Fare)\n\nfull[full$isTrain,] %>%\n    group_by(Survived) %>%\n    summarise(TotalFare = sum(Fare), count = n(), Mean = mean(Fare))", "outputs": [], "cell_type": "code", "execution_count": 1}, {"metadata": {"_uuid": "03bf119a0ac16f741d911c698bd80e4d1a8f343a", "_cell_guid": "146669df-f35d-4973-b6c4-7d19dee64ec8", "collapsed": false, "_execution_state": "idle"}, "source": "# Cad\u00ea a vov\u00f3?", "outputs": [], "cell_type": "markdown", "execution_count": null}, {"metadata": {"_uuid": "a06eeaa67e22264cc1bbf33811443373f6cb0da0", "_cell_guid": "5319d345-4f58-4c58-a7d5-169a5105038b", "trusted": false, "collapsed": false, "_execution_state": "idle"}, "source": "full$FamilySize <- full$SibSp + full$Parch + 1\n\nggplot(full[full$isTrain,], aes(x = FamilySize, fill = factor(Survived))) +\n    geom_bar(stat='count', position='dodge')", "outputs": [], "cell_type": "code", "execution_count": 1}, {"metadata": {"_uuid": "7c019365d20b02ea69df3608e81d5f6b6298fcb0", "_cell_guid": "7b2cd593-8512-41de-885b-478afd4d8bec", "trusted": false, "collapsed": false, "_execution_state": "idle"}, "source": "full$FamilySizeFactor[full$FamilySize == 1] <- 'alone'\nfull$FamilySizeFactor[full$FamilySize < 5 & full$FamilySize > 1] <- 'small'\nfull$FamilySizeFactor[full$FamilySize > 4] <- 'large'\n\nfull$FamilySizeFactor <- factor(full$FamilySizeFactor)", "outputs": [], "cell_type": "code", "execution_count": 1}, {"metadata": {"_uuid": "d8c15153c79cb9e2fa2dec6e828100116fc7a813", "_cell_guid": "c1a3d722-a902-4c6c-abef-8cbeebd9007a", "collapsed": false, "_execution_state": "idle"}, "source": "# An\u00e1lise das classes", "outputs": [], "cell_type": "markdown", "execution_count": null}, {"metadata": {"_uuid": "a0835c5e8a6b71f25dabbdf3b862192b33be8cb4", "_cell_guid": "ee3dade8-5b56-401c-88ac-e2f0deca2a8b", "trusted": false, "collapsed": false, "_execution_state": "idle"}, "source": "ggplot(full[full$isTrain,], aes(x = Pclass, fill = factor(Survived))) +\n    geom_bar(stat='count', position='dodge')\n\nfull$Pclass <- factor(full$Pclass)", "outputs": [], "cell_type": "code", "execution_count": 1}, {"metadata": {"_uuid": "80c94a4151192f793c5876aed3f49760e736b8bc", "_cell_guid": "a985e0a0-d362-4962-994b-1ba6b5c0ef6d", "collapsed": false, "_execution_state": "idle"}, "source": "# Analisando os t\u00edtulos", "outputs": [], "cell_type": "markdown", "execution_count": null}, {"metadata": {"_uuid": "67b9be48a3602c7c2ac89af7976ef28c04c9e406", "_cell_guid": "3e268f50-cfc4-43f0-ac43-5f81c4d6ddc7", "trusted": false, "collapsed": false, "_execution_state": "idle"}, "source": "full$Title <- gsub('(.*, )|(\\\\..*)', '', full$Name)\n\n# Titles with very low cell counts to be combined to \"rare\" level\nrare_title <- c('Dona', 'Lady', 'the Countess','Capt', 'Col', 'Don', \n                'Dr', 'Major', 'Rev', 'Sir', 'Jonkheer')\n\n# Also reassign mlle, ms, and mme accordingly\nfull$Title[full$Title == 'Mlle']        <- 'Miss' \nfull$Title[full$Title == 'Ms']          <- 'Miss'\nfull$Title[full$Title == 'Mme']         <- 'Mrs' \nfull$Title[full$Title %in% rare_title]  <- 'Rare Title'\n\n# Show title counts by sex again\ntable(full$Sex, full$Title)     ", "outputs": [], "cell_type": "code", "execution_count": 1}, {"metadata": {"_uuid": "8ac8f75ea9dd405d7cd60ce783e91bc88381fe82", "_cell_guid": "3261d99b-bcb4-4dd9-9a9c-35b915052ac8", "trusted": false, "collapsed": false, "_execution_state": "idle"}, "source": "full <-\n    full %>%\n    select(PassengerId, Survived, Title, Pclass, FamilySizeFactor, Fare, underTen, isFemale, isTrain)\n\nfull$Fare[is.na(full$Fare)] <- 14\nfull$Title <- factor(full$Title)\n\nsummary(full)", "outputs": [], "cell_type": "code", "execution_count": 1}, {"metadata": {"_uuid": "786ea19b416b93e14cf762e8596380d66fb2349f", "_cell_guid": "5e8efcc3-4cc7-482d-b80b-70634e490d0c", "collapsed": false, "_execution_state": "idle"}, "source": "# Applying Random Forest", "outputs": [], "cell_type": "markdown", "execution_count": null}, {"metadata": {"_uuid": "401c6ebf8d9f2b64924e640edebd4dd6456b9f8b", "_cell_guid": "190d815e-95eb-4f3e-9560-07c0ef380327", "trusted": false, "collapsed": false, "_execution_state": "idle"}, "source": "set.seed(42)\n\ntotalrows <- nrow(full[full$isTrain,])\n\ntrainrows <- sample(c(T,F), totalrows, replace = T, prob = c(0.8, 0.2))\n\ntrainningSet <- full[full$isTrain,][trainrows,]\ntestingSet <- full[full$isTrain,][!trainrows,]\n\nmodel <- randomForest(factor(Survived) ~ Title + Pclass + \n                                         FamilySizeFactor + Fare + underTen + isFemale,\n                     data = trainningSet,\n                     ntree = 50)\n\n", "outputs": [], "cell_type": "code", "execution_count": 1}, {"metadata": {"_uuid": "a8f96610ed220b1d5f9afe5bce2c42c698f771aa", "_cell_guid": "17059932-399f-4943-b24e-4a576447fbc2", "trusted": false, "collapsed": false, "_execution_state": "idle"}, "source": "importance(model)", "outputs": [], "cell_type": "code", "execution_count": 1}, {"metadata": {"_uuid": "586524c092ea4539aa47436a76f75618c38ac7c7", "_cell_guid": "48b6bfc9-f6aa-4a2b-a510-25af92876510", "trusted": false, "collapsed": false, "_execution_state": "idle"}, "source": "predicted <- predict(model, testingSet)\n\nglimpse(predicted)\n\nconfusion_matrix <- table(testingSet$Survived, predicted)\n\nconfusion_matrix\n\nTP <- confusion_matrix[2, 2]\nTN <- confusion_matrix[1, 1]\n\nacc <- (TP + TN) / nrow(testingSet)\nacc\n", "outputs": [], "cell_type": "code", "execution_count": 1}, {"metadata": {"_uuid": "443e2294a702831a8e5862644d42aecf992f86aa", "_cell_guid": "814050e4-53f7-4cab-8b1f-4876fda8d2d2", "trusted": false, "collapsed": false, "_execution_state": "idle"}, "source": "final <- predict(model, full[!full$isTrain, ])\n\nsolution <- data.frame(PassengerId = full[!full$isTrain, ]$PassengerId, Survived = final)\n\nwrite.csv(solution, file = 'out.csv', row.names = F)", "outputs": [], "cell_type": "code", "execution_count": 1}]}