{"metadata": {"kernelspec": {"language": "R", "display_name": "R", "name": "ir"}, "language_info": {"name": "R", "mimetype": "text/x-r-source", "version": "3.4.1", "pygments_lexer": "r", "file_extension": ".r", "codemirror_mode": "r"}}, "nbformat": 4, "cells": [{"metadata": {"_cell_guid": "28369316-a270-481d-97f9-d67c59cc0a77", "collapsed": false, "_uuid": "65c3b3f893e6d8c58961dc7413db5da34c0b39fd", "_execution_state": "idle"}, "execution_count": null, "source": "## Introduction\n\n* Taking a look at the Kaggle dataset 'Titanic: Machine Learning From Disaster'\n* The original Kaggle competition challenged participants to build a model for understanding passengers' characteristics that affected their chances of survival\n* Here we will just be exploring the data and looking at the general trends \n\n**Key skills**\n\n* Creating new variables using dplyr 'mutate', and some simple string functions\n* Making a summary of variables using dplyr 'summarise' and 'spread'\n* Making categorical variables easier to read in our charts by using 'factor'\n* Using density graphs and log scales to give us a better idea of the distribution of continuous variables than we would normally get by using averages, or histograms.\n* Using ggplot 'facets' to make complex patterns easier to digest. \n\n*Titanic (1997) starring  Leonardo DiCaprio, Kate Winslet*\n\n![Titanic][1]\n\n\n  [1]: http://media.hollywood.com/images/638x425/5650042.JPG\n\n**Background Reading**\n\nThe key packages used in the examples below are 'dplyr' and 'ggplot2'. Try using these as online search terms if you want to look for more help and extensions of these exercises.", "outputs": [], "cell_type": "markdown"}, {"metadata": {"_cell_guid": "d730bc37-d636-446f-95f6-541f5796b893", "_uuid": "cbcfed6b7332b355c3a7a794a41c1f68c9b66ba6", "_execution_state": "idle", "trusted": false}, "execution_count": null, "source": "# This R environment comes with all of CRAN preinstalled, as well as many other helpful packages\n# The environment is defined by the kaggle/rstats docker image: https://github.com/kaggle/docker-rstats\n# For example, here's several helpful packages to load in \nsuppressMessages(library(tidyverse))\nlibrary(tidyverse)\nlibrary(dplyr)\nlibrary(ggplot2) # Data visualization\nlibrary(readr) # CSV file I/O, e.g. the read_csv function\nlibrary(stringr)\n\nlist.files(\"../input\")", "outputs": [], "cell_type": "code"}, {"metadata": {"_cell_guid": "4cc6d163-aae0-44e4-84a1-543d007bdbde", "collapsed": false, "_uuid": "baf88f1cff2b6b26dad3a009e800896cdf251f3c", "_execution_state": "idle"}, "execution_count": null, "source": "Import the two key datasets ('training', 'testing'), and combine them. Note only 'training' has the survival status.", "outputs": [], "cell_type": "markdown"}, {"metadata": {"_cell_guid": "29f6cda9-6f97-43b2-b732-0dba075ffbe8", "collapsed": false, "_uuid": "820e6dcb82cd66aafaf89ef0dc1cebb2168a3622", "_execution_state": "idle", "trusted": false}, "execution_count": null, "source": "df_training <- read_csv('../input/train.csv')\ndf_testing  <- read_csv('../input/test.csv')\n\ndf  <- bind_rows(df_training, df_testing)", "outputs": [], "cell_type": "code"}, {"metadata": {"_cell_guid": "80715635-3acb-41a0-892c-2907cfe3fbad", "collapsed": false, "_uuid": "4f26510eb3914946e828ea7b46ea66dae7944b45", "_execution_state": "idle"}, "execution_count": null, "source": "Take a quick look at the data", "outputs": [], "cell_type": "markdown"}, {"metadata": {"_cell_guid": "a845ed73-36bd-4827-9e2e-e61a9aea1220", "collapsed": false, "_uuid": "b8d00aaa48fb67789a607976968b0ecc8c04bdba", "_execution_state": "idle", "trusted": false}, "execution_count": null, "source": "head(df)", "outputs": [], "cell_type": "code"}, {"metadata": {"_cell_guid": "42c5dd09-65c5-43ba-9a42-249e8c6cea4e", "collapsed": false, "_uuid": "9dc997591ec2777834509e20acfd3d6b59bde972", "_execution_state": "idle", "trusted": false}, "execution_count": null, "source": "glimpse(df)", "outputs": [], "cell_type": "code"}, {"metadata": {"_cell_guid": "d3e966d0-ecba-41ae-8b79-953e24a1dfd3", "collapsed": false, "_uuid": "fc3c630ea513eddfc54645dafd82bf605adf4678", "_execution_state": "idle"}, "execution_count": null, "source": "Who was actually booked in the [cabins][1] on *Titanic*? \n\nKate Winslet's cabins were B52-54-56\n\nLeonardo DiCaprio's cabin was 60\n\n\n\n\n  [1]: http://www.moviemistakes.com/film1299/chronological/pageall", "outputs": [], "cell_type": "markdown"}, {"metadata": {"_cell_guid": "5a3fc94c-1407-4d31-9595-307c6cb36082", "collapsed": false, "_uuid": "923281fca88914eec3e9673e0d86d8c0a319e1c2", "_execution_state": "idle", "trusted": false}, "execution_count": null, "source": " df %>% filter(Cabin=='B52 B54 B56')", "outputs": [], "cell_type": "code"}, {"metadata": {"_cell_guid": "a05e4539-d846-4c9f-8706-6206d4b97fbc", "collapsed": false, "_uuid": "fb9e23f30661e755d1cfae8b5e86213d38512f7c", "_execution_state": "idle"}, "execution_count": null, "source": "### Create a few new variables\n\n 1. We have information about cabin numbers, let's extract the deck letter from that variable\n 2. Create a new indicator the child/adult\n 3. Make the 'embarked' variable more readable. As noted in the metadata, C = Cherbourg, Q = Queenstown, S = Southampton. Create this as a ***factor*** variable. This makes it easier to work with later.", "outputs": [], "cell_type": "markdown"}, {"metadata": {"_cell_guid": "f5c7195f-c87f-4928-9f23-b8d49d64dbd4", "collapsed": false, "_uuid": "9a9ce5760a1a0788d247b25905a0a85320650122", "_execution_state": "idle", "trusted": false}, "execution_count": null, "source": "# get the deck letter from the Cabin name: just take the first character ('sub-string') from the Cabin name\ndf <- df %>% \n    mutate(deck = str_sub(Cabin, 1,1))\n\n# a 'child' variable. Note we create this as a 'factor', this makes it easier to read later\ndf <- df %>%\n    mutate(adult_child = factor(Age>=16, labels=c('child','adult')))\n\n# We create a new embarked_name' variable with the full name of the embarkation port. \n# Create this as a 'factor' variable.\ndf <- df %>%\n    mutate(embarked_name = factor(Embarked, \n                                  levels=c('S','C','Q'), \n                                  labels=c('Southampton','Cherbourg','Queenstown')))\n\nhead(df)", "outputs": [], "cell_type": "code"}, {"metadata": {"_cell_guid": "bce9bc13-4190-4c24-a737-0a16a823db02", "collapsed": false, "_uuid": "64017a8fc86f9f81a3ed4775195c0a4b3ba84508", "_execution_state": "idle"}, "execution_count": null, "source": "## Summary of Survival Rates\nLet's start by taking a look at basic rates of survival, by passenger class.", "outputs": [], "cell_type": "markdown"}, {"metadata": {"_cell_guid": "3ab56697-cc1a-4579-b3e7-c684f29d3187", "collapsed": false, "_uuid": "d3f2793a2dc332b9cb1ca3aea2309a48d4c0c515", "_execution_state": "idle", "trusted": false}, "execution_count": null, "source": "df %>% \n    filter(is.finite(Survived)) %>%\n    group_by(Pclass, Survived) %>% \n    summarise(n_group = n())", "outputs": [], "cell_type": "code"}, {"metadata": {"_cell_guid": "3e74d64c-70fe-4a36-b640-8bf3f415695d", "collapsed": false, "_uuid": "208445350d87e427f2b38ac9517d516ff8854133", "_execution_state": "idle"}, "execution_count": null, "source": "Now try something a little more complicated to give us the 'percentage of passengers in each class' that survived/did not survive.", "outputs": [], "cell_type": "markdown"}, {"metadata": {"_cell_guid": "84a42a41-c343-4ee5-85ad-1b73f437ecb3", "collapsed": false, "_uuid": "1dcf798e3b915e775b28eeea5652195400ddfba9", "_execution_state": "idle", "trusted": false}, "execution_count": null, "source": "survival_table <- df %>% \n    filter(is.finite(Survived)) %>%\n    group_by(Pclass, Survived) %>% \n    summarise(n_group = n()) %>%\n    group_by(Pclass) %>%    # strictly speaking this line is redundant but it's clearer to understand this way\n    mutate(n_class_total = sum(n_group)) %>%\n    mutate(percent_of_class = n_group / n_class_total)\n\nsurvival_table", "outputs": [], "cell_type": "code"}, {"metadata": {"_cell_guid": "6b993a58-50b5-4ca7-8c0f-b908c6345734", "collapsed": false, "_uuid": "5c7aca3d9acda26dac254786eff181fae04061da", "_execution_state": "idle", "trusted": false}, "execution_count": null, "source": "# Another way to show the same data:\n# 'pivot' the table so we see survival status as column headings\nsurvival_table %>%\n    select(one_of(c('Pclass','Survived','percent_of_class'))) %>%\n    spread(\"Survived\",\"percent_of_class\")", "outputs": [], "cell_type": "code"}, {"metadata": {"_cell_guid": "6ecf424a-1323-49e4-9772-e129e7fceb78", "collapsed": false, "_uuid": "279fbe35b8e1ea87e5ee4355494831cedecb29c8", "_execution_state": "idle"}, "execution_count": null, "source": "Now try to make the summary data more attractive. We can use ggplot2 to create a 'heat map' and put numbers too", "outputs": [], "cell_type": "markdown"}, {"metadata": {"_cell_guid": "77a9bfab-d221-4d94-98d0-1eb58edb8c6a", "collapsed": false, "_uuid": "78165b9a96e2495c8cccefb6c324e859b0ffce40", "_execution_state": "idle", "trusted": false}, "execution_count": null, "source": "# this is quite a complicated ggplot2 chart, with lots of extra settings added to make it more legible.\n\nsurvival_table %>%\n    ggplot(aes(x=factor(Survived), y = factor(Pclass),   # 'factor' is just to get the scales looking nice\n               fill = percent_of_class)) +\n    geom_tile() +   \n    coord_equal()  + # this just makes all the tiles square instead of rectangular\n    labs(title=\"Survival Rates on RMS Titanic\", subtitle=\"by passenger class, ignoring unknown cases\",\n         x=\"Survival Status\", y = \"Passenger Class\") +\n    geom_text(aes(label= percent_of_class), colour=\"white\") +\n    geom_text(aes(label= sprintf(\"%1.1f%%\",      # 'sprintf...' is to format the percentages in a legible way\n                                 100*percent_of_class)), \n              nudge_y = -0.2, colour=\"pink\")\n\n", "outputs": [], "cell_type": "code"}, {"metadata": {"_cell_guid": "e4eab611-05a4-4eb3-b1ef-fdfde88b512c", "collapsed": false, "_uuid": "f64286552d9b2d05b07934c8779ccb1df641b58c", "_execution_state": "idle"}, "execution_count": null, "source": "### Summary of the Decks\n\n![Cross Section of the Titanic][1]\n\n  [1]: http://68.media.tumblr.com/7390a6730ca3c56602bc0495910c1a54/tumblr_nkvax3dnab1uof4who1_1280.png", "outputs": [], "cell_type": "markdown"}, {"metadata": {"_cell_guid": "3bc15a52-8fa4-4a6e-80d8-11f816244757", "collapsed": false, "_uuid": "3eb0dcd8cceaf7b5746d6630d96ffb84b304f434", "_execution_state": "idle"}, "execution_count": null, "source": "### Distribution of the Ticket Prices", "outputs": [], "cell_type": "markdown"}, {"metadata": {"_cell_guid": "cd8da308-d6fc-409f-b680-df16579324b7", "collapsed": false, "_uuid": "ee3ced1fb5019e5ac0239fc23e9bfad71700c660", "_execution_state": "idle", "trusted": false}, "execution_count": null, "source": "# get a general view of the distribution of ticket prices\n# note, the y-axis is meaningless, it's just there so that we can 'jitter'\n# the individual points to make them a bit more legible\ndf %>% \n    filter(Fare>0) %>%\n    ggplot(aes(x=Fare, y=0)) +\n    geom_jitter(aes(colour=factor(Pclass)))\n    ", "outputs": [], "cell_type": "code"}, {"metadata": {"_cell_guid": "48e36385-0e4c-430a-87b5-dd10035b61ee", "collapsed": false, "_uuid": "25f21587db18293e8a78dca35c1784524c10c51e", "_execution_state": "idle", "trusted": false}, "execution_count": null, "source": "# What can we do to make this picture clearer to understand?\n# Firstly, let's use a 'log scale' to make the low fares more visible\ndf %>% \n    filter(Fare>0) %>%\n    ggplot(aes(x=Fare, y=0)) +\n    geom_jitter(aes(colour=factor(Pclass))) +\n    scale_x_continuous(trans='log2')", "outputs": [], "cell_type": "code"}, {"metadata": {"_cell_guid": "41a72666-a91f-4580-b773-664584b20e16", "collapsed": false, "_uuid": "d36d09e3b8696491bdbc646a3e96db03e562bac3", "_execution_state": "idle", "trusted": false}, "execution_count": null, "source": "# next, we can use a 'density' graph. This shows roughly the distribution\n# of number of passengers at each level of fare\ndf %>% \n    filter(Fare>0) %>%\n    mutate(class = factor(Pclass)) %>%\n    ggplot(aes(x=Fare)) +\n    geom_density(aes(group=class, colour=class, fill=class, alpha=0.15)) +\n    scale_x_continuous(trans='log2')", "outputs": [], "cell_type": "code"}, {"metadata": {"_cell_guid": "b608b1cd-e69a-4caa-b709-90be4a617f6d", "collapsed": false, "_uuid": "8a50fe3fa5939dc1cea909ee174616e8a9750561", "_execution_state": "idle", "trusted": false}, "execution_count": null, "source": "# Now, let's use a 'facet' plot to separate the data according to embarkation port.\ndf %>% \n    filter(Fare>0 & !is.na(embarked_name)) %>%\n    mutate(class = factor(Pclass)) %>%\n    ggplot(aes(x=Fare)) +\n    geom_density(aes(group=class, colour=class, fill=class, alpha=0.15)) +\n    scale_x_continuous(trans='log2') +\n    coord_cartesian(ylim=c(0,3)) +\n    facet_wrap(~embarked_name) +\n    theme(legend.position='top') +\n    scale_alpha(guide='none') +\n    labs(title=\"Fares on RMS Titanic\", subtitle=\"by embarkation point\")", "outputs": [], "cell_type": "code"}, {"metadata": {"_cell_guid": "737af85a-5e97-4047-9308-0d3f7e852709", "collapsed": false, "_uuid": "76a821bd62f278b7ee8cc4a3367059226ef7221e", "_execution_state": "idle"}, "execution_count": null, "source": "## Further ideas for research\n\n- Were fares different for children?\n- What were the factors determining survival? Kaggle has many kernels using Machine Learning approaches to answer this question.", "outputs": [], "cell_type": "markdown"}, {"metadata": {"_cell_guid": "a2ca71b7-e3e6-4370-afd8-d97929f11b23", "collapsed": false, "_uuid": "d5dc2cccb79454b4292c505d4d672bbaf900416c", "_execution_state": "idle", "trusted": false}, "execution_count": null, "source": "", "outputs": [], "cell_type": "code"}], "nbformat_minor": 0}