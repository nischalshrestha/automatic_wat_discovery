{"metadata": {"language_info": {"file_extension": ".r", "name": "R", "pygments_lexer": "r", "version": "3.4.1", "codemirror_mode": "r", "mimetype": "text/x-r-source"}, "kernelspec": {"name": "ir", "display_name": "R", "language": "R"}}, "nbformat": 4, "cells": [{"metadata": {"_uuid": "6f0b0b934f8cdfff49151586ee0ae960e4be77ca", "_cell_guid": "91f4f1ee-fdcd-469e-84da-e234d24d69f8"}, "cell_type": "markdown", "source": "# Introduction\nIn this second look at the *Titanic* dataset, we're going to explore the data and do some modelling. To start with, we'll just have a list of steps that you might want to take. Feel free to deviate and improvise as your investigation proceeds. Once we meet, we'll gradually assemble our best ideas and make a  Kaggle competition entry. \n\n\n### The goal of the competition\n(from the Kaggle competition [description](https://www.kaggle.com/c/titanic)):\n\n> It is your job to predict if a passenger survived the sinking of the Titanic or not. \n\n> For each PassengerId in the test set, you must predict a 0 or 1 value for the Survived variable.\n\n> Your score is the percentage of passengers you correctly predict. This is known simply as \"accuracy\u201d.\n\n### Useful resources\nMost of the techniques that you'll need for Exploratory Data Analysis were used in our earlier kernels, so they may be helpful. There are lots of great examples of code which analyse the Titanic datasets. Some of the ones that we have found useful include:-\n\nhttps://www.kaggle.com/mrisdal/exploring-survival-on-the-titanic/\n\nhttps://www.kaggle.com/headsortails/tidy-titarnic\n\nhttps://www.kaggle.com/jasonm/large-families-not-good-for-survival\n\n(python) https://www.kaggle.com/headsortails/pytanic/\n\n"}, {"metadata": {"_uuid": "e9237cd1931cd44cb3cad67c8e6fa080e0b61ed7", "_cell_guid": "99169989-604c-4e51-a0c2-98a598249d63"}, "cell_type": "markdown", "source": "### Prelminaries\n\nBefore doing anything, we read the metadata description. This is available on Kaggle, or using the Input Files link at the top of this kernel. Just reading and thinking about the data and the goal of the competition."}, {"metadata": {"_uuid": "d6e8a367c825437eeaabe0f571705198777973ba", "_cell_guid": "dace9dbf-ccdd-4f84-9cc6-452cd5ef707d"}, "cell_type": "markdown", "source": "Load the libraries (packages) that we'll need for the analysis"}, {"metadata": {"_uuid": "fcefddd3028b6206e317f3c6346588a577607d04", "_cell_guid": "2a35b2a3-0d6b-4377-a72b-5451124db5d9", "trusted": true}, "execution_count": null, "cell_type": "code", "source": "# library()", "outputs": []}, {"metadata": {"_uuid": "1e9f3b97a3eecc1505bef5992292ea2bebf7d4f3", "_cell_guid": "7dd544b5-4d9d-4f32-86af-a340656fcaf9"}, "cell_type": "markdown", "source": "List the files that are available in the (../input) directory\n\nImport the train.csv file into a data.frame called 'df_train'"}, {"metadata": {"_uuid": "06575b8d2056f3be392c49d5ce122d6d2b3d4228", "collapsed": true, "trusted": true, "_cell_guid": "93c68712-1225-498b-9898-8dbd84ddcb60"}, "execution_count": null, "cell_type": "code", "source": "# list.files()\n# read_csv()", "outputs": []}, {"metadata": {"_uuid": "204fbf765905671652d2601f74031d1d14022fe4", "_cell_guid": "10f25427-58d9-43c4-a641-c133b99ba996"}, "cell_type": "markdown", "source": "# Exploratory Data Analysis"}, {"metadata": {"_uuid": "65cab13bc12d799ca29dcbc20571f3cd3d5adf84", "_cell_guid": "1cd04cd5-8b51-4d2c-8b75-d3d24116a2b0"}, "cell_type": "markdown", "source": "Take a quick look at the shape of the dataset. Get a bit familiar with what kind of data are included in each of the columns, and problems with missing data."}, {"metadata": {"_uuid": "292ef7596889a9513b2bd2c35755dc434e4ac5ba", "collapsed": true, "trusted": true, "_cell_guid": "f475f545-ce64-4f4b-867c-700d0dc87d96"}, "execution_count": null, "cell_type": "code", "source": "#Hint: some functions that we might use...\n# glimpse()\n# head()\n# summary()", "outputs": []}, {"metadata": {"_uuid": "16d0dc73e85de0dd519d38be40d92b9d886a0435", "_cell_guid": "b6802f72-54eb-43ff-8128-be13fb1840e9"}, "cell_type": "markdown", "source": "Make some tables and charts which summarise survivorship numbers along the lines of each of the variables in the training dataset."}, {"metadata": {"_uuid": "a4d19162a37f59709a176bd0f60d2e3c4b170792", "collapsed": true, "trusted": true, "_cell_guid": "2198512d-73eb-490c-a592-2001836dd49f"}, "execution_count": null, "cell_type": "code", "source": "#Hint: some functions that we might use...\n# summarise()\n# count()\n# ggplot() + geom_histogram()\n# ggplot() + geom_freqpoly()\n# ggplot() + geom_density()\n# ggplot() + geom_bar()", "outputs": []}, {"metadata": {"_uuid": "4c82fd0f7c93036020355d2cc3a8c7f8c02f86a5", "_cell_guid": "70e7fdc7-0e4c-40c1-9abb-c6fcd0ccc6f1"}, "cell_type": "markdown", "source": "Understand which of the features are correlated with each other (and with survival). Tip: make things simple by treating the factor variables, including survival, as if they were continuous variables. "}, {"metadata": {"_uuid": "2a28bcb308f0460cabdede4a5cf1c07c4bff83b9", "collapsed": true, "trusted": true, "_cell_guid": "b5bae39a-04a0-4b78-8bc4-ef72b1a22e89"}, "execution_count": null, "cell_type": "code", "source": "# ggcorr()\n# ggcorr(..., method=('spearman'))", "outputs": []}, {"metadata": {"_uuid": "49bf08c5d3c2627e5c813a3df854ef8f359a74d7", "_cell_guid": "ef8c9497-4bb1-4b88-af42-3e72a79c488c"}, "cell_type": "markdown", "source": "Do the relationships between survival and key variables change depending on the levels of any third (or fourth) variables? This is a nice way to anticipate the multi-factor modelling that we will do later."}, {"metadata": {"_uuid": "d09e8d941695fd5a83776a6aa3428a6245692088", "collapsed": true, "trusted": true, "_cell_guid": "312995c7-5218-4187-a3a1-fbe9a22005f0"}, "execution_count": null, "cell_type": "code", "source": "# ggplot(aes(..., colour=...))\n# ggplot() + facet_wrap()\n# ggplot() + facet_grid()", "outputs": []}, {"metadata": {"_uuid": "2cd955663380001553174c1f89900084ee66eecb", "_cell_guid": "b24758aa-d68d-4a9b-9943-c4cceaba5113"}, "cell_type": "markdown", "source": "# Feature Engineering \n(optional) Creating some extra variables based on our existing variables"}, {"metadata": {"_uuid": "2255fbdb6f66037248d1959aab435d7d571cc926", "_cell_guid": "14ec1949-c633-4455-bea7-d2624859ae09"}, "cell_type": "markdown", "source": "Create a new column 'family_size' which shows, for each individual, the  size of the family group that they are travelling with."}, {"metadata": {"_uuid": "d12870f8044f0431c753411d9d8bfa780120cc00", "collapsed": true, "trusted": true, "_cell_guid": "71004e22-4c21-4b7e-b7b8-aa3839bcc422"}, "execution_count": null, "cell_type": "code", "source": "# mutate(...)", "outputs": []}, {"metadata": {"_uuid": "71af9f802e48161a08a8bfa3f3ac34c1fc48490c", "_cell_guid": "8cea3619-791c-439b-a6bd-f933f818567e"}, "cell_type": "markdown", "source": "Create a new column called 'title' which grabs the title of the passenger (Mr, Mrs etc). We'll see if title is an influence on survival. Extra challenge: create a further column to indicate high-status titles."}, {"metadata": {"_uuid": "cad8f41c26ccafab9e5e5baa199c081bd42c3501", "collapsed": true, "trusted": true, "_cell_guid": "64953158-6be2-425a-9eb2-9b1af455de71"}, "execution_count": null, "cell_type": "code", "source": "# mutate(... str_sub())\n# mutate(... str_extract())", "outputs": []}, {"metadata": {"_uuid": "accf0d078121be6e2327896924a3486565e5a930", "_cell_guid": "e2bbcb9d-34ca-4b5b-8f3f-bc23e6605064"}, "cell_type": "markdown", "source": "Optional: handling missing values. Decide whether the number of missing values in certain variables is a problem. The individuals with missing values will inevitably be excluded from the "}, {"metadata": {"_uuid": "cf958b0660e153834d003c5cd155ce782505bbae", "collapsed": true, "trusted": true, "_cell_guid": "488dd033-f511-41fa-954f-4fa223d2b8a6"}, "execution_count": null, "cell_type": "code", "source": "# mutate(... = median())\n# mutate(... case_when())", "outputs": []}, {"metadata": {"_uuid": "f46528f2e5fe3d038db5cee366bd37470aa76b74", "_cell_guid": "23624749-19f8-4d5b-ac22-b052085e9761"}, "cell_type": "markdown", "source": "# Modelling Survival \nTry a variety of modelling techniques to estimate which factors seem to have systematically influenced survival for individuals. For each model, look at (i) the importance of each variable that you have included, and (ii) the accuracy of the model (let's talk about different approaches to this)\n"}, {"metadata": {"_uuid": "a35fb13debcb8891a9fc12819d9bb4bf47b8bb49", "_cell_guid": "643b9fb1-eeac-4c80-9e8f-73b7f26c806c"}, "cell_type": "markdown", "source": "Create a **single-factor naive model**: using your exploratory data analysis, choose your favourite single variable (feature) to explain survival, and create a 'toy' model with predictions of survival for each passenger using just that one variable.**"}, {"metadata": {"_uuid": "b15759b4f027e6592b4806acf2552f2fb430aa71", "collapsed": true, "trusted": true, "_cell_guid": "12ddb4e8-90e4-4ec4-8814-163e64192799"}, "execution_count": null, "cell_type": "code", "source": "# table()\n# caret::confusionMatrix()", "outputs": []}, {"metadata": {"_uuid": "f6e9313662b1a16173de30b2b16b4fdb3f5a77f8", "_cell_guid": "7812659e-8bb0-477c-a91f-891fac18a997"}, "cell_type": "markdown", "source": "**Logistic regression** using a selection of variables. Take a look at the regression estimates and think about whether they are intuitive."}, {"metadata": {"_uuid": "a968369069bcb186d16f93e2e63a3b0bf188abba", "collapsed": true, "trusted": true, "_cell_guid": "2d4807fc-90ef-48f6-8da4-fe11748c408c"}, "execution_count": null, "cell_type": "code", "source": "# glm(..., family=binomial)", "outputs": []}, {"metadata": {"_uuid": "3d434f6e7b7b4ebf538ae6325c9a8f5157ee4dea", "_cell_guid": "92c1a34b-b1cb-417f-9e15-95f29e41659e"}, "cell_type": "markdown", "source": "**Classification tree**"}, {"metadata": {"_uuid": "b75e0cbe78a981745b030162cca36a4b647992a1", "collapsed": true, "trusted": true, "_cell_guid": "b2495acd-2e4c-4590-9cc6-7b16106d8abf"}, "execution_count": null, "cell_type": "code", "source": "# rpart", "outputs": []}, {"metadata": {"_uuid": "389be205814d92438c1831e0c2b423c56e116261", "_cell_guid": "fa9374b4-4826-43e9-ae08-988323f9eff0"}, "cell_type": "markdown", "source": "**Random forest**"}, {"metadata": {"_uuid": "2036f2d45b576bb958311c21161a67ec203ec6ee", "collapsed": true, "trusted": true, "_cell_guid": "5a8444f9-0ca1-4462-bbbb-a2c00e6c4ffe"}, "execution_count": null, "cell_type": "code", "source": "# randomForest", "outputs": []}, {"metadata": {"_uuid": "b3235c49dc35f0c0e6396c815d74b8e04c1871ce", "_cell_guid": "ea4850c2-9cc4-44f6-ad9f-d564571b68d2"}, "cell_type": "markdown", "source": "**More models**. Choose anything that you think looks interesting. Ideas:\n\n* K Nearest Neighbours\n* SVM\n* Extremely Randomised Trees\n* Gradient Boosting, xgboost\n* Ada Boost\n* Simple neutral network (`neuralnet()`)\n"}, {"metadata": {"_uuid": "3bad40fb6984e83f07b7aa85289e2d489c330243", "collapsed": true, "trusted": true, "_cell_guid": "3fc5b2f5-7c73-4f70-89be-fba2ef650c8a"}, "execution_count": null, "cell_type": "code", "source": "", "outputs": []}], "nbformat_minor": 1}