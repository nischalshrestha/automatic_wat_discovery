{"cells":[{"metadata":{"_execution_state":"idle","_kg_hide-output":false,"_kg_hide-input":false,"_uuid":"bf5e5c481192e71bd8f84f01297c21484e2a4273","_cell_guid":"4f4a4344-3bcd-4053-8911-13ad16eb879c"},"cell_type":"markdown","source":"# This R environment comes with all of CRAN preinstalled, as well as many other helpful packages\n# The environment is defined by the kaggle/rstats docker image: https://github.com/kaggle/docker-rstats\n\nlibrary(ggplot2) # Data visualization\nlibrary(readr) # CSV file I/O, e.g. the read_csv function\nlibrary(ggplot2) # visualization\nlibrary(ggthemes) # visualization\nlibrary(scales) # visualization\nlibrary(dplyr) # data manipulation\nlibrary(mice) # imputation\nlibrary(randomForest) # classification algorithm\n\n# Input data files are available in the \"../input/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nsystem(\"ls ../input\")\n\n# Any results you write to the current directory are saved as output."},{"metadata":{"trusted":true,"_uuid":"f0ae0b8d23ce556e1ab96f638ada0c3ddcd09f6c"},"cell_type":"code","source":"##Load data in using read.csv. stringsAsFactors = FALSE keeps data as chars.\ntrain <- read.csv('../input/train.csv', stringsAsFactors = F)\ntest  <- read.csv('../input/test.csv', stringsAsFactors = F)\nfull  <- bind_rows(train, test) # bind training & test data\n\n# check data\nstr(full)","execution_count":18,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"4a05407192f492b1718d17a65ca0b620eee46848"},"cell_type":"code","source":"# Grab title from passenger names\nfull$Title <- gsub('(.*, )|(\\\\..*)', '', full$Name)\n\n# Show title counts by sex\ntable(full$Sex, full$Title)","execution_count":27,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"cb6069f2a96dff05d288097739c5a8585ba865a2"},"cell_type":"code","source":"# Titles with very low cell counts to be combined to \"rare\" level\nrare_title <- c('Dona', 'Lady', 'the Countess','Capt', 'Col', 'Don', \n                'Dr', 'Major', 'Rev', 'Sir', 'Jonkheer')\nfull$Title[full$Title == 'Mlle']        <- 'Miss' \nfull$Title[full$Title == 'Ms']          <- 'Miss'\nfull$Title[full$Title == 'Mme']         <- 'Mrs' \nfull$Title[full$Title %in% rare_title]  <- 'Rare Title'\n","execution_count":29,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"4008866130ec65c0dd24c3e173304b59b7ec793a"},"cell_type":"code","source":"table(full$Sex, full$Title)","execution_count":30,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"a846617dd85655d824d5ebb78b7f252f9bb9923f"},"cell_type":"code","source":"full$Surname <- sapply(full$Name,  \n                      function(x) strsplit(x, split = '[,.]')[[1]][1])","execution_count":31,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"30d5d711aba5b5008310a8ed9c9bf5ab9fd01d27"},"cell_type":"code","source":"cat(paste('We have <b>', nlevels(factor(full$Surname)), '</b> unique surnames. I would be interested to infer ethnicity based on surname --- another time.'))","execution_count":32,"outputs":[]}],"metadata":{"kernelspec":{"display_name":"R","language":"R","name":"ir"},"language_info":{"mimetype":"text/x-r-source","name":"R","pygments_lexer":"r","version":"3.4.2","file_extension":".r","codemirror_mode":"r"}},"nbformat":4,"nbformat_minor":1}