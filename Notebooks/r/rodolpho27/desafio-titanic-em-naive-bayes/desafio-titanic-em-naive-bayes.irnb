{"cells":[{"metadata":{"_execution_state":"idle","_uuid":"01cb91c94fbdbc441c9cba3b246e1c501bb6f65d","trusted":true,"_cell_guid":"e7ac0d98-4ed8-4431-957b-171c3c9b59b8"},"cell_type":"code","source":"# This R environment comes with all of CRAN preinstalled, as well as many other helpful packages\n# The environment is defined by the kaggle/rstats docker image: https://github.com/kaggle/docker-rstats\n# For example, here's several helpful packages to load in \n\nlibrary(ggplot2) # Data visualization\nlibrary(readr) # CSV file I/O, e.g. the read_csv function\nlibrary(e1071)#Naive Bayes\n\n# Input data files are available in the \"../input/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\n\n# Any results you write to the current directory are saved as output.","execution_count":7,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"5e73b832ec46afd73612094e98e3232cc6cadd6d"},"cell_type":"code","source":"#Leitura dos dados \ntest<- read.csv(\"../input/test.csv\")\ntrain <- read.csv( \"../input/train.csv\")\n\n","execution_count":6,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"d8cecdc21ebd49934d59e677433105350040cee5"},"cell_type":"code","source":"#Transformando o tipo da variavel Survived de INT para Factor\ntrain1<-as.factor(train$Survived)\ntrain$Survived<-train1\n","execution_count":8,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"63468795a736d7b697caad4af5d48df390ce1518"},"cell_type":"code","source":"#Pegando a media para colocar no lugar dos NAS\nage.median<- mean(train$Age, na.rm=TRUE)  \ntrain[is.na(train$Age), \"Age\"]<- age.median\n\nage.media_test<- mean(test$Age, na.rm=TRUE)\ntest[is.na(test$Age), \"Age\"]<-age.media_test\n\nfare.media<- mean(test$Fare, na.rm= TRUE)\ntest[is.na(test$Fare), \"Fare\"]<- fare.media\n","execution_count":10,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"69446a44c58b2e400fe1f55d5976d07a30374bb3"},"cell_type":"code","source":"#Sexo por sobrevivente\nggplot(train, aes(Sex))+geom_bar(aes(fill=factor(Survived)))\n","execution_count":11,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"484ce814d192ccdd9db260c49b55370e734ecf7f"},"cell_type":"code","source":"#Classe por sobrevivente\nggplot(train, aes(Pclass))+geom_bar(aes(fill=factor(Survived)))\n","execution_count":12,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"26e28c60187d2e3bd1b2425d644368bc7f313b09"},"cell_type":"code","source":"#Retirada de variaveis desnecessárias \ntrain$PassengerId<-NULL\ntrain$Name<-NULL\ntrain$Cabin<-NULL\ntrain$Ticket<-NULL","execution_count":13,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"994dca58ae75c479eb84c2a5ab5b17bf90d9d9de"},"cell_type":"code","source":"#Construção do modelo através do Naive Bayes\nmodelo<- naiveBayes(Survived~., data = train)\n","execution_count":14,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"0014f60471ead1f67315092fab9a3ea906d2d4a3"},"cell_type":"code","source":"#Criação da coluna Survived no dataset test com o valor das predicoes\ntest$Survived <- predict(modelo, newdata=test)\n","execution_count":15,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"6c7e4cda7e1b312a3018cf110c8a7be4895afd49"},"cell_type":"code","source":"#Criação de um dataframe com a coluna PassengerId e Survived\nresposta<-data.frame(PassengerId=test$PassengerId, Survived=test$Survived)\n","execution_count":17,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"048be1a5859cb25b37adfdbe98185cace7f192ee"},"cell_type":"code","source":"#As 10 primeiras linhas do dataframe com sobrevivente ou não \nhead(resposta, 10)","execution_count":21,"outputs":[]}],"metadata":{"kernelspec":{"display_name":"R","language":"R","name":"ir"},"language_info":{"mimetype":"text/x-r-source","name":"R","pygments_lexer":"r","version":"3.4.2","file_extension":".r","codemirror_mode":"r"}},"nbformat":4,"nbformat_minor":1}