{"nbformat": 4, "metadata": {"kernelspec": {"display_name": "R", "language": "R", "name": "ir"}, "language_info": {"codemirror_mode": "r", "version": "3.4.2", "mimetype": "text/x-r-source", "file_extension": ".r", "pygments_lexer": "r", "name": "R"}}, "nbformat_minor": 1, "cells": [{"cell_type": "code", "source": ["# First Kaggle submission with Logistic Regression"], "execution_count": null, "metadata": {"_uuid": "a9256f0b62065b287c90f3c30d7a6713b16e37cb", "_cell_guid": "9e191e9a-e5c7-4c99-b0b3-d4100781f622"}, "outputs": []}, {"cell_type": "code", "source": ["# This R environment comes with all of CRAN preinstalled, as well as many other helpful packages\n", "# The environment is defined by the kaggle/rstats docker image: https://github.com/kaggle/docker-rstats\n", "# For example, here's several helpful packages to load in \n", "\n", "library(ggplot2) # Data visualization\n", "library(readr) # CSV file I/O, e.g. the read_csv function\n", "library(Hmisc) # to impute missing values\n", "library(dplyr) # basic Manipulation\n", "library(ROCR) # for performance and accuracy measurment\n", "library(rpart) \n", "library(caret)\n", "library(randomForest)\n", "library(gbm)\n", "# Input data files are available in the \"../input/\" directory.\n", "# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n", "\n", "system(\"ls ../input/\")\n", "\n", "# Any results you write to the current directory are saved as output."], "execution_count": null, "metadata": {"_kg_hide-input": true, "_uuid": "cdf9999c7f0ec44e23b7ef22d9132a1a4a064b04", "_kg_hide-output": true, "_cell_guid": "9ce6b44d-f0a4-4317-a069-db385f82a819"}, "outputs": []}, {"cell_type": "code", "source": ["# Read data \n", "Train <- read.csv(\"../input/train.csv\")\n", "Test <- read.csv(\"../input/test.csv\")"], "execution_count": null, "metadata": {"_uuid": "850ab9908bb2ece8e5a788c2229990ccc844fd8e", "_cell_guid": "75e8f177-8f08-4fae-b7da-3dfd5d13e6fe"}, "outputs": []}, {"cell_type": "code", "source": ["# understanding Traing dataset\n", "head(Train) \n", "summary(Train)\n", "str(Train)"], "execution_count": null, "metadata": {"scrolled": true, "_uuid": "08dd468eb89b1343ef791f707fafef91570a8613", "_kg_hide-output": false, "_cell_guid": "1edd2767-aa07-417f-94df-501a629b9548"}, "outputs": []}, {"cell_type": "code", "source": ["sum(Train$Survived)\n", "table(Train$Survived)"], "execution_count": null, "metadata": {"_uuid": "c973ddc5c20321cda66d7a2ae6f67a7c83ff31fb", "_cell_guid": "3d1770f6-0742-4183-b1bf-a1343cdace1c"}, "outputs": []}, {"cell_type": "code", "source": ["ggplot(Train, aes(x=Survived)+geom_bar()"], "execution_count": null, "metadata": {}, "outputs": []}, {"cell_type": "code", "source": ["# total 342 survived from the disaster (in Training dataset)\n", "# Lets check corelation with other variables\n", "table(Train$Sex)\n", "table(Train$Survived, Train$Sex)"], "execution_count": null, "metadata": {"_uuid": "7bd123085917018eda55c53dd127f67dfd2522ca", "_cell_guid": "97e01db5-9ef9-480a-9fe9-b882883defed"}, "outputs": []}, {"cell_type": "code", "source": ["ggplot(Train, aes(x=Sex,fill= factor(Survived))) +geom_bar()"], "execution_count": null, "metadata": {}, "outputs": []}, {"cell_type": "code", "source": ["# Total: 891 entries present in training dataset, 314 female and 577 Male passenger were traveling\n", "# out of 314 female passenger 283 survived and out of 577 male passenger 109 survived\n", "# seems female passengers have beeter chance of survival.\n", "table(Train$Age<10, Train$Survived, Train$Sex)\n", "# What about kids below age 10\n", "Train %>%group_by(Age<10, Sex ,Survived=1) %>% summarise(n())\n"], "execution_count": null, "metadata": {"_uuid": "17303883803cb5026360c7edcfc29f41e978bd5c", "_cell_guid": "0d034e6a-5baf-44b0-b881-a2787d42c58a"}, "outputs": []}, {"cell_type": "code", "source": ["# Lets Check Passanger class and survival \n", "table(Train$Survived,Train$Pclass )\n", "ggplot(Train, aes(x=Pclass, fill=factor(Survived))) + geom_bar()"], "execution_count": null, "metadata": {"_uuid": "d209cd6c09a036e39350ef7c6f939e5676744f54", "_cell_guid": "7fb5f52a-6187-4de8-a603-33ddd598307f"}, "outputs": []}, {"cell_type": "code", "source": ["ggplot(Train, aes(x=Pclass, fill=factor(Survived))) + geom_bar()+facet_grid(Sex~.)\n", "table(Train$Survived,Train$Pclass ,Train$Sex)"], "execution_count": null, "metadata": {}, "outputs": []}, {"cell_type": "code", "source": ["# female passanger travelling in pClass 1 or 2 has higested survival rate\n", "# Male passanger travelling in pClass 1 has slightly good chances of survival compare to other pClass\n", "\n", "#Lets Check Embark\n", "table(Train$Survived, Train$Embark)\n", "ggplot(Train, aes(x=Embarked, fill=factor(Survived))) + geom_bar()"], "execution_count": null, "metadata": {"_uuid": "fc857f1615d5149f997b24e5dbdb1d45232e76c7", "_cell_guid": "4673e39c-7e98-4e44-a4aa-12ac89b411d8"}, "outputs": []}, {"cell_type": "code", "source": ["### Seems we have missing values for Embark and all missing pasangers survived.\n", "### lets check missing were Male or female\n", "table(Train$Survived, Train$Embark, Train$Sex)\n", "ggplot(Train, aes(x=Embarked, fill=factor(Survived))) + geom_bar()+facet_grid(Sex~.)"], "execution_count": null, "metadata": {}, "outputs": []}, {"cell_type": "code", "source": ["# From Above output again female passangers has better the survival\n", "# Lets start with Model Bulding"], "execution_count": null, "metadata": {"_uuid": "1ea47fdd6d52b839c414a5eafcec55d040ec9fbd", "_cell_guid": "ef29d8bc-5a55-4bc4-94da-26636a6e3034"}, "outputs": []}, {"cell_type": "code", "source": ["## pasanger travelling with parents and childerns \n", "table(Train$Survived, Train$Parch)\n", "ggplot(Train, aes(x=Parch, fill=factor(Survived))) + geom_bar() + facet_grid(Sex~.)\n"], "execution_count": null, "metadata": {}, "outputs": []}, {"cell_type": "code", "source": ["## seems most of the males are travelling alone and alone pasangers are lower in suvival\n", "#SibSp\n", "table(Train$SibSp, Train$Survived)\n", "ggplot(Train, aes(x=SibSp, fill=factor(Survived))) + geom_bar() + facet_grid(Sex~.)\n"], "execution_count": null, "metadata": {}, "outputs": []}, {"cell_type": "code", "source": ["ggplot(Train, aes(x=Fare, fill= factor(Survived))) + geom_density()"], "execution_count": null, "metadata": {}, "outputs": []}, {"cell_type": "code", "source": ["#remove multiple categorical variable to single category (Binary) variable\n", "# from Training dataset \n", "Train$Male <-as.factor(as.character(ifelse(Train$Sex==\"male\",1,0)))\n", "Train$pc1 <- as.factor(as.character(ifelse(Train$Pclass==1,1,0)))\n", "Train$pc2 <- as.factor(as.character(ifelse(Train$Pclass==2,1,0)))\n", "Train$pc3 <- as.factor(as.character(ifelse(Train$Pclass==3,1,0)))\n", "Train$Survived <- as.factor(as.character(Train$Survived))\n", "\n"], "execution_count": null, "metadata": {"_uuid": "a5cdd0e77b3df445dc29bf98f95b3b18d45559b1", "_cell_guid": "b64de77f-a09a-446b-a22d-f75a39cf0611"}, "outputs": []}, {"cell_type": "code", "source": ["## Playing with Name\n", "Train$Title <- gsub('(.*, )|(\\\\..*)', '', Train$Name )\n", "str(Train$Title)\n", "levels(as.factor( Train$Title))\n", "## Survival rate \n", "table(as.factor(Train$Title),Train$Survived)\n", "rare_title <- c(\"Capt\",\"Col\", \"Don\", \"Dr\", \"Jonkheer\", \"Lady\",\"Major\",\"Rev\",\"Sir\",\"the Countess\" )\n", "index <- which(Train$Title == \"Mlle\")\n", "Train$Title[index] <- \"Miss\"\n", "index <- which(Train$Title == \"Ms\")\n", "Train$Title[index] <- \"Mrs\"\n", "index <- which(Train$Title == \"Mme\")\n", "Train$Title[index] <- \"Mrs\"\n", "index <- which(Train$Title == \"Dona\")\n", "Train$Title[index] <- \"rare_title\"\n", "Train$Title[Train$Title %in% rare_title] <- \"rare_title\"\n", "Train$Title <- as.factor(Train$Title)\n", "#### Final factor for title\n", "table(as.factor(Train$Title),Train$Survived)"], "execution_count": null, "metadata": {"_uuid": "34e161bbc389166cb0f56498a2a180625b5ab700", "_cell_guid": "9f5773d2-d488-4ff4-9837-1003724e881c"}, "outputs": []}, {"cell_type": "code", "source": ["### Family Variable \n", "Train$Fmaily <- Train$SibSp + Train$Parch +1\n", "table( Train$Survived,Train$Fmaily)\n", "ggplot(Train, aes(x=Fmaily, fill= factor(Survived))) + geom_bar()\n"], "execution_count": null, "metadata": {}, "outputs": []}, {"cell_type": "code", "source": ["# from test data set\n", "Test$Male <-as.factor(as.character(ifelse(Test$Sex==\"male\",1,0)))\n", "Test$pc1 <- as.factor(as.character(ifelse(Test$Pclass==1,1,0)))\n", "Test$pc2 <- as.factor(as.character(ifelse(Test$Pclass==2,1,0)))\n", "Test$pc3 <- as.factor(as.character(ifelse(Test$Pclass==3,1,0)))\n", "Test$Survived <- as.factor(as.character(Test$Survived))"], "execution_count": null, "metadata": {"_uuid": "f0a9da42b4bbbae372940e8bb3b61dcd0a106e70", "_cell_guid": "b228105b-f28a-4fc1-bfdc-325bfe34f944"}, "outputs": []}, {"cell_type": "code", "source": ["# check summary \n", "summary(Train)"], "execution_count": null, "metadata": {"_uuid": "60f2e493bccaf8e43d89afe910f72263f08f04eb", "_cell_guid": "0c3d9144-22fa-4fcf-b4e6-5b4dd27fd05b"}, "outputs": []}, {"cell_type": "code", "source": ["##  Missing value treatment for age variable\n", "Train$Age<- impute(Train$Age,mean)\n", "Test$Age <- impute(Test$Age,mean)\n", "\n", "str(Train)"], "execution_count": null, "metadata": {"_uuid": "27297a2e717575aa68791a93b2de4631283ad2ea", "_cell_guid": "04ad5e55-113c-44cb-8210-df81794767ed"}, "outputs": []}, {"cell_type": "code", "source": ["# Check for missing values and \n", "Train <-  subset(Train, select = -c(Ticket, Fare, Cabin,PassengerId,Name,Sex,Pclass))\n", "Test <- subset(Test, select = -c(Ticket, Fare, Cabin,PassengerId,Name,Sex,Pclass))\n"], "execution_count": null, "metadata": {"_uuid": "51b86a2ab9a9d5689a4c5e6264a3202f8dd7d47f", "_kg_hide-output": false, "_cell_guid": "faaccf54-8cec-4651-bf2e-5e1d5bf51138"}, "outputs": []}, {"cell_type": "code", "source": ["# GBM"], "execution_count": null, "metadata": {"_uuid": "6bbc5493ab92557288758c16188accca974ccfd7", "_cell_guid": "59d6b97c-4f8c-439c-aaa9-6c8c7e5c59ee"}, "outputs": []}, {"cell_type": "code", "source": ["gbm_Mod <- gbm(Survived~.,data = Train, distribution = \"adaboost\",n.trees = 500)\n", "gbm_Mod\n", "summary(gbm_Mod)"], "execution_count": null, "metadata": {"_uuid": "5ae7d88d0e86c3d5130e11d7cd62b2b60e7ae546", "_cell_guid": "fece6464-65a4-4102-ab2f-ca1feaa0a1f9"}, "outputs": []}, {"cell_type": "code", "source": ["############### Validation  ###########\n", "pred_gbm_MOD <- predict.gbm(gbm_Mod, newdata = Test, n.trees = 300)\n", "pred_gbm_MOD\n"], "execution_count": null, "metadata": {"_uuid": "db13f693319c079888b9024b3f52e3323845926d", "_cell_guid": "9c6b242b-2c64-4f48-9db0-8a80e88d22aa"}, "outputs": []}, {"cell_type": "code", "source": ["summary(pred_gbm_MOD)\n", "predict_gbm <- ifelse(pred_gbm_MOD>0.75,1,0)\n", "table(predict_gbm,Test$Survived)"], "execution_count": null, "metadata": {"_uuid": "ede2c827f93cc8f57f94816ce0079accb7ea2342", "_cell_guid": "f446f04e-c161-49c2-a3d0-3a416f114314"}, "outputs": []}, {"cell_type": "code", "source": ["### ROC ##########################\n", "ROC_Pred_GBM <- prediction(predict_gbm, Test$Survived)\n", "ROC_Pred_GBM@tp\n"], "execution_count": null, "metadata": {"_uuid": "b80164fdae83566283eac1ae5654271f22a39ec0", "_cell_guid": "8ee2aa23-a5b7-4893-ae69-1cfacabeed64"}, "outputs": []}, {"cell_type": "code", "source": ["ROC_Pref_GBM <- performance(ROC_Pred_GBM,\"tpr\",\"fpr\")\n", "ROC_Pref_GBM\n", "plot(ROC_Pref_GBM)\n", "abline(0,1,lty=8,col=\"grey\")\n", "\n"], "execution_count": null, "metadata": {"_uuid": "0bdd9fa7413fcbbd668082eaf79537e3ede613d8", "_cell_guid": "9c48e5d9-2f00-43d8-9978-53988ec66ad3"}, "outputs": []}, {"cell_type": "code", "source": ["auc_gbm <- performance(ROC_Pred_GBM, \"auc\")\n", "auc_gbm@y.values"], "execution_count": null, "metadata": {"_uuid": "b58171200443759b9669e2838d3a2f5596834abf", "_cell_guid": "a0897524-b399-480d-9bd5-c21c3aa56557"}, "outputs": []}, {"cell_type": "code", "source": ["# Write Submission to csv"], "execution_count": null, "metadata": {"_uuid": "9302998348f9650dfe4c2e93749e06079c2c0bac", "_cell_guid": "f0723bdf-9dcf-4c93-bfd1-5a3b66b85c55"}, "outputs": []}, {"cell_type": "code", "source": [], "execution_count": null, "metadata": {"_uuid": "add75e7a5d3d982950d64aea7334b711df03d5d5", "_cell_guid": "d7ca8523-c23d-481d-9990-d085630ca7a5"}, "outputs": []}]}