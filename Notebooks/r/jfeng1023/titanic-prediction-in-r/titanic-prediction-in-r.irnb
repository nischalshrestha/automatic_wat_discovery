{"cells":[{"metadata":{"_execution_state":"idle","_uuid":"83a0093a421d62ee720444d6413555f7164fa65f","trusted":true,"_cell_guid":"6e1d39ce-52bd-4193-9eaf-af529467b311"},"cell_type":"code","source":"# read data and stack training and testing datasets together\ntrain <- read.csv('../input/train.csv')\ntest <- read.csv('../input/test.csv')\ntest$Survived <- NA\ncombined <- rbind(train, test)\nsummary(combined)\nstr(combined)\n\n# change 'Survived' to factor\ncombined$Survived <- as.factor(combined$Survived)\n\n# change the empty values in 'Embarked' to NA\nlevels(combined$Embarked)[1] <- NA","execution_count":1,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"db7e8264ed16001a6c6ca7e1986efe69f0259027"},"cell_type":"code","source":"# relationship between different categorical variables and survival\nwith(train, table(Pclass, Survived)) # Pclass=1: more likely to survive\nwith(train, table(SibSp, Survived)) # SibSp=1: more likely to survive\nwith(train, table(Parch, Survived)) # Parch=1-3: more likely to survive\nwith(train, table(Embarked, Survived)) # Embarked=C: more likely to survive\n\n# try creating a new variable, \"family\", which is the sum of SibSp and Parch\ncombined$Family <- combined$SibSp + combined$Parch\ntrain$Family <- train$SibSp + train$Parch\nwith(train, table(Family, Survived)) # 1-3 family members: more likely to survive","execution_count":2,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"7c91bcb93e570f8a9ca0127a775ccbcffac73544"},"cell_type":"code","source":"# relationship between age, fare and survival\nsurvivors <- subset(train, Survived==1)\nvictims <- subset(train, Survived==0)\nsummary(survivors$Age)\nsummary(victims$Age)\nsummary(survivors$Fare)\nsummary(victims$Fare)\n\n# plot age\nhist(survivors$Age, breaks=20, col='green', ylim=c(0,80))\npar(new=TRUE)\nhist(victims$Age, breaks=20, col='#FF000088', axes=FALSE)\n\n# closer look at children (younger than 18)\nhist(survivors$Age[which(survivors$Age<=18)], breaks=18, col='green', ylim=c(0,40))\npar(new=TRUE)\nhist(victims$Age[which(victims$Age<=18)], breaks=18, col='#FF000088', axes=FALSE, main='')\n\n# plot fare (only look at fare <= 50 since there are very few expensive fares)\nhist(survivors$Fare[which(survivors$Fare<=50)], breaks=20, col='green', ylim=c(0,200), freq=TRUE)\npar(new=TRUE)\nhist(victims$Fare[which(survivors$Fare<=50)], breaks=20, col='#FF000088', freq=TRUE, axes=FALSE)\n\n# closer look at fare <= 10\nhist(survivors$Fare[which(survivors$Fare<=10)], breaks=10, col='green', ylim=c(0,200), freq=TRUE)\npar(new=TRUE)\nhist(victims$Fare[which(survivors$Fare<=10)], breaks=10, col='#FF000088', freq=TRUE, axes=FALSE)","execution_count":31,"outputs":[]},{"metadata":{"_uuid":"7d4ca60f137eb99511cf01647da40d302acf634d"},"cell_type":"markdown","source":"From the histograms, we can see it's mainly children under 5 who had a better chance to survive,  but it's not clear-cut between 5 and 15. Regarding fare, passengers with fare < 7 had a worse chance to survive. These cut-off values can be used to binning age and fare later. But before that I'll impute missing values."},{"metadata":{"_uuid":"7cc26518ba42c1c291da176ad8f112528f72012a","_cell_guid":"9fb64a48-f8ab-413c-8ec7-827dc97a7b52"},"cell_type":"markdown","source":"To impute missing age values, I'll use a person's title to infer their age. First I'll extract titles from names and look at the age distribution of each title group. "},{"metadata":{"_uuid":"d1fbeee82d86bb94850c7decd8cfd8de74f86aa4","trusted":true,"_cell_guid":"e1185f34-115c-4f9c-9e80-f7c7348914ce"},"cell_type":"code","source":"# extract title by finding an alphabetical string followed by '.' (e.g. Mr., Miss.)\nlibrary(stringr)\ncombined$title <- str_extract(combined$Name, '[a-zA-Z]+(?=\\\\.)')\ncombined$title <- as.factor(combined$title)\nsummary(combined$title)\n\n# plot the age distribution by title\nboxplot(Age~title, data=combined, las=2)","execution_count":6,"outputs":[]},{"metadata":{"_uuid":"6a8785fa0c70cdc49c2f64c7f69292ed1a4daab7","_cell_guid":"656a36a5-64b0-4d91-8d5c-597d70a36bc2"},"cell_type":"markdown","source":"The most common titles are Master, Miss, Mr, and Mrs.  I'll use the median age of each of these four groups to impute missing ages, and for all the other titles I'll use the median age of all of them."},{"metadata":{"_uuid":"105c4f3fed60bf29b180a205153fc07328e42c39","trusted":true,"_cell_guid":"cbabdd6f-9767-478d-b260-8a258008fe62"},"cell_type":"code","source":"# group all the rare titles together\ncombined$title <- as.character(combined$title)\ncombined$title[!(combined$title %in% c('Master', 'Miss', 'Mr', 'Mrs'))] <- 'Other'\ncombined$title <- as.factor(combined$title)\nsummary(combined$title)\n\n# get the mean age of each title group\ntitle.age <- aggregate(Age~title, data=combined, median)\ntitle.age\n\n# impute missing ages\nfor(i in 1:nrow(combined)){\n    if(is.na(combined[i,'Age'])){\n        combined[i,'Age'] <- title.age$Age[which(title.age$title==combined[i,'title'])]\n    }\n}\nsummary(combined$Age)\n","execution_count":8,"outputs":[]},{"metadata":{"scrolled":true,"_uuid":"d6db443e8c0111f19759ff71fced5d39182ab342","trusted":true,"_cell_guid":"0af152de-1827-4199-a81d-44e960c421be"},"cell_type":"code","source":"# impute missing values in 'Fare' and 'Embarked'\nlibrary(mice)\ninit <- mice(combined, maxit=0) \nmeth = init$method\npredM = init$predictorMatrix\n\n# remove the following variables as predictors\npredM[, c(\"PassengerId\", \"Name\",\"Ticket\",\"Cabin\")]=0    \n\n# specify imputation methods\nmeth[c('Fare')]='norm'\nmeth[c('Embarked')]='polyreg'\n\n# impute missing values and get new dataset\nset.seed(500)\nimputed <- mice(combined, method=meth, m=5, predictorMatrix = predM)\nimputed <- complete(imputed)\n\nsummary(imputed)","execution_count":9,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"e99baccf472f063739b4c4c30efea7ee945e6611"},"cell_type":"code","source":"# grouping age, fare, and family based on previous EDA\nimputed$AgeGroup <- with(imputed, cut(Age, breaks=c(0,5,15,85),right=FALSE, labels=c('young child','older child','adult')))\nsummary(imputed$AgeGroup) \n\nimputed$FareGroup <- with(imputed, cut(Fare, breaks=c(0,7.5,600),right=FALSE,labels=c('low','high')))\nsummary(imputed$FareGroup) \n\nimputed$FamilySize <- with(imputed, cut(Family, breaks=c(0,1,4,11),right=FALSE,labels=c('solo','small','large')))\nsummary(imputed$FamilySize) ","execution_count":32,"outputs":[]},{"metadata":{"_uuid":"34ca1bf281fcbb6d3c9c676eaacfec3d40e31a16","trusted":true,"_cell_guid":"5cccd10e-15d4-402d-97f3-f8377719d9d4"},"cell_type":"code","source":"# split traing and testing sets\ntr <- imputed[1:nrow(train), ]\nte <- imputed[(nrow(train)+1):nrow(imputed),]\nsummary(tr)\nsummary(te)","execution_count":33,"outputs":[]},{"metadata":{"_uuid":"4291067f9bc313a6990468f32d9efc277a735e47","trusted":true,"_cell_guid":"b3e7dcac-673b-4c90-bbf0-0900b72403b1"},"cell_type":"code","source":"# model with decision tree \nlibrary(caret)\nlibrary(C50)\n\ntree <- C5.0(tr[,c('Sex', 'Age', 'Pclass', 'Family', 'SibSp', 'Parch', 'Fare', 'Embarked', 'title', 'AgeGroup', 'FareGroup', 'FamilySize')], tr$Survived)\nsummary(tree)\n\n# use only the most useful features\ntree2 <- C5.0(tr[,c('Sex', 'Pclass', 'Fare', 'Embarked', 'title', 'AgeGroup', 'FamilySize')], tr$Survived)\nsummary(tree2)\n\nte$Survived <- predict(tree2, te[,c('Sex', 'Pclass', 'Fare', 'Embarked', 'title', 'AgeGroup', 'FamilySize')])\nwrite.csv(te[,c('PassengerId','Survived')], file='tree2.csv', row.names=FALSE)","execution_count":35,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"d6caf51e4cb68e9abc5b4ebe169346fee519662f"},"cell_type":"code","source":"# recursive partitioning tree\nlibrary(rpart)\n\npart <- rpart(Survived~Sex+Pclass+Fare+Embarked+title+AgeGroup+FamilySize, method=\"class\", data=tr)\nprintcp(part) \nsummary(part)\n\nte$Survived <- predict(part, te, type=\"class\")\nwrite.csv(te[,c('PassengerId','Survived')], file='rpart.csv', row.names=FALSE)","execution_count":36,"outputs":[]},{"metadata":{"_uuid":"776373c42b68608a0c6e673865a2229a04943a88","trusted":true,"_cell_guid":"178c6d42-a202-4298-ad50-16fc522f00fb"},"cell_type":"code","source":"# random forest\nlibrary(randomForest)\nrf <- randomForest(Survived ~ ., data=tr[,c('Survived','Sex', 'Age', 'Pclass', 'Family', 'SibSp', 'Parch', 'Fare', 'Embarked', 'title', 'AgeGroup', 'FareGroup', 'FamilySize')], mtry=9, nodesize=6)\nrf\n\nte$Survived <- predict(rf, te[,c('Sex', 'Age', 'Pclass', 'Family', 'SibSp', 'Parch', 'Fare', 'Embarked', 'title', 'AgeGroup', 'FareGroup', 'FamilySize')])\nwrite.csv(te[,c('PassengerId','Survived')], file='rf.csv', row.names=FALSE)","execution_count":39,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"09267ccd889317d058d31007ea431ad2728a0534"},"cell_type":"code","source":"# SVM\nlibrary(e1071)\nset.seed(2017)\n\nsvm.model <- svm(Survived ~ ., data=tr[,c('Survived','Sex', 'Age', 'Pclass', 'Family', 'SibSp', 'Parch', 'Fare', 'Embarked', 'title', 'AgeGroup', 'FareGroup', 'FamilySize')], kernel =\"radial\")\nsvm.model\n\nte$Survived <- predict(svm.model, te[,c('Sex', 'Age', 'Pclass', 'Family', 'SibSp', 'Parch', 'Fare', 'Embarked', 'title', 'AgeGroup', 'FareGroup', 'FamilySize')])\nwrite.csv(te[,c('PassengerId','Survived')], file='svm.csv', row.names=FALSE)","execution_count":40,"outputs":[]}],"metadata":{"kernelspec":{"display_name":"R","language":"R","name":"ir"},"language_info":{"mimetype":"text/x-r-source","name":"R","pygments_lexer":"r","version":"3.4.2","file_extension":".r","codemirror_mode":"r"}},"nbformat":4,"nbformat_minor":1}