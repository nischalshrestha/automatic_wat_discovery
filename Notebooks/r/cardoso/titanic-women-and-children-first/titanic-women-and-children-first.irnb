{"nbformat_minor": 1, "nbformat": 4, "metadata": {"_is_fork": false, "language_info": {"name": "R", "version": "3.4.1", "pygments_lexer": "r", "file_extension": ".r", "codemirror_mode": "r", "mimetype": "text/x-r-source"}, "kernelspec": {"language": "R", "display_name": "R", "name": "ir"}, "_change_revision": 2}, "cells": [{"source": ["## Introdution\n", "\n", "Competition is asked to analysis using machine learning to predict which passengers survived the tragedy. They are provided sets of data tabulae form, which are faced with other samples to check the predictability.\n", "\n", "I wish to present to children and women had the ship taken priority. Having thus more likely to survive."], "cell_type": "markdown", "metadata": {"_cell_guid": "ead8fd8b-d0e0-97a1-954f-8c1cb1692039", "_uuid": "9fc1621af55431759a31b1ebe04294803512cbaa"}}, {"source": ["#Load Libraries"], "cell_type": "markdown", "metadata": {"_cell_guid": "1bbccfe2-ce4a-dca4-a179-c112571ef65f", "_uuid": "d68992a8a1b8256add47756ae61768e011ff0d4a"}}, {"outputs": [], "execution_count": null, "cell_type": "code", "metadata": {"_cell_guid": "bbff6708-b4b3-2b53-b8b2-fbcb2843a584", "_uuid": "63f2a4504fd7446fcde56b25cfd0064dec209cd7"}, "source": ["library('rpart')\n", "library('randomForest')\n", "library('party')\n", "library('ggplot2')\n", "library('ggthemes') \n", "library('scales') \n", "library('mice')\n", "library('randomForest') \n", "library('magrittr')"]}, {"source": ["## Load Dataset"], "cell_type": "markdown", "metadata": {"_cell_guid": "63725404-6f39-978e-653e-2c0e10ec24ce", "_uuid": "bb550db3e86312013ec548d58a106837693d14ee"}}, {"outputs": [], "execution_count": null, "cell_type": "code", "metadata": {"collapsed": true, "_cell_guid": "c5c75763-a556-2fea-e465-f7f03196d20f", "_uuid": "63126a4e818b790250d28528e4f9639df8d03873"}, "source": ["train <- read.csv(\"../input/train.csv\")\n", "test <- read.csv(\"../input/test.csv\")"]}, {"source": ["# Join datasets\n", "\n", "Join together the test and train sets for easier feature engineering"], "cell_type": "markdown", "metadata": {"_cell_guid": "b504096b-4646-741d-867d-30c026b533a7", "_uuid": "dec27294181686cb2af6e1cce86a089fc7dfe226"}}, {"outputs": [], "execution_count": null, "cell_type": "code", "metadata": {"collapsed": true, "_cell_guid": "9f52472b-0641-a1f6-9bb7-088419fdc306", "_uuid": "4291422e16fcc6b6588d9c9980e81528f4fd99bf"}, "source": ["test$Survived <- NA\n", "fullComb <- rbind(train, test)"]}, {"source": ["# Check datasets"], "cell_type": "markdown", "metadata": {"_cell_guid": "ad350e8a-82d2-d2ba-2f51-1ee5cc7c796c", "_uuid": "f07b4b5477bc780670b2f63e5570978621d607c3"}}, {"outputs": [], "execution_count": null, "cell_type": "code", "metadata": {"_cell_guid": "19a9f199-4156-9031-1464-188e1da1c5f3", "_uuid": "f3ba35da6cdaef9a7a524cc26d4323708ab5ad04"}, "source": ["str(fullComb)"]}, {"source": ["## Convert to a string"], "cell_type": "markdown", "metadata": {"_cell_guid": "def4ae6a-b618-c4f2-8c98-14d68b39826a", "_uuid": "fafea99ad4cd91e2dc642ba18c4312522a2a7410"}}, {"outputs": [], "execution_count": null, "cell_type": "code", "metadata": {"collapsed": true, "_cell_guid": "7fb38afe-e9d5-9f23-8e29-f67df932f6b0", "_uuid": "8e86b33fa196dd39d1c5fd9e6bd159b40913695b"}, "source": ["fullComb$Name <- as.character(fullComb$Name)"]}, {"source": ["## Engineered variable - Title\n", "\n", "To get the real sense of the importance of the person and their social class can extrapolate some additional information based on your title."], "cell_type": "markdown", "metadata": {"_cell_guid": "3212d6dd-b7b9-2cfc-18b6-8c4890a14bff", "_uuid": "7df651a59d87e560f777e8c70f671ae2f9125d5b"}}, {"source": ["Combine title groups"], "cell_type": "markdown", "metadata": {"_cell_guid": "cc1335b8-a013-2837-1cea-3f770456f620", "_uuid": "2a3cf4ed355dc98b7fa1a1e78fd2669e4c2f6e39"}}, {"outputs": [], "execution_count": null, "cell_type": "code", "metadata": {"collapsed": true, "_cell_guid": "249e9bad-b76b-6efa-645a-9e98304c4343", "_uuid": "3f7798363d1f37fba169ca7d541f576374701b5b"}, "source": ["fullComb$Title <- sapply(fullComb$Name, FUN=function(x) {strsplit(x, split='[,.]')[[1]][2]})\n", "fullComb$Title <- sub(' ', '', fullComb$Title)"]}, {"source": ["Combine small title groups"], "cell_type": "markdown", "metadata": {"_cell_guid": "e98a3c4f-a182-a32b-f706-b157c24057b8", "_uuid": "17e33378efd9bfd586870be3c4939445c30df923"}}, {"outputs": [], "execution_count": null, "cell_type": "code", "metadata": {"collapsed": true, "_cell_guid": "38122ca1-b363-621c-87d4-07866a8b0bf7", "_uuid": "d4179fd8692d6f68897b0afc9c3bffb4a96865f5"}, "source": ["fullComb$Title[fullComb$Title %in% c('Mme', 'Mlle')] <- 'Mlle'\n", "fullComb$Title[fullComb$Title %in% c('Capt', 'Don', 'Major', 'Sir')] <- 'Sir'\n", "fullComb$Title[fullComb$Title %in% c('Dona', 'Lady', 'the Countess', 'Jonkheer')] <- 'Lady'"]}, {"source": ["Convert to a factor"], "cell_type": "markdown", "metadata": {"_cell_guid": "46812b64-d212-0bf5-70aa-755aaa7ab129", "_uuid": "61f0248cf412202f7ff3847ed5eda64636463342"}}, {"outputs": [], "execution_count": null, "cell_type": "code", "metadata": {"collapsed": true, "_cell_guid": "b09a20e1-ca62-082f-bdc4-048dcd318c5a", "_uuid": "e5000bc92042526028ecdf8635f3bda3bc53a388"}, "source": ["fullComb$Title <- factor(fullComb$Title)"]}, {"source": ["## Engineered variable: Family size\n", "\n", "Try to get the view of the importance of the number of family members traveling together for individual survival"], "cell_type": "markdown", "metadata": {"_cell_guid": "d6105d03-6706-4647-6494-4e223505d277", "_uuid": "80d86b4ce15663296a71b80877101ec946a9cda9"}}, {"outputs": [], "execution_count": null, "cell_type": "code", "metadata": {"_cell_guid": "61d74aaf-c2f4-cdc8-c584-27a54154a624", "_uuid": "bf0cb1882ebb0b43b772759dd13fde5565dba2be"}, "source": ["fullComb$FamilySize <- fullComb$SibSp + fullComb$Parch + 1\n", "\n", "ggplot(fullComb[1:891,], aes(x = FamilySize, fill = factor(Survived))) +\n", "  geom_bar(stat='count', position='dodge') +\n", "  scale_x_continuous(breaks=c(1:11)) +\n", "  labs(x = 'Family Size') +\n", "  theme_few()"]}, {"source": ["Discretize family size"], "cell_type": "markdown", "metadata": {"_cell_guid": "fd581608-cfb3-f4a3-7a1d-d808cd9bba82", "_uuid": "f2f2b7d7b06179d1b3972a1131fdce92f2f9e6c2"}}, {"outputs": [], "execution_count": null, "cell_type": "code", "metadata": {"collapsed": true, "_cell_guid": "a9b95209-0473-8f2a-9965-84b275fa4504", "_uuid": "ee50b36f80b59ea065d661d996b3e5c92c388b4f"}, "source": ["fullComb$FsizeD[fullComb$FamilySize == 1] <- 'singleton'\n", "fullComb$FsizeD[fullComb$FamilySize < 5 & fullComb$Fsize > 1] <- 'small'\n", "fullComb$FsizeD[fullComb$FamilySize > 4] <- 'large'"]}, {"source": ["## Engineered variable: Family\n", "\n", "Determine the family, so that no error in groups of people who share the same last name but are not related."], "cell_type": "markdown", "metadata": {"_cell_guid": "d013b23d-442a-98e2-0706-29f2cbd9f5be", "_uuid": "423569667cb1933240ce18d3b46b6d37543509c9"}}, {"outputs": [], "execution_count": null, "cell_type": "code", "metadata": {"collapsed": true, "_cell_guid": "704e6877-c5f3-fdc9-86bd-946368f342d6", "_uuid": "d3920e546a0e6666c2c1009da294d8d56dfc26ed"}, "source": ["fullComb$Surname <- sapply(fullComb$Name, FUN=function(x) {strsplit(x, split='[,.]')[[1]][1]})\n", "fullComb$FamilyID <- paste(as.character(fullComb$FamilySize), fullComb$Surname, sep=\"\")\n", "fullComb$FamilyID[fullComb$FamilySize <= 2] <- 'Small'"]}, {"source": ["Delete erroneous family IDs"], "cell_type": "markdown", "metadata": {"_cell_guid": "4fa22cd4-3ec4-87d0-5922-6c872442bbf6", "_uuid": "daa4ed209b2f6fec2c93a385379dfb410e9074c8"}}, {"outputs": [], "execution_count": null, "cell_type": "code", "metadata": {"collapsed": true, "_cell_guid": "8378686b-f4da-59bd-47c4-d919e93b812d", "_uuid": "944b34c0a2d323fbbc69e8cbe2761139f3883e11"}, "source": ["famIDs <- data.frame(table(fullComb$FamilyID))\n", "famIDs <- famIDs[famIDs$Freq <= 2,]\n", "fullComb$FamilyID[fullComb$FamilyID %in% famIDs$Var1] <- 'Small'"]}, {"source": ["Convert to a factor"], "cell_type": "markdown", "metadata": {"_cell_guid": "1bcf4232-4873-c2fa-d1c5-302c9ac46852", "_uuid": "197df013541a4e09db1a0da59c8b55f5f4e79604"}}, {"outputs": [], "execution_count": null, "cell_type": "code", "metadata": {"collapsed": true, "_cell_guid": "ec3278e1-8216-7b37-3c1f-195ce3f58b3e", "_uuid": "6aeacba5df3bbaf82f943cde6b69d00312a101e4"}, "source": ["fullComb$FamilyID <- factor(fullComb$FamilyID)"]}, {"source": ["## Fill in Age NAs\n", "\n", "Correct not missing fields"], "cell_type": "markdown", "metadata": {"_cell_guid": "e1682379-cbea-82e1-bb82-a41e478c0df8", "_uuid": "81913e0eed9154d2de94c379ef6c0e8b060113bf"}}, {"outputs": [], "execution_count": null, "cell_type": "code", "metadata": {"_cell_guid": "6ca80de2-0271-a04f-7e23-246d058332b8", "_uuid": "20a8d7eee0f8184f21338be20cb79953bf6718df"}, "source": ["summary(fullComb$Age)\n", "Agefit <- rpart(Age ~ Pclass + Sex + SibSp + Parch + Fare + Embarked + Title + FamilySize, \n", "                data=fullComb[!is.na(fullComb$Age),], method=\"anova\")\n", "fullComb$Age[is.na(fullComb$Age)] <- predict(Agefit, fullComb[is.na(fullComb$Age),])"]}, {"source": ["Check what else might be missing"], "cell_type": "markdown", "metadata": {"_cell_guid": "68b9ca6d-dd15-ce95-e2cb-e394993fce01", "_uuid": "7fe90ee4d7af6c7f1e587095713654f7ddb3ced5"}}, {"outputs": [], "execution_count": null, "cell_type": "code", "metadata": {"_cell_guid": "841f8199-27e6-2fd7-b43c-5015ac9dde34", "_uuid": "2ed2d8f5a0be8acb1c70c649445f255304e89d8f"}, "source": ["summary(fullComb)"]}, {"source": ["Fill in Embarked blanks"], "cell_type": "markdown", "metadata": {"_cell_guid": "d9e500d0-ca88-b97f-d340-d49a550e977f", "_uuid": "732a76a97ea097de6e673c706944c72d7cd4b69b"}}, {"outputs": [], "execution_count": null, "cell_type": "code", "metadata": {"_cell_guid": "e963c5b2-7b26-f018-ee1c-0b0fd69a7907", "_uuid": "e51c54cf667c027e60827d10e3379ab2844374f4"}, "source": ["summary(fullComb$Embarked)\n", "which(fullComb$Embarked == '')"]}, {"source": ["# Get rid of our missing passenger IDs"], "cell_type": "markdown", "metadata": {"_cell_guid": "2d83ad7c-b0bd-46ce-9fcf-14d7ae144386", "_uuid": "c57ca90e28b17d53ab8eea6593d6dd5d696f8f06"}}, {"source": ["# Fill missed"], "cell_type": "markdown", "metadata": {"_cell_guid": "393475fa-843f-5f21-17ee-7eba2780b9ea", "_uuid": "23983c2792ba0de28015404b935a5be99e767c9c"}}, {"outputs": [], "execution_count": null, "cell_type": "code", "metadata": {"collapsed": true, "_cell_guid": "6cfaaf74-6245-ea5d-b6bf-b6aaafee0494", "_uuid": "0f861c290074ca0ca4989a261bad3a69ce997e29"}, "source": ["fullComb$Embarked[c(62,830)] = \"S\""]}, {"source": ["# Fill in Fare NAs\n", "\n"], "cell_type": "markdown", "metadata": {"_cell_guid": "973f2f79-3d74-e6e6-1871-cb503239979e", "_uuid": "9f7d90509bed1bc2b4d097f4f9fa20829f8fcaa0"}}, {"outputs": [], "execution_count": null, "cell_type": "code", "metadata": {"_cell_guid": "88c4fd22-3937-1489-e442-3accfee3dfbd", "_uuid": "8e4541d43226b5353abc804cad14d2e2ebea26f9"}, "source": ["summary(fullComb$Fare)\n", "which(is.na(fullComb$Fare))\n", "fullComb$Fare[1044] <- median(fullComb$Fare, na.rm=TRUE)\n", "\n", "ggplot(fullComb[fullComb$Pclass == '3' & fullComb$Embarked == 'S', ], \n", "       aes(x = Fare)) +\n", "  geom_density(fill = '#99d6ff', alpha=0.4) + \n", "  geom_vline(aes(xintercept=median(Fare, na.rm=T)),\n", "             colour='red', linetype='dashed', lwd=1) +\n", "  scale_x_continuous(labels=dollar_format()) +\n", "  theme_few()"]}, {"source": ["Randon Forest"], "cell_type": "markdown", "metadata": {"_cell_guid": "d48dc86f-87ae-4dbc-9a82-916454a7aa18", "_uuid": "6fccd4fce42acff9015312744191274d2b72295a"}}, {"outputs": [], "execution_count": null, "cell_type": "code", "metadata": {"_cell_guid": "b411d113-30c8-8142-5cf7-06e8eb20f1ec", "_uuid": "533890aed4072b1aa473aa46e595ec9ffa158f6b"}, "source": ["fullComb$FamilyID2 <- fullComb$FamilyID\n", "\n", "fullComb$FamilyID2 <- as.character(fullComb$FamilyID2)\n", "fullComb$FamilyID2[fullComb$FamilySize <= 3] <- 'Small'\n", "\n", "fullComb$FamilyID2 <- factor(fullComb$FamilyID2)\n", "\n", "ggplot(fullComb[1:891,], aes(Age, fill = factor(Survived))) + \n", "  geom_histogram() + \n", "  facet_grid(.~Sex) + \n", "  theme_few()"]}, {"source": ["# Create the column child, and indicate whether child or adult"], "cell_type": "markdown", "metadata": {"_cell_guid": "3aecf4d9-21af-1217-ac10-933c37f35ee7", "_uuid": "0c6898bc548d70481f8983473d936b564107ba28"}}, {"outputs": [], "execution_count": null, "cell_type": "code", "metadata": {"collapsed": true, "_cell_guid": "229c72b4-512e-5559-b776-c01fc5b8ce8f", "_uuid": "50345d894d5c799b5f7250c9986772e63dd90fd7"}, "source": ["fullComb$Child[fullComb$Age < 16] <- 'Child'\n", "fullComb$Child[fullComb$Age >= 16] <- 'Adult'"]}, {"source": ["# Show counts"], "cell_type": "markdown", "metadata": {"_cell_guid": "b55cdd74-76b2-5fac-55fd-389f8fa6c607", "_uuid": "a89544bd2ec456e1272b2040525a8fbf030c1e0c"}}, {"outputs": [], "execution_count": null, "cell_type": "code", "metadata": {"_cell_guid": "55fd3bf4-cf5f-a0fa-0338-52d424f87097", "_uuid": "95bfd731854079dfd6927d42f43143f276009347"}, "source": ["table(fullComb$Child, fullComb$Survived)"]}, {"source": ["Factorize and show"], "cell_type": "markdown", "metadata": {"_cell_guid": "a91c3b80-effc-aafc-bab1-d8dfd300aa11", "_uuid": "e3eb36af9e7a38aecc4033af301dd993fb08b641"}}, {"outputs": [], "execution_count": null, "cell_type": "code", "metadata": {"_cell_guid": "5c0da607-63af-f4dc-6666-5722544f96ba", "_uuid": "61447015f0d76428da82f6f637ed37da21df4811"}, "source": ["fullComb$Child  <- factor(fullComb$Child)\n", "md.pattern(fullComb)"]}, {"source": ["# Split back"], "cell_type": "markdown", "metadata": {"_cell_guid": "fe419f3d-87ef-9658-3998-a1594c992ef0", "_uuid": "7009190cfc30cd5305652233c905c80d3941a24e"}}, {"outputs": [], "execution_count": null, "cell_type": "code", "metadata": {"collapsed": true, "_cell_guid": "66676814-34ca-a7d5-3851-ea1fd022e201", "_uuid": "3cae24e30c2c8235c721885f2418d914586b2587"}, "source": ["train <- fullComb[1:891,]\n", "test <- fullComb[892:1309,]"]}, {"source": ["# Build Random Forest Ensemble"], "cell_type": "markdown", "metadata": {"_cell_guid": "0d4c054d-0ea9-5b12-fc08-285c0dd00162", "_uuid": "123c2947d7694ac07469f2ac269a5f87f9dec2bd"}}, {"outputs": [], "execution_count": null, "cell_type": "code", "metadata": {"collapsed": true, "_cell_guid": "f40ee319-9479-c0ac-bcb0-b945cbde91ce", "_uuid": "10073be36d42ad8327b30784d40520a4efad3dfd"}, "source": ["set.seed(2501)\n", "fit <- randomForest(as.factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title + FamilySize + FamilyID2,\n", "                    data=train, importance=TRUE, ntree=2000)"]}, {"source": ["# Look at variable importance"], "cell_type": "markdown", "metadata": {"_cell_guid": "c1d5ce61-a2e8-a331-d44c-ba76e92605f4", "_uuid": "5b0f5305f60b3cf1bed20c531ecd1b5a1bd0f9e3"}}, {"outputs": [], "execution_count": null, "cell_type": "code", "metadata": {"_cell_guid": "e81a050f-d798-dfdd-e93c-0f076d10bdcd", "_uuid": "4402d9c2669311f901b983481f59e0a452c73a7c"}, "source": ["varImpPlot(fit)"]}, {"source": ["#Predict One"], "cell_type": "markdown", "metadata": {"_cell_guid": "25b6774c-027b-f170-5e1d-dc0ae87a2754", "_uuid": "443b5209f97b4cd3d91699aa4d6bbb9caa905dad"}}, {"outputs": [], "execution_count": null, "cell_type": "code", "metadata": {"collapsed": true, "_cell_guid": "f65c530d-69f7-e5cd-fb1f-713d53f8287f", "_uuid": "c1e5faf82a12c19913fe6a649337613aae596eab"}, "source": ["Prediction <- predict(fit, test)\n", "submit <- data.frame(PassengerId = test$PassengerId, Survived = Prediction)\n", "write.csv(submit, file = \"one.csv\", row.names = FALSE)"]}, {"source": ["#Predict Two"], "cell_type": "markdown", "metadata": {"_cell_guid": "ad4bcda4-bfb0-e557-77e6-d80a1c43e702", "_uuid": "67d20852a2e37d7be1ae60f5c480f3d0131926a8"}}, {"outputs": [], "execution_count": null, "cell_type": "code", "metadata": {"collapsed": true, "_cell_guid": "7cc4b9a4-8ecd-a4ba-0192-78caffab1b10", "_uuid": "e1e3b98ba2e54401b7fdf13ef8fe89ccddd76a2c"}, "source": ["set.seed(2501)\n", "fit <- cforest(as.factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title + FamilySize + FamilyID,\n", "               data = train, controls=cforest_unbiased(ntree=2000, mtry=3)) \n", "Prediction <- predict(fit, test, OOB=TRUE, type = \"response\")\n", "submit <- data.frame(PassengerId = test$PassengerId, Survived = Prediction)"]}, {"outputs": [], "execution_count": null, "cell_type": "code", "metadata": {"collapsed": true, "_cell_guid": "c5638d73-f4ed-4cdb-4f44-d01987754661", "_uuid": "24d9eb376bd4ed76e5f2bcae5d949e010f2af0ab"}, "source": ["write.csv(submit, file = \"two.csv\", row.names = FALSE)"]}]}