{"cells": [{"execution_count": null, "cell_type": "code", "outputs": [], "source": "getwd()\nls()\n", "metadata": {"_execution_state": "idle", "_uuid": "40d8e7d0cc72e68b028453a23d7b4b6a16034b6f", "collapsed": false}}, {"execution_count": null, "cell_type": "code", "outputs": [], "source": "#Reading the data\ntrain=read.csv(\"train.csv\")\ntest=read.csv(\"test.csv\")\ntrain$Survived=as.factor(train$Survived)\n\n\n#Finding missing values\nlapply(train,function(x) as.numeric(sum(is.na(x))))\n\n\n#2 values for Embarked missing in training set\nmissingId = train[train$Embarked==\"\", \"PassengerId\"]\ntrain = train[-missingId,]\ntrain$Embarked = factor(train$Embarked)\n\n\n\n#Filling the missing values usin Multiple Imputation\nsimple= train[c(\"Age\",\"SibSp\",\"Parch\")]\nlibrary(mice)\nimputed= complete(mice(simple))\ntrain$Age=imputed$Age\n\nsimple= test[c(\"Age\",\"SibSp\",\"Parch\")]\nlibrary(mice)\nimputed= complete(mice(simple))\ntest$Age=imputed$Age\n\nsimple= test[c(\"Fare\",\"Pclass\")]\nlibrary(mice)\nimputed= complete(mice(simple))\ntest$Fare=imputed$Fare\n\n\n#Building Logistic Regression Model\nmodel1 = glm(formula = Survived ~ Pclass + Sex + Age + SibSp + Parch + \n               Fare , family = binomial, data = train)\npredict1 = predict(model1,newdata = train, type = \"response\")\nacctable1 = table(train$Survived, predict1>=0.5)\n#Better accuracy(0.796) than the baseline model(0.616)\n\n\n#Building CART model\nlibrary(rpart)\nlibrary(rpart.plot)\nmodeltree = rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + \n                    Fare+Embarked, data = train, method = \"class\", cp=0.02)\nprp(modeltree)\npredicttree = predict(modeltree, type = \"class\")\nacctable2= table(train$Survived, predicttree)\n#Accuracy(0.829) greater than Logistic Regression\n\n\n\n#Building random forest\nlibrary(randomForest)\nmodelforest = randomForest(Survived ~ Pclass + Sex + Age + SibSp + Parch + \n                             Fare+Embarked,  data = train)\npredictForest = predict(modelforest, newdata = train)\nacctable3 = table(train$Survived, predictForest)\n#Accuracy=0.910 better than CART model\n\n\n\n#Submitting CART predictions\npredictTree = predict(modeltree, newdata = test, type = \"class\")\npredictTree = (as.numeric(predictTree))-1\nsub = data.frame(PassengerId = test$PassengerId, Survived = predictTree)\nwrite.csv(sub, \"Submission_CART.csv\", row.names = FALSE)\n\n\n\n\n#Submitting Random Forest predictions\npredictForest  =  predict(modelforest, newdata = test)\npredictForest = (as.numeric(predictForest))-1\nsub = data.frame(PassengerId = test$PassengerId, Survived = predictForest)\nwrite.csv(sub, \"Submission_RF.csv\", row.names = FALSE)\n\n\n\n#Submitting Logistic regression predictions\npredictTest = predict(model1, newdata = test, type = \"response\")\npredictTest = as.numeric(predictTest>=0.5)\nsub = data.frame(PassengerId = test$PassengerId, Survived = predictTest)\nwrite.csv(sub, \"Submission_LR.csv\", row.names = FALSE)\n\n\n", "metadata": {"_execution_state": "idle", "_uuid": "5e18774d896c3d27d8e9b3df21bbbd93b4e81c4c", "collapsed": false}}], "nbformat": 4, "metadata": {"language_info": {"version": "3.4.1", "pygments_lexer": "r", "mimetype": "text/x-r-source", "codemirror_mode": "r", "name": "R", "file_extension": ".r"}, "_is_fork": false, "_change_revision": 0, "kernelspec": {"display_name": "R", "name": "ir", "language": "R"}}, "nbformat_minor": 0}