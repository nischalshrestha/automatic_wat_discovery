{"cells":[{"metadata":{"_uuid":"f501cea51d9963e481f620298abb8135a5fe0ece"},"cell_type":"markdown","source":"# Titanic dataset competition\n\n##Importing data"},{"metadata":{"trusted":true,"_uuid":"ceeb42715f1421b00dd8e0050e2fa8b357213ca2"},"cell_type":"code","source":"library(caret)\nlibrary(ggplot2)","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"be5e0d350134657d051cc41f2b2c24aac6682a1a"},"cell_type":"code","source":"list.files(path = \"../input\")\ngetwd()\nlist.files()\ndata <- read.csv(\"../input/train.csv\")\n\nset.seed(123)\ntrainIndex <- createDataPartition(data$Survived, p = .8, \n                                  list = FALSE, \n                                  times = 1)\n\ntrain <- data[ trainIndex,]\ntest  <- data[-trainIndex,]\nhead(train)\n","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"c16e30c1d4ddc48f3a0cfa29ff6d374ee02d4bfe"},"cell_type":"code","source":"#Exploratory data analysis\n## Scatterplot matrix 1","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"8f4a540ab997eec55a8959f84fe5913050b5c0cd"},"cell_type":"code","source":"featurePlot(x=train[,3:5],y=train$Survived, plot=\"pairs\")","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"195ed68ddf344020c719d7c60ded2c7c090728d5"},"cell_type":"code","source":"## Scatterplot matrix 2","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"8689565d28adf733ad60c0e970cd5718c9f459b6"},"cell_type":"code","source":"featurePlot(x=train[,7:10],y=train$Survived, plot=\"pairs\")","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"927e9627e4892f7fccf8b3d8f7c01736f18f7c44"},"cell_type":"code","source":"## Scatterplot matrix 3","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"182bb480dc4fe94723efdce4d58faa53d43f969c"},"cell_type":"code","source":"featurePlot(x=train[,11:12],y=train$Survived, plot=\"pairs\")\n","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"545c2ee3ce08a6bd05325627418582957384f3d2"},"cell_type":"code","source":"#Data pre-processing\nUsing K-nearest neighbors to impute missing values.","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"15faa9cdc5466d1236ccbd21677b28ed3599268e"},"cell_type":"code","source":"train <- predict(preProcess(train,method=\"knnImpute\"), train)\n","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"75eb97d4bfe54bdff031f3eb87d0ecfa587836a0","_kg_hide-output":true,"_kg_hide-input":false},"cell_type":"code","source":"fitControl <- trainControl(## 10-fold CV\n                           method = \"repeatedcv\",\n                           number = 10,\n                           ## repeated ten times\n                           repeats = 10)\nset.seed(128)\nglm1 <- train(factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked,\n              data = train,\n              method = \"glm\",\n              trControl = fitControl)\n","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"30b958eeb81cc1ab730534db3bad2a08a9fad781"},"cell_type":"code","source":"glm1\nglm1$finalModel\nsummary(glm1$finalModel)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"b7176f00781bdd6a5e6793c6d8fcdfea1ef4a5f1"},"cell_type":"markdown","source":"# Try Decision tree"},{"metadata":{"trusted":true,"_uuid":"97994360b1ee2404edae78a838c8a4bde425c5ff"},"cell_type":"code","source":"set.seed(1651)\ndecTreeGrid <-  expand.grid(cp = seq(from=0.01, to=1, length.out=100))\n\ndecTree <- train(factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked,\n              data = train,\n              method = \"rpart\",\n              trControl = fitControl,\n              tuneGrid = decTreeGrid)","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"71f6f1d892afd238c4422915cae4d7d3bf8e4827"},"cell_type":"code","source":"decTree","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"59ac7a545825feb110484b7e9332b66101daf162"},"cell_type":"code","source":"set.seed(3189)\n\ntreeBag <- train(factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked,\n              data = train,\n              method = \"treebag\",\n              trControl = fitControl,\n              #tuneGrid = decTreeGrid\n                )","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"68ed2055bea673d045b420c6ada553ddacdd2b46","_execution_state":"idle","trusted":true},"cell_type":"code","source":"## Importing packages\n\n# This R environment comes with all of CRAN and many other helpful packages preinstalled.\n# You can see which packages are installed by checking out the kaggle/rstats docker image: \n# https://github.com/kaggle/docker-rstats\n\nlibrary(tidyverse) # metapackage with lots of helpful functions\n\n## Running code\n\n# In a notebook, you can run a single code cell by clicking in the cell and then hitting \n# the blue arrow to the left, or by clicking in the cell and pressing Shift+Enter. In a script, \n# you can run code by highlighting the code you want to run and then clicking the blue arrow\n# at the bottom of this window.\n\n## Reading in files\n\n# You can access files from datasets you've added to this kernel in the \"../input/\" directory.\n# You can see the files added to this kernel by running the code below. \n\nlist.files(path = \"../input\")\n\n## Saving data\n\n# If you save any files or images, these will be put in the \"output\" directory. You \n# can see the output directory by committing and running your kernel (using the \n# Commit & Run button) and then checking out the compiled version of your kernel.\n\n\n\n\n","execution_count":null,"outputs":[]}],"metadata":{"kernelspec":{"display_name":"R","language":"R","name":"ir"},"language_info":{"mimetype":"text/x-r-source","name":"R","pygments_lexer":"r","version":"3.4.2","file_extension":".r","codemirror_mode":"r"}},"nbformat":4,"nbformat_minor":1}