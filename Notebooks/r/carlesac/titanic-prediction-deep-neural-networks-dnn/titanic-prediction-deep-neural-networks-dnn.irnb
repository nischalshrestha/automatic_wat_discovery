{"cells":[{"metadata":{"_uuid":"ee7f3bb8425f1af4044f7709744a616f61b2375d","trusted":true,"_cell_guid":"15bee6ac-b86d-4485-b9b4-4cfc116c6aef"},"cell_type":"code","source":"# TITANIC PREDICTION - DNN\n\n#We are going to use the DNN to make our prediction\n\n#Loading libraries\nlibrary(ggplot2) # Data visualization\nlibrary(readr) # CSV file I/O, e.g. the read_csv function\nlibrary(plyr)\nlibrary(dplyr)\nlibrary(mice)\nlibrary(tibble)\nlibrary(RWeka)\nlibrary(neuralnet)\nlibrary(deepnet)\n\n#Function\nnormalize <- function(x) {  return((x - min(x)) / (max(x) - min(x)))}\n\n#Loading data\ntrain=read.csv(\"../input/train.csv\", header=TRUE)\ntrain=na.omit(train) # Deleting NA values from Train\ntest=read.csv(\"../input/test.csv\",header = TRUE)\ntest$Survived <- NA # Adding the column Survived to test data frame\ntitanic=rbind(train,test)\n","execution_count":1,"outputs":[]},{"metadata":{"_uuid":"8c4e5ebdf2ed97552fe24262cd9cfe3600c884c2","trusted":true,"_cell_guid":"6f18f8f5-f6ed-404e-bfdc-91ebd974c931"},"cell_type":"code","source":"#Review data\n\n#The best way to understand data is plotting some graphs, so let's do it:\n\nhead(train)\nggplot(train)+geom_bar(aes(Survived))+facet_wrap(~Sex)\nggplot(train)+geom_bar(aes(Survived))+facet_wrap(~Pclass)\nggplot(train)+geom_bar(aes(Survived))+facet_wrap(~Embarked)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"8e9550a700adee9562b593fe0a28a76c9c542c0f","trusted":true,"_cell_guid":"4998c61d-9ef7-4c58-9d5a-1fa4d7fa3460"},"cell_type":"code","source":"#So we are analyzing the data as it is, without edditing it (remember that we are checking only train dataset as we know if they survived or not)\n#As you may see in first graph, sex is an important factor. Majority of females survived. On the other hand, majority of males perished. \n#Reason is clear, so obviously, we will consider this variable when we perform our forecast.\n#On second graph we plot Survived vs No survived in function of class. There is also a tendency, majority of passangers of third class perished.\n#Probably it was more difficult to escape from bottom floors, so we'll included it.\n#Third graph, port where passanger embarked, we see it may exist a tendency, despite the fact that right now we don't see a logic. We will consider it and in case it is usefull or useless, model will tell us.\n#Right now, it is not comfortable to display the rest of variables (missing/complex data), process work is needed, so let's start with the hard work.","execution_count":null,"outputs":[]},{"metadata":{"_kg_hide-output":false,"_kg_hide-input":false,"_uuid":"c8a5df6e9cbd01da243822f2b643b0b92114ab42","_cell_guid":"04577cc0-e211-4cd4-ae1c-befb18d9cac0","_execution_state":"idle","trusted":true},"cell_type":"code","source":"#Once we got the data, it is time to prepare it for extract the maximum profit from it. It is necessary to process it to allow any AI to get \n# some decent result. \n\n#Editing data\n\n#We turn Survived into a factor to be able to use later the Rule Learner\ntitanic$Survived=as.factor(titanic$Survived) \n\n#We calculated the number of family members from Parch and SibSp variables\n#If you did not check it on data explanation, Parch is the number of parents / children and SibSp the number of Siblings and spouses \n\ntitanic$Family=titanic$SibSp+titanic$Parch+1 \n\n# Cabin variable gives us very specific information of passengers location, maybe, to much specific. Unfortunately is not completed for all passengers,\n# what makes everything more complicated. \n# To get a more general information, we are going to isolate only the Deck letter (and cross fingers for get significant data)\n\ntitanic$Deck=as.factor(substring(titanic$Cabin,1,1)) \n\n#Analyzing the Name field, we can appreciate all passengers have a title. This can be usefull to classify passengers.\n#We get a new column with the title\n\ntitanic$title=gsub(\"^.*, (.*?)\\\\..*$\", \"\\\\1\",titanic$Name)\n\n#There are many titles quite similar between them, so we're gonna to simplify them:\n\ntitanic$title[titanic$title == 'Mlle']='Miss'\ntitanic$title[titanic$title == 'Ms']          <- 'Miss'\ntitanic$title[titanic$title == 'Mme']         <- 'Mrs' \ntitanic$title[titanic$title == 'Lady']          <- 'Miss'\ntitanic$title[titanic$title == 'Dona']          <- 'Miss'\ntitanic$title[titanic$title == 'Capt']        <- 'Officer' \ntitanic$title[titanic$title =='Col']        <- 'Officer' \ntitanic$title[titanic$title == 'Major']   <- 'Officer'\ntitanic$title[titanic$title =='Dr']   <- 'Officer'\ntitanic$title[titanic$title == 'Rev']   <- 'Officer'\ntitanic$title[titanic$title == 'Don']   <- 'Officer'\ntitanic$title[titanic$title == 'Sir']   <- 'Officer'\ntitanic$title[titanic$title == 'the Countess']   <- 'Officer'\ntitanic$title[titanic$title == 'Jonkheer']   <- 'Officer'\n\ntitanic$title=as.factor(titanic$title)\n\n#Predicting missing ages\n#Unfortunately data misses age values. In this case, we cannot just delete rows, as it is mandatory to predict if they survived or not.\n#So here we are going to predict the age taking into consideration relevant values:\n\nset.seed(129)\nmice_mod <- mice(titanic[, !names(titanic) %in% c('PassengerId','Name','Ticket','Cabin','Family','Surname','Survived')], method='rf') \nmice_output <- complete(mice_mod)\ntitanic$Age <- mice_output$Age\n\n#Finally, we consider to add a new variable, Adult. We certainly know from movie the phrase \"Women and Children first\"\n#Our aim is to generate Adult variable to report us whether a passanger is adult or not,\n# in fact, specific age is not relevant for us here.\n\ntitanic$Adult[titanic$Age<18]=0\ntitanic$Adult[titanic$Age>17]=1\n\n#We are going to include a variable for repeated tickets (people who bought tickets together)\n\ntitanic <- ddply(titanic,.(Ticket),transform,Ticketsize=length(Ticket))\ntitanic$Ticketsize <- as.factor(titanic$Ticketsize)\ntitanic <- titanic[order(titanic$PassengerId),]\n\n","execution_count":2,"outputs":[]},{"metadata":{"_uuid":"2a45f7da8eb4de762f14815660ff90e3fd73c960","trusted":true,"_cell_guid":"34056ab4-5eda-468e-a9ed-6e30daa5b7c5"},"cell_type":"code","source":"#Transforming data into binary\n\n#We need to transform the data into binary to allow NN to generate a correct model. It is a very repetitive task, but quite simple:\n\ntitanicN=data.frame(titanic$PassengerId)\ntitanicN$Survived=titanic$Survived\ntitanicN$Survived=as.numeric(titanicN$Survived)-1\n\ntitanicN$Adult=titanic$Adult\n\ntitanicN$P1=0\ntitanicN$P1[titanic$Pclass==1]=1\ntitanicN$P2=0\ntitanicN$P2[titanic$Pclass==2]=1\ntitanicN$P3=0\ntitanicN$P3[titanic$Pclass==3]=1\n\ntitanicN$Sex=0\ntitanicN$Sex[titanic$Sex==\"male\"]=1\n\ntitanicN$DA=0\ntitanicN$DA[titanic$Deck==\"A\"]=1\ntitanicN$DB=0\ntitanicN$DB[titanic$Deck==\"B\"]=1\ntitanicN$DC=0\ntitanicN$DC[titanic$Deck==\"C\"]=1\ntitanicN$DD=0\ntitanicN$DD[titanic$Deck==\"D\"]=1\ntitanicN$DE=0\ntitanicN$DE[titanic$Deck==\"E\"]=1\ntitanicN$DF=0\ntitanicN$DF[titanic$Deck==\"F\"]=1\ntitanicN$DG=0\ntitanicN$DG[titanic$Deck==\"G\"]=1\ntitanicN$Dm=0\ntitanicN$Dm[titanic$Deck==\"m\"]=1\ntitanicN$DT=0\ntitanicN$DT[titanic$Deck==\"T\"]=1\ntitanicN$F1=0\ntitanicN$F1[titanic$Family==1]=1\ntitanicN$F2=0\ntitanicN$F2[titanic$Family==2]=1\ntitanicN$F3=0\ntitanicN$F3[titanic$Family==3]=1\ntitanicN$F4=0\ntitanicN$F4[titanic$Family==4]=1\ntitanicN$F5=0\ntitanicN$F5[titanic$Family==5]=1\n\ntitanicN$F7=0\ntitanicN$F7[titanic$Family>6]=1\n\ntitanicN$Miss=0\ntitanicN$Miss[titanic$title=='Miss']=1\ntitanicN$Mrs=0\ntitanicN$Mrs[titanic$title=='Mrs']=1\ntitanicN$Officer=0\ntitanicN$Officer[titanic$title=='Officer']=1\ntitanicN$Master=0\ntitanicN$Master[titanic$title=='Master']=1\ntitanicN$Mr=0\ntitanicN$Mr[titanic$title=='Mr']=1\n\ntitanicN$Q=0\ntitanicN$Q[titanic$Embarked=='Q']=1\ntitanicN$S=0\ntitanicN$S[titanic$Embarked=='S']=1\ntitanicN$C=0\ntitanicN$C[titanic$Embarked=='C']=1\n\ntitanicN$T0=0\ntitanicN$T0[titanic$Ticketsize=='0']=1\ntitanicN$T1=0\ntitanicN$T1[titanic$Ticketsize=='1']=1\ntitanicN$T2=0\ntitanicN$T2[titanic$Ticketsize=='2']=1\ntitanicN$T3=0\ntitanicN$T3[titanic$Ticketsize=='3']=1\ntitanicN$T4=0\ntitanicN$T4[titanic$Ticketsize=='4']=1\ntitanicN$T5=0\ntitanicN$T5[titanic$Ticketsize=='5']=1\ntitanicN$T6=0\ntitanicN$T6[titanic$Ticketsize=='6']=1\ntitanicN$T7=0\ntitanicN$T7[titanic$Ticketsize=='7']=1\ntitanicN$T8=0\ntitanicN$T8[titanic$Ticketsize=='8']=1\n\ntitanicN$Fare=(titanic$Fare)\ntitanicN[867,40]=15.03\ntitanicN$Fare=normalize(titanicN$Fare)\n\nhead(titanicN)\n\n#Dividing the data\n#Finally we split into train and test again, taking into consideration that we reduced the number of train values\ntitanic_train=titanicN[1:714,]\ntitanic_test=titanicN[715:1132,]\n","execution_count":3,"outputs":[]},{"metadata":{"scrolled":false,"_uuid":"279778d9bb629200a7ae1e746b5150df831484e3","trusted":true,"_cell_guid":"b06bde63-1781-49a0-b39a-211da0dabe23"},"cell_type":"code","source":"#DNN\n\nx=as.matrix(titanic_train[,3:40])\ny=titanic_train[,2]\ntitanic_DL=dbn.dnn.train(x,y, hidden=c(20,10),activationfun=\"tanh\",batchsize=128, numepochs=100, learningrate = 0.1)\nprediction=nn.predict(titanic_DL,titanic_test[,3:40])\nprediction","execution_count":5,"outputs":[]},{"metadata":{"_uuid":"ab5c57df71fc74dcf8c013876652d996358bd148","trusted":true,"_cell_guid":"5629cadb-c044-46ec-963e-26979b81d271"},"cell_type":"code","source":"#Writting results\n\nresults=data.frame(titanic_test$titanic.PassengerId)\nresults$Survived=prediction\nresults$Survived=normalize(results$Survived)\nresults$Survived=round(results$Survived, digits=0)\ncolnames(results)=c(\"PassengerID\",\"Survived\")\nwrite.csv(results, file=\"results.csv\",row.names=FALSE)\n\nresults","execution_count":6,"outputs":[]}],"metadata":{"kernelspec":{"display_name":"R","language":"R","name":"ir"},"language_info":{"mimetype":"text/x-r-source","name":"R","pygments_lexer":"r","version":"3.4.2","file_extension":".r","codemirror_mode":"r"}},"nbformat":4,"nbformat_minor":1}