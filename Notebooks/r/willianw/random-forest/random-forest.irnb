{"cells":[{"metadata":{"_kg_hide-output":false,"_uuid":"34000b1a7df30c746c4564561d2b3eccca7fc591","_execution_state":"idle","trusted":true,"_cell_guid":"8430dd62-060e-47f6-877d-f6bbb77f1479"},"cell_type":"code","source":"# This R environment comes with all of CRAN preinstalled, as well as many other helpful packages\n# The environment is defined by the kaggle/rstats docker image: https://github.com/kaggle/docker-rstats\n# For example, here's several helpful packages to load in \n\nlibrary(ggplot2) # Data visualization\nlibrary(readr) # CSV file I/O, e.g. the read_csv function\nlibrary (ROCR)\nlibrary(rpart)\nlibrary(Hmisc)\nlibrary(randomForest)\nlibrary(gam)\nlibrary(zoo)\nlibrary(caret)\n\n# Input data files are available in the \"../input/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nts = read.csv(\"../input/train.csv\")\nvd = read.csv(\"../input/test.csv\")\nvd$Survived <- NA\nds <- rbind(ts, vd)\n","execution_count":6,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"c787bddbbb23e1e04c37f32d72e5fdd0028501ba"},"cell_type":"code","source":"summary(ds$Age)\n#head(ds)","execution_count":16,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"2ac9d5010d4aa840aefbc571002daf95dbe48454"},"cell_type":"code","source":"ds$PassengerId <- as.factor(ds$PassengerId)\nds$Survived <- as.factor(ds$Survived)\nds$Pclass <- as.factor(ds$Pclass)\nds$Sex <- as.factor(ds$Sex)\nds$SibSp <- as.numeric(ds$SibSp)\nds$Parch <- as.numeric(ds$Parch)\nds$Ticket <- as.factor(ds$Ticket)\nds$Fare <- as.numeric(impute(ds$Fare, median))\nds$Embarked <- as.factor(ds$Embarked)","execution_count":10,"outputs":[]},{"metadata":{"_uuid":"1ef84a9f4927aef486f29936f64c2a619e5cfd12","_cell_guid":"ed7ceca5-597d-4405-af98-5e7a6e43727d"},"cell_type":"markdown","source":"# Feature Engineering"},{"metadata":{"_uuid":"7be808317a06ba9e48842e9aefd1c760486a9b8d","trusted":true,"_cell_guid":"bf54865e-0545-4932-b0d6-ba51da63db8c"},"cell_type":"code","source":"ds$Name <- as.character(ds$Name)\nds$Family <- sapply(ds$Name, FUN=function(x) {strsplit(x, split='[,.]')[[1]][1]})\nds$Title <- sapply(ds$Name, FUN=function(x) {strsplit(x, split='[,.]')[[1]][2]})\nds <- within(ds, rm(\"Name\"))\nds$Title <- sub(' ', '', ds$Title)\nds$Title[ds$Title %in% c('Mme', 'Mlle', 'Ms')] <- 'Mlle'\nds$Title[ds$Title %in% c('Capt', 'Don', 'Sir')] <- 'Sir'\nds$Title[ds$Title %in% c('Col', 'Major', 'Master')] <- 'Master'\nds$Title[ds$Title %in% c('Lady', 'the Countess')] <- 'Lady'\nds$Title <- factor(ds$Title)","execution_count":11,"outputs":[]},{"metadata":{"_uuid":"156aea731e8fd70c315d862f877875240d03ccdc","trusted":true,"_cell_guid":"09b6ecb6-f9b0-4ec0-84d1-fef0dba24b7c"},"cell_type":"code","source":"ds$Cabin <- sapply(ds$Cabin, FUN=function(x) {substring(x, 1, 1)})\nds$Cabin[ds$Cabin %in% (\"\")] <- NA\nds$Cabin <- as.factor(impute(ds$Cabin))\nds$FamilySize <- ds$SibSp + ds$Parch + 1\nds$Recipe <- ds$Fare * ds$FamilySize","execution_count":13,"outputs":[]},{"metadata":{"_uuid":"3d61a9c7a3d36d5e03e0f43980e7029d8d91652b","trusted":true,"_cell_guid":"39a0093d-9511-4611-825a-34f805e3ab95"},"cell_type":"code","source":"#age <- rpart(Age ~ Pclass + Parch + Title + FamilySize,\n#                    data = ds[ds$Age != 'numeric',],\n#                    na.action=na.roughfix,\n#                    method=\"anova\")\n\ntr <- trainControl(method = \"cv\", number = 10)\nage <- train(Age ~ Pclass + Parch + Title + FamilySize,\n      data=ds[!is.na(ds$Age),],\n      method=\"cforest\",\n      trControl= tr)\n\nchanged = is.na(ds$Age)\nds$Age[which(changed)] <- predict(age, ds[changed,])\nds$Age <- as.numeric(impute(ds$Age), median)","execution_count":20,"outputs":[]},{"metadata":{"_uuid":"e54a259198dcacff24f216ae9cc59be85f672505","trusted":false,"_cell_guid":"1ffae878-7154-454d-92eb-38aa23303ca8"},"cell_type":"code","source":"#predict(age, ds[ds$Age == 'numeric',])\n#hist(ds$Age[changed],)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"d624fccd3b7550cbf769b8ffc4def43ff5127381","_cell_guid":"dbd4593f-0c46-4bfb-b2e4-a39440684318"},"cell_type":"markdown","source":"# Training"},{"metadata":{"scrolled":false,"_uuid":"6c4a5afaa6112e802a9932586ad07d4ccc2817e0","trusted":true,"_cell_guid":"38fcad9e-6457-4929-9d0f-39aa664a5b03"},"cell_type":"code","source":"ts <- ds[1:891,]\nvd <- ds[892:1309,]\n\n#fit <- randomForest(as.factor(Survived) ~ Pclass + Sex + Age + Fare + Title + FamilySize + Recipe,\n#                    data=ts,\n#                    na.action = na.roughfix,\n#                    importance=TRUE,\n#                    ntree=1000)","execution_count":21,"outputs":[]},{"metadata":{"_uuid":"2672e4442d16603ad2703fe9affaeb99c297e1ac","trusted":true,"_cell_guid":"c9d92642-5e3f-4630-a8b5-4b17a73ddca4"},"cell_type":"code","source":"tr <- trainControl(method = \"cv\", number = 5)\nfit <- train(as.factor(Survived) ~ Pclass + Sex + Age + Fare + Title + FamilySize + Recipe,\n      data=ts,\n      method=\"rf\",\n      trControl= tr)","execution_count":24,"outputs":[]},{"metadata":{"_uuid":"5fa6a92e7afb8b737d4764067cbf915498f6b976","_cell_guid":"746577b5-e511-4cfe-b66c-06ed9b35b46d"},"cell_type":"markdown","source":"# Metrics"},{"metadata":{"_uuid":"e821151ecf6e589815c1b2fec6d656d777b9a30f","trusted":true,"_cell_guid":"92b0ebba-63e1-475f-bdf4-6dc1a22831d6"},"cell_type":"code","source":"plot(fit)\n#legend('top', colnames(fit$err.rate), fill=1:3)","execution_count":25,"outputs":[]},{"metadata":{"_uuid":"2c2467744ab1858c691e6b7380874d3704e289e7","trusted":true,"_cell_guid":"2921ac5f-1b7d-473f-b42d-2738ca2074b2"},"cell_type":"code","source":"#importance(fit)\n#varImpPlot(fit)","execution_count":26,"outputs":[]},{"metadata":{"_uuid":"aee287090e0528f25bc3f1f7c7d49c7a6ba0922d","trusted":true,"_cell_guid":"a7930df5-f192-492c-9537-984471a1ab33"},"cell_type":"code","source":"r <- vd[,c(\"PassengerId\", \"Survived\")]\n#r$Survived <- sapply(predict(fit, vd), FUN=function(x) ifelse(x > 0.5, 1, 0)) \nr$Survived <- predict(fit, vd)\nwrite.csv(r, file=\"submit.csv\", row.names=FALSE)","execution_count":27,"outputs":[]},{"metadata":{"_uuid":"2314fad11aa6168fd57fb4401421dfcbb4193b1b","trusted":true,"_cell_guid":"ea5df00b-49b0-4191-a0c7-dfc8b53deccf"},"cell_type":"code","source":"#summary(as.factor(ds$Family))\n#barplot(table(ts$Survived, ts$Family)[1:50], col=rainbow(2))\n#aggregate(as.numeric(ds$Survived), by=list(ds$Title), FUN= function(x) c(c1 = mean(x-1, na.rm=TRUE))\n#table(ds$Title, ds$Survived)","execution_count":28,"outputs":[]},{"metadata":{"_uuid":"8891062c54fa395c1714572029889d3a02f11c54","trusted":true,"_cell_guid":"d6d3902f-3781-4d6c-8dae-ebb6614abad3"},"cell_type":"code","source":"#aggregate(as.numeric(ds$Fare), by=list(ds$Family), FUN=function(x){meanr=mean(x, na.rm=TRUE)})","execution_count":29,"outputs":[]},{"metadata":{"_uuid":"052b6add08c44e0244714e162732e494777849b1","trusted":true,"_cell_guid":"e3e766f2-5ac5-4b16-8b25-397ece18fa98"},"cell_type":"code","source":"#summary(r)","execution_count":31,"outputs":[]}],"metadata":{"kernelspec":{"display_name":"R","language":"R","name":"ir"},"language_info":{"mimetype":"text/x-r-source","name":"R","pygments_lexer":"r","version":"3.4.2","file_extension":".r","codemirror_mode":"r"}},"nbformat":4,"nbformat_minor":1}