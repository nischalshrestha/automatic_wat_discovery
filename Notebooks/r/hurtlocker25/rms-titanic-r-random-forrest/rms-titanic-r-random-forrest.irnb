{"cells": [{"execution_count": null, "cell_type": "markdown", "outputs": [], "source": "", "metadata": {"_execution_state": "idle", "_uuid": "3c95d762f1959f898d52ec553e93a1f46a644c84", "collapsed": false}}, {"execution_count": null, "cell_type": "code", "outputs": [], "source": "# load packages for visualization \nlibrary('ggplot2')\n#install.packages('ggthemes')\nlibrary('ggthemes')\nlibrary('scales')\nlibrary('dplyr')\n#install.packages(\"mice\")\nlibrary('mice')\nlibrary('randomForest')\n\n# load classifier package \ninstall.packages(\"randomForest\")\n\n## LOADING THE DATA ### \n\ntrain <- read.csv(\"train.csv\")\ntest <- read.csv(\"test.csv\")\n\n                ## DATA PREPROCESSING ##\n                        ###########\nbindata <- bind_rows(train, test)\nstr(bindata)\n                ## Analyzing the names ## \n\nbindata$Title <- gsub('(.*,)|(\\\\..*)','', bindata$Name)\n#table(bindata$Sex, bindata$Title\n\n' Some of the titles are very less frequent than the others'\n        'combine them in a single vector'\n\nrare_title <- c('Dona', 'Lady', 'the Countess',\n                          'Capt', 'Col', 'Don', \n                          'Dr', 'Major', 'Rev', 'Sir', 'Jonkheer')\n\n        #note: MLLE - MISS ( French equivalent)\n         #       MME - Mrs. (French)\n          #      MS - MISS(Other abbreviation)\nbindata$Title[bindata$Title== 'Mlle'] <- 'Miss'\ntable(bindata$Sex, bindata$Title)\n\n        #### Pulling in the surnames \nbindata$Surname <- sapply(bindata$Name, function(x)\n                        strsplit(x, split='[,.]')[[1]][[1]])\n\nunique_surname <- nlevels(factor(bindata$Surname))\n# at this point we have 875 unique surnames\n\n        ########### ANALYZING FAMILIES ########\n  # to get family size, parch + sibsp \nbindata$famsize <- bindata$SibSp + bindata$Parch\n\nbindata$family <- paste(bindata$Surname, bindata$famsize, sep = ' ')\n\n        # use ggplot2 to visualize relations between fami size and survival\nggplot(bindata[1:891, ], aes(x= famsize, fill=factor(Survived)))+\n        geom_bar(state='count', position='dodge')+\n        scale_x_continuous(breaks=c(1:11)) +\n        labs(x='Fam size')+\n        theme_few()\n# OBS: Solo people and large families had a less survival \n\n        ##### ANALYZING THE DECK ##### \n\nbindata$Cabin   # we can see that Cabin has a lot of missing data \n\n                first character is the number of the Deck actually \nstrsplit(bindata$Cabin[2], NULL)[[1]] # \"C\" \"8\" \"5\"\n        # C is the deck number \nbindata$Cabin[10]  # is empty\n                # we create a deck variable to store decks for all passengers\nbindata$Deck <- factor(sapply(bindata$Cabin, function(x) strsplit(x, NULL)[[1]][1]))\n\nbindata$Embarked[62] # empty \nbindata$Pclass[830]   \n                ## nothing is missing \n                # use GGPLOT2 to visualize embarkemtn and PClass and median fare\nggplot(bindata, aes(x=Embarked, y=Fare, fill=factor(Pclass)))+\n        geom_boxplot()+\n        geom_hline(aes(yintercept=90),\n                   colour='red', linetype='dashed', lwd=2)+\n        scale_y_continuous(labels=dollar_format())+\n        theme_few()\n        \n        #obs: median fare for a first class passenger departing from\n        # charbourg coincides with $80 paid by embarkment deficit passengers\n        # thus, we can replace the missing values for embarkment with C\nbindata$Embarked[c(62, 830)]<- 'C'\n\n                # ANALYZING FARE \nis.na(bindata$Fare)\n# passenger sitting at row 1044 has fare value NA\nbindata[1044,] \n        # pclass = 3\n        # Embarked = 'S'   Southampton\nggplot(bindata[bindata$Pclass=='3'& bindata$Embarked=='S',],\n       aes(x=Fare))+\n        geom_density(fill='#98d6ff')+\n        geom_vline(aes(xintercept=median(Fare,na.rm=T)),\n                   colour='red', linetype='dashed',lwd=1)+\n        scale_x_continuous(labels=dollar_format())+\n        theme_few()\nmyclass <- bindata[bindata$Pclass=='3'& bindata$Embarked=='S',]\nmedian_fare <-median(myclass$Fare,na.rm=T)\n\n        # thus median fare for pclass 3 and embarked S is 8.05\n        # can replace missing fare values with 8.05 \n\n# thus, \nbindata$Fare[1044]<-median_fare\n                \n        ## Analyzing fare concludes ### \n\n#### ## # # MAKING PREDICTIVE INROADS ####### \nis.na(bindata$Age)\n        # Age has several NULL values within it. \nsum(is.na(bindata$Age))\n                # using mice imputattion\n\nfactors_used<-c('PassengerId','Pclass','Sex','Embarked',\n                'Title','family')\nbindata[factors_used]<-lapply(bindata[factors_used], function(x) as.factor(x))\nset.seed(20)\n\n#performing mice imputation filtering out the non-usefull daata\n\nmice_impute<-mice(bindata[,!names(bindata) %in% c('PassengerId', 'Name', 'Ticket',\n                                                  'Cabin', 'Family', 'Surname',\n                                                  'Survived')], method='rf')\n\nmice_output <- complete(mice_impute)\n        #compare the actual and predicted values of age \npar(mfrow=c(1,2))\nhist(bindata$Age, freq=F, col='darkblue', ylim=c(0, 0.04), main='Actual age values')\n\nhist(mice_output$Age, freq=F, main='Mice output', \n     col='lightblue', ylim=c(0,0.04))\n\n        ## not any striking differences \n        # replace age vector with mice output \nbindata$Age<- mice_output$Age\nsum(is.na(bindata$Age)) # 0 \n        # NO MISSING VALUES IN AGE NOW \n\n                ### feature engineering ROUND 2 \n\n## create child and mother \nggplot(bindata[1:891,], aes(Age, fill=factor(Survived)))+\n        geom_histogram()+\n        facet_grid(.~Sex)+\n        theme_few()\n                # create children \nbindata$Child[bindata$Age<18]<-'Child'\nbindata$Child[bindata$Age>=18]<-'Adult'\n\ntable(bindata$Child, bindata$Survived)\n                # create mothers \n\nbindata$Mother <- 'Not Mother'\nbindata$Mother[bindata$Sex=='female'& bindata$Parch>0 &\n                       bindata$Age >  18 & bindata$Title!='Miss']<-'Mother'\n\ntable(bindata$Mother, bindata$Survived)\n\n        # factorize both child and mother\nbindata$Child <- factor(bindata$Child)\nbindata$Mother <- factor(bindata$Mother)\n\nmd.pattern(bindata)\n\n                ##### PREDICTION ##### \n# step 1: split back to train test\ntrain<- bindata[1:891,]\ntest <- bindata[892:1309,]\nsum(is.na(train))\n\n#step 2: build the model; no point in using all variables\nset.seed(120)\nmodel <- randomForest(factor(Survived)~Pclass+Sex+\n        Age+SibSp+Parch+Fare+Embarked+Title+Child+Mother\n        , data=train)\n\n# calc. model error rate\nerror_rate <- model$err.rate\nplot(model, ylim=c(0, 0.36))\n\nlegend('topright',colnames(error_rate), col=1:3, fill = 1:3)\n\n## Importance of variables \nimportance <- importance(model)\n\n        # FINAL PREDICTION ON TEST FILE\npredict_final <- predict(model, test)\n\nresult <- data.frame(PassengerID = test$PassengerId, Survived = predict_final)\n\nwrite.csv(result, file='model_prediction.csv', row.names= F)\n", "metadata": {"trusted": false, "_execution_state": "idle", "_uuid": "6d0fb2b6fdc0d03071bc54f4ab5061a2d10c9dc6", "_cell_guid": "44278adf-e2fe-47c9-a982-d0348d235fe5"}}], "nbformat": 4, "metadata": {"language_info": {"version": "3.4.0", "pygments_lexer": "r", "mimetype": "text/x-r-source", "codemirror_mode": "r", "name": "R", "file_extension": ".r"}, "kernelspec": {"display_name": "R", "name": "ir", "language": "R"}}, "nbformat_minor": 0}