{"cells":[{"metadata":{"_cell_guid":"619dad96-5319-443c-8be9-dfa8cbe9e199","_uuid":"58dbb290204efe462610c7dc20b6f44932ed2f8f","_execution_state":"idle"},"cell_type":"markdown","source":"## Who Survived the Titanic?\n\n\n## Table of contents:\n1. [Load Libraries and Read Data](#Load-Libraries-and-Read-Data)\n2. [Explore the Data](#Explore-the-Data)\n    * [Data Visualization](#Data-Visualization) \n    * [Check for Missing Values](#Check-for-Missing-Values) \n    * [Check for Correlation](#Check-for-Correlation) \n    * [Check for Duplication](#Check-for-Duplication) \n3. [Data Processing](#Data-Processing)\n    * [Handling the Missing Values](#Handling-the-Missing-Values)\n        * [Imputing the Age Variable using mice](#Imputing-the-Age-Variable-using-mice)\n    * [Feature Engineering](#Feature=Engineering)\n    * [Adult Vs Children](#Adults-vs-Children)\n    * [Convert Categorical to Numeric](#Convert-Categorical-to-Numeric)\n4. [Regression Analysis](#Regression-Analysis)\n   * [First Model with All Numeric Variables](#First-Model-with-All-Numeric-Variables)"},{"metadata":{"_cell_guid":"120dca82-8f00-4621-8cb0-3d127c2077ef","_uuid":"b35a6b4b48beeb01dfb662a93c643377e65c84a1"},"cell_type":"markdown","source":"# Load Libraries and Read Data"},{"metadata":{"_kg_hide-output":true,"_cell_guid":"75598a85-ea20-423f-88f8-894e332afd49","_uuid":"6f6d065d75a7b7a3e2d37745d2a7502ccb2d5a8b","trusted":true},"cell_type":"code","source":"library(tidyverse)\nlibrary(plyr)\nlibrary(dplyr)\nlibrary(gridExtra) #for plotting\nlibrary(Amelia) #for missing values\nlibrary(corrplot) #for correlation\nlibrary(mice) #for missing values\nlibrary(naniar) #For missing values plot\nlibrary(boot) #For diognastic plots\nlibrary(car) # for avplots\nlibrary(caret)","execution_count":null,"outputs":[]},{"metadata":{"scrolled":false,"_kg_hide-output":true,"_cell_guid":"0a7b6e09-8913-4071-8ce1-5ade7c5fdef0","_uuid":"b58b569794dadd0ba5dd8594d8b8a3908468e9b8","trusted":true},"cell_type":"code","source":"set.seed(10)\ntrain=read_csv(\"../input/train.csv\")\ntest=read_csv(\"../input/test.csv\")","execution_count":null,"outputs":[]},{"metadata":{"_cell_guid":"be18b2c7-1aaa-4a65-92cf-2be6e1ef8e7c","_uuid":"324245bd60bcf23d2a0720ffbacc3a4ca2d4a0b6"},"cell_type":"markdown","source":"# Explore the Data"},{"metadata":{"_cell_guid":"cd54d457-7edd-4aea-8e6a-30a1a99b2d97","_uuid":"7357c0e73969510538193987dd896998f3f1bf87","trusted":true},"cell_type":"code","source":"str(train)","execution_count":null,"outputs":[]},{"metadata":{"_cell_guid":"670dbd63-2fde-4a48-9081-8f2973d935b6","_uuid":"ff4835bfb53b647b2681bedce4706e5c3724f5d7","trusted":true},"cell_type":"code","source":"str(test)","execution_count":null,"outputs":[]},{"metadata":{"_cell_guid":"9e04e7fb-2084-4a20-98e1-6b07d8deeb23","_uuid":"8c20cc1f4c5ed140fc55c8ecb43e6a8152414336"},"cell_type":"markdown","source":"From observing both data frames we can see that test does not have the Survived column (since it's what we plan to predict). Llet's combine them so that we can work on them at the same time.  "},{"metadata":{"_cell_guid":"5cdb93d7-20d6-469d-8f0a-6ed6feca6da0","_uuid":"b0496f75fc2399f7fb55373540098acbe743236a","trusted":true},"cell_type":"code","source":"test$Survived=NA\ndata=rbind(train, test)\nstr(data)","execution_count":null,"outputs":[]},{"metadata":{"_cell_guid":"990af5d2-3485-452d-8c64-6d6d6b288c52","_uuid":"a0959457cc6022312c72b6e1dc8a9d3f40c5c538"},"cell_type":"markdown","source":"## Data Visualization \nLet's look at the data in a couple of plots."},{"metadata":{"_cell_guid":"6d950592-6546-4f31-bdf2-8a0e76abcf27","_uuid":"50629c6f437ccb6a3d33f8265a107c85f6a6de6c","trusted":true},"cell_type":"code","source":"ggplot(data [!is.na(data$Age),], aes(x=Age, fill= Sex)) +\n    geom_histogram(position=\"dodge\", bins=25) ","execution_count":null,"outputs":[]},{"metadata":{"scrolled":true,"_cell_guid":"c01f5308-afa5-4c98-b7d5-74ec55dbef0c","_uuid":"d6dd28f33916b9fb858c4c095772a7b48c9f1b71","trusted":true},"cell_type":"code","source":"pt1= ggplot(data, aes(x=Embarked, fill= Sex)) +\n    geom_bar(position=\"dodge\")+\n    geom_text(stat='count', aes(label=..count..), vjust=-0, color=\"black\", size=2)\npt2= ggplot(data, aes(x=Pclass, fill= Sex)) +\n    geom_bar(position=\"dodge\")+\n    geom_text(stat='count', aes(label=..count..), vjust=0.5, color=\"black\", size=2)\npt3= ggplot(data, aes(x=SibSp, fill= Sex)) +\n    geom_bar(position=\"dodge\")+\n    geom_text(stat='count', aes(label=..count..), vjust=0.5, color=\"black\", size=2)\npt4= ggplot(data[!is.na(data$Survived),], aes(x=Survived, fill= Sex)) +\n    geom_bar(position=\"dodge\")+\n    geom_text(stat='count', aes(label=..count..), vjust=0.5, color=\"black\", size=2)\npt5=ggplot(data, aes(x=Parch, fill= Sex)) +\n    geom_bar(position=\"dodge\")+\n    geom_text(stat='count', aes(label=..count..), vjust=0.5, color=\"black\", size=2)\npt6=ggplot(data, aes(x=Sex)) +\n    geom_bar(color=\"skyblue\", fill=\"skyblue\")+\n    geom_text(stat='count', aes(label=..count..), vjust=1.5, color=\"black\", size=3)\ngrid.arrange(pt1,pt2,pt3,pt4,pt5,pt6, nrow=3)","execution_count":null,"outputs":[]},{"metadata":{"_cell_guid":"5662e251-8be2-48cf-af64-bd5ff210c5af","_uuid":"3c0108222a7b137cef62fcd47249753a7c08d052"},"cell_type":"markdown","source":"## Check for Missing Values"},{"metadata":{"_cell_guid":"3e78469e-d342-4227-ba7a-c228e10330d2","_kg_hide-input":false,"_uuid":"d23b7d0700e59b90a4ce517aeeda98e272333d9a","trusted":true},"cell_type":"code","source":"gg_miss_var(data)","execution_count":null,"outputs":[]},{"metadata":{"_cell_guid":"8bd4b22b-cab6-4f65-985c-06b734bf0ec0","_uuid":"de293fe0d68e1fca49c7927b523fe9d0c74f6864","trusted":true},"cell_type":"code","source":"#to check where these missing values are located in the dataset\nmissmap(data[-1], col=c('grey', 'Maroon'), y.cex=0.5, x.cex=1) ","execution_count":null,"outputs":[]},{"metadata":{"_cell_guid":"08e58733-c0a9-4150-bd57-d536a71efc33","_uuid":"ff786aac65bb848cef6cfa6eff931de4f1a889c2","trusted":true},"cell_type":"code","source":"sort(sapply(data, function (x) sum(is.na(x))), decreasing=T)","execution_count":null,"outputs":[]},{"metadata":{"_cell_guid":"c0eebe5f-5b9f-4cad-a7f8-8df88bb79504","_uuid":"d4ab6b27822cddc331b5edcea91d082f312d8372"},"cell_type":"markdown","source":"## Check for Correlation"},{"metadata":{"_cell_guid":"a538face-3f70-43e9-96ba-c322da267633","_uuid":"4fbf3f82d2d1e724f15f26dc7f45e19875043109","trusted":true},"cell_type":"code","source":"data %>%\n    select_if(is.numeric) %>% # get only the numeric columns\n    replace(is.na(.), 0) %>% # replace all na values with 0\n    cor() %>% # calculate the correlations\n    corrplot() # plot the correlations","execution_count":null,"outputs":[]},{"metadata":{"_cell_guid":"e463fce6-e2ce-4bd7-904f-3aedcaebb5b4","_uuid":"16c75d41d87d43a442eceb183160efa5778a9f95"},"cell_type":"markdown","source":"We don't see strong correlations among the numeric values. The negative correlations seem to be stronger than the positive ones. For example, the negative correlations betwen Fare and Pclass mean that when one increases the other decreases which in this case makes sense since Pclass 1 has a higher Fare than Pclass 2. So the higher the Pclass number, the lower the Fare."},{"metadata":{"_cell_guid":"b70d04c8-e0b7-4d79-83aa-565f2613b103","_uuid":"134a01f537201cedb705f0fb1df6c341bd44b19a"},"cell_type":"markdown","source":"## Check for Duplication"},{"metadata":{"_cell_guid":"c4793b7e-6cac-42c1-9d9e-fc46a1def6a1","_uuid":"33da58985dbfc7766fcf1f47887077e1443c8d0e","trusted":true},"cell_type":"code","source":"#Check if we have duplicated rows\nduplication <- data_frame(duplicated = duplicated(data), row = 1:nrow(data)) %>%\n    filter(duplicated == T)\n\nprint(\"The number of duplicated rows in this data set is: \")\nduplicated(data) %>%\n    sum()","execution_count":null,"outputs":[]},{"metadata":{"_cell_guid":"8a1d8a69-b154-48e0-9229-77dda77dde0f","_uuid":"e2b8d78f122793488902a4f5e0205509cdbe3ee3"},"cell_type":"markdown","source":"From the above plots, we can observe the following:\n\n1. There are more male 64% than female 36%.\n2. The ages of the passengers is concentrated around 20 - 30 years old.\n3. A majority of the passengers embarked from \"S\" Southampton while a less and equal number of male and female passengers embarked from \"Q\" Queenstown.\n4. The majority of the passengers 54% are in Class 3 where 70% of them are male.\n5.  The majority of people are travelling alone with no spouses, siblings, parents or children.\n6. The majority of those who have siblings or spouses are travelling with only 1 sibling/spouse. \n7. The majority of those who have parents or chidren are travelling with 1 or 2 parent/child.\n8. 62% of the passengers did not survive and from that 85% were male.\n9. Most values of the Cabin feature is missing.\n10. We can impute the missing values for Age, Embarked and Fare. (Survived missing values are from the test set and will not be imputed).\n11. No strong correlations among the variables.\n12. There are no duplicated rows."},{"metadata":{"_kg_hide-output":false,"_cell_guid":"54a02c81-8ac4-4f18-af1f-673bec03ae87","_uuid":"b65846354b34bf6e6492df6e24e72168d8cc6e32"},"cell_type":"markdown","source":"# Data Processing\n\nLet's start preparing the data for analysis by handling the NA values, creating new columns and removing or using some of the ones that are not useful for the analysis. \n\n1. Remove or impute the NA values.\n2. Create a new column called Title where I will extract the title from the person's name. \n3.  Determine the variables that will take part of the analysis (some might not have any effect on the survival like Passenger ID).\n4. Determine if a Person has family or not (travelling alone). Add a new variable for SoloPass.\n5. Determine the family size (spouse, parents, childen and siblings) and if it has an effect on the survival.\n6. Create a new variable called FamilyName that stores the passenger's last name. \n7. Too many missing values from the Cabin variable so I will either drop it from the analysis (almost all observations don't have a Cabin assigned) and/or try to use it to find families staying int he same cabin/deck (since it cnsists of deck letter and room number). \n8. Convert the categorical features (Embarked, Sex) to numerical.\n\nBased on this data, who is more likely to survive in the family? A spouse? A child? And which class, or from where they embarked or where they bought their ticket from?\n\nI want to find how many families there are from their last names and their Parch and SibSp variables. And how many survived from that family."},{"metadata":{"_cell_guid":"7430cef7-f433-4a90-b59a-68354caeac4d","_uuid":"ac8b9a50391719ce555e9696ad8e5bacafa349ad"},"cell_type":"markdown","source":"## Handling the Missing Values\n\nI believe the reason these variables have missing values is because the information was not recorded at the time. So we can assume they are missing at random and not because they should not exist (everyone should have an Age). \n\nWe will work on the missing values for the columns Age, Fare, and Embarked (Cabin will later be used to find other information and/or dropped from the dataset). We'll start off with Fare and Embarked."},{"metadata":{"_cell_guid":"9cc32c54-8905-45f0-8936-6bc3b12a04c5","_uuid":"9f19ca0ce91a0df52093f4fcd3764b80577d29dc","trusted":true},"cell_type":"code","source":"which(is.na(data$Fare)) #to find the row number","execution_count":null,"outputs":[]},{"metadata":{"_cell_guid":"93505544-b15f-4733-b260-44bd90f171a6","_uuid":"b36d1d1b86e3ef0ff85f381de088ae9c3cef4dc3","trusted":true},"cell_type":"code","source":"data[1044,]","execution_count":null,"outputs":[]},{"metadata":{"_cell_guid":"06cd880f-151f-482b-95f4-8fadec4a29db","_uuid":"ef0c17f86ee3e7e85b8e013cbe88f0205502a15e"},"cell_type":"markdown","source":"It seems the only information I can use to find the Fare value is the PClass and Embarked, let's see the average Fare for passengers in Pclass=3 and Embarked=S and use it for this passenger's Fare value."},{"metadata":{"_cell_guid":"fe2b9c9d-b0c0-416b-89dd-ad88bc529b3d","_uuid":"fcd6c3826bd17716697060297aa94bd8a4274836","trusted":true},"cell_type":"code","source":"d=subset(data, !is.na(data$Fare))\nmean(d$Fare[d$Pclass==\"3\" & d$Embarked==\"S\"])","execution_count":null,"outputs":[]},{"metadata":{"_cell_guid":"745a83c1-0b8a-4efa-895f-77e322eb1b25","_uuid":"72acb95088e997e5972a13990195f6f3450ccac3","trusted":true},"cell_type":"code","source":"data$Fare[1044]=14.44","execution_count":null,"outputs":[]},{"metadata":{"_cell_guid":"52081a63-526d-4dc9-8b19-bc22a4c5a256","_uuid":"d6cee0f42f07ef914d296f6d1b930b048bf3b0c3","trusted":true},"cell_type":"code","source":"table(data$Embarked)\nwhich(is.na(data$Embarked))","execution_count":null,"outputs":[]},{"metadata":{"_cell_guid":"6387b9b6-5349-4190-85c6-8105c08f2ffc","_uuid":"1f72c99c99a64d03746e17b318e901a96e6188f2","trusted":true},"cell_type":"code","source":"data[62,]\ndata[830,]","execution_count":null,"outputs":[]},{"metadata":{"_cell_guid":"30d70bc9-a82f-416d-a078-be830833ef9e","_uuid":"be353cc7b23ccb3711c66ed6127a639f29f15e37"},"cell_type":"markdown","source":"We have two missing values for the Embarked column. It seems that both of them have a Fare of 80, they don't seem related in any way and they share the same cabin number B38, same ticket number (which is odd), survived and are of first class but from where did they embark. \n\nThe best way to replace those missing values is to use the replace them with the Embarked value of S which is the majority. "},{"metadata":{"_cell_guid":"97ac6a56-efd9-475f-8931-6050261cf7f8","_uuid":"b12abea56d6a6ebf2e6ca18e8381ea4d87be2b1e","trusted":true},"cell_type":"code","source":"data$Embarked[c(62,830)]= \"S\"","execution_count":null,"outputs":[]},{"metadata":{"_cell_guid":"47fdbefc-e03f-43f9-bf2f-d25b9d08fe97","_uuid":"11cb2702c3e2e5f6b4173580b15c35a8fd87666d"},"cell_type":"markdown","source":"### Imputing the Age Variable using mice"},{"metadata":{"_cell_guid":"ff4831e5-63e0-4abe-b974-0e6eb05ce074","_uuid":"6bb8dbdebc6e035c0cb8bf5154ddf2eb010fae13"},"cell_type":"markdown","source":"For the missing values of the Age variable, I'll use the mice function to impute their values. Let's take a look at the summary then start the imputation."},{"metadata":{"_kg_hide-output":true,"_cell_guid":"f77ebb58-1e28-49db-8994-fa475ef676bf","_uuid":"891b8f0599a2ec7770d0305116225e2a39847653","trusted":true},"cell_type":"code","source":"empty <- mice(data, maxit=0) #create an empty model to take the parameters from \nmethod <- empty$method\npredictorMatrix <- empty$predictorMatrix\n\nimdata <- mice(data, method, predictorMatrix, m=5) # create multiple imputations\nimdata <- complete(imdata) #select one of them","execution_count":null,"outputs":[]},{"metadata":{"_cell_guid":"39566d58-5e5c-4847-8964-75053a697cdc","_uuid":"3c594f310aa6ef88d535aad86dad4e3cf0c1a136"},"cell_type":"markdown","source":"Even though the mice function imputed the missing values for Cabin and Survived as well, I will not use those in the new data set (since they have more missing values than Age, they were not imputed first and hence, did not effect the imputed values of Age). Let's replace the Age missing values in the original data set with the imputed ones.\n"},{"metadata":{"_cell_guid":"9e798f7a-6fe5-4e11-85cc-d8ec6e83393d","_uuid":"846dedb1102d381603de6854e0cbf15a13b65d7b","trusted":true},"cell_type":"code","source":"newdata=data #create a new data set to keep the old one in case I need it later\nnewdata$Age=imdata$Age \nsummary(newdata$Age)","execution_count":null,"outputs":[]},{"metadata":{"_cell_guid":"df43edba-a33a-4443-b20d-8fa542508340","_uuid":"d0f8b59c1d3ef3d7a3e93985019fe491286b992b","trusted":true},"cell_type":"code","source":"AgeOld=ggplot(data [!is.na(data$Age),], aes(x=Age)) +\n    geom_histogram(position=\"dodge\", bins=25, color=\"Maroon\", fill=\"LightGrey\") +\n    labs(title=\"Age before Imputation\")\nAgeNew=ggplot(newdata, aes(x=Age)) +\n    geom_histogram(position=\"dodge\",bins=25, color=\"Maroon\", fill=\"LightGrey\") +\n    labs(title=\"Age after Imputation\")\ngrid.arrange(AgeOld,AgeNew, nrow=1)","execution_count":null,"outputs":[]},{"metadata":{"_cell_guid":"e39912cc-61a0-4dab-b3d3-9a7bb5f534f4","_uuid":"2be342fa37c2a1b37d7fed95dd29114af1e053a5"},"cell_type":"markdown","source":"## Feature Engineering\n\nIn this section, I want to find some more infomration from the existing data that could help with the analysis later on.\n\nFirst lets create the Title variable and add it to the data set."},{"metadata":{"_cell_guid":"f81bf1ad-e8eb-496d-989f-55393504fb60","_uuid":"96cc913ef919a70792bfba960ed9ec4bb8e3e959"},"cell_type":"markdown","source":"### Create Title and Family Name"},{"metadata":{"_cell_guid":"07daded2-b076-4d8d-a1eb-97ca446e5a51","_uuid":"02a5a0339ad893513bdad29d1b7d900184f4e8e9","trusted":true},"cell_type":"code","source":"pnames=newdata$Name\ntitle <-  gsub(\"^.*, (.*?)\\\\..*$\", \"\\\\1\", pnames)\nnewdata$Title=title\ntable(newdata$Sex, newdata$Title)","execution_count":null,"outputs":[]},{"metadata":{"_cell_guid":"07f7960a-14c2-42d9-907f-06b9cc545dec","_uuid":"d42681ebd760d7d637b6dca0f23902b7820f0aaf"},"cell_type":"markdown","source":"I will add the low count titles that refer to females: Lady, Dona and the Countess to Miss (since we have 1 of each there is no need to check if they are married or not).\n\nMlle and Ms to Miss, \nMme to Mrs\nThe remaining low count male titles to Sir\n"},{"metadata":{"_cell_guid":"a3a5be10-1a0b-44ee-8430-d1a6459098d1","_uuid":"096213824ce85d549a2ab0a73d0e9d93b5d0f9aa","trusted":true},"cell_type":"code","source":"newdata$Title[newdata$Title %in% c(\"Lady\",\"Dona\",\"the Countess\", \"Mlle\",\"Ms\", \"Dr\") & \n           newdata$Sex==\"female\"]=\"Miss\" #we have one female Dr so had to add the condition\nnewdata$Title[newdata$Title==\"Mme\"]=\"Mrs\"\nnewdata$Title[newdata$Title %in% c(\"Capt\",\"Col\",\"Don\", \"Dr\",\"Jonkheer\", \"Major\",\"Rev\")]=\"Sir\"\ntable(newdata$Sex, newdata$Title)","execution_count":null,"outputs":[]},{"metadata":{"_cell_guid":"a449a1fd-58bc-42c9-be9b-cdcb29022168","_uuid":"ffb879a2abb9b685931b82af06eca0b5ae14a7d8"},"cell_type":"markdown","source":"Using the SibSp and the Parch variables I want to find the family members. First let's find the family names of the passengers. "},{"metadata":{"_cell_guid":"83a3599d-5c9f-47f0-b1b7-717eb0cb2586","_uuid":"7a64baeca9928fcc7bb75de68007ad957ee9a4e3","trusted":true},"cell_type":"code","source":"newdata$FamilyName=gsub(\",\", \"\",word(newdata$Name)) #extract first word in Name and remove the comma\nhead(newdata[,c(\"Name\",\"FamilyName\", \"SibSp\", \"Parch\")], 10)","execution_count":null,"outputs":[]},{"metadata":{"_cell_guid":"a8e22dec-c2b1-483d-89fc-08a31b07dc61","_uuid":"5238befe1c1a6de4dd983b848289a11b6ae48e03"},"cell_type":"markdown","source":"### Create Solo Passenger and Family Size"},{"metadata":{"_cell_guid":"a528e235-4611-4e2c-86bd-cc6276875493","_uuid":"69608309cd274433a106783113c1dfa796190a72"},"cell_type":"markdown","source":"Since I only want to find families in this section, I'll create a new variable called SoloPass that indicate this passenger is traveling solo. And another called FamilyCount that includes the count of family members this passenger has."},{"metadata":{"_cell_guid":"f3eb61c4-6572-44a8-8f86-c9379b54ca80","_uuid":"5cce568133780df8a11f6507c79f71d599bf15f8","trusted":true},"cell_type":"code","source":"newdata$SoloPass=0\nnewdata$SoloPass[newdata$SibSp+newdata$Parch==0]=1 #Not a solo passenger\nnewdata$SoloPass[newdata$SibSp+newdata$Parch!=0]=0 #A solo passenger\n\nnewdata$FamilyCount=0\nnewdata$FamilyCount=newdata$SibSp+newdata$Parch + 1 \n#+1 is to count the passenger with the family member\n\n#Let's check if we got it right in a sample\nhead(newdata[,c(\"Name\",\"FamilyName\", \"SibSp\", \"Parch\", \"SoloPass\", \"FamilyCount\", \"Survived\")], 15)","execution_count":null,"outputs":[]},{"metadata":{"_cell_guid":"b2077673-32ca-4c70-bcd0-7758c499e040","_uuid":"1036c86aff99b1eec816fd8a743413cdff631eae","trusted":true},"cell_type":"code","source":"ggplot(newdata, aes(x=FamilyCount, fill =Sex)) +\n    geom_bar(position='dodge')","execution_count":null,"outputs":[]},{"metadata":{"_cell_guid":"16f6f33b-8044-49e0-a249-6d2e039bbfce","_uuid":"0f941129b58c450882f94f95bc3402845a085610"},"cell_type":"markdown","source":"We can see that the families of size 2, 4, 5, 7 members, have more females than males. And the solo passengers are mostly male."},{"metadata":{"_cell_guid":"ae138e84-895e-4591-abb7-7cd6bba0f0f1","_uuid":"429c1db71ee83c3ac433ca08b698712d434dd745","trusted":true},"cell_type":"code","source":"fam=newdata %>%\n    filter (newdata$FamilyCount!=1) #to exclude passenger travelling solo\n\nggplot(fam, aes(x=Survived, fill = Sex)) +\n    geom_bar(position=\"dodge\") +\n    labs(title=\"Passengers Survival by Family Size [Survived = 1]\") +\n    facet_wrap(~FamilyCount)+\n    theme(legend.position=\"top\") +\n    geom_text(stat='count', aes(label=..count..), vjust=0.3, color=\"black\", size=2.5)   \n","execution_count":null,"outputs":[]},{"metadata":{"_cell_guid":"36d56f85-645b-449d-bada-d1fa961bdfec","_uuid":"e181904e1742337691df83a8374eb2061462533f"},"cell_type":"markdown","source":"We can see that the all members of families that consist of 8 and 11 members did not survive. And it seems the larger the families get, the less they are to survive. I wonder does that have to do with the Pclass they belong to. I assume the larger families are mostly in Class 3. Let's find out. "},{"metadata":{"_cell_guid":"42faf264-e334-491c-a844-698d0dc9f1d2","_uuid":"4b4ef365d34ed4979318815520d3342924ea7e5c","trusted":true},"cell_type":"code","source":"ggplot(fam, aes(x=Pclass)) +\n    geom_bar(position=\"dodge\", color=\"Maroon\", fill=\"Maroon\") +\n    labs(title=\"Passengers Class by Family Size\") +\n    facet_wrap(~FamilyCount)+\n    geom_text(stat='count', aes(label=..count..), vjust=-0.1, color=\"black\", size=2.5)   ","execution_count":null,"outputs":[]},{"metadata":{"_cell_guid":"f09bd13a-b954-4dfd-a01b-1696ca81feef","_uuid":"d11520cf92f870f1d26424706e026087a5acefaf"},"cell_type":"markdown","source":"As I expected, the larger families are in class 3. However, that 16 members in the family of size 7 doesn't look right. If we had two families in that family size than the total number of memebrs should be 14. Let's investigate."},{"metadata":{"_cell_guid":"14d8a39f-f7f8-4f18-bb99-e71c0b57e546","_uuid":"7746f01a2cfd82bea346e33793c29f6f99406d10","trusted":true},"cell_type":"code","source":"fam7=subset(fam, fam$FamilyCount==7 & fam$Pclass==3)\nhead(fam7)","execution_count":null,"outputs":[]},{"metadata":{"_cell_guid":"0aca770d-2e3b-465b-bfb3-4cf9a779c57c","_uuid":"e7001736f92fc0bcbe4d48c2f1ba1e5d8c3f566c","trusted":true},"cell_type":"code","source":"#Let's take the Andersson family and check out their members.\n#fam7Ander=subset(fam, fam$FamilyCount==7 & fam$Pclass==3 &FamilyName==\"Andersson\")\nfam7Ander=subset(fam,  FamilyName==\"Andersson\")\ndim(fam7Ander)\nhead(fam7Ander[,c(\"Name\",\"FamilyName\", \"Age\", \"SibSp\", \"Parch\", \"SoloPass\", \n                  \"FamilyCount\", \"Survived\")],9)\nfamandersson=subset(newdata,  FamilyName==\"Andersson\")\nhead(famandersson[,c(\"Name\",\"FamilyName\", \"Age\", \"SibSp\", \"Parch\", \"SoloPass\", \n                  \"FamilyCount\", \"Survived\")],11)","execution_count":null,"outputs":[]},{"metadata":{"_cell_guid":"082d64fd-a080-46c2-ac2f-86ef0e280935","_uuid":"29bdb7af58bd720ba10450c98c64cd97745dda79"},"cell_type":"markdown","source":"We have 9 members when there should be 7 in family of size 7. And we have two other Anderssons who are travelling solo. \nWe can clearly see that Mr. Anders and Mrs. Anders are spouses and they have 5 children. What I cannot understand is why are there two extra children and Miss Ida Augusta age 38 cannot be a sibling therefore, she could be a cousin of the husband or another family with the same last name and one of the children is hers.  Although it doesn't make sense that she has 4 SibSP and 2 Parch. This means the family count is not accurate and this could be due to cancellations or some SibSp and Parch info were not updated or we have cousins and uncles, etc that have not been specified as such. \n\nI am going to create a new variable called FamilyNameFreq that contains the number of times this family name exists in the dataset and compare it with the FamilyCount.  (Update I tried to create the column but was unsucessful. Will give it a try another time.)"},{"metadata":{"_cell_guid":"e7ee79b8-f28d-4370-a787-0032b41abd44","_uuid":"bd5d067502f5e12ff8bf2a672f863f66ca85c285","trusted":true},"cell_type":"code","source":"lcount=as.data.frame(table(newdata$FamilyName))\ncolnames(lcount) [colnames(lcount)==\"Var1\"]=\"Lname\"\nnrow(lcount) # Number of unique family names\nlcount[lcount$Lname==\"Andersson\",] # checking our values","execution_count":null,"outputs":[]},{"metadata":{"_cell_guid":"dc934f62-7f8f-473f-affe-ee167d7f84a9","_uuid":"f75cf907deaaa8908aeef33313ad87fdf7d49cf7"},"cell_type":"markdown","source":"## Adults vs Children\nLet's find how many children and adults we have and their survival."},{"metadata":{"_cell_guid":"8292a1d0-649c-4d8d-a012-d6552e8860a0","_uuid":"985acb54bed60d7b5795ffaa902cdca87aef8ab4","trusted":true},"cell_type":"code","source":"children=subset(newdata, newdata$Age<=17)\nadults=subset(newdata, newdata$Age>17)\ndim(children)\ndim(adults)","execution_count":null,"outputs":[]},{"metadata":{"_cell_guid":"1fd02575-c8b0-4f74-b3b9-0df2f2d0fdfb","_uuid":"20d2d59b3e7bc4ab69842dbf54c6257274aea753","trusted":true},"cell_type":"code","source":"child=ggplot(children, aes(x=Survived, fill=Sex)) +\n    geom_bar(position='dodge')+\n    theme(legend.position=\"top\") +\n    labs(title=\"Children's Survival\")\nadult=ggplot(adults, aes(x=Survived, fill=Sex)) +\n    geom_bar(position='dodge')+\n    theme(legend.position=\"top\") +\n    labs(title=\" Adult's Survival\")\ngrid.arrange(child,adult, nrow=1)","execution_count":null,"outputs":[]},{"metadata":{"_cell_guid":"05d19028-7ecc-427f-a4e2-6866840cbaf6","_uuid":"387d45ef32b5157d364ad353e4bdd0a5685e3dca"},"cell_type":"markdown","source":"### Cabin Variable"},{"metadata":{"_cell_guid":"c125d524-907e-4874-b1b5-2d5da6ddc8ea","_uuid":"b42d340f106a0a075a40e82ce38dd3b8271d18fe","trusted":true},"cell_type":"code","source":"sum(is.na(newdata$Cabin))\nhead(newdata$Cabin,10)","execution_count":null,"outputs":[]},{"metadata":{"_cell_guid":"70ab739b-8313-4eb7-b948-926bb7164aed","_uuid":"4ef97758b7faa3f93dce775bfe8832467d2970b5"},"cell_type":"markdown","source":"I decided not to play with the Cabin variable for now as there are cabins with two letters while the most have only one letter and the mojority is NA. "},{"metadata":{"_cell_guid":"e9a9867d-6e66-4002-9730-13e16a7da420","_uuid":"d81343255552d2f55807efd2bcb7565b8d6ada18"},"cell_type":"markdown","source":"## Convert Categorical to Numeric"},{"metadata":{"_cell_guid":"4bc658b3-eccb-4ff7-81e4-6f109805ee65","_uuid":"6a011154ee66f5d231ad07cf5c7a8c9101ce3f86","trusted":true},"cell_type":"code","source":"sapply(newdata, class)","execution_count":null,"outputs":[]},{"metadata":{"_cell_guid":"ed55c026-0135-43b2-ab12-ff932f0fe187","_uuid":"a3860776d4f639fcb5c2b54e846b3613e17d8dff"},"cell_type":"markdown","source":"Before I model the data to find the predictions and I should convert the catagorical data to numeric to use them in the regression analysis. Since Sex and Embarked are variables that could impact the survival of the passenger, I'll convert those to numeric. \n\n* Sex: female will become 1, male 0\n* Embarked: C= 1, Q=2, S=3\n"},{"metadata":{"_kg_hide-output":false,"_cell_guid":"620ca693-c450-4828-a1d6-5b716a565dda","_kg_hide-input":false,"_uuid":"0496c2f7d51c7e97c79deba4cab651df83d853ce","trusted":true},"cell_type":"code","source":"newdata$Sex[newdata$Sex==\"female\"]=\"1\"\nnewdata$Sex[newdata$Sex==\"male\"]=\"0\"\nnewdata$Sex=as.numeric(newdata$Sex)\n\nnewdata$Embarked[newdata$Embarked==\"C\"]=\"1\"\nnewdata$Embarked[newdata$Embarked==\"Q\"]=\"2\"\nnewdata$Embarked[newdata$Embarked==\"S\"]=\"3\"\nnewdata$Embarked=as.numeric(newdata$Embarked)\n\nsapply(newdata, class)","execution_count":null,"outputs":[]},{"metadata":{"_cell_guid":"725cd2f8-edc7-410d-9be9-da23136e2e40","_uuid":"bad7166e545a15b7780d749f60297070136363e0"},"cell_type":"markdown","source":"Now that we have new variables, let's check the correlation."},{"metadata":{"_cell_guid":"1330a730-0192-4d82-a084-2787dde9a966","_uuid":"b947b5bc2c6e2f1826a997680a7499e40fe1b4bc","trusted":true},"cell_type":"code","source":"newdata %>%\n    select_if(is.numeric) %>% # get only the numeric columns\n    replace(is.na(.), 0) %>% # replace all na values in Survived with 0\n    cor() %>% # calculate the correlations\n    corrplot() # plot the correlations","execution_count":null,"outputs":[]},{"metadata":{"_cell_guid":"b0e29510-632a-4e85-a182-5efa0b883345","_uuid":"a11eb6458dffad28096012f2d2ba6325188b4a4d"},"cell_type":"markdown","source":"# Regression Analysis"},{"metadata":{"_cell_guid":"d5a2417f-d088-421a-ae20-2b9328048446","_uuid":"78dc55a963f81359c3803aa9c203f869ad3962fe"},"cell_type":"markdown","source":"After checking the data and processing it, let's start with the analysis and see if our data can correctly predict the passengers survivals. I plan to use Regression Analysis. But before that we need to seperate the test data from the training data. "},{"metadata":{"_cell_guid":"48207efb-2ada-49a5-af2c-33a81721050c","_uuid":"6c00c3542e3864ee01457de627086dacddc9d854","trusted":true},"cell_type":"code","source":"training=subset(newdata,!is.na(newdata$Survived))\ndim(training)","execution_count":null,"outputs":[]},{"metadata":{"_cell_guid":"93d70602-0792-4f8f-9667-67d7a4250197","_uuid":"57d06eb3d713ed14992bd544d35f29bc4a0dde86","trusted":true},"cell_type":"code","source":"testing=subset(newdata,is.na(newdata$Survived))\ndim(testing)","execution_count":null,"outputs":[]},{"metadata":{"_cell_guid":"00e14b68-6faa-45e4-b363-3ac94817e0d7","_uuid":"c1abc2d369f2d16685d9bd5b98ea8e4090399e73"},"cell_type":"markdown","source":"## First Model with All Numeric Variables"},{"metadata":{"_cell_guid":"ef4fca54-a686-4b37-b072-d34e3aa8362e","_uuid":"7cf2563f1467393945ede45d75086efdd5accc41"},"cell_type":"markdown","source":"For my first model, I'll be training the model with the Survival output and all the numerical variables except for FamilyCount (this could be found by using SibSp and Parch, so its highly correlated and not needed during modeling). As an alternative, I could use FamilyCount instead of SibSp and Parch but I want to see how important each of them is for the model."},{"metadata":{"_cell_guid":"093c239d-204e-4875-99b0-9af2ed5a4ddb","_uuid":"5191fcf9775cee891e75a9794675dd5434919eed","trusted":true},"cell_type":"code","source":"modelone=glm(Survived~ Pclass + Sex + Age+ SibSp + Parch + Fare + Embarked + \n            SoloPass, #include the variables that could be important for survival\n            data=training, \n            family=\"binomial\") #logical regression","execution_count":null,"outputs":[]},{"metadata":{"_cell_guid":"cbb3df54-f623-4c42-8b20-c76162b5360c","_uuid":"17a818dc464b3de5835f586a6e422b0420a97b98","trusted":true},"cell_type":"code","source":"glm.diag.plots(modelone) #plot to see if our model is a good fit for the data and problem","execution_count":null,"outputs":[]},{"metadata":{"_cell_guid":"2a90cb45-17d8-4af2-9322-092f85388dcf","_uuid":"969556ad26fba1c622eebcd1d3dda5e25b1506c8"},"cell_type":"markdown","source":"The above diagnostic plots are plotting the model's residuals, or how much the model is off for a specific prediction. \n1. First plot upper left: For binomial regression we can ignore the first plot.\n2. Second plot uppper right: This looks like the way we want to do, residuals along a diagonal line with a little skew at the ends. Although I am wondering what is the cut off in the middle. This could also be ignored for binomail regression but it seems good to me. \n3. Third plot bottom left: We should have our data gathered near zero which in this case looks good. However those single dots away from zero indicate we have a very influential data point that is affecting the analysis. (I\"ll try to find that out).\n4. Fourth Plot: We want the data to be mostly zero on the y-axis so this looks good. \n\nSo it seems so far we have a good model. Let's do more analysis using the summary of the model.\n"},{"metadata":{"_cell_guid":"213d7a03-cf79-402a-8e96-7b33684b8b5b","_uuid":"c277d66b42ee642583eafcd2cf83a82b9af4b513","trusted":true},"cell_type":"code","source":"table (training$Survived)","execution_count":null,"outputs":[]},{"metadata":{"_cell_guid":"4b8bf604-0ad3-4c4b-b553-2a7336a5ea91","_uuid":"7ade62a706f962ffd7b62bbda400ecc9e29cbe8a","trusted":true},"cell_type":"code","source":"summary(modelone)","execution_count":null,"outputs":[]},{"metadata":{"_cell_guid":"226499c4-c266-4953-8b58-c15df2c79449","_uuid":"f85bf909fbba9072f7d0a9b3105cb7fbdeff92c0"},"cell_type":"markdown","source":"1. The Deviance Residuals: by taking the absolute values of 1Q and 3Q we can see that they are very close to each other and the median is close to zero which means they are normally distrubuted however, in logistic regression we don't need them to be normally distrubuted so we can ignore this. \n2. The Intercept for binomial (logistic) regression: this value will be further away from 0 the bigger the difference between the number of observation in each survived class. We don't have a big difference 549 vs 342 so it seems pretty reasonable. \n3. Other variables estmates: This indicates how much the output will change when we increase this variable by 1. The larger the estimate, the bigger the effect on the output. Also the standard error should be less than 1/10 the estimate to determine that this varuable is important. Using this information we can see that Sex is the most signaficant variable. \n4. The astericks at the end of each variable also idictaes teh importance of the variable in fitting the model. The more asterisks the better. We can see that Fare and Embarked don't seem to have a big impact. \n5. Null deviance: The null deviance is used to inform us how well the model can do with only the intercept. The smaller value that better. Our value is not that small so the intercept will not be enough. \n6. Residual Deviance is used to informr us of how well we can predict our output using both the intercept and the other input variables. The smaller the value the better and the more the difference is between this value and the null deviance the more important our variables are for predicting our output. We can see a difference between the two so we're on the right track it seems. \n7. AIC is use dto compare between different models using the same dataset. The smaller the better. \n\nWe can conclude that these variables are good predictors for the Survived variable. Let's make one final look at more diognostic plots for the model."},{"metadata":{"_cell_guid":"220d70ae-8030-40a1-baf7-fb376d966de2","_uuid":"1055699f5e7d758fae109fc45133f0834297261e","trusted":true},"cell_type":"code","source":"# output plots\npar(mfrow = c(2,2)) \n# diagnostic plots\nplot(modelone)","execution_count":null,"outputs":[]},{"metadata":{"_cell_guid":"b50dc568-65db-4629-adb7-b9753231befb","_uuid":"ccc77be7dfd473ce99d5d50f1f37d0846c3870d9","trusted":true},"cell_type":"code","source":"avPlots(modelone)","execution_count":null,"outputs":[]},{"metadata":{"_cell_guid":"d33e8fa0-4c6d-4144-9079-ca6f560579e8","_uuid":"269d4fb96e772de0219478f45674befeb90eb546"},"cell_type":"markdown","source":"Now let's find our predictions"},{"metadata":{"_uuid":"503b6f5de561a288bf87059ee43a3d2a4cfa3555","trusted":true},"cell_type":"code","source":"predone= predict(modelone, training, type=\"response\") #we use response to find probabilities\ntable(training$Survived, predone>0.5) #training set (baseline) predictions","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"ddc6d3a650e3da047194422bb8c4f9cf1c845e33"},"cell_type":"markdown","source":"The accuracy of this model is (477+243)/(477+72+99+243) = 0.808 which is 81%\n\nLet's double check with a confusion matrix"},{"metadata":{"_uuid":"781afa30b84eb3a2a6c8114141700a6bee968bd3","trusted":true},"cell_type":"code","source":"predonematrix=ifelse(predone> 0.5,1,0)\nconfusionMatrix(training$Survived,predonematrix)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"8c95170a8b6844f5f01e09926bc5e50fee6949c1"},"cell_type":"markdown","source":"We got the same results. the accuracy of the baseline model is 81% which is not bad. Let's now make predictions for the test set using this model. "},{"metadata":{"_uuid":"0ada6bc4b816c748292db3eef1aff5f82e18a05d","trusted":true},"cell_type":"code","source":"testpred=predict(modelone,testing, type=\"response\") \ntests=as.data.frame(testpred)\ntesting$Survival=as.numeric(unlist(tests))\ntesting$Survival=ifelse(testing$Survival>=0.5,1,0)","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"8900f2a316f17a44ec0fd36620fdfe4c2d287049"},"cell_type":"code","source":"table(testing$Survival)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"2291c964561bb14c92bea0436934baf332d9f5e4"},"cell_type":"markdown","source":"From the above results we can find that the survival rate is 154/(154+264) = 0.36 which is 36%"},{"metadata":{"_uuid":"0151fcf87adddbac1091f4225f05c1d61c33f4f5","trusted":true},"cell_type":"code","source":"table(testing$Survival,testing$Sex)","execution_count":null,"outputs":[]},{"metadata":{"_cell_guid":"462a0963-d2ae-44a0-a5fb-1c80443d972d","_uuid":"4735d03c2327a842dc95df9b751c86f1581eb894"},"cell_type":"markdown","source":""}],"metadata":{"language_info":{"mimetype":"text/x-r-source","name":"R","pygments_lexer":"r","version":"3.4.2","file_extension":".r","codemirror_mode":"r"},"kernelspec":{"display_name":"R","language":"R","name":"ir"}},"nbformat":4,"nbformat_minor":1}