{"cells":[{"metadata":{"_uuid":"62744ad9fe081a2740748b6f8008c2e82d9fd5e6","_execution_state":"idle","trusted":true},"cell_type":"code","source":"# This R environment comes with all of CRAN preinstalled, as well as many other helpful packages\n# The environment is defined by the kaggle/rstats docker image: https://github.com/kaggle/docker-rstats\n# For example, here's several helpful packages to load in \n\nlibrary(ggplot2) # Data visualization\nlibrary(readr) # CSV file I/O, e.g. the read_csv function\n\n# Input data files are available in the \"../input/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nsystem(\"ls ../input\")\n\n# Any results you write to the current directory are saved as output.","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"de83c7fd234c2c3b1e7c58b871ac7fcf4b5b982f"},"cell_type":"code","source":"train <- read_csv('../input/train.csv')\ntest  <- read_csv('../input/test.csv')","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"eadc67e0c5e20543271730fbc1f9a8fd950ecd1e"},"cell_type":"code","source":"> > Fine!now our data has been  downloaded let's look out the structure of training data","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"91f09687e6b85ba2770f5a1d1e11e8f25aade2e9"},"cell_type":"code","source":"str(train)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"c1f2e49b44a79e3106ea866a46031082a3a528cf"},"cell_type":"markdown","source":"Now we will convert the sex in the testing data in to the factor using as.factor"},{"metadata":{"trusted":true,"_uuid":"18642ac68b1a7df748c4df47c9c3e0562a4bd503"},"cell_type":"code","source":"sum(is.na(train$Sex))\nstr(train$Survived)","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"46e02854d82f59da0057a80c2dfc4bc07649ebf6"},"cell_type":"code","source":"train$Sex<-as.factor(train$Sex)\nlibrary(ggplot2)\nggplot(train,aes(x=Sex,y=Survived))+geom_bar(stat=\"identity\")","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"0715d1546941eddd377ad9089148aa08798b4f5d"},"cell_type":"code","source":"ggplot(train,aes(x=Age,fill=Sex))+geom_bar(binwidth=10,position=\"dodge\")+facet_grid(.~Survived)","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"d591d18b491ce011d8857859a6b4c031f86e4c5f"},"cell_type":"code","source":"library(magrittr)\nlibrary(ggalluvial)\ntrain$agetype<-cut(train$Age, breaks=c(0, 20, 40, Inf), labels=c(\"child\",\"adult\",\"old\"))\ntrain$Survived[train$Survived==1]<-\"YES\"\ntrain$Survived[train$Survived==0]<-\"NO\"\ntrain%>%ggplot(aes(x=Pclass,y=Age,color=Sex))+geom_point(position=\"jitter\")+facet_grid(.~Survived)","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"6c9280c7b4752ef750557edf832e904e86576467"},"cell_type":"code","source":"library(stringr)\nname<-str_split(train$Name,\",\")\nfor(i in 1:length(name))\n{\n    name[[i]]<-name[[i]][2]\n}\nname<-str_split(name,\"\\\\.\")\nfor(i in 1:length(name))\n{\n    name[[i]]<-name[[i]][1]\n}\nname<-unlist(name)\ntrain$title<-as.factor(name)\nname<-str_split(test$Name,\",\")\nfor(i in 1:length(name))\n{\n    name[[i]]<-name[[i]][2]\n}\nname<-str_split(name,\"\\\\.\")\nfor(i in 1:length(name))\n{\n    name[[i]]<-name[[i]][1]\n}\nname<-unlist(name)\ntest$title<-as.character(name)\ntest$title<-gsub(\"Dona\",\"Don\",test$title)\ntest$title<-as.factor(test$title)\nggplot(train, aes(title, ..count..)) + geom_bar(aes(fill = Survived), position = \"dodge\")","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"d099976c49c00ca06a238613cd976dacd526a268","scrolled":true},"cell_type":"code","source":"train%>%ggplot(\n       aes(axis1 = Pclass, axis2 = Sex, axis3 = agetype,y=SibSp)) +\n  scale_x_discrete(limits = c(\"Class\", \"Sex\", \"Age\"), expand = c(.1, .05)) +\n  geom_alluvium(aes(fill = Survived)) +\n  geom_stratum() + geom_text(stat = \"stratum\", label.strata = TRUE) +\n  theme_minimal() +\n  ggtitle(\"survived passengers\")","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"800f0784e3e2014640a25a6ef22542ca9c24a9eb"},"cell_type":"code","source":"train<-mutate(train,family=SibSp+Parch+1)\ntest<-mutate(test,family=SibSp+Parch+1)\ntest<-subset(test,select=-c(6,7))\ntrain<-subset(train,select=-c(7,8))\ntrain$Cabin<-substr(train$Cabin,0,stop=1)\nlibrary(tidyverse)\ntrain%>%filter(!is.na(Cabin),!is.na(Fare))%>%dplyr::select(Cabin,Fare)%>%group_by(Cabin)%>%summarise(avg_fare=mean(Fare),min=min(Fare),max=max(Fare))","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"94cdd9213798a7b390ad698bf0cb9c0a37277c84"},"cell_type":"code","source":"library(rpart)\nlibrary(rpart.plot)\ngender<-read.csv('../input/gender_submission.csv')\nmodel<-rpart(Survived~Age+Sex+Embarked,data=train,method = \"class\", control = rpart.control(cp = 0))\nrpart.plot(model, type = 2, box.palette = c(\"red\", \"green\"), fallen.leaves = TRUE)\npredict<-predict(model,test,type=\"class\")\npredict<-ifelse(predict==\"YES\",1,0)\nmean(gender$Survived==predict)","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"5d4ace1458b9b32c8db7ebb068d266684fea6e05"},"cell_type":"code","source":"prune <- prune(model, cp = 0.0014)\nplotcp(prune)\npredict<-predict(prune,test,type=\"class\")\npredict<-ifelse(predict==\"YES\",1,0)\nmean(gender$Survived==predict)\npredict<-data.frame(predict)\npredict<-cbind(predict,test$PassengerId)\ncolnames(predict)<-c(\"Survived\",\"PassengerId\")\nlibrary(dplyr)\npredict<-predict%>%select(PassengerId,Survived)\npredict%>%write.csv(file=\"submit1.csv\", row.names=FALSE)","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"3e44ad3de4b01db8b7956d5ea2068cb7d4abc337"},"cell_type":"code","source":"library(\"naivebayes\")\nlibrary(forecast)\nlibrary(caret)\nnaive<-naive_bayes(Survived~Age+Sex+Embarked,data=train,method=\"prob\")\nnaivepredict<-predict(naive,test,laplace = 1)\nnaivepredict<-ifelse(naivepredict==\"YES\",1,0)\naccuracy(gender$Survived,naivepredict)\nconfusionMatrix(gender$Survived,naivepredict)\nnaivepredict<-data.frame(naivepredict)\nnaivepredict<-cbind(naivepredict,test$PassengerId)\ncolnames(naivepredict)<-c(\"Survived\",\"PassengerId\")\nnaivepredict<-naivepredict%>%select(PassengerId,Survived)\nnaivepredict%>%write.csv(file=\"submit.csv\", row.names=FALSE)","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"8825ba873216fd532e7c0529ec55842a2ec66298"},"cell_type":"code","source":"library(keras)","execution_count":null,"outputs":[]}],"metadata":{"kernelspec":{"display_name":"R","language":"R","name":"ir"},"language_info":{"mimetype":"text/x-r-source","name":"R","pygments_lexer":"r","version":"3.4.2","file_extension":".r","codemirror_mode":"r"}},"nbformat":4,"nbformat_minor":1}