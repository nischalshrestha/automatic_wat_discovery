{"cells":[{"metadata":{"_uuid":"45360398a4ac69d4287f0800f079a07c26343c54"},"cell_type":"markdown","source":"Bismillahirrahmanirrahim, \nThis is my first trial in doing DS thing\n:D\n\nLoading libraries needed for wrangling"},{"metadata":{"trusted":true,"_uuid":"7b4d1361fed4aaedcbd07e5ce674c68661cb2e12"},"cell_type":"code","source":"#data wrangling library\nlibrary(tidyverse)\nlibrary(tibble)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"61ccd4486ae2b6ace5383f84e9fec83b373fc436"},"cell_type":"markdown","source":"Let's import the datasets needed to do analysis (in this case I prefer using tibble format for personal convenience)"},{"metadata":{"_kg_hide-output":false,"_kg_hide-input":false,"trusted":true,"_uuid":"b97283e4feb9aff7b1baef2de2b05921d2e54099"},"cell_type":"code","source":"#collecting data\nfiles_directory <- list.files(path = \"../input\")\n\ntrain_data <- as_data_frame(read_csv('../input/train.csv'))\ntest_data <- as_data_frame(read_csv('../input/test.csv'))\nreality <- as_data_frame(read_csv('../input/gender_submission.csv'))\n\ntrain_data$set <- \"train\"\ntest_data$set  <- \"test\"\ntest_data$Survived <- NA\n\nfull_data <- rbind(train_data, test_data)\nfull_data_unedited <- rbind(train_data, test_data)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"6d58617a52ba5f32e655fb157467958539d7b949"},"cell_type":"markdown","source":"The next process is to take a look at the data\nFirts, let's take a look for missng value"},{"metadata":{"trusted":true,"_uuid":"8079031427bb2757893ae7515ffe7021991333a7"},"cell_type":"code","source":"#check for missing value for possible feature (non-output)\n\nfull_data %>% \n    select(-Survived) %>%\n        summarize_all(funs(sum(is.na(.))/n())) -> miss_valperc\n\nmiss_valperc <- gather(miss_valperc, key=\"feature\", value=\"missing_pct\")\n\n#loading the ggplot2\nlibrary(ggplot2)\n\n#visualize missing data\nggplot(miss_valperc, aes(x = feature, y = missing_pct)) + geom_bar(stat = \"identity\", fill = \"blue\") + coord_flip()","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"304aae92e2203607dbfe20ef89d582708e2ced6e"},"cell_type":"markdown","source":"As seen in diagram above, Cabin feature has almost 80% missing data, therefore let's remove it from analysis"},{"metadata":{"trusted":true,"_uuid":"042d0c4225e5a8d822971207668629f4380e83b2"},"cell_type":"code","source":"full_data %>% select(-Cabin) -> full_data","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"f91f890e6388d7814ca232ceb4b9bb435af377ce"},"cell_type":"markdown","source":"The question now is All the feature (except Cabin since its dominated by NA val) needed for doing analysis ??\n\nto figure this out let's take a glimpse at the data"},{"metadata":{"trusted":true,"_uuid":"2bfa968653cee51c1e695f5cfc70a341cbe964a6"},"cell_type":"code","source":"glimpse(full_data)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"6a4136c4bff4f2a9e704e34143710210d2c090b5"},"cell_type":"markdown","source":"PassengerId is obviously not needed in doing analysis since it has unique data for each row, so let's remove it"},{"metadata":{"trusted":true,"_uuid":"7e87bada3c1a5c10140f8aa82dee410c70459b77"},"cell_type":"code","source":"full_data %>% select(-PassengerId) -> full_data","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"966ab2c71fa0c66391adc0757c596a8553fd9940"},"cell_type":"markdown","source":"Now, the next question is \"Is the data balanced ?\" . To evaluate this let's take a look at the ratio between Suvived and Unsurvived Passenger in training data"},{"metadata":{"trusted":true,"_uuid":"eb21cf54aebe9b4ab0a1b480a3bb4c3eaf58dc1a"},"cell_type":"code","source":"#counting the percentage of output 0 and 1\nfull_data %>% \n    filter(set == 'train') %>%\n        count(Survived) %>%\n            mutate(percentage = n/sum(n)) -> y_ratio\n\ny_ratio","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"b984b36896f470c27bf6714412a59d5db01916a0"},"cell_type":"markdown","source":"As seen above, the ration between Survived and Unsurvived passenger is imbalance. To solve this, lets use SMOTE, but after we consider which feature has to be choosen from the titanic dataset :D."},{"metadata":{"_uuid":"16f4ae3920257a8b5820430ad9aae87a5bbba7a5"},"cell_type":"markdown","source":"Besides PassengerId, there are 11 variables. For each variable, let's take a look how it is look like"},{"metadata":{"_uuid":"3134da9abc8e3b83d1f9ca9336705ad8f3a22206"},"cell_type":"markdown","source":"**1. Pclass **"},{"metadata":{"trusted":true,"_uuid":"0437dee5d18824cd57be3514a4f1c3a18add6f8b"},"cell_type":"code","source":"full_data %>% \n    count(Pclass) ","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"a89931bd28ef10a104b03d57ae0ac9090674a57a"},"cell_type":"markdown","source":"See ? It's obvious that Pclass is a categorical data and may be needed in analysis. To make it to proper class, let's change its class to categorical/factor"},{"metadata":{"trusted":true,"_uuid":"0699a86461243d48cf17c94c36a4be2e5835f182"},"cell_type":"code","source":"full_data <- full_data %>% \n    mutate(Pclass = factor(Pclass, levels = c(1, 2, 3), labels = c(\"First\", \"Second\", \"Third\"))) \n\nclass(full_data$Pclass)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"869dfa5ffaf1999784ee53f2bfe66dd14795ce30"},"cell_type":"markdown","source":"**2. title**\n\nHow about Names ? Names is almost unique right ? .\n\nBut how about title ? is higher title increased the survival rate ? Let's find out"},{"metadata":{"trusted":true,"_uuid":"8d372f8421a79e404481efa735623f30b2fec8f0"},"cell_type":"code","source":"full_data %>%\n    mutate(title = gsub(\"^.*, (.*?)\\\\..*$\", \"\\\\1\", Name)) -> full_data","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"f84d51a414e426b5dbbfbe9c6fb58f66b254116d"},"cell_type":"markdown","source":"Let's take a look at its distribution for each name(title)"},{"metadata":{"trusted":true,"_uuid":"68dc98ad9ef4a55b5adff58634beec78cfc8565f"},"cell_type":"code","source":"full_data %>%\n    count(title)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"c8d8f041353ab2a72142920a6ee749b0a5470594"},"cell_type":"markdown","source":"Hmm. . . We can see 3 major category in the title : Miss, Mr, and Mrs. The other title is just a lil number that hardly be considered as category. To make it recognizable let's make a new category called 'Honored_Important' and assign other obvious title to 3 major category."},{"metadata":{"trusted":true,"_uuid":"c190846088884d4d8417fe378b8dad41af376ca3"},"cell_type":"code","source":"# Assigning obvious title to relevant major category\nfull_data$title[full_data$title == 'Mlle'] <- 'Miss' \nfull_data$title[full_data$title == 'Ms']  <- 'Miss'\nfull_data$title[full_data$title == 'Mme'] <- 'Mrs' \n\n#Assign the rest to Honored People / Important People\nordinary_ppl <- list('Mlle','Ms','Mme','Mr','Mrs','Miss') \nfull_data$title[!(full_data$title %in% ordinary_ppl)] <- 'Honored_Important'\n\n#count the distribution of title\nfull_data %>% count(title)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"927dd95648399a6744c7d496ee6bd66e142c71a5"},"cell_type":"markdown","source":"Now let's make the title into categorical variable"},{"metadata":{"trusted":true,"_uuid":"42c0812851d097f6ce391b22470426b141ce4c5c"},"cell_type":"code","source":"full_data %>% \n    mutate(title = factor(title, levels = c('Honored_Important','Mr','Mrs','Miss'))) -> full_data","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"b1d763a91cce99bb9ed9f14e265591076b9d398c"},"cell_type":"markdown","source":"**3.  Sex **\n\nLet's see how sex distribute in passengers"},{"metadata":{"trusted":true,"_uuid":"1a5b4109d452a109aa51cc0bcd2c2cc3b7f1212c"},"cell_type":"code","source":"full_data %>%\n    count(Sex)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"a66e869b5dbea0faba310ade895868cac7d7fa69"},"cell_type":"markdown","source":"Make it categorical"},{"metadata":{"trusted":true,"_uuid":"156c49d7f39856fbd25dfda031e143a4d8f96835"},"cell_type":"code","source":"full_data %>% \n    mutate(Sex = factor(Sex, levels = c('male', 'female'))) -> full_data","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"d2b7c73eca7fa3ca7099fa374551374b4b72e678"},"cell_type":"markdown","source":"**4.  age_cat**\n\nAge is non-continous variable and contain NA value\nThings to do with NA values is (my choice) to impute the data by its mean."},{"metadata":{"trusted":true,"_uuid":"595b298f8c77ed3b88bbcda7028611d081a5aae7"},"cell_type":"code","source":"full_data %>%\n    mutate(Age = ifelse(is.na(Age), round(mean(Age, na.rm = TRUE)), Age)) -> full_data","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"4b5ad913a0c8c7804c5ebbea0f3696991776eb26"},"cell_type":"markdown","source":"Since age is discrete, it possibe to categorize it. For this case lets use following categories :\n1. Children (age < 13)\n2. Teen (age 13 - 17)\n3. Adult (18 - 55)\n4. Elder (>55)"},{"metadata":{"trusted":true,"_uuid":"1923ce42fbe0a6a0f89a4d7319890608fa8cd941"},"cell_type":"code","source":"#categorizing data\nfull_data <- full_data %>%\n    mutate(age_cat = factor(case_when(Age < 13 ~ \"Children\",\n                              Age >= 13 & Age < 18 ~ \"Teen\",\n                              Age >= 18 & Age <= 55 ~ \"Adult\",\n                              Age > 55 ~ \"Elder\"), levels = c('Children', 'Teen', 'Adult', 'Elder'))) \n\n#take a look at its distribution\nfull_data %>% count(age_cat)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"81ba4cdbaf6d77618f2c7d3317a9c2711234aa8b"},"cell_type":"markdown","source":"**4. Family in ship**\n\nSibSp variable shows wheter passenger brought Siblings/Spouse, and Parch variable shows wheter passenger brought Parents/Children. This two variable can be merge into new variable called 'Family_inship' which include the passenger and family"},{"metadata":{"trusted":true,"_uuid":"fb5d0154021fcfb0e4f15165aacb2174d722d11f"},"cell_type":"code","source":"full_data %>%\n    mutate(Family_inship = SibSp + Parch + 1) -> full_data","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"a7d264434acf8510bc2e63a15c5f8b2cd629dde5"},"cell_type":"markdown","source":"Again, since its discrete, we can categorize it. For number of family in ship let's categorize it as follows :\n1. family in ship = 1 , Alone\n2. 2 <= family in ship <= 5, Small\n3. family in ship > 5, Big"},{"metadata":{"trusted":true,"_uuid":"8aa3ee952421ce19aba4a813788da5e3bb917e55"},"cell_type":"code","source":"#categorizing\nfull_data <- full_data %>%\n    mutate(Family_inship = factor(case_when(Family_inship == 1 ~ \"Alone\",\n                                           Family_inship >= 2 & Family_inship <=5 ~ \"Small\",\n                                           Family_inship >5 ~ \"Big\"), levels = c(\"Alone\", \"Small\", \"Big\")))\n\n#how its distributed\nfull_data %>%\n    count(Family_inship)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"51c7f2a25e625b73f18360960773e138647bfdf5"},"cell_type":"markdown","source":"**5. ticker_for**\n\nTicket variable show the purchase of ticket for singl/multiple passenger. Commonly, if there were a family in the ship they probably purchased it together which means we can categorize the ticket by amount of passenger based on family :\n1. Ticket = 1 , Personal\n2. 2 <= Ticket <= 5, Small group\n3. Ticket > 5, Big group"},{"metadata":{"trusted":true,"_uuid":"536d7f9e3bba6e4056cbbaa05e1034f1404151f1"},"cell_type":"code","source":"#categorizing\n\n# make category for ticket by count\nticket_count <- full_data %>%\n        count(Ticket) %>%\n            mutate(ticket_for = factor(case_when(n == 1 ~ \"Personal\",\n                                                  n >= 2 & n<=5 ~\"Small group\",\n                                                n>5 ~ \"Big group\"),\n                                      levels = c('Personal', 'Small group', 'Big group')))\n#merge\nfull_data <- full_data %>%\n        inner_join(ticket_count, by = 'Ticket')\n\n#how its distributed\nfull_data %>%\n    count(ticket_for)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"7e447f5a2ba09a419c28a1c67282b1f5de7fdd9d"},"cell_type":"markdown","source":"**5.  Fare**\n\nFare variable shows the ticket price. This ticket price resembles what class did the passenger order.\nSo since variable Pclass has already resembled this. We can omit Fare variable"},{"metadata":{"trusted":true,"_uuid":"577550eb281016ede0589ec8288a3da9b25d8675"},"cell_type":"code","source":"full_data %>% select(-Fare) -> full_data","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"188825e28b8c5091b162f4c7956ab77fa791cbac"},"cell_type":"markdown","source":"**6. Embarked**\n\nEmbark variable shows port the passenger used (?)\nin this variable there are 3 major category with 2 NA (known by running full_data %>% count(Embarked))\nwe can assign 'S' (mode) to replace NA value"},{"metadata":{"trusted":true,"_uuid":"8b30a468bc132d44bdf165574a1e8346a70fd9b5"},"cell_type":"code","source":"full_data <- full_data %>%\n        mutate(Embarked = ifelse(is.na(Embarked),'S',Embarked))","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"d9e3dac19cadb4d2f23fbd157c7b817ff0b37163"},"cell_type":"markdown","source":"After replacing NA value, let's categorize"},{"metadata":{"trusted":true,"_uuid":"4ab52c22c315ad96084f46352151fcf4a5c14eb6"},"cell_type":"code","source":"#categorizing\nfull_data <- full_data %>%\n    mutate(Embarked = factor(Embarked, levels = c('C', 'Q', 'S')))\n\n#See how its distributed\nfull_data %>%\n    count(Embarked)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"802546b057a951740d4416f4833843c21e7b8e6c"},"cell_type":"markdown","source":"**OKKK by now, we have taken glimpse toward the feature**\n\nOk now lets use all the feature needed (and don't forget the output var 'Survived')"},{"metadata":{"trusted":true,"_uuid":"18f15260087b89f5f5846105dbf7a4e5230fdc67"},"cell_type":"code","source":"full_data <- full_data %>%\n        select(Survived,Pclass, title, Sex, age_cat, Family_inship, ticket_for, Embarked, set )","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"0ab5ed20e07a1bd6711d02289cbad5c51e772e62"},"cell_type":"code","source":"#take a look at summary of our result in wrangling the data\nsummary(full_data)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"319d52536ffaa158172f1455ddd7862f62cacee0"},"cell_type":"markdown","source":"**OK ITS TIME FOR FEATURE ENGINEERING (yeay !, hope I do it well)**\n\nIn feature engineering, the clean data is processed to extract which feature is important to the output and which one is not.\n"},{"metadata":{"_uuid":"6f3c7959455fc9f92783a3727790d082911a7470"},"cell_type":"markdown","source":"Before doing the chisquare test, lets change the Survived Variable into categorical and subset the train daat for testing"},{"metadata":{"trusted":true,"_uuid":"4033dceece446925f250d48e8f774a15b162ad62"},"cell_type":"code","source":"#changing output (Survived) variable into categorical\nfull_data %>%\n    mutate(Survived = factor(Survived, levels = c(0, 1, NA), labels = c(\"Not Survived\", \"Survived\"))) -> full_data","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"6e2b9b587382db83ff429b7f95e30dd48302639d"},"cell_type":"code","source":"#subset\nfull_data %>% filter(set == 'train') -> train_data","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"ef9ab71be8a0dbd8a9f1ad958b13783c2ce24a97"},"cell_type":"markdown","source":"**1. Evaluating Pclass effect on Survived**\n\nPclass is a categorical variable, so for doing the dependence test we can use chi square test "},{"metadata":{"trusted":true,"_uuid":"0418921554305006ec1664162aa7b3e37558ce5b"},"cell_type":"code","source":"#using chi square to evaluate\nPclass_eff <- chisq.test(train_data$Pclass, train_data$Survived)\nPclass_eff","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"c94f16ea0fbfb27a110c5b738942efc65ab7b449"},"cell_type":"code","source":"#visualizing both variable using barplot\ntrain_data %>%\n    ggplot(aes(x = Pclass, fill = Survived)) + geom_bar(position = \"fill\") + ylab(\"Pclass %\")","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"753c36c0f82074f14ba2de09a729f4f243f60477"},"cell_type":"markdown","source":"With the bar diagram shown above and with the result of chisquare test, p value < 0.05. It is obvious that Pclass variable has meaningful effect on Survived. From the diagram shown, we can draw a pre-assumption which the higher the class, the more prioritized the passenger. "},{"metadata":{"_uuid":"1125610bcecce2b2190b65b1320bd6fe566acfeb"},"cell_type":"markdown","source":"**2. Evaluating title effect on Survived**\n\ntitle is a categorical variable, so for doing the dependence test we can use chi square test "},{"metadata":{"trusted":true,"_uuid":"1240f1ad47ae0d0966196c481897017dbcd9b8b5"},"cell_type":"code","source":"#using chi square to evaluate\ntitle_eff <- chisq.test(train_data$title, train_data$Survived)\ntitle_eff","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"8e05ab2be38584f6f82a0e82b0fd285fcaf8f42e"},"cell_type":"code","source":"#visualizing both variable using barplot\ntrain_data %>%\n    ggplot(aes(x = title, fill = Survived)) + geom_bar(position = \"fill\") + ylab(\"Title %\")","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"2f4013de6925cd9ee00416bace27d2e56eb774e4"},"cell_type":"markdown","source":"From the p-value shown, title can affect survivalability of passenger. But its a lil bit hard to draw a pre assumption on this case. Maybe the most prioritized passenger is Mrs because they are woman and some of them may be old (old, woman), second is miss (younger than Mrs), third is Honored person, and last prioritized is Mrs(ordinary people)."},{"metadata":{"_uuid":"fe1ea3f24b9cd1631e7cd088a5593ed6e9d0540d"},"cell_type":"markdown","source":"**3. Evaluating Sex effect on Survived**\n\nSex is a categorical variable, so for doing the dependence test we can use chi square test "},{"metadata":{"trusted":true,"_uuid":"93a383a80a77eb27fd4646f6f150d97a18b6123a"},"cell_type":"code","source":"#using chi square to evaluate\nsex_eff <- chisq.test(train_data$title, train_data$Survived)\nsex_eff","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"9bc82fe8ac5c392da34002d594883c9fdf374a17"},"cell_type":"code","source":"#visualizing both variable using barplot\ntrain_data %>%\n    ggplot(aes(x = Sex, fill = Survived)) + geom_bar(position = \"fill\") + ylab(\"Sex %\")","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"ac992dbbbbd93e0dd6f21b601e8ab4f832240108"},"cell_type":"markdown","source":"It is quite obvious from previous result on title, Mrs Miss are the two most prioritized passenger since they are woman, therefore female passenger most likely to survive during the accident than male passenger. "},{"metadata":{"_uuid":"cd515cab90c53fdbd5beb7553c53ebe1562f00ea"},"cell_type":"markdown","source":"**4. Evaluating age_cat (Age category) effect on Survived**\n\nage_cat is a categorical variable, so for doing the dependence test we can use chi square test "},{"metadata":{"trusted":true,"_uuid":"8ba52d45ff65f042168dba9e738a87fcc535dbee"},"cell_type":"code","source":"#using chi square to evaluate\nacat_eff <- chisq.test(train_data$age_cat, train_data$Survived)\nacat_eff","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"7f683b821af3807d73ebe55ea62bd66093e63959"},"cell_type":"code","source":"#visualizing both variable using barplot\ntrain_data %>%\n    ggplot(aes(x = age_cat, fill = Survived)) + geom_bar(position = \"fill\") + ylab(\"Age Category %\")","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"ed7cb2f7d540c99887ce6fcaaff64cb75ae2c5a3"},"cell_type":"markdown","source":"The result is a lil bit confusing. Logically the more prioritized is children, teen and elder.  But in this case, elder is least prioritized. What is the cause ? Let's inspect it by using Sex and title variable."},{"metadata":{"trusted":true,"_uuid":"e10f93d647cc9b68f722241706d6c713abee6a1f"},"cell_type":"code","source":"#inspecting why elder is least prioritized \n#by their title and Sex\ntrain_data %>% filter(age_cat == 'Adult' | age_cat == 'Elder') %>%\n    group_by(age_cat) %>%\n        count(title, Sex) %>% select(age_cat, title, Sex, n) %>% mutate(n_perc = n/sum(n))","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"beb069b93a461eda7c6f8c59045081e0d58a02d9"},"cell_type":"markdown","source":"The result shows that honorific female (the most prioritized pasenger assumed by their Sex and title) in Adult group > Elder group.  And the minimum percentage of survivalability can be caused by their small population compared with other age category."},{"metadata":{"_uuid":"906be48589e59f98d561b510632b4989a107e1ac"},"cell_type":"markdown","source":"**5. Evaluating Number of Family in Ship (Family_inship) effect on Survived**\n\nFamily_inship is a categorical variable, so for doing the dependence test we can use chi square test "},{"metadata":{"trusted":true,"_uuid":"79c103ec028b69d024e6656d2b5edd4dd1ab89c8"},"cell_type":"code","source":"#using chi square to evaluate\nfamship_eff <- chisq.test(train_data$Family_inship, train_data$Survived)\nfamship_eff","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"6681db96b3e7db723afd8c9c786749e90c03976b"},"cell_type":"code","source":"#visualizing both variable using barplot\ntrain_data %>%\n    ggplot(aes(x = Family_inship, fill = Survived)) + geom_bar(position = \"fill\") + ylab(\"Number of Family member in ship %\")","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"1882a7e2e058539673ea7a214f528dadd2bfecb0"},"cell_type":"markdown","source":"From the result above shows that small family tend to survive. It makes sense since its easier for small group (2-5 people) to help each other in emergency situation (like titanic sinking) compared to those who alone  and in big group (>5 people). The diagram shows that a person who are in big group is less likely to survived than in small group."},{"metadata":{"_uuid":"822683520850e093c7221ad69fdd1f6c1274d507"},"cell_type":"markdown","source":"**6. Evaluating type of Ticket purchased (ticket_for) effect on Survived**\n\nticket_for is a categorical variable, so for doing the dependence test we can use chi square test "},{"metadata":{"trusted":true,"_uuid":"7259ef09cf52e3017a055f8952ff7636a14bd372"},"cell_type":"code","source":"#using chi square to evaluate\nticket_eff <- chisq.test(train_data$ticket_for, train_data$Survived)\nticket_eff","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"c4fcb795bd841c2ea05b7702cca6d089fda58873"},"cell_type":"code","source":"#visualizing both variable using barplot\ntrain_data %>%\n    ggplot(aes(x = ticket_for, fill = Survived)) + geom_bar(position = \"fill\") + ylab(\"Type ticket purchased %\")","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"36d0fc36197ffa2df70a523b3ffd823f2fe19f5a"},"cell_type":"markdown","source":"Result above confirms the previous result on family member in ship. "},{"metadata":{"_uuid":"c7353fc71bccdf24f1116e633509f2f1d07ab78b"},"cell_type":"markdown","source":"\n**7. Evaluating Embarked effect on Survived**\n\nEmbarked is a categorical variable, so for doing the dependence test we can use chi square test "},{"metadata":{"trusted":true,"_uuid":"9a624f1acd86350d1027f0acf32552919033472b"},"cell_type":"code","source":"#using chi square to evaluate\nemb_eff <- chisq.test(train_data$Embarked, train_data$Survived)\nemb_eff","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"edc3e234617a4c6a7578786f34a272b7b86b205e"},"cell_type":"code","source":"#visualizing both variable using barplot\ntrain_data %>%\n    ggplot(aes(x = Embarked, fill = Survived)) + geom_bar(position = \"fill\") + ylab(\"Embarked on port %\")","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"81a8f8b55c750a6806670a864b23616bc4f78550"},"cell_type":"markdown","source":"Embarked variable shows Port of Embarkation (Departure). \nC = Cherbourg\nQ = Queenstown\nS = Southampton\n\nIs this variable affect survivalability of passengers ?\nIn my opinion, port of Embarkation shows that where the passenger came from. So I can say that passenger that embarked from Southampton is civilian of Southampton, etc.\n\nUntil now, I haven't gotten any idea about this variable and its effect on survivability of the passenger. So I'll omit this variable."},{"metadata":{"trusted":true,"_uuid":"f58aed47a150b41c5dc94ab0be8725c4bb6a4f7b"},"cell_type":"code","source":"#omitting Embarked variable\nfull_data <- full_data %>% select(-Embarked)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"de544a7072be0f1361dd57dfbd04d95768192b34"},"cell_type":"markdown","source":"**FEATURE EVALUATION AND SELECTION HAS BEEN DONE, NOW WE CAN PROPOSE FORMULA AS **\n\nSurvived ~ Pclass + title + Sex + age_cat + Family_inship + ticket_for "},{"metadata":{"_uuid":"8b2f8ee40092817b356d3c48d8867125b3bed65d"},"cell_type":"markdown","source":"**Handling imbalanced data **"},{"metadata":{"_uuid":"a7142e8b8fb2a50594b88188ad290cc8279f7e2c"},"cell_type":"markdown","source":"After considerign which variables to be analyzed, now let's handle the dataset by using cross validation technique."},{"metadata":{"trusted":true,"_uuid":"702fae97e01fb8f585e87a3ba5fe2efb0f960fe6"},"cell_type":"code","source":"#this is the ration between minority and majority class\ny_ratio","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"8b00a7530747f5ad9693403883d88bac3ce305b0"},"cell_type":"code","source":"#load necessary package\nlibrary(caret)\n\n#subset to get the training data\ntrain_data <- full_data %>% filter(set == 'train')\n\n#we will use k-fold cross validation\n# Define training control\nset.seed(123)\ntrain.control <- trainControl(method = \"repeatedcv\", \n                              number = 10, repeats = 3)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"d65fda243efe943e217605b309ab8bcbb57d28ed"},"cell_type":"markdown","source":"Ok, for first trial, lets use RF first"},{"metadata":{"trusted":true,"_uuid":"ed561fe7413808717fe70e5abb8229fee09aefad"},"cell_type":"code","source":"# Train the model\nmodel <- train(Survived ~ Pclass + title + Sex + age_cat + Family_inship + ticket_for, \n               data = train_data, method = \"rf\", trControl = train.control)\n\n# Summarize the results\nprint(model)","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"2825e10bde1a8e69a3bf507cae5a0f68fcaeabaf"},"cell_type":"markdown","source":"**Let's use the model to predict using test data**"},{"metadata":{"_uuid":"e68dce52a071983822d67c3df090edd35debdc67"},"cell_type":"markdown","source":"After getting our model, let's use the model to evaluate the test dataset."},{"metadata":{"trusted":true,"_uuid":"f920961cee8238363628a060cbcd8df3fba2052a"},"cell_type":"code","source":"test_data <- full_data %>% filter (set == 'test')\nresult <- predict(model, test_data)","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"eb55afe8bee2bd2174ddb716ecdbd62393ecc03d"},"cell_type":"code","source":"# Write CSV in R\nwrite.csv(result, file = \"newest_titanic.csv\")","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"8f4d923bae77f4aa4a5df8fe4cf1244a660baf84"},"cell_type":"code","source":"","execution_count":null,"outputs":[]}],"metadata":{"kernelspec":{"display_name":"R","language":"R","name":"ir"},"language_info":{"mimetype":"text/x-r-source","name":"R","pygments_lexer":"r","version":"3.4.2","file_extension":".r","codemirror_mode":"r"}},"nbformat":4,"nbformat_minor":1}