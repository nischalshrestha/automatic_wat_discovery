{"cells":[{"metadata":{"_uuid":"51211bb1a2dc43309930824e319554e13a9c24c4"},"cell_type":"markdown","source":"This is my first published kernel to Kaggle to predict people who survive in Titanic. I've been playing around with R for the last few months and feel free to give comments to help me improve my skills in my journey to become a data scientist. \n\nI've submitted this result and my score is 79% and below is the logic I try to apply to predict the outcome based on Random Forest. "},{"metadata":{"trusted":true,"_uuid":"fb94e2acf3b93522810546c3f1aa28af31c2cf78"},"cell_type":"code","source":"# load in packages we'll use\nlibrary(tidyverse) # utility functions\nlibrary(rpart) # for regression trees\nlibrary(randomForest) # for random forests\nlibrary(dplyr)\nlibrary(ggplot2)\n\ntrain <- read.csv(\"../input/train.csv\", stringsAsFactors=FALSE)\ntest <- read_csv(\"../input/test.csv\")\n","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"fb84b8eac92daea9ec977a132dc42a91eaa68b45"},"cell_type":"code","source":"summary(train)\nsummary(test)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"8f3def7d2ebaa8b724ef16664b0255a91b8693ad"},"cell_type":"markdown","source":"After importing the data and reviewing the summary for both tables, I can see the following anomalies\n* A lot of NAs in Age\n* 1 NA in Fare in test table only\n* The max value for Fare is significantly higher compared to mean and median. For example in train$fare, mean = 32.2 and median = 14.45 whilst max value = 512.33. \n\nI'm going to replace all these NAs with average value for each field and will leave the fare issue for later since I'm not sure how significant this information will be yet. \n"},{"metadata":{"trusted":true,"_uuid":"e606fdf61cf39b9ee5c7090c51b8b6cb858ca695"},"cell_type":"code","source":"# there are two methods to replace NA below is another method but I'm using the other option\n# another method to replace NA\n#age.mean <- mean(train$Age, na.rm=TRUE)\n#train$Age[is.na(train$Age)] = age.mean\n\n# fix the train data due to NA issue\navg <- median(train$Age, na.rm = TRUE)\ntrain$Age <- replace(train$Age,is.na(train$Age),avg)\n\n# fix the test data due to NA issue\navg <- median(test$Age, na.rm = TRUE)\ntest$Age <- replace(test$Age,is.na(test$Age),avg)\n\n# there is also one NA under FARE for test data and this will be fixed as well.\navg <- median(test$Fare, na.rm = TRUE)\ntest$Fare <- replace(test$Fare,is.na(test$Fare),avg)\n","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"b99f2215a051715cdf39150e697227c6306ccaa4"},"cell_type":"markdown","source":"I'm going to summarise some of the features using bar plot to see how they can determine if some one is going to survive or not.\nBased on the visualisation below I can see the following information\n\n* Sex : if you are a male then you are likely to die\n* Pclass (passenger class) : if you are in class 3 most likely you will die whilst if you are in class 1 you have higher chance to survive\n* Parch (with parents or children) : we can see that people with values 1 or 2 have roughly equal chance to survive whilst people with value 0 most likely to die\n* SibSp (with sibbling or spouse) : people with sibbling or spouse have roughly equal chance to survive\n* Embarked : people who embarked from Queenstown and Southampton have higher chance to die compared to Cherbourg\n\nI can see based on the data some of the information is quite logical. You would expect women and children to be given priority to lifeboats and other life support as what normally occur generally when a disaster occur.\nThe same with people in class 1 where they pay more fees, you would expect they have better access to lifeboats and life support as well as less crowded than lower classes. \n\nThe other two features Parch and SibSp probably can be grouped together as another field called with family. It seems that people with families have roughly equal chance to survive than people without any families on board. \nThat's probably because they helped each other out to survive the disaster and hence they have slightly better chance to survive. However, I'm not sure whether the embarkation point is a good feature to use and probably is driven\nmainly by passenger class. \n"},{"metadata":{"trusted":true,"_uuid":"2e8c73204fe7a3cf6807f7f5507dc9dfd3528bbc"},"cell_type":"code","source":"library(gridExtra)\nlibrary(grid)\n\n# tidy one rows with no embarkation point and just put them to C ( 2 records only)\nsubset(train,!(Embarked %in% c('C','Q','S')))\ntrain$Embarked[!(train$Embarked %in% c('C','Q','S'))] <- 'C'\n\n# ggplot using geom_bar for some of the features\na <- ggplot(train, aes(x = factor(Sex), fill = factor(Survived))) + geom_bar(position='dodge')   \nb <- ggplot(train, aes(x = factor(Pclass), fill = factor(Survived))) + geom_bar(position='dodge')   \nc <- ggplot(train, aes(x = factor(Parch), fill = factor(Survived))) + geom_bar(position='dodge')   \nd <- ggplot(train, aes(x = factor(SibSp), fill = factor(Survived))) + geom_bar(position='dodge')   \ne <- ggplot(train, aes(x = factor(Embarked), fill = factor(Survived))) + geom_bar(position='dodge')   \n\ngrid.arrange(a,b,c,d,e, ncol=2)\n\n","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"173208bbade814a46cd7480cea62f5316b253f40"},"cell_type":"markdown","source":"In the below bar plot, you can see that most people embarking from Cherbourg mostly survive because most of them sit in class 1 while most people from Southampton sit in class 3.\nHence, I will not use embarked as a feature to use in random forest but rather just use passenger class. "},{"metadata":{"trusted":true,"_uuid":"b0938788ca0c7d7edf3594e641426113b3d5a565"},"cell_type":"code","source":"ggplot(train, aes(x = factor(Embarked), fill = factor(Survived))) + geom_bar(position='dodge')  + facet_grid(Pclass~.)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"1e7b734db8fd846862c557770dc9f942eaa416b9"},"cell_type":"markdown","source":"The next feature I want to analyse a bit further is Age and need to figure out how to group the age to help machine learning use it as another categorical feature. \nThere are two points that I want to analyse further :\n1.  Do a lot of kids survive?\n2. How about the older people like over 60?\n\n"},{"metadata":{"_uuid":"7731513005398a2a6362e40b023cb9474d586a78"},"cell_type":"markdown","source":"\n"},{"metadata":{"trusted":true,"_uuid":"92fdcfd50499b888565d9a4fcf0c7fe1a486c56e"},"cell_type":"code","source":"train$AgeGrp[train$Age<=12] <- 'Kids'\ntrain$AgeGrp[train$Age>12 & train$Age<=55] <- 'Adults'\ntrain$AgeGrp[train$Age>55] <- 'Seniors'\ntrain$AgeGrp <- factor(train$AgeGrp)","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"42b337bb4a0115c6147fd45ca2483bdf456d8367"},"cell_type":"code","source":"prop.table(table(train$AgeGrp))*100","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"f338f07bdc232df35e59f093eed8fa988087b72c"},"cell_type":"code","source":"train %>% filter(AgeGrp != 'Adults') %>% ggplot(aes(x = factor(Sex), fill = factor(Survived))) + geom_bar(position='dodge') + facet_grid(AgeGrp~Pclass)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"f047621b5e4363f92f938f042a8093448d89c21e"},"cell_type":"markdown","source":"I'm grouping the Age to a new category called AgeGrp and consists of three categories :\n\n1. Kids\n2. Adults\n3. Seniors\n\nOnce the grouping is done it can be seen that proportion of Kids and Seniors are not very significant (less than 10%).\n\n* Adults : 87.8%\n* Kids : 7.8%\n* Seniors : 4.5%\n\nHowever, based on this new grouping it can be seen that male kids have better chance to survive as long as they are not in passenger class 3 where a lot kids die. This is quite consisten with the general consensus that people in passenger class 3 have less chance to survive compared to class 2 or class 1. We can also see people over 60 do not have a good chance to survive regardless of the passenger class they are in. \n"},{"metadata":{"_uuid":"eaefa0144c64e93e1a59bec1da3919c02a521ec0"},"cell_type":"markdown","source":"\nNow, I'm going to analyse the fields Parch and SibSp. From my point of view, this can be split into another category to determine if someone travelling by themselves or with families. It can be seen from the data below that about 40% of passengers have families travelling with them and 60% travelling by themselves or rather with friends. "},{"metadata":{"trusted":true,"_uuid":"bfa5c550a1bb24b8ae7f0b87ecf2f3688011923e"},"cell_type":"code","source":"# group to determine family/single\ntrain$status <- 'Family'\ntrain$status[train$Parch==0 & train$SibSp==0] <- 'Single'\ntrain$status <- factor(train$status)\n\n# work out the composition of the data\na <- prop.table(table(train$status)) * 100\nb <- table(train$status)\nrbind(Pctg = a,Count = b)","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"d6db4e842c7ea29714498d419ef7e04d69c4389d"},"cell_type":"code","source":"train %>% ggplot(aes(x = factor(status), fill = factor(Survived))) + geom_bar(position='dodge') + facet_grid(.~Pclass)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"ccb42f6d7a2c8d85c3731cb0235ef91ac30ebb1d"},"cell_type":"markdown","source":"From the above we can see if you are not passenger class 3 then people with families have higher chance to survive.\nBased on the above, I'm going to use this new field as another feature to use in prediction.\n\nNow, I'm going to put all the existing features and new ones to train random forest.\n"},{"metadata":{"trusted":true,"_uuid":"9fe13888e59346041e23eace9c0a21fb503dc08a"},"cell_type":"code","source":"# Machine learning one using 10 fold validation\nlibrary(caret)\ntrain$Survived <- factor(train$Survived)\n\n\n# create 10 fold validation\ncontrol <- trainControl(method=\"cv\", number=10)\nmetric <- \"Accuracy\"\n\n# Random Forest\nset.seed(7)\nfit.rf <- train(Survived ~ Sex + Pclass + AgeGrp + status + Fare, data=train, method=\"rf\", metric=metric, trControl=control)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"9bc1b27b15e2a4965a45fbe2bb8867fe3f9d7691"},"cell_type":"markdown","source":"Let's review how my prediction performs against training data and review the confusion matrix.\nMy accuracy is 81.6% and balance accuracy is about 78%. So it is not so bad and quite balanced in terms of predictiong the outcome.\n"},{"metadata":{"trusted":true,"_uuid":"53affcaa96180fb11cf1e64cdd4aaab051c03c38"},"cell_type":"code","source":"# based on the summary above, I decided to use random forest as my model\n# let's see confusion matrix against training data to see how accurate it is\n# put the result to another field called Survived2 and you prob will see accuracy around 84%, roughly about the same with 10 fold testing above\n\ntrain$Survived2 <- predict(fit.rf,train)\nconfusionMatrix(train$Survived2,train$Survived)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"2927258636a95ede306a8ee5619c9c649c400236"},"cell_type":"markdown","source":"Now, I'm going to put the model against test data but need to add new categorical values to test data before running the prediction. \n\n"},{"metadata":{"trusted":true,"_uuid":"cc72407d8134d217bc348aaa7bde190d3407d50a"},"cell_type":"code","source":"\ntest$AgeGrp[test$Age<=12] <- 'Kids'\ntest$AgeGrp[test$Age>12 & test$Age<=55] <- 'Adults'\ntest$AgeGrp[test$Age>55] <- 'Seniors'\ntest$AgeGrp <- factor(test$AgeGrp)\n\n\ntest$status <- 'Family'\ntest$status[test$Parch==0 & test$SibSp==0] <- 'Single'\ntest$status <- factor(test$status)\ntest$status <- factor(test$status)\n\nsummary(test)","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"1bca58aa6a947cea81f4d5cb02127bc74e194064"},"cell_type":"code","source":"# now let's apply the model to test data\ntest$Survived <-  predict(fit.rf,test)","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"504da8b227d7c86479ca5330bd893d8097c89557"},"cell_type":"code","source":"submit <- data.frame(PassengerId = test$PassengerId, Survived = test$Survived)\nwrite.csv(submit, file = \"titanic3.csv\", row.names = FALSE)","execution_count":null,"outputs":[]}],"metadata":{"kernelspec":{"display_name":"R","language":"R","name":"ir"},"language_info":{"mimetype":"text/x-r-source","name":"R","pygments_lexer":"r","version":"3.4.2","file_extension":".r","codemirror_mode":"r"}},"nbformat":4,"nbformat_minor":1}