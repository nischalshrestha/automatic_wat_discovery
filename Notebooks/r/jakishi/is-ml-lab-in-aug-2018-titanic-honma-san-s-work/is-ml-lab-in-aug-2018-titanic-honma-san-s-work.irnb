{"cells":[{"metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true},"cell_type":"code","source":"## Importing packages\n\n# This R environment comes with all of CRAN and many other helpful packages preinstalled.\n# You can see which packages are installed by checking out the kaggle/rstats docker image: \n# https://github.com/kaggle/docker-rstats\n\nlibrary(tidyverse) # metapackage with lots of helpful functions\n\n## Running code\n\n# In a notebook, you can run a single code cell by clicking in the cell and then hitting \n# the blue arrow to the left, or by clicking in the cell and pressing Shift+Enter. In a script, \n# you can run code by highlighting the code you want to run and then clicking the blue arrow\n# at the bottom of this window.\n\n## Reading in files\n\n# You can access files from datasets you've added to this kernel in the \"../input/\" directory.\n# You can see the files added to this kernel by running the code below. \n\nlist.files(path = \"../input\")\n\n## Saving data\n\n# If you save any files or images, these will be put in the \"output\" directory. You \n# can see the output directory by committing and running your kernel (using the \n# Commit & Run button) and then checking out the compiled version of your kernel.","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"9dfac4ee8c255e6bb7f8a27e07deaa5615572048"},"cell_type":"code","source":"# load packages\nlibrary(dplyr)\nlibrary(magrittr)\nlibrary(ggplot2)\nlibrary(ggthemes)\nlibrary(car)\nlibrary(corrplot)\nlibrary(caret)\nlibrary(makedummies)","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"491105ab8b3b1d8246dbbb2c2f78a4e97bdbcac6"},"cell_type":"code","source":"#Load data\ntrain <- read.csv('../input/train.csv', header=T, stringsAsFactors=F)\ntest <- read.csv('../input/test.csv', header=T, stringsAsFactors=F)","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"c69799a4657dd01596ca11b9b0acfe2e643e8d8f"},"cell_type":"code","source":"head(train)","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"23ca86181256ca1c0a81323aa7a10facffe30e51"},"cell_type":"code","source":"head(test)","execution_count":null,"outputs":[]},{"metadata":{"_cell_guid":"79c7e3d0-c299-4dcb-8224-4455121ee9b0","_uuid":"d629ff2d2480ee46fbb7e2d37f6b5fab8052498a","trusted":true},"cell_type":"code","source":"# 必要な列のみを抽出\n#train_vari <- train[,c(2,3,5:8,10,12)] # Original Honma san's R code.\ntrain_vari <- train[,c(\"Survived\",\"Pclass\", \"Sex\",\"Age\", \"SibSp\", \"Parch\", \"Fare\",\"Embarked\")]\n\n\n# ブランクをNAに変える\ntrain_vari$Embarked[train_vari$Embarked==\"\"] <- NA\n\n# NAを取り除く\ntrain_naomit <- na.omit(train_vari)\n\n# SEX（性別）の置き換え\n# female:0,male:1\ntrain_naomit[,3] <- ifelse(train_naomit[,\"Sex\"]==\"female\",0,1)\n\n# Embarked（乗船した港）の置き換え\n# C:0,Q:1,S:2\ntrain_naomit[,8] <- ifelse(train_naomit[,\"Embarked\"]==\"C\",0,ifelse(train_naomit[,\"Embarked\"]==\"Q\",1,2))\n\n# ここからロジスティック回帰\n# attachはデータをセットする的なモノ。以降はデータ名を指定しなくてもよくなる\n# attach(train_naomit)\n# ロジスティック回帰モデル作る\nglm_result <- glm(Survived~Pclass+Sex+SibSp+Age+Embarked, family=\"binomial\", data=train_naomit)\n\n# test の整形\n## test <- read.csv(\"~/R/titanic/Rin/test.csv\", stringsAsFactors=F, na.strings=(c(\"NA\", \"\")))\n## test <- test[,c(1,2,4,5,6,7,9,11)]\ntest_naomit <- test[, c(\"Pclass\", \"Sex\",\"Age\", \"SibSp\", \"Parch\", \"Fare\",\"Embarked\")]\n\n# test Age欠損データを平均入れる\n#test_naomit <- test\ntest_naomit$Age <- ifelse(is.na(test_naomit$Age),median(na.omit(test_naomit$Age)),test_naomit$Age)\ntest_naomit$Fare <- ifelse(is.na(test_naomit$Fare),median(na.omit(test_naomit$Fare)),test_naomit$Fare)\n\n# 置き換え\ntest_naomit[,\"Sex\"] <- ifelse(test_naomit[,\"Sex\"]==\"female\",0,1)\ntest_naomit[,\"Embarked\"] <- ifelse(test_naomit[,\"Embarked\"]==\"C\",0,ifelse(test_naomit[,\"Embarked\"]==\"Q\",1,2))\n\n# テスト予測\ntest_Survived <- ifelse(predict(glm_result,newdata=test_naomit,type=\"response\")>=0.5,1,0)\n#output <- cbind(test_naomit$PassengerId,test_Survived) # Original Honma san's R code.\noutput <- cbind(test$PassengerId,test_Survived)\ncolnames(output) <- c(\"PassengerId\", \"Survived\")\noutput\n#write.csv(output,\"~/R/titanic/Rout/output_logi_1.csv\") # Original Honma san's R code.\nwrite.csv(output,\"output_logi_1.csv\", row.names=FALSE)","execution_count":null,"outputs":[]}],"metadata":{"kernelspec":{"display_name":"R","language":"R","name":"ir"},"language_info":{"mimetype":"text/x-r-source","name":"R","pygments_lexer":"r","version":"3.4.2","file_extension":".r","codemirror_mode":"r"}},"nbformat":4,"nbformat_minor":1}