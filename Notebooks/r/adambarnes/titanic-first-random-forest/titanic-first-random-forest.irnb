{"nbformat_minor": 1, "metadata": {"language_info": {"codemirror_mode": "r", "name": "R", "pygments_lexer": "r", "version": "3.4.1", "file_extension": ".r", "mimetype": "text/x-r-source"}, "kernelspec": {"display_name": "R", "name": "ir", "language": "R"}}, "cells": [{"outputs": [], "metadata": {"_uuid": "b15ca201cd0337cdf27c2bc56ecd8e79f954487c", "_cell_guid": "a9c78c22-44c7-4e91-887a-0076117ad2fc", "_execution_state": "idle"}, "cell_type": "code", "source": ["options(stringsAsFactors = FALSE)\n", "\n", "library(dplyr)\n", "library(ggplot2)\n", "\n", "trainData <- read.csv(\"../input/train.csv\")\n", "testData <- read.csv(\"../input/test.csv\")\n", "\n", "fullData <- trainData %>%\n", "    bind_rows(testData)\n", "\n", "str(trainData)"], "execution_count": 1}, {"outputs": [], "metadata": {"collapsed": true, "_uuid": "a451efa36f80988893fb6ee36a5bdac863f73205", "_cell_guid": "d03fcc16-6d12-4272-aca6-687bce79e3e0", "_execution_state": "idle"}, "cell_type": "code", "source": ["# might be easier to use cut next time?\n", "ageClass <- function(Age) {\n", "    if_else(Age <10,\"0-9\",\n", "           if_else(Age < 20,\"10-19\",\n", "                  if_else(Age < 30,\"20-29\",\n", "                         if_else(Age < 40,\"30-39\",\n", "                                if_else(Age < 50,\"40-49\",\n", "                                       if_else(Age < 60,\"50-59\",\"60+\"))))))\n", "}"], "execution_count": 2}, {"outputs": [], "metadata": {"_uuid": "7c46a9c72fdf7e91494327760ebdc086e3200850", "_cell_guid": "daa07263-298e-4298-ad71-f223c92c7c6c", "_execution_state": "idle"}, "cell_type": "code", "source": ["workData <- trainData %>%\n", "    bind_rows(testData) %>%\n", "    mutate(AgeClass = ageClass(Age),\n", "          CabinClass = substr(Cabin,1,1),\n", "          Title = substr(Name,unlist(gregexpr(\",\",Name)) + 2,unlist(gregexpr(\",\",Name)) + 4),\n", "          Title = gsub('\\\\.','',Title),\n", "          Title = factor(gsub(' ','',Title)),\n", "          Sex = factor(Sex),\n", "          CabinClass = factor(CabinClass),\n", "          Embarked = factor(Embarked),\n", "          Survived = factor(Survived),\n", "          Pclass = factor(Pclass)) %>%\n", "        anti_join(testData,by = \"PassengerId\")\n", "\n", "str(workData)\n"], "execution_count": 3}, {"outputs": [], "metadata": {"_uuid": "d70c353d0b46c30b13e7225b4e5015445339b4d0", "_cell_guid": "54a118ed-39ab-4ec7-ad0b-599e070f9b86", "_execution_state": "idle"}, "cell_type": "code", "source": ["ggplot(workData,aes(x = Sex)) + geom_bar(aes(fill = factor(Survived))) + \n", "    scale_x_discrete(labels = c(\"F\",\"M\")) + \n", "    facet_grid(Pclass~AgeClass)"], "execution_count": 4}, {"outputs": [], "metadata": {"collapsed": true, "_uuid": "8befa3bc6404234ff9e75bb1dc837b18fc80fba7", "_cell_guid": "e492f486-5570-4464-af5a-f0668e143c31", "_execution_state": "idle"}, "cell_type": "code", "source": [], "execution_count": null}, {"outputs": [], "metadata": {"_uuid": "129667204d5b830128fcda759c4fb57c9d178d00", "_cell_guid": "3aba0dd7-dfe9-4130-ae9b-8acb160a5300", "_execution_state": "idle"}, "cell_type": "code", "source": ["# average age by sex, Pclass,Parch\n", "avAges <- workData %>%\n", "    filter(!is.na(Age)) %>%\n", "    group_by(Sex,Pclass,Parch) %>%\n", "    summarize(AvAge = round(mean(Age),0))\n", "\n", "avFare <- workData %>%\n", "    filter(!is.na(Fare)) %>%\n", "    group_by(Pclass,Embarked) %>%\n", "    summarize(AvFare = mean(Fare))\n", "\n", "head(avFare,20)"], "execution_count": 5}, {"outputs": [], "metadata": {"_uuid": "60b1738702b7fe76f20693406447f24df47c3b11", "_cell_guid": "95bbf48d-30ab-4196-acb9-e50de3df47a4", "_execution_state": "idle"}, "cell_type": "code", "source": ["# replace NA ages with averages, recalc age class\n", "workData <- workData %>%\n", "    left_join(avAges, by = c(\"Sex\" = \"Sex\",\"Pclass\" = \"Pclass\",\"Parch\" = \"Parch\")) %>%\n", "    left_join(avFare,by = c(\"Pclass\" = \"Pclass\",\"Embarked\" = \"Embarked\")) %>%\n", "    mutate(Age = if_else(is.na(Age),round(AvAge,0),Age),\n", "         AgeClass = factor(ageClass(Age)),\n", "         Fare = if_else(is.na(Fare),round(AvFare,0),Fare))\n", "\n", "head(workData)\n", "rownames(workData) <- NULL"], "execution_count": 6}, {"outputs": [], "metadata": {"_uuid": "af9850b854b75ccf3350b1b5846b62f4035bb7b6", "_cell_guid": "8c898e31-31d4-4bef-b55a-9a06279e93a5", "_execution_state": "idle"}, "cell_type": "code", "source": ["library(randomForest)\n", "\n", "forData <- workData %>%\n", "    select(Survived,Sex,Fare,Pclass,Age,Title,SibSp,Parch,Embarked) \n", "\n", "rf1 <- randomForest(Survived~., data=forData, mtry=2, ntree=50, importance=TRUE)\n", "importance(rf1,type=1)"], "execution_count": 7}, {"outputs": [], "metadata": {"_uuid": "f5df48cf784b06947360b2af79a81ebe94792efd", "_cell_guid": "408e0258-0a56-43ae-b24f-95a4bf8e8451", "_execution_state": "idle"}, "cell_type": "code", "source": ["resultSet <- data.frame(ID = workData$PassengerId,\n", "           Act = workData$Survived,\n", "           Pred = predict(rf1,workData)) \n", "\n", "#check accuracy\n", "sum(resultSet$Act == resultSet$Pred) / nrow(resultSet)\n", "# 91% using Survived,Sex,Fare,Pclass,AgeClass,Title,SibSp,Parch,CabinClass,Embarked\n", "# 89% using Survived,Pclass,Sex,AgeClass,SibSp,Parch,Fare,Title\n", "# 90% using Survived,Pclass,Sex,AgeClass,SibSp,Parch,Fare,CabinClass,Title"], "execution_count": 8}, {"outputs": [], "metadata": {"_uuid": "421d4354b6987fe7dd0ad51670d6bf5cc530ed19", "_cell_guid": "bbc008f3-45cb-484e-8da5-c0ddb9b396c2", "_execution_state": "idle"}, "cell_type": "code", "source": ["# prepare submission file\n", "avAgesTest <- fullData %>%\n", "    filter(!is.na(Age)) %>%\n", "    group_by(Pclass,Parch) %>%\n", "    summarize(AvAge = mean(Age))\n", "\n", "avFareTest <- testData %>%\n", "    filter(!is.na(Fare)) %>%\n", "    group_by(Pclass,Embarked) %>%\n", "    summarize(AvFare = mean(Fare))\n", "\n", "modTestData <- testData %>%\n", "    bind_rows(trainData) %>%\n", "    left_join(avAgesTest, by = c(\"Pclass\" = \"Pclass\",\"Parch\" = \"Parch\")) %>%\n", "    left_join(avFareTest,by = c(\"Pclass\" = \"Pclass\",\"Embarked\" = \"Embarked\")) %>%\n", "    mutate(Age = if_else(is.na(Age),round(AvAge,0),Age),\n", "           Age = if_else(is.na(Age),mean(Age,na.rm = TRUE),Age),\n", "           Fare = if_else(is.na(Fare),round(AvFare,0),Fare),\n", "            AgeClass = ageClass(Age),\n", "            CabinClass = substr(Cabin,1,1),\n", "            Title = substr(Name,unlist(gregexpr(\",\",Name)) + 2,unlist(gregexpr(\",\",Name)) + 4),\n", "            Title = gsub('\\\\.','',Title),\n", "            Title = factor(gsub(' ','',Title)),\n", "            Sex = factor(Sex),\n", "            CabinClass = factor(CabinClass),\n", "            Embarked = factor(Embarked),\n", "            Pclass = factor(Pclass)) %>%\n", "    anti_join(trainData,by = \"PassengerId\") %>%\n", "    select(-Survived)\n", "\n", "rownames(modTestData) <- NULL\n", "\n", "submitData <- data.frame(PassengerId = modTestData$PassengerId,\n", "            Survived = predict(rf1,modTestData),\n", "                       row.names = NULL) \n", "\n", "\n", "str(submitData)\n", "head(submitData)"], "execution_count": 23}, {"outputs": [], "metadata": {"collapsed": true, "_uuid": "f5050692494f74d124352e4453c8a45b76388ba6", "_cell_guid": "67e48bea-6224-44fe-b1a8-c2fa0f0ba2e1", "_execution_state": "idle"}, "cell_type": "code", "source": ["write.csv(submitData,\"submission.csv\",row.names = FALSE)"], "execution_count": 26}], "nbformat": 4}