{"cells": [{"outputs": [], "source": "This notebook will walk you through how to get started with the Titanic competition.  This is a very basic decision tree model.  You can add to this code and create better predictions by making adjustments and running a random forest.  For those looking for a \"hello world\" sample to get started on this data set keep reading.    ", "cell_type": "markdown", "execution_count": null, "metadata": {"_execution_state": "idle", "_uuid": "c8eb8c580fc830e61dfdfa30146cdc8106a938c7", "_cell_guid": "424bb78d-6d2a-4ba7-8d0e-273773f96b3b", "collapsed": false}}, {"outputs": [], "source": "# This is an example of a classic decision tree model. \n# I originally ran this notebook in R Studio.\n\nlibrary(ggplot2) \nlibrary(dplyr) \nlibrary(readr)\ntrain <- read_csv('../input/train.csv', \n     col_types = cols(Fare = col_number(), \n         Age = col_number()))\nhead(train)\n\ntest <- read_csv('../input/test.csv', \n     col_types = cols(Age = col_number(), \n         Fare = col_number()))\nhead(test)\n\n", "cell_type": "code", "metadata": {"_execution_state": "idle", "_uuid": "c8dbd6662dce693898634fe78ff22885da9320c6", "_cell_guid": "01fbb1e7-3a99-0af9-e4e3-98efbe0a14ca", "trusted": false, "collapsed": false, "_active": false}, "execution_count": null, "execution_state": "idle"}, {"outputs": [], "source": "# view the survival numbers \ntable(train$Survived)\n\ntest$Survived <- NA\nall_data <- rbind(train, test)\n\nstr(all_data)\nhead(all_data)", "cell_type": "code", "execution_count": null, "metadata": {"_execution_state": "idle", "_uuid": "4343917b0df92f1ed35f34945d92f0ca86eb469e", "_cell_guid": "0a4fca19-583a-4093-a026-af6d7aed70bf", "trusted": false, "collapsed": false}}, {"outputs": [], "source": "Let's get to know the data by creating a few simple visuals", "cell_type": "markdown", "execution_count": null, "metadata": {"_execution_state": "idle", "_uuid": "e70803b8156e704ab9fa6aaa0bd39ea1d0a70748", "_cell_guid": "8a60af28-38cd-40ce-8f96-52b7180839d8", "collapsed": false}}, {"outputs": [], "source": "# Look at the distribution of sex per class \nlibrary(ggplot2) \nggplot(train,aes(x=factor(Pclass),fill=factor(Sex))) +\n    geom_bar(position='dodge') +\n    ggtitle(\"Training Set\")\n\nggplot(all_data,aes(x=factor(Pclass),fill=factor(Sex))) +\n    geom_bar(position='dodge') +\n    ggtitle(\"All Data\")", "cell_type": "code", "execution_count": null, "metadata": {"_execution_state": "idle", "_uuid": "ad6b5d165fb73d5879edeef0db9f0d6c89fca0b6", "_cell_guid": "34aaa04d-d570-4b24-820c-a89bb8c9c228", "trusted": false, "collapsed": false}}, {"outputs": [], "source": "# look at the distribution of sex that survived or died.  It appears that more females survived.   \n# for this set we'll just look at the training data because we filled the test$Survived column with NAs to better visualize all the data together and make visual comparisons. \nlibrary(ggplot2) \nggplot(train,aes(x=factor(Survived),fill=factor(Sex))) +\n    geom_bar(position='dodge') +\n    ggtitle(\"Training Set\")\n\n#here's a look at the exact numbers\ntable(train$Sex, train$Survived)", "cell_type": "code", "execution_count": null, "metadata": {"_execution_state": "idle", "_uuid": "d5a1f762c68d6ffbc14e5ce2f750aaa2ebe9d33a", "_cell_guid": "07f3640e-136a-4c47-abb0-ab0b7c8d0ea2", "trusted": false, "collapsed": false}}, {"outputs": [], "source": "We can view the survival distribution of children by cabin class and sex.", "cell_type": "markdown", "execution_count": null, "metadata": {"_execution_state": "idle", "_uuid": "c9ef8b4a7b4b09c2f7e08fc20c636d0860a986b6", "_cell_guid": "608deeac-9b12-4b7e-94e7-cec8bb3f6afd", "collapsed": false}}, {"outputs": [], "source": "# using just the training data \nchildren <- subset(train, Age <= 18) \nggplot(children,aes(x=factor(Pclass),fill=factor(Sex))) +\n      geom_bar(position='dodge') +\n      facet_grid(.~ Survived) +\n      ggtitle(\"Training Set\")", "cell_type": "code", "execution_count": null, "metadata": {"_execution_state": "idle", "_uuid": "2f1724ef1fc132f3d21acae2f2b8462881779e65", "_cell_guid": "2f2a743c-a8ea-4d4a-875d-6b26bc6157e7", "trusted": false, "collapsed": false}}, {"outputs": [], "source": "ggplot(train, aes(x=factor(Pclass), fill=factor(Sex))) +\n    geom_bar(position='dodge') +\n    facet_grid(.~ Survived)\n\n# now let's view this slightly differently\nposn.j <- position_jitter(0.3, 0)\n\nggplot(train, aes(x=factor(Pclass), y=Age, col=factor(Sex))) +\n  geom_jitter(size=3, alpha=0.5, position=posn.j) +\n  facet_grid(. ~ Survived)", "cell_type": "code", "execution_count": null, "metadata": {"_execution_state": "idle", "_uuid": "540d679fdec193008f301062046074c055b19183", "_cell_guid": "27df3f2f-2903-4984-a85e-e63c3fc95ac5", "trusted": false, "collapsed": false}}, {"outputs": [], "source": "Let's now look at survival in the context of the cost of ticket and gender. It appears females that paid more for their tickets had a better chance of survival.", "cell_type": "markdown", "execution_count": null, "metadata": {"_execution_state": "idle", "_uuid": "c852f46ff80328401d6f951bb5d79b57ddc6216e", "_cell_guid": "597adf15-0506-4b02-a1c8-84a707032276", "collapsed": false}}, {"outputs": [], "source": "posn.j <- position_jitter(0.4, 0)\n\nggplot(train, aes(x=factor(Sex), y=Fare, col=factor(Sex))) +\n  geom_jitter(size=3, alpha=0.5, position=posn.j) +\n  facet_grid(. ~ Survived)", "cell_type": "code", "execution_count": null, "metadata": {"_execution_state": "idle", "_uuid": "7cc34d257a182c4577a891b7deade75da11cf6ae", "_cell_guid": "63c610d6-a799-4f1f-ad6b-eb6d5b2566f7", "trusted": false, "collapsed": false}}, {"outputs": [], "source": "# Create the column child, and indicate whether child or no child\ntrain$Child <- NA\ntest$Child <- NA\n\ntrain$Child[train$Age < 18] <- 1\ntrain$Child[train$Age >= 18] <- 0\n\ntest$Child[test$Age < 18] <- 1\ntest$Child[test$Age >= 18] <- 0\n\n\n#view the new column to see what's happening with the data.  There's a number of NAs where we didn't have data for age. \nhead(train$Child, 20)", "cell_type": "code", "execution_count": null, "metadata": {"_execution_state": "idle", "_uuid": "bfb0f0f6b047a8cd0be4a151417c13edb41f39e1", "_cell_guid": "b490e65e-197f-4431-8a13-e42b309d6cc9", "trusted": false, "collapsed": false}}, {"outputs": [], "source": "library(rpart)\nlibrary(rpart.plot)\nlibrary(RColorBrewer)", "cell_type": "code", "execution_count": null, "metadata": {"_execution_state": "idle", "_uuid": "79f7b5dd125afb3354ecc4214e93c9c022e5ed99", "_cell_guid": "5040a076-7b28-483c-80e9-cada6053ad98", "trusted": false, "collapsed": false}}, {"outputs": [], "source": "# Fit the model.  Here you can add or drop variables to get better results.  \nfit <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Fare + Embarked + Child, data = train, method = 'class')\n", "cell_type": "code", "execution_count": null, "metadata": {"_execution_state": "idle", "_uuid": "33aebb26b0b08f8e92d4b9103c835883ed74d0cc", "_cell_guid": "256712d1-2dd6-447d-a336-4e9e8d8c3218", "trusted": false, "collapsed": false}}, {"outputs": [], "source": "rpart.plot(fit)", "cell_type": "code", "execution_count": null, "metadata": {"_execution_state": "idle", "_uuid": "2f9065a07fb5260a7bdc0829cdfe54fc5d9ccac6", "_cell_guid": "04823c8d-edc8-4d23-ab8d-d2ac0e0821a7", "trusted": false, "collapsed": false}}, {"outputs": [], "source": "prediction <- predict(fit, test, type = \"class\")", "cell_type": "code", "execution_count": null, "metadata": {"_execution_state": "idle", "_uuid": "9ac8da08eaf6ea5ce393854bc0702bf0dafee84e", "_cell_guid": "03dd8e45-294c-4cf7-a63d-7b20959e3d57", "trusted": false, "collapsed": false}}, {"outputs": [], "source": "solution <- data.frame(PassengerId = test$PassengerId, Survived = prediction)\n\n# look at your survival predictions in the context of passenger ids in the test set\nhead(solution) ", "cell_type": "code", "execution_count": null, "metadata": {"_execution_state": "idle", "_uuid": "b6244ebc78d7a9cdd47316203cd582719d17cbf4", "_cell_guid": "95965979-5490-46bf-9c63-b8c9b5a7c04c", "trusted": false, "collapsed": false}}, {"outputs": [], "source": "# write your solution to a csv using the code below. \n# write.csv(solution, file = \"firstforest.csv\", row.names = FALSE)", "cell_type": "code", "execution_count": null, "metadata": {"_execution_state": "idle", "_uuid": "14056aa7cd7c52d632b0f649580e9c315a18c6d5", "_cell_guid": "a4f7439a-e96a-4379-966e-5e0b606851aa", "trusted": false, "collapsed": false}}, {"outputs": [], "source": "And...there you go! You now know how to create a very simple model and get ranked in the top 50% on Kaggle's Titanic competition.  ", "cell_type": "markdown", "execution_count": null, "metadata": {"_execution_state": "idle", "_uuid": "3f69912cf7fc5f42064ef6bec380611c1d73012b", "_cell_guid": "4ed19baf-81d2-4a0a-8091-01da12dfad40", "collapsed": false}}], "nbformat": 4, "nbformat_minor": 0, "metadata": {"language_info": {"version": "3.4.0", "codemirror_mode": "r", "name": "R", "pygments_lexer": "r", "mimetype": "text/x-r-source", "file_extension": ".r"}, "kernelspec": {"language": "R", "display_name": "R", "name": "ir"}}}