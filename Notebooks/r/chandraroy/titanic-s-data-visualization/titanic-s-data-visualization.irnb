{"cells": [{"source": ["# Introduction\n", "R provides strong data visualization package like ggplot2. This notebook explores \"*ggplot2*\" functions. In addition, it introduces basic R data exploration and visualization commands using Kaggle's Titanic data set.  First, let us load the Titanic data set. Please note, the Titanic data set has two \"csv\" files namely \"train.csv\" and \"test.csv\"."], "cell_type": "markdown", "metadata": {"_uuid": "fda4169d5c07caf6ac76d6b6a0f4a6d3629cc1dd", "_cell_guid": "2738a3bd-f4ec-4f31-8af3-d9c7fb5adcb7"}}, {"execution_count": null, "outputs": [], "source": ["library(ggplot2)\n", "#library(tidyverse) ## A smart alternative to use ggplot functions\n", "#library(dplyr)\n", "#library(ggvis)# Web friendly plots.\n", "\n", "train.df <- read.csv(\"../input/train.csv\", header = TRUE)\n", "test.df <- read.csv(\"../input/test.csv\", header = TRUE)"], "cell_type": "code", "metadata": {"_uuid": "2de49884467801e47f27b7df1a41d3abb91b426b", "_cell_guid": "ee47c4b6-7fe4-4a09-aebd-f0c791bed79a"}}, {"source": ["Use function \"*names(name_of_dataset)*\" explore the  data field, variables, or column names"], "cell_type": "markdown", "metadata": {"_uuid": "1370ed3df53d68a6691213736548df2c7a6b6926", "_cell_guid": "6738ac88-6808-4acb-88f9-a3c4bf07b44d"}}, {"execution_count": null, "outputs": [], "source": ["names(train.df)\n", "names(test.df)"], "cell_type": "code", "metadata": {"_uuid": "9ab3d24ead587f9bed75b934154b1caae5a9870d", "_cell_guid": "f2442ec4-0bbb-4dd4-ae49-03aaf3b1e3a4"}}, {"source": ["# Data Cleaning   \n", "Data cleaning is a good practice before visualizing a dataset. The train and test datasets can be cleaned together or separately. It is good practice to combine the two datasets and clean the combined file. In this respect, rbind() function can be used to combine the dataset with equal number of variables i.e. columns. However, the names() function output shows that *Survived* variable is missing from the test.csv as one needs to predict it. Therefore, use following command to add *Survived* column in the test dataset. "], "cell_type": "markdown", "metadata": {"_uuid": "58c030a458d9f9b839c1d5fd8ee5324aa67e69d2", "_cell_guid": "584a837a-40d3-4270-a31d-5504cb2408e1"}}, {"execution_count": null, "outputs": [], "source": ["test.df2 <- data.frame(Survived = rep(0, nrow(test.df)), test.df[,])"], "cell_type": "code", "metadata": {"_uuid": "64968d7de9ac816e6e1ca227982b1d3bc237c73b", "_cell_guid": "c830f6c0-e4ed-4794-8f08-8f447b403af3"}}, {"source": ["Now, we can use function rbind to stitch train and test datasets as given below. "], "cell_type": "markdown", "metadata": {"_uuid": "2fc0b3d6af0f826e93f8b6e01a9f7c330bfaf5ea", "_cell_guid": "14a70eed-c79a-4a9e-8254-da22cb01228b"}}, {"execution_count": null, "outputs": [], "source": ["combined.df <- rbind(train.df, test.df2)\n", "\n", "# Check the fields wit NAs\n", "colnames(combined.df)[ apply(combined.df, 2, anyNA) ]\n", "\n", "# Impute missing Age with mean\n", "summary(combined.df)\n", "\n", "combined.df$Age[is.na(combined.df$Age)] <-28.00\n", "\n", "# Replace NA in Embarked with most common Embarked point\n", "table (combined.df$Embarked)\n", "# Replace NAs in Embarked column with 'S'; it is the most common point of boarding\n", "train.df$Embarked[is.na(train.df$Embarked)] <- 'S'\n", "combined.df$Embarked[is.na(combined.df$Embarked)] <- 'S'\n", "\n"], "cell_type": "code", "metadata": {"_uuid": "7d589db830c6d93d0a5d28e6987f6f87d041ce0a", "_cell_guid": "540c47e4-9455-4221-a8f2-92d87f38d50d"}}, {"source": ["# Data Visualization  \n", "Great! now we can visualize the titanic dataset. \n", "* Distribution of Gender among various Age groups. \n", "* Disstribution of Gender in various Passenger Class (Pclass: 1st, 2nd, and 3rd)"], "cell_type": "markdown", "metadata": {"_uuid": "0b201194407f3e3d00b2769527a6125b270fe7b9", "_cell_guid": "f65ade2a-9028-497c-8014-427fc1b759f6"}}, {"execution_count": null, "outputs": [], "source": ["# Visualize Age and Gender distribution.\n", "\n", "ggplot(data = combined.df)+\n", "  geom_histogram(mapping = aes(x = Age, fill = Sex))\n", "\n", "ggplot(data = combined.df)+\n", "  geom_bar(mapping = aes(x = Pclass, fill = Sex))\n", "# Plot Correlation between survivors and Gender\n", "train.df$Survived <- as.factor(train.df$Survived)\n", "ggplot(data = train.df )+\n", "    geom_point( mapping = aes( x = Age, y = Fare, fill = Survived, color = Survived))\n", "    #geom_smooth()"], "cell_type": "code", "metadata": {"_uuid": "02bfe0df5129d97face9e1c7fefa36f49e3af71d", "_cell_guid": "5cda00e2-6d66-43ec-baa4-d69eb47a7146"}}, {"source": ["* What is the age wise share of male to female survivors?"], "cell_type": "markdown", "metadata": {"_uuid": "a354954fdf37caf0ca731439b427ce716b5884d0", "_cell_guid": "5b271a79-75ca-4b52-80f1-a3bce0d98c5a"}}, {"execution_count": null, "outputs": [], "source": ["ggplot(data = train.df)+\n", "    geom_bar(mapping = aes(x = Age, fill = Sex))"], "cell_type": "code", "metadata": {"_uuid": "17c6ea4d2928580e3bf5a0868fe97621cffad51d", "_cell_guid": "579eb4c7-6a1b-4912-a16b-72494038f3d3"}}, {"source": ["* Did the Embarked point influence Survival rate? "], "cell_type": "markdown", "metadata": {"_uuid": "82190b3e7e3f13a8114e5ec6c9ed783cd763039c", "_cell_guid": "e9316986-051e-48fd-8b4c-fe4eb9337598"}}, {"execution_count": null, "outputs": [], "source": ["#Survived is int; convert it into categorical variable i.e. factor\n", "train.df$Survived <- as.factor(train.df$Survived)\n", "#Plot: A bar chart with Embarked on X axis.\n", "ggplot(data = train.df)+\n", "    geom_bar(mapping = aes( x = Embarked, fill = Survived))"], "cell_type": "code", "metadata": {"_uuid": "3a382bc9e9bdddd8a5e4a8df08628e55e472fdef", "_cell_guid": "a7dd875a-4a38-4fd5-8782-ad31499731b8"}}, {"source": ["* What is the Fare distribution based on Class?\n", "NOTE: Plot shows Fare has wide data range; this is indicative of outliers. "], "cell_type": "markdown", "metadata": {"_uuid": "bd0be9b5326dbc128d1e0bc07bbdbf8cf073bb5a", "_cell_guid": "b9be4580-d49d-4cf5-8ad3-29b7419cbab6"}}, {"execution_count": null, "outputs": [], "source": ["ggplot( data = combined.df)+\n", "    geom_bar(mapping = aes( x = Fare, fill = Pclass))"], "cell_type": "code", "metadata": {"_uuid": "ebdbb4441907968cd0c3e781a90a989767c78519", "_cell_guid": "6859f438-d46c-4be9-81b5-1cad64d66ab4"}}, {"source": ["* Plot a box-plot to visualize outliers if any in the Fare?"], "cell_type": "markdown", "metadata": {"_uuid": "5b11adc6f22274318da7f06caf1a5c62acda8e7e", "_cell_guid": "0d580559-8899-463a-843d-2b25bf0b536e"}}, {"execution_count": null, "outputs": [], "source": ["  boxplot( combined.df$Fare, col = \"palevioletred1\")\n", "# Alternatively one can use summary() function.\n", "# It displays Minimum, Maximum, Median, and Mean value.\n", "# Further, it also displays the 1st and 3rd Quratile for detecting outliers.\n", "# Outlier > Median + 1.5 * 3rd IQR\n", "summary(combined.df$Fare)"], "cell_type": "code", "metadata": {"_uuid": "95c1313619c0df078bb77ad87e66187b8a71cdda", "_cell_guid": "d61df713-fffb-4457-a9b3-d841ce45b549"}}], "nbformat": 4, "nbformat_minor": 1, "metadata": {"kernelspec": {"name": "ir", "display_name": "R", "language": "R"}, "language_info": {"name": "R", "pygments_lexer": "r", "mimetype": "text/x-r-source", "version": "3.4.2", "file_extension": ".r", "codemirror_mode": "r"}}}