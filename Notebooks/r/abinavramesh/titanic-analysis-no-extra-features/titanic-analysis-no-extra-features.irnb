{"cells":[{"metadata":{"_uuid":"e014cc128223f97baa4bb67d10dfc14bc533b1f8"},"cell_type":"markdown","source":"# ** Table of contents**\n\n\n* [1. Importing all important packages](#importing_all_important_packages)\n* [2. Importing training and test sets](#Importing_training_and_test_sets)\n* [3. Cleaning and imputing data](#Cleaning_and_imputing_data)\n  * [3.1. Checking for missing data and imputation of missing data](#Checkingformissingdataandimputationofmissingdata)\n  * [3.2. Combining both the datasets](#Combiningboththedatasets)\n  * [3.3. Fixing the missing value in \"Fare\" column](#FixingthemissingvalueinFarecolumn)\n  * [3.4. Imputing \"Embarked\" column](#ImputingEmbarkedcolumn)\n  * [3.4. Imputing Age](#ImputingAge)\n      * [3.4.1 Using a random forest classifier to impute Age](#UsingarandomforestclassifiertoimputeAge)\n      * [3.4.2 Using \"mice\" to impute Age](#UsingmicetoimputeAge)\n * [3.5. Retreival of training set and test set ](#Retreivaloftrainingsetandtestset )\n* [4. Basic Explaratory Analysis of titanic data](#BasicExplaratoryAnalysisoftitanicdata)\n  * [4.1. Total number of people survived vs Not-Survived](#TotalnumberofpeopleurvivedvsNotSurvived)\n  * [4.2. Number of survived vs Not-Survived with respect to Passenger class](#survivedvsNotSurvivedwithrespecttoPassengerlass)\n  * [4.3. Number of survived vs Not Survived with respect to sex](#NumberofurvivedvsNoturvivedwithespecttosex)\n  * [4.4. Analysis with respect to the number of siblings or spouses](#Analysiswithrespecttothenumberofsiblingsorspouses)\n  * [4.5. Analysis with respect to the number of parents or children](#Analysiswithrespectothenumberofparentsorchildren)\n  * [4.6. Analysis if the place of embarkment had an effect on survival](#Analysisiftheplaceofembarkmenthadaneffectonsurvival)\n  * [4.7. Analysis by Cabin](#AnalysisbyCabin)\n  * [4.7. Analysis by Age](#AnalysisbyAge)\n* [5. Modelling](#ModellingSurvivedvsnoturvived)\n  * [5.1. Simple Logistic regression modelling](#SimpleLogisticregressionmodelling)\n      * [5.1.1 Training set predictions](#Trainingsetpredictions)\n      * [5.1.1 Test set predictions](#Testsetpredictions)\n  * [5.2. Classification using K-NN algorithm](#ClassificationusingKNNalgorithm)\n  * [5.3. Classification using Random Forest](#ClassificationusingRandomForest)\n"},{"metadata":{"_uuid":"5980ae5c3471d8fe7c7a582fe997b1fedeab66c1"},"cell_type":"markdown","source":"# **Importing all important packages**\n<a id=\"importing_all_important_packages\"></a>"},{"metadata":{"_uuid":"aee965db13ae626e482f7e0312f6102f7868620f","_execution_state":"idle","trusted":true,"_kg_hide-output":true},"cell_type":"code","source":"library(tidyverse) \nlibrary(readr)\nlibrary(dplyr) # For Data-frame manipulation\nlibrary(ggplot2) # For visualizations\nlibrary(stringr)\nlibrary(lubridate)\nlibrary(tidyr)\nlibrary(readxl)\nlibrary(pROC) #for obtaining ROC and AUC\nlibrary(plotly) # For interactive visualizations\nlibrary(class) # For K-NN algorithm\nlibrary(dummies) # Package used for dummifying variables\nlibrary(randomForest) # Package used for Random Forest classification\nlibrary(mice) # For imputing variables\nlibrary(purrr) # For functional programming in R","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"efb7d1d1e3390b88602b8e794885bcb116b9e7b8"},"cell_type":"markdown","source":"# **Importing training and test sets**\n<a id=\"Importing_training_and_test_sets\"></a>"},{"metadata":{"_kg_hide-output":true,"trusted":true,"_uuid":"46ca2e5376b22fbb235f3d1dd11d4e1b97a75118"},"cell_type":"code","source":"train <- read_csv(\"../input/train.csv\")\ntest <- read_csv(\"../input/test.csv\")\ngender_submission <- read_csv(\"../input/gender_submission.csv\")","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"50c6c8508eb0ef021a24350939e1423a98d9d073"},"cell_type":"markdown","source":"# **Cleaning and imputing data**\n<a id=\"Cleaning_and_imputing_data\"></a>"},{"metadata":{"_uuid":"d15ae9fac0c631502c736d5bb47e6f7b953a4132"},"cell_type":"markdown","source":"## Checking for missing data and imputation of missing data\n<a id=\"Checkingformissingdataandimputationofmissingdata\"></a>"},{"metadata":{"trusted":true,"_uuid":"a367dd2914e81bbff70c9681359d23d96d2cd6ab"},"cell_type":"code","source":"summary(train)","execution_count":null,"outputs":[]},{"metadata":{"_kg_hide-output":false,"_uuid":"4a59119e066799dcca10ab8f19142e0adbfb8d81"},"cell_type":"markdown","source":"As we can see, there are NA's present in Age and Fare columns of the training dataset"},{"metadata":{"trusted":true,"_uuid":"7267384228507aaa3f70a450937473277d49fb28"},"cell_type":"code","source":"summary(test)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"fdd3c29741bc1742eaeb9de28200768dc31f0521"},"cell_type":"markdown","source":"As we can see, there are NA's present in Fare and Age in case of test data"},{"metadata":{"_uuid":"7e827518d23c1668cc09c2e190c7bc72477c84ce"},"cell_type":"markdown","source":"## **    Combining both the datasets**\n<a id=\"Combiningboththedatasets\"></a>"},{"metadata":{"trusted":true,"_uuid":"0199c3719e7866069feacafbf77b443347e8798b"},"cell_type":"code","source":"full<-bind_rows(train %>% select(-Survived),test)\nsummary(full)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"da11f593b2b028d129d8c7342cde91a3325a4e05"},"cell_type":"markdown","source":"##  **Fixing the missing value in \"Fare\" column**\n<a id=\"FixingthemissingvalueinFarecolumn\"></a>"},{"metadata":{"trusted":true,"_uuid":"8cc5b1e9f867374efb0d1bc72e49537e687b79d0"},"cell_type":"code","source":"#Fare is dependent on pclass and embarked\n#What value does the missing value for Fare have for columns pclass and embarked\nfull[is.na(full$Fare),]","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"3c546ad975b548092678740794da4f55efd069d9","scrolled":true},"cell_type":"code","source":"# Since the missing record had PClass = 3 and Embarked=\"S\", we can see how Fare is distributed for these conditions\n\n ggplotly(full %>% select(Pclass,Fare,Embarked) %>% filter(Pclass==3,Embarked==\"S\") %>% ggplot(aes(Fare))+geom_density() )\n full %>% select(Pclass,Fare,Embarked) %>% filter(Pclass==3,Embarked==\"S\") %>%summarize(median(Fare,na.rm=TRUE))","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"e1ad9f1ed8b374de800a66908258acf176a3c719"},"cell_type":"markdown","source":"From the above density plot, we can see that most of the values are concentrated at around 7.8"},{"metadata":{"trusted":true,"scrolled":true,"_uuid":"8bc1155086b4559e3a83f70c267ff7c2b131466a"},"cell_type":"code","source":"#Hence we can populate the missing Fare wih the median\nfull[is.na(full$Fare),][[\"Fare\"]]<-as.data.frame(full %>% select(Pclass,Fare,Embarked) %>% filter(Pclass==3,Embarked==\"S\"))[[\"Fare\"]]%>%median(na.rm = TRUE)\nsum(is.na(full$Fare))","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"9dd7d1fd63aa0928df7e1838e9aaffd2ddef0f61"},"cell_type":"markdown","source":"Thus, the Fare Column is fixed !!!"},{"metadata":{"_uuid":"8dcca780512c1513c0e00f1ed11ffd0e5f78d929"},"cell_type":"markdown","source":"## **Imputing \"Embarked\" column**\n<a id=\"ImputingEmbarkedcolumn\"></a>"},{"metadata":{"trusted":true,"_uuid":"61dc39d011b551cf4ff8821d63dad36739b1961f"},"cell_type":"code","source":"# Checking the columns that have NA in Embarked\nfull[is.na(full$Embarked),]","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"98c7e7edbee0e50248c91a9edba94434d540c928"},"cell_type":"markdown","source":"The variables EMbarked, Fare and Pclass are related because the **Fare of a passanger would depend mainly on the place he/she is boarding AND the Class in which he is seated**. Hence , we can see the variables \"Fare\" and \"Class\" to make a judgement on the value of Embarked.\n\nAs we can see in the above table,\nBoth Embarked columns that have NA in them , have Pclass=1 and Fare=80."},{"metadata":{"trusted":true,"_uuid":"fd6ccf264d4d91f63e1663acd4fd4bdf6ca7d79f"},"cell_type":"code","source":" ggplotly(full %>% select(Pclass,Fare,Embarked) %>% filter(Pclass==1) %>% ggplot(aes(y=Fare,x=Embarked))+geom_boxplot() )","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"c1e522c4c6e7fde2aedace53b2d74b3e20c32cb6"},"cell_type":"markdown","source":"As we can see, for Embarked=C, we have the median Fare at 80, Hence , these 2 passengers might be getting on board from C."},{"metadata":{"trusted":true,"_uuid":"5ae94fa3f16fc27e43faea78afe6326fdd358155"},"cell_type":"code","source":"full[is.na(full$Embarked),]$Embarked<-\"C\"","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"35d4176b1034af41f434c48b407559118089850c"},"cell_type":"markdown","source":"This fixes the \"Embarked column\""},{"metadata":{"_uuid":"9e1aeef54474dfc5cc2b1efccba1c6b8777df34e"},"cell_type":"markdown","source":"## **Imputing Age**\n<a id=\"ImputingAge\"></a>"},{"metadata":{"_uuid":"39c50f05164fe36947d074d241d41712fb465c52"},"cell_type":"markdown","source":"### Using a random forest classifier to impute Age\n<a id=\"UsingarandomforestclassifiertoimputeAge\"></a>"},{"metadata":{"trusted":true,"_uuid":"1f3e1016991d3a709257ab9b1720a014f40a3956"},"cell_type":"code","source":"full$Pclass <- as.factor(full$Pclass)\nfull$Sex <- as.factor(full$Sex)\n  \n# Random Forest classifier made using variables Pclass, Sex, SibSp, Parch\nrf<-randomForest(formula= Age ~Pclass+Sex+SibSp+Parch, data = full%>% filter(!is.na(Age)))\nfull$Age_rf_imputation <- full$Age  \nfull[is.na(full$Age_rf_imputation),][[\"Age_rf_imputation\"]] <-predict(rf,newdata =full %>% filter(is.na(Age)) )","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"5121020fcd424b199c65b57de588068ee412ebb8"},"cell_type":"code","source":"head(full)","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"a94259de73d2f0631e61e7f13a21b70c8f9fd466"},"cell_type":"code","source":"ggplotly(ggplot(full,aes(Age))+geom_histogram())\n","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"8fe7b3e1cfeffb97c1a87abf1851e490aefe58fc"},"cell_type":"code","source":"ggplotly(ggplot(full,aes(Age_rf_imputation))+geom_histogram())","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"3ebf5ee1586fa5ed9076cee92aab6b4c75ed7a49"},"cell_type":"markdown","source":"***As we can see, there is a lottt of difference between the original values of Age column and the \"Age imputed with random forest\" column. Hence this method is not advisable to be used.\nHence lets try another method of imputatation using the \"mice\" package***"},{"metadata":{"_uuid":"dd25481b7ff85e61d64499c5a142b64b2690e541"},"cell_type":"markdown","source":"### **Using \"mice\" to impute Age**\n<a id=\"UsingmicetoimputeAge\"></a>"},{"metadata":{"_uuid":"7e5118b959db40abbe4568dfa737dfebb8d5857a"},"cell_type":"markdown","source":"Checking the number of NA's in Age column "},{"metadata":{"trusted":true,"_uuid":"55d7a5b05ace4f7f9e5ebc0dadce4eada58087fd"},"cell_type":"code","source":"sum(is.na(full$Age))","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"a5bc9ce920cbbbbedce245ae5f8f617067a0eef2"},"cell_type":"markdown","source":"Viewing the summary of full , Just to be sure !!!"},{"metadata":{"trusted":true,"_uuid":"66e97673caddd7d4ca42c2c7b135f4ed5138a1a9"},"cell_type":"code","source":"summary(full)","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"2806db266db22deb24ae75223b41221a8e9fd134"},"cell_type":"code","source":"# Convert the following columns into factors\nconvert_factors <- c(\"PassengerId\",\"Pclass\",\"Sex\",\"Embarked\")\nfull[convert_factors]<- map(.x=convert_factors, .f= function(x){as.factor(full[[x]])})","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"05719cb0af61f509c4cb2e38029d98286667ab87"},"cell_type":"code","source":"# Set a random seed\n  set.seed(129)\n\n# Perform mice imputation, including only useful variables:\n  mice_mod <- mice(full[, names(full) %in% c(\"Pclass\",\"Sex\",\"Embarked\",\"Age\",\"SibSp\",\"Parch\",\"Fare\")], method='rf') \n  \n  mice_output <- complete(mice_mod)","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"5e9cb4c23ed556bffaec7dffc23dec1f51f87d75"},"cell_type":"markdown","source":"To verify if the distributions have changed too much"},{"metadata":{"trusted":true,"_uuid":"59132d8f77241af7a9f3d2f07f8241d6c0ec2473"},"cell_type":"code","source":"# Distribution of original Age distributions\nggplotly(ggplot(full,aes(Age))+geom_histogram())\n\n","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"1fc90c8482166849780853e6acf2ac4b2f61fbd0"},"cell_type":"code","source":"# Distribution of imputed Age distribution using \"mice\"\nggplotly(ggplot(mice_output,aes(Age))+geom_histogram())","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"20a5d292a89c39241e97024279e0ac24eb3961ef"},"cell_type":"markdown","source":"***As we can see from the 2 histograms above, the age distribution has not changed a lot when compared to the original distribution. Hence we can safely used the imputed Age data***"},{"metadata":{"_uuid":"5bf2d2841ba20519ea15c3d668fe8a8bc300f2fe"},"cell_type":"markdown","source":"### Retreival of training set and test set \n<a id=\"Retreivaloftrainingsetandtestset\"></a>"},{"metadata":{"trusted":true,"_uuid":"f6a29e0a6bf6b18bea7c93f9969277b916d1bb88"},"cell_type":"code","source":"full[c(\"Pclass\",\"Sex\",\"Embarked\",\"Age\",\"SibSp\",\"Parch\",\"Fare\")] <-mice_output[c(\"Pclass\",\"Sex\",\"Embarked\",\"Age\",\"SibSp\",\"Parch\",\"Fare\")]","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"efa74a5eb95100069ec2686d9a064e2f660a9e1f"},"cell_type":"code","source":"head(full)","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"6bb97ef96b8065fe5e8ee118b079bfd78b7ed32a"},"cell_type":"code","source":"# Remove the column Age_rf_imputation\nfull$Age_rf_imputation <- NULL\n\n#Split it back into train and test sets\ntrain<-bind_cols(full[1:dim(train)[1],],Survived=train$Survived)\ntest <-full[-(1:dim(train)[1]),]","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"14669be814eb812798c1116463a8814d1145079f"},"cell_type":"markdown","source":"# **Basic Explaratory Analysis of titanic data**\n<a id=\"BasicExplaratoryAnalysisoftitanicdata\"></a>"},{"metadata":{"_uuid":"d07d05d12be11f2c38cbc7b4a7b43a5bf725b542"},"cell_type":"markdown","source":"##  Total number of people survived vs Not-Survived\n<a id=\"TotalnumberofpeopleurvivedvsNotSurvived\"></a>"},{"metadata":{"trusted":true,"_uuid":"2533363a4ca43bfba248cd277c69d78ecceef0b3","_kg_hide-output":false,"_kg_hide-input":false},"cell_type":"code","source":"plot_ly(train %>% group_by(Survived) %>% count(), labels = ~Survived, values = ~n, type = 'pie') %>%\n  layout(title = 'Total Survived vs Not Survived',\n         xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),\n         yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"822df599f552f1a5f85ad7496157fe867756eb7e"},"cell_type":"markdown","source":"## Number of survived vs Not-Survived with respect to Passenger class\n<a id=\"survivedvsNotSurvivedwithrespecttoPassengerlass\"></a>"},{"metadata":{"trusted":true,"_uuid":"3acf2aef4b6d9a853ec9e1c2b453bf1b2f63042e"},"cell_type":"code","source":"  ggplotly(train %>% group_by(Survived,Pclass) %>% count() %>% ggplot(aes(x=factor(Pclass),y=n,fill=factor(Survived))) + geom_col(position = \"fill\") + labs(x=\"Passenger Class\",y=\"Proportion of People\", title = \"Proportion survived vs Not-Survived with respect to Passenger Class\")+scale_fill_discrete(name = \"Survived\"))","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"12e104b7ab21860ed3b73c379a1e47d55f7c91eb"},"cell_type":"code","source":"  ggplotly(train %>% group_by(Survived,Pclass) %>% count() %>% ggplot(aes(x=factor(Survived),y=n,fill=factor(Pclass))) + geom_col(position = \"fill\") + labs(x=\"Survived\",y=\"Proportion of People\", title = \"Proportion Survived vs Not-Survived\")+scale_fill_discrete(name = \"Passenger Class\"))","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"8ba770c2ddc6965f4cbdd304854b4708fd8c9afe"},"cell_type":"markdown","source":"### **Key Takeaways with respect to Passenger class**\n<a id=\"KeyTakeawaywithrespecttoPassengerclass\"></a>\n1. More than 60% of the people in Passenger Class=1 survived, wheras only 25% of the people in Passenger class=3 survived\n2. Among the people who did not survive, more than 60% of them are from Passenger Class=3"},{"metadata":{"_uuid":"5745acd3a21ca09a3cdd8d53152e3ac4a83d6c7d"},"cell_type":"markdown","source":"## **Number of survived vs Not Survived with respect to sex**\n<a id=\"NumberofurvivedvsNoturvivedwithespecttosex\"></a>"},{"metadata":{"trusted":true,"_uuid":"36581ce85fe9eda082bf94bdb0fc9a73659686cc"},"cell_type":"code","source":"  ggplotly(train %>% group_by(Survived,Sex) %>% count() %>% ggplot(aes(x=factor(Sex),y=n,fill=factor(Survived))) + geom_col(position = \"fill\") + labs(x=\"Sex\",y=\"Proportion of People\", title = \"Proportion survived vs Not Survived\")+scale_fill_discrete(name = \"Survived\"))","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"21ed2575dd67d136922dfdb22f77332010c06d20"},"cell_type":"code","source":" ggplotly(train %>% group_by(Survived,Sex) %>% count() %>% ggplot(aes(x=factor(Survived),y=n,fill=factor(Sex))) + geom_col(position = \"fill\") + labs(x=\"Survived\",y=\"Proportion of People\", title = \"Proportion survived vs Not Survived\")+scale_fill_discrete(name = \"Gender\"))","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"5e9303925482e5f156351336ac83e9153faaa051"},"cell_type":"markdown","source":"### **Key Takeaways with respect to Sex**\n<a id=\"KeyTakeawayswithrespectoSex\"></a>\n1. Among female passengers on the ship, about 75% of them survived the crash\n2. Among male passengers on the ship, less than 25% survived.\n3. Among all  passengers who did not survive, more than 75% are males\n"},{"metadata":{"_uuid":"f239726183eee31293e02a3702de4353b2d46935"},"cell_type":"markdown","source":"## **Analysis with respect to the number of siblings or spouses**\n<a id=\"Analysiswithrespecttothenumberofsiblingsorspouses\"></a>"},{"metadata":{"trusted":true,"_uuid":"d87e6c40b7236bb0bd2149050b545d46d5a5699f"},"cell_type":"code","source":"#Number of people with different number of siblings\ntrain %>% group_by(SibSp) %>% count()  ","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"c78e56da6f000319479d7f30fa9ba105942fb36d"},"cell_type":"code","source":"#Percentage of people Not-Survived  \nggplotly(train %>% group_by(SibSp,Survived) %>%summarise(n=n())%>% ungroup()%>% group_by(SibSp) %>%mutate(Total_per_sibling=sum(n),perc_dead=(n/Total_per_sibling)*100)%>%filter(Survived==0)%>%ggplot(aes(x=factor(SibSp),y=perc_dead)) + geom_col(position = \"dodge\",fill=\"skyblue\") + labs(x=\"Number of siblings or spouses\",y=\"Percentage of People Not-Survived (%)\", title = \"Percentage of people Not-Survived\"))","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"2a457acecea0460cf033943c7da5bb058bd310f0"},"cell_type":"markdown","source":"### **Key Takeaways**\n<a id=\"UsingmicetoimputeAge\"></a>\nWe can see that all the people who had 5 siblings/spouses or more are dead. We can almost find a linear trend between percentage of people dead and the number of siblings/spouses they had. We can hypothesize that a person had a better chance of survival if he had lesser number of siblings."},{"metadata":{"_uuid":"b708973164704bdc7e1ec86e39d0691f55c9a023"},"cell_type":"markdown","source":"## **Analysis with respect to the number of parents or children**\n<a id=\"Analysiswithrespectothenumberofparentsorchildren\"></a>"},{"metadata":{"trusted":true,"_uuid":"dbf1656e0cbfe5160b7ea78ad19d662fd6b4a240"},"cell_type":"code","source":"# Count of people with different number of Parents/children\ntrain %>% group_by(Parch) %>% count()  ","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"7d76959a0a47f16853df82a1ed10ffa7ad5f94fc"},"cell_type":"code","source":"# Percentage of people dead with respect to the number of children/parents\nggplotly(train %>% group_by(Parch,Survived) %>%summarise(n=n())%>% ungroup()%>% group_by(Parch) %>%mutate(Total_per_sibling=sum(n),perc_dead=(n/Total_per_sibling)*100)%>%filter(Survived==0)%>%ggplot(aes(x=factor(Parch),y=perc_dead)) + geom_col(position = \"dodge\",fill=\"skyblue\") + labs(x=\"Number of Parents or children\",y=\"Percentage of People Not-Survived (%)\", title = \"Percentage of people Not-Survived\"))","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"1a5c9696386a69f829923eb3f1d1c6ee25654f69"},"cell_type":"markdown","source":"### **Key Takeaway**\n<a id=\"UsingmicetoimputeAge\"></a>\nWe can see that all the people who had 4 or more parents/children are dead. We can probably say that people who had more parents/children were concerned about protecting their family , and hence could have led to a death."},{"metadata":{"_uuid":"a5b298f3ec4b6eaad1f3c11a1622b681b006acaa"},"cell_type":"markdown","source":"## **Analysis if the place of embarkment had an effect on survival**\n<a id=\"Analysisiftheplaceofembarkmenthadaneffectonsurvival\"></a>"},{"metadata":{"trusted":true,"_uuid":"1d51555ce8223c58131c86a66c28317d2cde216a"},"cell_type":"code","source":"#Number of people at different embarking stations\ntrain %>% group_by(Embarked) %>% count() ","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"434908b2afe7b00f78400ec0b81328dd5f7561e0"},"cell_type":"code","source":"ggplotly(train %>% filter(!is.na(Embarked))%>%group_by(Embarked,Survived) %>%summarise(n=n())%>% ungroup()%>% group_by(Embarked) %>%mutate(Total_per_sibling=sum(n),perc_dead=(n/Total_per_sibling)*100)%>%filter(Survived==0)%>%ggplot(aes(x=factor(Embarked),y=perc_dead)) + geom_col(position = \"dodge\",fill=\"skyblue\") + labs(x=\"Station embarked\",y=\"Percentage of People Not-Survived (%)\", title = \"Percentage of people Not-Survived\"))","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"173bfd90c1e39e5f538d635701359d03c4d61c81"},"cell_type":"markdown","source":"### **Key Takeaway**\n<a id=\"UsingmicetoimputeAge\"></a>\nThe percentage of non-survival is greater for station S (Donno why!!! )"},{"metadata":{"_uuid":"6ff7d58cc0404473ee46c700f2574ea55055102c"},"cell_type":"markdown","source":"## **Analysis by Cabin**\n<a id=\"AnalysisbyCabin\"></a>"},{"metadata":{"trusted":true,"_uuid":"f18498d52c5820354a8cabf27a43a6ce30918d54"},"cell_type":"code","source":"  # By Cabin\n train %>% mutate(Cabin_corrected= substring(Cabin,1,1)) %>% filter(!is.na(Cabin_corrected)) %>% count(Cabin_corrected)%>% mutate(Total_count=sum(n))","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"ec42ec5b67b2362dd1404d11d848d600f8f10549"},"cell_type":"markdown","source":"### Key Takeaway\n<a id=\"UsingmicetoimputeAge\"></a>\nThere are only 204 observations (out of 891 observations in the training set) for which the value of cabin is present.. Hence it is not of much significance since most of the data for this field is missing"},{"metadata":{"_uuid":"09d7fee37f9145831024f4940cea78c9e2890217"},"cell_type":"markdown","source":"## **Analysis by Age**\n<a id=\"AnalysisbyAge\"></a>"},{"metadata":{"trusted":true,"_uuid":"63e6fadacec2135b7538d5909512849812acb61b"},"cell_type":"code","source":"ggplotly(train %>% select(Survived,Age,Sex)%>% ggplot(aes(x=factor(Survived),y=Age))+geom_boxplot()+facet_wrap(~factor(Sex)) + labs(x=\"Survived\"))","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"be4f438acd0cd28fb802f7862ae1c01555af296c"},"cell_type":"markdown","source":"### **Takeaway : **\n<a id=\"UsingmicetoimputeAge\"></a>\nWe see that there are not much differences between the median ages between male and female whether survived or not-survived!!"},{"metadata":{"_uuid":"52e9d574deacb85c920f19c758c786afb34acb33"},"cell_type":"markdown","source":"# **Modelling Survived vs not-survived**\n<a id=\"ModellingSurvivedvsnoturvived\"></a>"},{"metadata":{"_uuid":"88cfbc12200c3836833d635ad0d8e8fea342f6ab"},"cell_type":"markdown","source":"## Simple Logistic regression modelling\n<a id=\"SimpleLogisticregressionmodelling\"></a>"},{"metadata":{"trusted":true,"_uuid":"eb7c23722168ccf5022f5a969b9e1d57ce6b2372"},"cell_type":"code","source":"# Converting variables into factors in training and test set\n\n  train$Survived <- factor(train$Survived)\n  train$Pclass <- factor(train$Pclass)\n  train$Sex <- factor(train$Sex)\n  train$Embarked <- factor(train$Embarked)\n\n  \n  test$Pclass <- factor(test$Pclass)\n  test$Sex <- factor(test$Sex)\n  test$Embarked <- factor(test$Embarked)\n  ","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"ef2d06e345c8cabdda42bc0e65ad84e4ac09bbb4"},"cell_type":"code","source":"# Logistic regression model built on important variables\n\nlin_reg<- glm(formula = Survived ~., data = train %>% select(-c(Name,Cabin,Ticket,PassengerId)),family = \"binomial\")\nsummary(lin_reg)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"5b79c32a81ec2bb9497566ee9713c43f1aeedc3c"},"cell_type":"markdown","source":"**Takeaway **\n\nIt seems that only some variables are relavent (based on P-value)\nPclass,Sex, Age and SibSp are the variables that have a P-value<0.05\n\n"},{"metadata":{"_uuid":"cab7d2d4b2c10c9b69400557602e70daa68c61dd"},"cell_type":"markdown","source":"### Training set predictions\n<a id=\"Trainingsetpredictions\"></a>"},{"metadata":{"trusted":true,"_uuid":"8e0fcefaf628ba2acb422c072decc24be1dfba85"},"cell_type":"code","source":"prediction_linreg<-predict(lin_reg,newdata = train %>% select(-c(Name,Cabin,Ticket,Survived,PassengerId)) ,type = \"response\") \n\ntable(train$Survived,as.numeric(prediction_linreg>0.5))\n\n# Import the library pROC to plot ROC values\n library(pROC)\n\n# Create an ROC object \n ROC <- roc(train$Survived, as.numeric(prediction_linreg>0.5))\n\n#Plot the ROC curve\n plot(ROC, col = \"blue\")\n\n# Find the Area under the curve for prediction of training set\npaste(\"The Area under the curve is : \", auc(ROC)) \n\npaste(\"As we can see, the accuracy is\",100*((477+237)/(105+72+477+237)),\"%\",\" on the training set\") ","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"f6226899b380e7bd9df60e3b3bd096e7316e3900"},"cell_type":"markdown","source":"### Test set predictions\n<a id=\"Testsetpredictions\"></a>"},{"metadata":{"trusted":true,"_uuid":"522b4cf7cc8764775d89daea4f4ebb31b6855994"},"cell_type":"code","source":"# Table of predictions of test set\n(cm<-as.matrix(table(Actual = gender_submission$Survived,Predicted = as.numeric(predict(lin_reg,newdata = test ,type = \"response\")>0.5))))\n\n# Create an ROC object \n ROC_test <- roc(gender_submission$Survived, as.numeric(predict(lin_reg,newdata = test ,type = \"response\")>0.5))\n\n#Plot the ROC curve\n plot(ROC_test, col = \"blue\")\n\n# Find the Area under the curve for prediction of training set\npaste(\"The Area under the curve is : \", auc(ROC_test)) \npaste(\"As we can see, the accuracy is\",100*(sum(diag(cm))/sum(cm)),\"%\",\" on the test set\")","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"debe5244aabd334808d42810798aa79e0d43951b"},"cell_type":"markdown","source":"# **Classification using K-NN algorithm**\n<a id=\"ClassificationusingKNNalgorithm\"></a>"},{"metadata":{"trusted":true,"_uuid":"db1054be3de135200b5f3c1206f79b9e04f0de66"},"cell_type":"code","source":"#Dummy training set only with the required columns \nx<-train %>% select(-c(Name,Cabin,Ticket,PassengerId))%>% filter(!is.na(Age) , !is.na(Embarked))","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"d3696d29c2c1f3b671b2adaf3563917e8df50f48"},"cell_type":"code","source":" knn_model<-knn(train = x %>% as.data.frame()%>% select(-Survived)%>% dummy.data.frame(dummy.class = \"factor\"),test =cbind(test,test_actual=gender_submission$Survived)[names(x %>% select(-Survived))]%>% filter(!is.na(Age),!is.na(Fare))%>% as.data.frame() %>% dummy.data.frame(),cl=x$Survived)","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"042387de2e7aaedd42dfce697fdea85757133232"},"cell_type":"code","source":"\ncm<-as.matrix(table( Actual= as.factor(as.vector(cbind(test,test_actual=gender_submission$Survived)[c(names(x %>% select(-Survived)),\"test_actual\")] %>% filter(!is.na(Age),!is.na(Fare)) %>% select(test_actual))[[\"test_actual\"]]),Predicted = knn_model))\npaste(\"As we can see, the accuracy is\",100*(sum(diag(cm))/sum(cm)),\"%\",\" on the training set\")","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"0cfcece6b2e26cd382a74285a8c9ce4ab535b302"},"cell_type":"markdown","source":"# **Classification using Random Forest**\n<a id=\"ClassificationusingRandomForest\"></a>"},{"metadata":{"trusted":true,"scrolled":true,"_uuid":"ddea5f51bf2b3d20aafe28f97446eeb4cbf6f06b"},"cell_type":"code","source":"train1<-bind_cols(full[1:dim(train)[1],],Survived=train$Survived)\ntest1 <-full[-(1:dim(train)[1]),]\ntrain1$Survived <- as.factor(train1$Survived)\nrf<-randomForest(formula = Survived ~ Pclass+Sex+Age+SibSp + Parch + Fare + Embarked, data= train1)\n(cm <- as.matrix(table(Actual = gender_submission[[\"Survived\"]],Predicted = predict(rf,test1))))\npaste(\"As we can see, the accuracy is\",100*(sum(diag(cm))/sum(cm)),\"%\",\" on the test set\")","execution_count":null,"outputs":[]}],"metadata":{"kernelspec":{"display_name":"R","language":"R","name":"ir"},"language_info":{"mimetype":"text/x-r-source","name":"R","pygments_lexer":"r","version":"3.4.2","file_extension":".r","codemirror_mode":"r"}},"nbformat":4,"nbformat_minor":1}