{"metadata": {"language_info": {"name": "R", "mimetype": "text/x-r-source", "file_extension": ".r", "pygments_lexer": "r", "codemirror_mode": "r", "version": "3.4.1"}, "kernelspec": {"display_name": "R", "language": "R", "name": "ir"}}, "nbformat_minor": 1, "cells": [{"source": ["# Load the important libraries\n", "library(ggplot2) # Data visualization\n", "library(readr) # CSV file I/O, e.g. the read_csv function\n", "library(dplyr)\n", "library(rpart)\n", "library(\"rpart\")\n", "library(\"rpart.plot\")"], "outputs": [], "execution_count": null, "metadata": {}, "cell_type": "code"}, {"source": ["# load the necessary files\n", "train <- read.csv('../input/train.csv', stringsAsFactors = F)\n", "test  <- read.csv('../input/test.csv', stringsAsFactors = F)\n", "dim(train)\n", "dim(test)"], "outputs": [], "execution_count": null, "metadata": {}, "cell_type": "code"}, {"source": ["#Tets file have 11 columns while Train got 12. We need to merge them to get a complete dataset, so lest add a column named as Survival to Test\n", "\n", "test$Survived <- NA\n", "full_data <- rbind(train, test)\n", "dim(full_data)\n", "colSums(is.na(full_data))"], "outputs": [], "execution_count": null, "metadata": {}, "cell_type": "code"}, {"source": ["\n", "\n", "# Any results you write to the current directory are saved as output.\n", "\n", "table(full_data$Embarked)\n", "full_data$Embarked[full_data$Embarked==\"\"]=\"S\"\n", "table(full_data$Embarked)\n", "full_data$Title <- gsub('(.*, )|(\\\\..*)', '', full_data$Name)\n", "table(full_data$Sex, full_data$Title)\n", "table(full_data$Sex, full_data$Title)\n", "apply(full_data,2, function(x) length(unique(x)))\n", " \n", "cols=c(\"Survived\",\"Pclass\",\"Sex\",\"Embarked\")\n", "for (i in cols){\n", "  full_data[,i]=as.factor(full_data[,i])\n", "}\n", "\n", "ggplot(full_data[1:891,],aes(x = Pclass,fill=factor(Survived))) +\n", "  geom_bar() +\n", "  ggtitle(\"Pclass v/s Survival Rate\")+\n", "  xlab(\"Pclass\") +\n", "  ylab(\"Total Count\") +\n", "  labs(fill = \"Survived\") \n", "\n", "full_data$Fsize <- full_data$SibSp + full_data$Parch + 1\n", "full_data$Family <- paste(full_data$Surname, full_data$Fsize, sep='_')\n", "\n", "ggplot(full_data[1:891,], aes(x = Fsize, fill = factor(Survived))) +\n", "  geom_bar(stat='count', position='dodge') +\n", "  scale_x_continuous(breaks=c(1:11)) +\n", "  labs(x = 'Family Size') \n", "\n", "full_data[c(62, 830), 'Embarked']\n", "\n", "embark_fare <- full_data %>%\n", "  filter(PassengerId != 62 & PassengerId != 830)\n", "\n", "full_data$Embarked[c(62, 830)] <- 'C'\n", "\n", "full_data$Fare[1044] <- median(full_data[full_data$Pclass == '3' & full_data$Embarked == 'S', ]$Fare, na.rm = TRUE)\n", "sum(is.na(full_data$Age))\n", "ggplot(full_data[1:891,], aes(x = Sex, fill = Survived)) +\n", "  geom_bar() +\n", "  facet_wrap(~Pclass) + \n", "  ggtitle(\"3D view of sex, pclass, and survival\") +\n", "  xlab(\"Sex\") +\n", "  ylab(\"Total Count\") +\n", "  labs(fill = \"Survived\")\n", "\n", "head(full_data$Name)\n", "full_data$FsizeD[full_data$Fsize == 1] <- 'singleton'\n", "full_data$FsizeD[full_data$Fsize < 5 & full_data$Fsize > 1] <- 'small'\n", "full_data$FsizeD[full_data$Fsize > 4] <- 'large'\n", "\n", "factor_vars <- c('PassengerId','Pclass','Sex','Embarked',\n", "                 'Title','Surname','Family','FsizeD')\n", "      \n", "full_data$Embarked[c(62,830)] = \"S\"\n", "full_data$Embarked <- factor(full_data$Embarked)\n", "\n", "full_data$Fare[1044] <- median(full_data$Fare, na.rm=TRUE)\n", "\n", "full_data$family_size <- full_data$SibSp + full_data$Parch + 1\n", "\n", "\n", "predicted_age <- rpart(Age ~ Pclass + Sex + SibSp + Parch + Fare + Embarked + Title + family_size,\n", "                       data=full_data[!is.na(full_data$Age),], method=\"anova\")\n", "full_data$Age[is.na(full_data$Age)] <- predict(predicted_age, full_data[is.na(full_data$Age),])\n", "train_new <- full_data[1:891,]\n", "test_new <- full_data[892:1309,]\n", "test_new$Survived <- NULL\n", "\n", "train_new$Cabin <- substr(train_new$Cabin,1,1)\n", "train_new$Cabin[train_new$Cabin == \"\"] <- \"H\"\n", "train_new$Cabin[train_new$Cabin == \"T\"] <- \"H\"\n", "\n", "test_new$Cabin <- substr(test_new$Cabin,1,1)\n", "test_new$Cabin[test_new$Cabin == \"\"] <- \"H\"\n", "\n", "train_new$Cabin <- factor(train_new$Cabin)\n", "test_new$Cabin <- factor(test_new$Cabin)\n", "\n", "str(train_new)\n", "str(test_new)\n", "my_tree <- rpart(Survived ~ Age + Sex + Pclass  + family_size, data = train_new, method = \"class\", control=rpart.control(cp=0.0001))\n", "summary(my_tree)\n", "prp(my_tree, type = 4, extra = 100)\n", "my_prediction <- predict(my_tree, test_new, type = \"class\")\n", "head(my_prediction)\n", "vector_passengerid <- test_new$PassengerId\n", "my_solution <- data.frame(PassengerId = vector_passengerid, Survived = my_prediction)\n", "head(my_solution)\n", "write.csv(my_solution, file = \"my_solution.csv\",row.names=FALSE)\n", "\n", "\n", "\n"], "outputs": [], "execution_count": null, "metadata": {"_uuid": "b95ae51ad5076894af2fa509b1e9e4d65a0c3b9d", "_cell_guid": "a89bb337-4cf1-42ad-9b4e-5058a95d1465"}, "cell_type": "code"}], "nbformat": 4}