{"cells":[{"metadata":{"_uuid":"64de108b67240454d730987d6dd6c123e760a670","_execution_state":"idle","trusted":true},"cell_type":"code","source":"#Set Working Directory\n\nsetwd(\"../input\")\n\n#Import Data\n\ntitanic.train <- read.csv(file = \"train.csv\", stringsAsFactors = FALSE, header = TRUE)\ntitanic.test <- read.csv(file = \"test.csv\", stringsAsFactors = FALSE, header = TRUE)\n\n\n\n\n","execution_count":4,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"80cdd1b61dc10b3af85d568f51ed5dc67bae0496"},"cell_type":"code","source":"#Explore Various Stats About Tables\n\n#median(titanic.train$Age, na.rm = TRUE)\n#median(titanic.test$Age, na.rm = TRUE)\n#ncol(titanic.test)\n#ncol(titanic.train)\n#names(titanic.test)\n#names(titanic.train)\n\nstr(titanic.test)\nhead(titanic.test)","execution_count":6,"outputs":[]},{"metadata":{"trusted":true,"scrolled":true,"_uuid":"4037e4e7069d94d0b58f1e522f91bd69f62bbab2"},"cell_type":"code","source":"#Adding Indicator for Training Set before Unioning both datasets\n\ntitanic.train$IsTrainSet <- TRUE\ntitanic.test$IsTrainSet <- FALSE\n\n#Adding Survived Column which is missing from test set so that I can Union\n\ntitanic.test$Survived <- NA\n\n#UNION\n\ntitanic.full <- rbind(titanic.train, titanic.test)\n\n#Show top of full data set\n\nhead(titanic.full)","execution_count":7,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"bfbd9e7a623247a6d03b34d7492d4b30c909745e"},"cell_type":"code","source":"#Cleaning the Data\n\n#Replacing null Embarks with \"S\" since that is the mode (Not Optimal)\n\ntitanic.full[titanic.full$Embarked=='', \"Embarked\"] <- 'S'\n\n#Replace nulls Ages with Mean (Not Optimal)\nage.median <- median(titanic.full$Age, na.rm = TRUE)\ntitanic.full[is.na(titanic.full$Age), \"Age\"] <- age.median\n\n#Replace null fares with median fare (Not Optimal)\n\nfare.median <- median(titanic.full$Fare, na.rm = TRUE)\ntitanic.full[is.na(titanic.full$Fare), \"Fare\"] <- fare.median\n # table(is.na(titanic.full$Fare))\n\n#Casting features as factors for computations\n\ntitanic.full$Pclass <- as.factor(titanic.full$Pclass)\ntitanic.full$Sex <- as.factor(titanic.full$Sex)\ntitanic.full$Embarked <- as.factor(titanic.full$Embarked)","execution_count":9,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"aeebbeb4cef7dd25c67c37a4ea2855295608a84a"},"cell_type":"code","source":"#Split Data back to Train and Test\n  \ntitanic.train <- titanic.full[titanic.full$IsTrainSet==TRUE, ]\ntitanic.test <- titanic.full[titanic.full$IsTrainSet==FALSE, ]\ntail(titanic.train)\ntail(titanic.test)\n\n# Change Survived back to Factor\ntitanic.train$Survived <- as.factor(titanic.train$Survived)","execution_count":10,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"a647a4f340a48134da27cd55e21c41197d2c637f"},"cell_type":"code","source":"#Build the Actual Model\n\nsurvived.equation <- \"Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked\"\nsurvived.formula <- as.formula(survived.equation)\n\nlibrary(randomForest)\n\ntitanic.model <- randomForest(formula = survived.formula, data = titanic.train, ntree = 500, mtry = 3, nodesize = 0.01 * nrow(titanic.test))\n\nfeatures.equation <- \"Pclass + Sex + Age + SibSp + Parch + Fare + Embarked\"\nSurvived <- predict(titanic.model, newdata = titanic.test)\n\nPassengerId <- titanic.test$PassengerId\n\noutput.df <- as.data.frame(PassengerId)\noutput.df$Survived <- Survived\n\n#Look at results\n\nhead(output.df)","execution_count":13,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"46edafaac64f457e28fd2eca07bd78ced92cf7d8"},"cell_type":"code","source":"#Write the File to working directory\n\n#write.csv(output.df, file=\"kaggle-submission.csv\", row.names = FALSE)","execution_count":null,"outputs":[]}],"metadata":{"kernelspec":{"display_name":"R","language":"R","name":"ir"},"language_info":{"mimetype":"text/x-r-source","name":"R","pygments_lexer":"r","version":"3.4.2","file_extension":".r","codemirror_mode":"r"}},"nbformat":4,"nbformat_minor":1}