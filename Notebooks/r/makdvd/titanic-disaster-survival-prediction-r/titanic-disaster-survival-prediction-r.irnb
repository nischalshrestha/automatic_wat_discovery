{"cells":[{"metadata":{"_uuid":"04b7f4160bf62b409f92c1ef8e87b110b3af341c","_execution_state":"idle","trusted":true},"cell_type":"code","source":"# File path:\nlist.files(path = \"../input\")\n","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"a220d826081bda8575b7c3b4d1f9a6dba461500c"},"cell_type":"code","source":"# Load packages:\nlibrary(tidyverse) \nlibrary(readr)\nlibrary(tidyverse)\nlibrary(ggplot2)","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"8f51e027ca2be87d56ca897aebc6b8cac058cf3f"},"cell_type":"code","source":"# read dataset:\ntrain_data <- read_csv(\"../input/train.csv\")\ntest_data <- read_csv(\"../input/test.csv\")","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"fd7836a8efa0caf6af8c1532222a025e71c77f10"},"cell_type":"code","source":"# Let's see structure of dataset:\nglimpse(train_data)\nglimpse(test_data)\n# Let's see 3 head observation of dataset:\nhead(train_data, n=3)\nhead(test_data, n=3)","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"e67a9bef12266e2f805e0a09d962bdd4302c4e36"},"cell_type":"code","source":"# Find missing data points in train_data:\nmiss_survived <- any(is.na(train_data$Survived))\nmiss_pclass <- any(is.na(train_data$Pclass))\nmiss_sex <- any(is.na(train_data$Sex))\nmiss_age <- any(is.na(train_data$Age))\n# 177 missing value in age column\nmiss_age_sum <- sum(is.na(train_data$Age))            \nmiss_fare <- any(is.na(train_data$Fare))\nmiss_cabin <- any(is.na(train_data$Cabin))\n# 678 missing value in cabin column\nmiss_cabin_sum <- sum(is.na(train_data$Cabin))        \nmiss_embarked <- any(is.na(train_data$Embarked))\n# 2 missing value in embarked column\nmiss_embarked_sum <- sum(is.na(train_data$Embarked))  ","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"bc193eebae24caa6fd267fdc77633bdd652e77e8"},"cell_type":"code","source":"# Let's remove passengers with missing embarked or age:\nctrain_data <- subset(train_data, is.na(Embarked)==FALSE & is.na(Age)==FALSE)","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"233919dcee879d27edcf50bc865e79eb90694815"},"cell_type":"code","source":"# Let's extract first letter of Cabin column:\nctrain_data$Cabin <- substring(ctrain_data$Cabin, 1,1)","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"9d4c3f26dead20723121c6187aa33a5939d9eaf8"},"cell_type":"code","source":"# Let's change chars of ctrain_data to factors:\nctrain_data$Survived <- as.factor(ctrain_data$Survived)\nctrain_data$Pclass <- as.factor(ctrain_data$Pclass)\nctrain_data$Sex <- as.factor(ctrain_data$Sex)\nctrain_data$Embarked <- as.factor(ctrain_data$Embarked)","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"220af6d392dda0063853195b2819b6e9f5ffd6ac"},"cell_type":"code","source":"# Let's plot survived verse sex:\nggplot(ctrain_data, aes(x=Sex, fill=Survived))+    \n  geom_bar(alpha=0.2)\n# It looks like male passengers are more likely to succumb.\n# Now, look at same graph with proportion. Sex seems to be significant variable.\nggplot(ctrain_data, aes(x=Sex, fill=Survived))+    \n  geom_bar(alpha=0.2, position = \"fill\")","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"c22d7e96d63925b53d1d97b85ff651b737a88911"},"cell_type":"code","source":" # Let's see age impact:\nggplot(ctrain_data, aes(x=Age, fill=Survived))+    \n  geom_density(alpha=0.2)\n# The age does not seem to have a direct impact on survival.\n# let see age and sex variable together: younger male tend to survive. \nggplot(ctrain_data, aes(x=Sex, y=Age, color=Survived))+\n  geom_jitter(alpha=0.5)\n# Again, women are more likely to survive. ","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"8f86e441f338a5f25e2368991ae0f2ad27802112"},"cell_type":"code","source":"# Let's see fare ticket impact: \nggplot(ctrain_data, aes(x=Fare, fill=Survived))+\n  geom_density(alpha=0.2)\n# passenger with expensive ticket fares are more likely to survive. ","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"fdd7b8623eeae9cb7160b2f6557d21e8876e0e29"},"cell_type":"code","source":"# Let's look at class impact: \nggplot(ctrain_data, aes(x=Pclass, fill=Survived))+\n  geom_bar(alpha=0.2)\n# Sex and class are correlated. About 70% of class 3 passenger are male.\nggplot(ctrain_data, aes(x=factor(1), fill=Sex))+\n  geom_bar(alpha=0.5, width =1, position =\"fill\")+\n  facet_grid(.~Pclass) +\n  coord_polar(theta = \"y\")\n# Let's see ticket fare and class together: \nggplot(ctrain_data, aes(x=Pclass, y=Fare, color=Survived))+\n  geom_jitter(alpha=0.5)\n# Ticket fare and class are correlated.","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"c6113cd14b819ebeeb240da25bc9dbe67ee03321","scrolled":true},"cell_type":"code","source":"# Let's see embarkation site impact:\nggplot(ctrain_data, aes(x=Embarked, fill=Survived))+\n  geom_bar(alpha=0.2)\n# here is the same graph with ratio: \nggplot(ctrain_data, aes(x=Embarked, fill=Survived))+\n  geom_bar(alpha=0.2, position=\"fill\")\n# It seems that embarkation C has higher survival rate.\n# Let's look at both class and embarkation site:  \nggplot(ctrain_data, aes(x=Pclass, color=Survived))+\n  geom_bar(alpha=0.5)+\n  facet_grid(~Embarked)\n# Embarkation C have higher ratio of class 1 and class 1 passengers are those who survive. \n# Let's look at both fare and embarkation site: \nggplot(ctrain_data, aes(y=Fare, color=Survived))+\n  geom_boxplot(alpha=0.5)+\n  facet_grid(~Embarked) +\n  theme(axis.text.x = element_blank())\n# let look at Embarkation and Sex combination: \nggplot(ctrain_data, aes(x=Sex, fill=Survived))+\n  geom_bar(alpha=0.5)+\n  facet_grid(~Embarked)\n# Embarkation S have higher ratio of male passenger who are more likely to succumb. ","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"60acd485f0f30f111c72e6ef85797fe23b19d3c2"},"cell_type":"code","source":"# Let's look at cabine impact:\nggplot(ctrain_data, aes(x=factor(Cabin), fill=Survived))+\n  geom_bar(alpha=0.2)\n# Notice that almost all passengers in cabine T died\nggplot(ctrain_data, aes(x=factor(Cabin), fill=Survived))+\n  geom_bar(alpha=0.2, position=\"fill\")","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"59d302d6e056f37dd7705745e40dc6cb3e156654"},"cell_type":"code","source":"# Fitting logistic regression model without interactions:\nfit1 <- glm(Survived~Sex+Age+Pclass+Fare+Cabin+Embarked, data=ctrain_data, family = binomial) \nsummary(fit1)\n# Let's drop insignificant variables:\nfit2 <- glm(Survived~Sex+Age+Cabin, data=ctrain_data, family = binomial) \nsummary(fit2)","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"a4b2b8299a282734fe88ce27ee835788be84324c"},"cell_type":"code","source":"# Fitting logestic regression model with 2 level interactions:\nfit3 <- glm(Survived~Sex+Age+Pclass+Fare+Cabin+Embarked+\n              Sex*Age+Sex*Pclass+Sex*Fare+Sex*Embarked+\n               Age*Fare+Age*Embarked+\n              Fare*Embarked, \n            data=ctrain_data, family = binomial) \nsummary(fit3)\n# Let's drop insignificant variables:\nfit4 <- glm(Survived~Sex+Age+Age*Fare, data=ctrain_data, family = binomial) \nsummary(fit4)","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"9128874b4a786037123a1976cf734b2c19b5a240"},"cell_type":"code","source":"# Chosing the best fit: (fit4)\nfit4 <- glm(Survived~Sex+Age+Age*Fare, data=ctrain_data, family = binomial)\npchisq(deviance(fit4), df.residual(fit4), lower=TRUE)\n# model is adequate.\n# Using Chi test to check if we can drop any variable of fit4:\ndrop1(fit4,test=\"Chi\")\n# No need to drop variables\n# Let's see fitted response value with fit4: \nfitted_response <- fitted(fit4)","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"b20c8628845c285c2363054bb92d7720b0dde286"},"cell_type":"code","source":"# Manipulation of test_data:\nctest_data <- test_data[ , -c(1,3,6,7,8)]\nctest_data$Cabin <- substring(ctest_data$Cabin, 1,1)\nctest_data$Pclass <- as.factor(ctest_data$Pclass)\nctest_data$Sex <- as.factor(ctest_data$Sex)\nctest_data$Embarked <- as.factor(ctest_data$Embarked)","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"6cf518b7d148871d7f1e6fdf0cc1efa53ce7f716"},"cell_type":"code","source":"# Find missing values in ctest_data:\nmiss_pclass_t <- any(is.na(ctest_data$Pclass))\nmiss_sex_t <- any(is.na(ctest_data$Sex))\nmiss_age_t <- any(is.na(ctest_data$Age))\n# 86 missing values in age column.\nmiss_age_t_sum <- sum(is.na(ctest_data$Age))\nmiss_fare_t <- any(is.na(ctest_data$Fare))\n# 1 missing value in fare column.\nmiss_fare_t_sum <- sum(is.na(ctest_data$Fare))\nmiss_cabin_t <- any(is.na(ctest_data$Cabin))\n# 327 missing values in cabin column.\nmiss_cabin_t_sum <- sum(is.na(ctest_data$Cabin))\nmiss_embarked_t <- any(is.na(ctest_data$Embarked))\n\n","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"cca109bf3a00b6d499ab1de169ea2d022e061bec"},"cell_type":"code","source":"# Estimating missing values in age column: \nggplot(ctrain_data, aes(x=Age, color=Sex))+\n  geom_histogram(alpha=0.5)+\n  facet_grid(~Pclass)\n# median is better estimator for age compared to mean since age distribution is skewed.\n# Sex and age are not correlated.\n# Age and class are correlated.\n# Let's find medians of age in each class type:\nmedian_age <- train_data %>%\n  filter(!is.na(Age)) %>%\n  group_by(Pclass) %>%\n  summarize(median(Age))","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"f83267680508130d2fa8164356951d2a22677491"},"cell_type":"code","source":"# Let's estimate age with class type:\nctest_data<- ctest_data %>%\n  mutate(Age=ifelse((is.na(Age) & Pclass==1) ,unlist(median_age[1,2]),Age)) %>%\n  mutate(Age=ifelse((is.na(Age) & Pclass==2) ,unlist(median_age[2,2]),Age)) %>%\n  mutate(Age=ifelse((is.na(Age) & Pclass==3) ,unlist(median_age[3,2]),Age))","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"c79029ffb1a4b5d659b153f9b8ff2e453d847750"},"cell_type":"code","source":"# Estimating missing value in fare column:\nggplot(ctrain_data, aes(y=Fare, color=Sex))+\n  geom_boxplot(alpha=0.5)+\n  facet_grid(~Pclass) +\n  theme(axis.text.x = element_blank())\n# median is better estimator for ticket fare compared to mean due to skewness.\n# ticket fare and class are correlated.\n# Let's find medians of ticket fare in each class type:\nmedian_fare <- train_data %>%\n  filter(!is.na(Fare)) %>%\n  group_by(Pclass) %>%\n  summarize(median(Fare))","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"80501119f81422f058947f2d1075b3cb9c1f9d74"},"cell_type":"code","source":"# Let's estimate ticket fare with class type:\nctest_data <- ctest_data %>%\n   mutate(Fare=ifelse((is.na(Fare) & Pclass==1) ,unlist(median_fare[1,2]),Fare)) %>%\n   mutate(Fare=ifelse((is.na(Fare) & Pclass==2) ,unlist(median_fare[2,2]),Fare)) %>%\n   mutate(Fare=ifelse((is.na(Fare) & Pclass==3) ,unlist(median_fare[3,2]),Fare)) ","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"4d4e572d8a0913547767a2ef2dc0c494fc9b3024"},"cell_type":"code","source":"# Predicting ctest_data with fit4: (chance of surviving for each passenger)\nfit4 <- glm(Survived~Sex+Age+Age*Fare, data=ctrain_data, family = binomial)\nfitted_test <- predict.glm(fit4, ctest_data, type=\"response\")\n# Let's change probability to binary variable: (survived or died)\ntrs <- function(x, k=0.5){ if (x>=k) {return(1)} else {return(0)} }\npredict_test <- lapply(fitted_test, trs)","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"0d3b8b25a66d724a5d530330305acdb834d43aba"},"cell_type":"code","source":"# predict_test is my prediction :)\nhead(predict_test, n=20)","execution_count":null,"outputs":[]}],"metadata":{"kernelspec":{"display_name":"R","language":"R","name":"ir"},"language_info":{"mimetype":"text/x-r-source","name":"R","pygments_lexer":"r","version":"3.4.2","file_extension":".r","codemirror_mode":"r"}},"nbformat":4,"nbformat_minor":1}