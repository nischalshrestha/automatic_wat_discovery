{
  "cells": [
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "_cell_guid": "98f94031-ff5e-2be0-3afe-b190f67770f6"
      },
      "outputs": [],
      "source": [
        "# Load packages and read in data\n",
        "library(ggplot2)\n",
        "library(rpart)\n",
        "library(randomForest)\n",
        "train <- read.csv(\"train.csv\")\n",
        "test <- read.csv(\"test.csv\")\n",
        "\n",
        "# Combine train and test datasets\n",
        "test$Survived <- NA\n",
        "full_data <- rbind(train, test)\n",
        "\n",
        "# Feature engineering\n",
        "# Create a family size variable\n",
        "full_data$familysize <- NA\n",
        "full_data$familysize <- full_data$SibSp + full_data$Parch + 1\n",
        "# Create a child variable\n",
        "full_data$Child <- NA\n",
        "full_data$Child[full_data$Age >= 18] <- 0\n",
        "full_data$Child[full_data$Age < 18] <- 1\n",
        "#Create a title variable\n",
        "full_data$Title <- gsub('(.*, )|(\\\\..*)', '', full_data$Name)\n",
        "table(full_data$Sex, full_data$Title)\n",
        "rare_title <- c('Dona', 'Lady', 'the Countess','Capt', 'Col', 'Don', \n",
        "                'Dr', 'Major', 'Rev', 'Sir', 'Jonkheer')\n",
        "full_data$Title[full_data$Title == 'Mlle']        <- 'Miss' \n",
        "full_data$Title[full_data$Title == 'Ms']          <- 'Miss'\n",
        "full_data$Title[full_data$Title == 'Mme']         <- 'Mrs' \n",
        "full_data$Title[full_data$Title %in% rare_title]  <- 'Rare Title'\n",
        "full_data$Title <- factor(full_data$Title)\n",
        "\n",
        "# Find missing values\n",
        "summary(full_data)\n",
        "summary(full_data$Embarked)\n",
        "full_data[c(1:1309), 'Embarked']\n",
        "full_data[c(62, 830),]\n",
        "# Impute missing values\n",
        "full_data[c(62, 830), 'Fare']\n",
        "ggplot(full_data, aes(x = Embarked, y = Fare, Fill = factor(Pclass))) + geom_boxplot()\n",
        "full_data$Embarked[c(62, 830)] <- 'C'\n",
        "full_data[c(1044), 'Fare']\n",
        "full_data[1044, ]\n",
        "ggplot(full_data[full_data$Pclass == '3' & full_data$Embarked == 'S', ], aes(x=Fare)) + geom_density()\n",
        "median(full_data[full_data$Pclass == '3' & full_data$Embarked == 'S', ]$Fare, na.rm = TRUE)\n",
        "full_data$Fare[1044] <- 8.05\n",
        "# Impute missing ages using rpart\n",
        "age_tree <- rpart(Age ~ Title + Pclass + Sex + Fare + Embarked, data = full_data[!is.na(full_data$Age),], method = \"anova\")\n",
        "full_data$Age[is.na(full_data$Age)] <- predict(age_tree, full_data[is.na(full_data$Age),])\n",
        "full_data$Child[full_data$Age >= 18] <- 0\n",
        "full_data$Child[full_data$Age < 18] <- 1\n",
        "\n",
        "# Break up train and test datasets\n",
        "train <- full_data[1:891,]\n",
        "test <- full_data[892:1309,]\n",
        "\n",
        "# Make predictions with randomforest\n",
        "set.seed(800)\n",
        "rf_model <- randomForest(factor(Survived) ~ Pclass + Title + Sex + SibSp + Age + Parch + Fare + Embarked + Child + familysize, data=train)\n",
        "plot(rf_model)\n",
        "prediction <- predict(rf_model, test)\n",
        "# Export solution as csv\n",
        "solution <- data.frame(PassengerId = test$PassengerId, Survived = prediction)\n",
        "write.csv(solution, file = 'rf_mod_solution.csv', row.names = FALSE)"
      ]
    }
  ],
  "metadata": {
    "_change_revision": 0,
    "_is_fork": false,
    "kernelspec": {
      "display_name": "R",
      "language": "R",
      "name": "ir"
    },
    "language_info": {
      "codemirror_mode": "r",
      "file_extension": ".r",
      "mimetype": "text/x-r-source",
      "name": "R",
      "pygments_lexer": "r",
      "version": "3.3.2"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}