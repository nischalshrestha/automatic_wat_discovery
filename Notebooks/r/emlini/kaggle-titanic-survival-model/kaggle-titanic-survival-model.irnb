{"cells":[{"metadata":{"_execution_state":"idle","_uuid":"e92dd29da7d796d30ab183fa3245e3819104c21c","trusted":true,"_cell_guid":"8a86bca1-8eaa-4f0d-bd91-f4a76fb47b68"},"cell_type":"code","source":"# This R environment comes with all of CRAN preinstalled, as well as many other helpful packages\n# The environment is defined by the kaggle/rstats docker image: https://github.com/kaggle/docker-rstats\n\n# Input data files are available in the \"../input/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nsystem(\"ls ../input\")\n\n# Any results you write to the current directory are saved as output.\n\n# Kaggle_Titanic\n# Notes on working through the analysis of survival for the Titanic data set from Kaggle \n    # THIS IS A WORK IN PROGRESS--I welcome feedback/comments on the different parts of this\n\n# Goal: Develop a model to predict whether a person would have survived the sinking of the Titanic\n    #(determine the factors that, in combination, contributed to survival)\n","execution_count":3,"outputs":[]},{"metadata":{"_uuid":"d19b578adf83fc713e9307a069f0e2683577f0d2","trusted":true,"_cell_guid":"55237ed6-44bc-4239-9af9-6de0dc4390f0"},"cell_type":"code","source":"# STEP 1: SETUP\n\n### libraries imported\n#install.packages(\"mice\")\n#install.packages(\"nlme\")\n#install.packages(\"readxl\")\n#install.packages(\"readr\")\n#install.packages(\"VIM\")\n#install.packages(\"epitools\")\n\nlibrary(ggplot2)  # for data visualization\nlibrary(dplyr)    # set of data manipulation functions\nlibrary(nlme)   # linear modeling package (MAY NOT NEED THIS)\nlibrary(readxl)  # has \"subset\" function that allows you to generate subset table for rows that have given value in a specific column\nlibrary(readr) # CSV file I/O, e.g. the read_csv function\nlibrary(mice) # package for imputing missing data\nlibrary(VIM) # package for visualizing missing data\nlibrary(epitools)\n# following https://www.r-bloggers.com/imputing-missing-data-with-r-mice-package/\n    \n### figure out working directory using gwtwd() if in RStudio\n### set working directory using setwd()\n\n train <- read.csv(\"../input/train.csv\") # imported training table and assigned it to object name \"train\"\n\n","execution_count":4,"outputs":[]},{"metadata":{"_uuid":"b7ee771fcae0030999ef6731afb54444966f04aa","trusted":true,"_cell_guid":"2af825cf-f4f8-4b2c-900d-15d6535c777b"},"cell_type":"code","source":"### STEP 2: Explore variables (especially missing values) \nsummary(train)","execution_count":5,"outputs":[]},{"metadata":{"_uuid":"5ebe0db9f85a564ea29b3b2b472cc8de06702aaf","trusted":true,"_cell_guid":"58b5ed40-6d65-4dab-918a-8eef2dccebb0"},"cell_type":"code","source":"# Age appears to be the only variable with missing values (only var with 'NA's' in summary list)","execution_count":6,"outputs":[]},{"metadata":{"_uuid":"1a213faeab86f94c59852fd77819b735450b54a1","trusted":true,"_cell_guid":"343cd8b3-c2c4-4731-98b3-082b29c0eb7a"},"cell_type":"code","source":"# STEP 2a: Confirm distribution of missing data using formula from mice and VIM libraries, respectively\n\nmd.pattern(train) # checks how missing data is distributed in dataset (mice)\n# output shows only data missing is from age var\n\nmiss_plot <- aggr(train, col=c('navyblue', 'red'), numbers=TRUE, sortVars=TRUE, labels=names(train), ylab=c(\"Histogram of missing data\", \"Pattern\"))\n# graphical way of looking at missing data - confirms \"md.pattern\" output (using VIM package)","execution_count":7,"outputs":[]},{"metadata":{"_uuid":"ba3bba9355fb4dd7c30d8149ef5ef1b8b8203ec9","trusted":true,"_cell_guid":"fcd67fe8-994e-4db6-b140-86ea320a23f1"},"cell_type":"code","source":"# STEP 2b: impute the missing data\n\n# First must examine whether missingness of age is MAR (missing at random) or MNAR (missing not at random)\n# this website has helpful info on types of missing data: http://dept.stat.lsa.umich.edu/~jerrick/courses/stat701/notes/mi.html\n# Going to try a logistic regression with other variables to determine whether missing data show any pattern","execution_count":8,"outputs":[]},{"metadata":{"_uuid":"b211bf2bd6c1debc874df8fbe90f9f99b746947c","trusted":true,"_cell_guid":"42962780-6281-4400-b778-4de39de82e0d"},"cell_type":"code","source":"# plot agemissing vs other variables and do some chi squared tests to see whether missing ages are more likely to show up in certain demographics\nage <- train$Age # create varible for age (for ease of reference later)\nage # show the dataframe to make sure variable is the thing I wanted","execution_count":9,"outputs":[]},{"metadata":{"_uuid":"15a408fcd941803a2798fab8d5888a2dc2dd42b5","trusted":true,"_cell_guid":"491db595-4366-4475-81a5-be8357086ff5"},"cell_type":"code","source":"#Recode age variable into binary--has value (1), or not (0)\nagemissing <- recode(age, .default=1, .missing=0) # create variable that partitions Age into missing and non\nagemissing #makes sure recoding worked (can compare to above df to confirm)","execution_count":10,"outputs":[]},{"metadata":{"_uuid":"2a5e93e9efe13a4ef6dde949b41fc7d3a3b0f87c","trusted":true,"_cell_guid":"e3fa7a7e-6d04-40c9-b682-09d088bfc3f9"},"cell_type":"code","source":"# Are females more likely to have missing Age?\nsex <- train$Sex\nagemiss_sex <- ggplot(data=train, aes(sex, agemissing)) + geom_bar(stat=\"identity\")\nshow(agemiss_sex) ","execution_count":11,"outputs":[]},{"metadata":{"_uuid":"5ec26540649bcce44888bafb01afdc8990388472","trusted":true,"_cell_guid":"f419deaa-1f45-4519-9932-24d98baaef77"},"cell_type":"code","source":"# more males are missing age values - but significantly so?","execution_count":12,"outputs":[]},{"metadata":{"_uuid":"77f3ed9c3bf151243cb68a6660e058a965ca963d","trusted":true,"_cell_guid":"c8b578d7-8807-4a57-8281-5739324a7013"},"cell_type":"code","source":"#chi-sq test to see whether males more likely to have missing age value\nagemiss_sex_X2 <- chisq.test(sex, agemissing)\nagemiss_sex_X2","execution_count":13,"outputs":[]},{"metadata":{"_uuid":"18385fbc8acc48b3d06acbac8f69278db7f404f4","trusted":true,"_cell_guid":"285a6def-e8dd-4a9f-a586-142bca06b840"},"cell_type":"code","source":"# chi-sq not sig (p = 0.1187)","execution_count":14,"outputs":[]},{"metadata":{"_uuid":"61ba6702c7bf1836580b63074ed3437ad5f189f7","trusted":true,"_cell_guid":"9057964f-d01c-409b-815e-05e19e065e73"},"cell_type":"code","source":"# Are third-class passengers more likely to have missing age?\nclass <- train$Pclass\n\nagemiss_class <- ggplot(data=train, aes(class, agemissing)) + geom_jitter(data=train, aes(class, agemissing), stat=\"identity\", group=agemissing)\nshow(agemiss_class)","execution_count":15,"outputs":[]},{"metadata":{"_uuid":"643d851a28ec672a030285f74a2fab23717b3e06","trusted":true,"_cell_guid":"5595e8a2-3354-4197-bdee-2388279c51f3"},"cell_type":"code","source":"# chart difficult to eyeball, better to rely on chisq test","execution_count":16,"outputs":[]},{"metadata":{"_uuid":"2761c47fcbccb0f882994282fda907ea2ed771a7","trusted":true,"_cell_guid":"b24f9b39-e739-4fb0-8c60-a63fdcec7e62"},"cell_type":"code","source":"#Also tried generating a clustered bar chart, but the code below doesn't successfully do that\n# agemiss_class <- ggplot(train, aes(class, ..count..)) + geom_bar(aes(fill = agemissing), position = \"dodge\")","execution_count":17,"outputs":[]},{"metadata":{"_uuid":"4e11bf83183bb616ee570b7b2b320315c0c146d6","trusted":true,"_cell_guid":"799908a9-11af-44c6-b950-c555040b1509"},"cell_type":"code","source":"#chi-sq test for agemissing and class\nagemiss_class_X2 <- chisq.test(class, agemissing)\nagemiss_class_X2","execution_count":18,"outputs":[]},{"metadata":{"_uuid":"2b54d01097d92ba0e9ee513e896ff6e14f4052c0","trusted":true,"_cell_guid":"dc577476-079d-43a1-aed8-054cbdeef7ad"},"cell_type":"code","source":"## chi squared test IS significant, need odds table \noddstable <- oddsratio(class, agemissing)\noddstable","execution_count":19,"outputs":[]},{"metadata":{"_uuid":"35854fe9ca68c223f84db169754bbe6a96cf1f67","_cell_guid":"3d905c0c-3b76-4122-a79b-b7e183ad0a95"},"cell_type":"markdown","source":"Above output tells us that:\n    - 2nd class passengers are significantly MORE likely to have value for age\n    - and 3rd class are significantly LESS likely to have value for age (so more likely to have missing value)"},{"metadata":{"_uuid":"0a9ccf1eace3e3a829bf858f2c22c24e52682e15","trusted":true,"_cell_guid":"bb029d65-9dca-408d-a1c2-7f3cabbf622c"},"cell_type":"code","source":"# The umich website listed above suggests using a logistic regression model to predict missingness\n\nagemissing_regr <- glm(formula = agemissing ~ class + sex + train$Survived + train$SibSp + train$Parch + train$Embarked + train$Fare)\n# above model leaves out PassengerID, Ticket #, and Cabin, because those seem VERY unlikely to be responsible for why we're missing ages\n\nsummary(agemissing_regr)","execution_count":20,"outputs":[]},{"metadata":{"_uuid":"539ee724ccdc67447c45e40cf17878d4fd3944d5","_cell_guid":"9088020a-0458-4c5f-94a5-97c4c77151c2"},"cell_type":"markdown","source":"Above model tells us that:\n    -  those of *numerically* higher class (3rd vs 1st) significantly more likely to be missing age value (though we saw from chisq test above that 2nd class passengers were actually LESS likely to have missing ages)\n    -  those with siblings or spouses aboard significantly MORE likely to be missing age value\n    -  those with parents or children aboard significantly LESS likely to be missing age value\n\n*HOWEVER, all of these intercepts are SMALL, which means actual effect on whether age value is missing is SMALL (even for significant variables)*\n\nGoing ahead with imputing missing data now:"},{"metadata":{"_uuid":"b57204551644b2fa166759b66ad68c9a6d84001a","trusted":true,"_cell_guid":"126048d5-a60e-4366-8eeb-50757791da49"},"cell_type":"code","source":"imputed_train <- mice(data=train, m = 5, method = 'pmm')\nsummary(imputed_train)","execution_count":21,"outputs":[]},{"metadata":{"_uuid":"78cadcc4974e070984ce24bc3586f24b2116962b","_cell_guid":"b3ca89aa-02d7-4e70-bea2-a6a19762b1aa"},"cell_type":"markdown","source":"# This imputation takes a LONG time (relatively speaking) to run. \nm=5 is the number of imputed datasets.  Dong & Peng (2013) note that for datasets with larger fractions of missing data, more imputations are necessary\n        - We have 20% missing data for Age variable, which seems to be larger than we'd like (below 5% seems to be okay, according to this site: https://datascienceplus.com/imputing-missing-data-with-r-mice-package/ )\n         - Umich site references a paper published in 07, discusses the potential for more imputations, but says standard practice still 5\n         -Keeping default method as well (umich site has good rationale for this)\n\n*Because this takes so long to run, I'd like to see if there is a way to impute  just a single column rather than whole dataset*\n\n--> THIS CODE MIGHT MAKE KERNEL CRASH (or it might have been the imputation call itself...): #head(complete(impute_train, 3)) # show third imputation\n\nPython has another package for  imputation discussed here: https://www.kaggle.com/dansbecker/handling-missing-values (but am doing this project in R)"},{"metadata":{"_uuid":"ed1f885a7cbbf3e83a9beb658ae4f6fb1f4006c4","trusted":true,"_cell_guid":"3210b36e-aa5e-4e3d-94b1-a6ada54f588c"},"cell_type":"code","source":"summary(imputed_train$Age) #check whether there are missing values now (there shouldn't be)\n\n#and add the imputed values to the dataset\ntrain_complete = complete(imputed_train, 3) #use the third imputed dataset to complete missing values in ","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"4e791f2eca94eb8428bd460909840dde40e1b666","trusted":true,"_cell_guid":"35856d52-5815-47da-b908-68d5abb2bb53"},"cell_type":"code","source":"### STEP 3: Examine characteristics of survivors (start with class, sex, & age, based on anecdotal reports of who survived) \n#1st class passengers, women, & children more likely to survive than other groups\n\nsurvivors <- subset(train, train$Survived==1)\n\t# create subset table 'survivors' containing only those who survived (not strictly necessary, but simplifies subsequent lines)\n\nsurvivors #show survivors table (note that all the values for \"Survived\" column here should be \"1\")","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"62d5e1fc149d9695dc4dcb6fbface6a2cfad7d0d","trusted":true,"_cell_guid":"a1f9e3c0-2661-4eb5-a0d2-cf3b39e98952"},"cell_type":"code","source":"# STEP 3a: generate graph showing distributions of survivors and all passengers by sex\n\nsurvsex_plot <- ggplot(survivors, aes(survivors$Sex)) + geom_bar(aes(survivors$Sex))\nsurvsex_plot\n\t# creates a bar chart with count of male and female survivors\n\t# eyeballing shows that there were about twice as many female survivors as male\n\npasssex_plot <- ggplot(train, aes(sex)) + geom_bar(aes(sex))\npasssex_plot\n    # bar chart with count of all male and female passengers ","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"5d3b81ab450111e2b6f2c6f54ee2e2fa998c72ca","trusted":true,"_cell_guid":"37442895-b48a-4e40-81e6-c4bbca672499"},"cell_type":"code","source":"# STEP 3b: get an actual count of male and female survivors\n\nsurvsex <- survivors$Sex  \n  # Generate a subset table that includes only data from the \"sex\" column of the 'survivors' table (may not be strictly necessary, but for the sake of neatness)\n\nsum(survsex==\"female\")   # generates a sum of the rows for which sex = \"female\" (quotations bc string)\n  # 233 female survivors \n\nsum(survsex==\"male\")   # number of male survivors\n  # 109 male survivors","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"9ab5813d31038feed4c4ab1add7d46ac1abc180f","trusted":true,"_cell_guid":"f85d0e69-f996-4592-bee3-3196230ee785"},"cell_type":"code","source":"# STEP 3c: get total number of male and female passengers\n\nsum(train$Sex==\"female\")   # 314 female passengers\n\nsum(train$Sex==\"male\")   # 577 male passengers","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"2f3ea7162f04a7ea6e5188cac5bb62f28ad619a4","trusted":true,"_cell_guid":"648e31c6-60ab-4fdb-a72d-2cf25a7e1459"},"cell_type":"code","source":"# STEP 3d: Check whether proprtionally more females survived than males (out of total number of each)\n\n233/314    # ~74.2% of the female passengers survived\n109/577   # only ~18.9% of the male passengers survived","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"6ad14829907108c835f7ffea373ab82279dab6b0","trusted":true,"_cell_guid":"e1579bec-d16c-418f-b60c-84effcdb08a6"},"cell_type":"code","source":"## INTERIM CONCLUSION: proportionally more female than male passengers survived (large different in percentages indicates that this is definitely a variable to consider in larger model)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"12fadc1019aec86edd609415748e0b496fbd232d","trusted":true,"_cell_guid":"fbd01102-59b3-44b2-8513-c31cdc8be41d"},"cell_type":"code","source":"# Step 3e: generate graph showing distributions of survivors by age\n\nsurv_age <- survivors$Age   # create variable for age (for ease of reference)\nggplot(survivors, aes(x=surv_age)) + geom_density(aes(y=..count..))   # density plot approximating count of survivors of different ages\n  ## WHY IS DENSITY plot more appropriate than histogram?  Allows for more fine-grained/continuous age display ","execution_count":null,"outputs":[]},{"metadata":{"_kg_hide-input":false,"_uuid":"afa947f6eda23597cebb9ade20030fd117a38eed","trusted":true,"_cell_guid":"037463a4-c0c6-46f9-b1bf-68622013dc46"},"cell_type":"code","source":"# bimodal, skewed distribution, indicating that suvivors clustered primarily in the 20-40yo range, with second, smaller peak under 10 yo\n# also note that of the 177 missing data points in Age variable, 52 of them are present in Survivors subset (meaning 125 are in the non-survived group)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"a4bfecfea27b695eed5b202d2cf9c1afad45964c","trusted":true,"_cell_guid":"496e7778-ac03-409f-b2d5-ef1745fbd7c5"},"cell_type":"code","source":"# STEP 3f: determine distribution of ages of all passengers\n\nage <- train$Age  # variable for age for table containing all passengers\nggplot(train, aes(x=age)) + geom_density(aes(y=..count..))   # plot of all passangers, by age\n  ## ALL PASSENGESR BY AGE PLOT LOOKS VERY SIMILAR to survivor by age plot, but want to compare the two more directly\n\nsurvpass_ageplot <- ggplot(train, aes(x=age)) + geom_density(aes(y=..count.., group=train$Survived))\nsurvpass_ageplot\n\t## OVERLAYS both plots, with two lines grouped by \"survivial\" factor","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"3cef8e75459edf5777e954e9c2572b0204820cbf","trusted":true,"_cell_guid":"03393ca4-9af8-4c29-bc89-50487396fa28"},"cell_type":"code","source":"\t## THE ABOVE WORKS, but it is somewhat difficult to distinguish the two distributions (bc both same color)\n\t## Am trying to figure out how to use reshape package and melt function to restructure the data so I can make the two distributions different colors","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"3a0cfe1688ed67b6c07a600f9b78df3566bd7194","trusted":true,"_cell_guid":"244ae1aa-e021-4168-b2d7-ed0b0e32011d"},"cell_type":"code","source":"##INTERIM CONCLUSION (from b/w graph): proportionally more passengers under 10 survived than individuals over 10","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"44d7623dff0c5dda80e6899a4acfb7b18c46b0df","trusted":true,"_cell_guid":"9ef3e97c-ce29-4843-88e9-360720aec038"},"cell_type":"code","source":"# STEP 3g: generate graph showing distribution of survivors by class\n\nsurv_class <- survivors$Pclass    # creates variable for class from survivors data subset \nsurv_class <- ggplot(survivors, aes(surv_class)) + geom_bar(aes(surv_class))   # plots the number of survivors in a bar chart by class (1st, 2nd, 3rd)\n## Class is a discrete var, so bar plot most appropriate\n## More first-class passengers survived than other classes, then 3rd, then 2nd\n\n## CHECK distribution of all passengers by class\nclass <- train$Pclass   # variable for class from full train dataset\npass_class <- ggplot(train, aes(allclass)) + geom_bar(aes(allclass))   # plots the number of passengers by class","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"eddc0850e58d9671a92e632e2a63faa9e4746cc9","trusted":true,"_cell_guid":"2927d753-21d4-405b-bdab-bb66b485ce78"},"cell_type":"code","source":"## INTERIM CONCLUSION: visually comparing plots, seems proportionally more 1st class passengers survived than 3rd/2nd class passengers (could do same calculation of actual proportions as did with sex, but moving on to model now\n\n#COULD ALSO MAYBE DO A CHI-square test, or log likelihood, but should be able to do that as part of the larger model ","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"dde81bd2bcf59b1c9e950780dabe0b91799765f6","trusted":true,"_cell_guid":"0584ebc2-3253-4b0d-89ce-cb2859d6602c"},"cell_type":"code","source":"## POINTS TO CONSIDER when constructing the model\n\t## potential sparseness of Age variable (177 passengers did not have ages listed, out of 891 total passengers--~20% of data)\n\t## NEED TO IMPUTE VALUES FOR THIS (examine R tutorial linked on competition page)\n\t## MULTICOLLINEARITY (check correlation matrix between for predictors)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"1a066661a04307277ce8cb28cd7eed43c3444788","trusted":true,"_cell_guid":"a546b1e7-49a1-45aa-a5f7-ea8941ed2aee"},"cell_type":"code","source":"### STEP 4: generate a logistic regression model of survival with age, sex, and class as predictors\nsurvived <- train$Survived\nallsex <- train$Sex  ## created two new variables referencing sex and age in the training dataset\nallage <- train$Age\n\n# model_age_sex_class <- glm(formula = survived ~ allage + allsex + allclass, data = train, family = \"binomial\")\n# model_age_sex_class","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"7340d8f9b3ea84aac946770066b2c245d13b2f1f","trusted":true,"_cell_guid":"5ae8530b-8262-4580-b806-33c71c2e376b"},"cell_type":"code","source":"## There will be several more models with different variables, and models will be compared according to model fit (what the best criterion to use here?  NEed to refresh knowedlge on that)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"4b3c8eeb004d4d5bb49ba0918cd214a4c1762eec","trusted":true,"_cell_guid":"afe814e9-5a99-4f96-a440-0d72a067165c"},"cell_type":"code","source":"## OTHER FACTORS to consider\n    ## family size, parental status, cabin (some closer to impact?), point of embarkation (not sure how theoretically this might be relevant, but tutorial considers it)       \n\n\n# STEP XX: use the best fit model to predict survival on the test dataset ","execution_count":null,"outputs":[]}],"metadata":{"kernelspec":{"display_name":"R","language":"R","name":"ir"},"language_info":{"mimetype":"text/x-r-source","name":"R","pygments_lexer":"r","version":"3.4.2","file_extension":".r","codemirror_mode":"r"}},"nbformat":4,"nbformat_minor":1}