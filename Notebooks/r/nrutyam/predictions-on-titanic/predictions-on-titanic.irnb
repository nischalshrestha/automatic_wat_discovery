{"cells":[{"metadata":{"_uuid":"69869e2ab6beefdaff641d5d6fe26381dc394c33","_cell_guid":"cb0bbf1a-3244-41c2-a9ab-98e39cc1639b"},"cell_type":"markdown","source":""},{"metadata":{"_uuid":"736e176fc59047f319011286e64b1f7aa10fa74a","trusted":true,"_cell_guid":"f7aeac06-612d-4a8e-b900-5d0bde7f5d6d"},"cell_type":"code","source":"#Loading all packages\nlibrary(dplyr)\nlibrary(plyr)\nlibrary(randomForest)\nlibrary(bit64)\nlibrary(Amelia)\nlibrary(e1071)\noptions(scipen=999)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"ffa37ae855048f223603ab133e5f868817854a0f","trusted":true,"_cell_guid":"5d040808-9d4b-4060-8965-b4f00fb32344"},"cell_type":"code","source":"#Accessing the datasets from Kaggle\ntrain<-read.csv('../input/train.csv')\ntest<-read.csv('../input/test.csv')\n\n#Checking the structures\nstr(train)\nstr(test)\n\nsapply(train,summary)\nsapply(test,summary)\n\n# *** Str output shows that Test dataset has one variable missing, i.e Survived *** #\n#Hence, let's create the variable Survived in test and assign missing values to it as of now\ntest$Survived<-NA\n\n# *** Sapply with summary gives missing values information in all variables *** # \n#To verify for any missing data\nmissmap(train)\nmissmap(test)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"e9fdc0aba83581e63c9a7e22d47705cd415f6d09","trusted":true,"_cell_guid":"3cb6d960-cc7f-4467-8462-e15955ba1abb"},"cell_type":"code","source":"#Missing values are reported in both the datasets for different variables\n#In order to handle them we need to combine both the datasets and then treat blank values\n#While treating blank values, we will exclude Survived as this is yet to be predicted for test\nboth<-rbind(train,test)\n\nsapply(both,summary)\n\n#Treating NAs in Age variable\naggregate(Age~Sex,both,mean)\n#_____________________________#\n#       Sex    Age            #\n#       female 28.68709       #\n#       male   30.58523       #\n#_____________________________#\n#Replacing missing ages by mean of the gender\nfor (i in 1:nrow(both)){\n  if(both$Sex[i]==\"male\" && is.na(both$Age[i])==TRUE){\n    both$Age[i]<-30.58\n  }\n  else if(both$Sex[i]==\"female\" && is.na(both$Age[i])==TRUE){\n    both$Age[i]<-28.68\n  }\n  else {\n    both$Age[i]<-both$Age[i]\n  }\n}\n\n#Treating blanks in Embarked variable\n#PassengerId(62,830) with missing info in Embarked belong to Pclass 1 & have paid an amount of 80\naggregate(Fare~Pclass+Embarked,both,range)\n#Output indicates that for Pclass-1, an amount of 80 is accepted for boarding points 'C' & 'S'\n#To select one among these 2 options, lets check for the frequency of each boarding points\ntable(both$Embarked)\n#_____________________#\n#      C   Q   S      #\n#     270 123 914     #\n#_____________________#\n#Output indicates 'S' has the highest value\n#Replacing missing Embarked values by the most occurring level\nboth$Embarked[c(62, 830)]<-'S'\n\n#Treating NA in Fare variable\n#PassengerId(1044) with missing info in Fare belongs to Pclass 3\naggregate(Fare~Pclass,both,median)\n#___________________________#\n#     Pclass    Fare        #\n#      1       60.0000      # \n#      2       15.0458      #\n#      3       8.0500       #\n#___________________________#\n#Replacing missing Fare by median of the Pclass\nboth$Fare[c(1044)]<-8.05\n\n#Checking blank values in Cabin variable\nt=count(both, 'Cabin')\nt\n1014/1309\n# *** Output shows Cabin data missing for 1014 records, which is 77% of the total observations *** #\n#We don't have enough information to predict for this variable, so we are not treating it#\n\n#Changing data types in both\nboth$Ticket<-as.character(both$Ticket)\nboth$Name<-as.character(both$Name)\n\nmissmap(both)\n\n# *** Let's look into all variables and try to derive new variables for our analysis *** #\n\n# *** Women and children were given first preference to use lifeboat *** #\n#We have no direct information whether the passenger was a child or adult\n#Hence this has to be derived. We can take the help of the variable Age\n#If 0, means not a child; 1, means a child\n#Generic formula applied if age < 18 then considered as child\nboth$IsChild<-ifelse(both$Age < 18,1,0)\n\n# *** Checking SibSp & Parch *** #\n#As per description: No of siblings / spouses aboard the Titanic is denoted by SibSp\n#As per description: No of parents / children aboard the Titanic is denoted by Parch\n#Using these fields, let's find out the family size of each passenger\nboth$Fsize<-both$SibSp+both$Parch+1\ntable(both$Fsize)\n#Further classifying using newly derived variable Fsize\nboth$Fcat <- 'Large'\nboth$Fcat[both$Fsize==1] <- 'Single'\nboth$Fcat[both$Fsize > 1 & both$Fsize <= 4] <- 'Small'\n\n# *** Checking Name *** #\nhead(both$Name)\nboth$Title<-sapply(both$Name, FUN=function(x) {strsplit(x,split='[,.]')[[1]][2]})\nboth$Title<-gsub(' ', '', both$Title)\ntable(both$Title)\n#Titles with very low counts to be collated into one object\nlowcnt_title <- c('Dona', 'Lady', 'Capt', 'Col', 'Don', 'Dr', 'Major', 'Rev', 'Sir', 'Jonkheer','theCountess')\n#Classifying further\nboth$Title[both$Title %in% c('Ms', 'Mlle')] <- 'Miss'\nboth$Title[both$Title == 'Mme'] <- 'Mrs'\nboth$Title[both$Title %in% lowcnt_title] <- 'Others'\ntable(both$Title)\n\n# *** Naives Bayes approach used for our prediction, here independent variables should be factor in nature *** #\n#Keeping this into picture, we will convert Fare & Age into different categories for analysis\n\n# *** Categorizing Fare *** #\nboth$Fare2<-'30+'\nboth$Fare2[both$Fare < 30 & both$Fare >= 20] <- '20-30'\nboth$Fare2[both$Fare < 20 & both$Fare >= 10] <- '10-20'\nboth$Fare2[both$Fare < 10] <- '<10'\n\n# *** Categorizing Age *** #\nboth$Age2<-'Above 50'\nboth$Age2[both$Age <= 50 & both$Age > 40] <- '41-50'\nboth$Age2[both$Age <= 40 & both$Age > 30] <- '31-40'\nboth$Age2[both$Age <= 30 & both$Age > 20] <- '21-30'\nboth$Age2[both$Age <= 20 & both$Age > 10] <- '11-20'\nboth$Age2[both$Age <= 10] <- 'Within 10'\n\n#Changing data types in both\nboth$Title<-as.factor(both$Title)\nboth$Fcat<-as.factor(both$Fcat)\nboth$SibSp<-as.factor(both$SibSp)\nboth$Parch<-as.factor(both$Parch)\nboth$Pclass<-as.factor(both$Pclass)\nboth$Fare2<-as.factor(both$Fare2)\nboth$IsChild<-as.factor(both$IsChild)\nboth$Age2<-as.factor(both$Age2)\n\n\n# *** As missing values treatment & feature engineering are done, let's split the datasets *** #\ndata_train<-both[1:891,]\ndata_test<-both[892:1309,]\n\n#In this challenge, we have been asked to complete the analysis of what sorts of people were likely to survive. \n#In particular, to apply the tools of machine learning to predict which passengers survived the tragedy.\n#We will apply Naive Bayes & SVM techniques\n#First to find out the count of people survived\ntable(data_train$Survived)\n#Taking percentage\nprop.table(table(data_train$Survived))\n# *** Output shows only 38% Survived the tragedy, meaning a majority of people on board died *** # \n#Keeping this into picture, lets assume all died in data_test dataset\ndata_test$Survived<-0\n\n#Let's find out the count of people survived based on their gender\ntable(data_train$Sex,data_train$Survived)\n#Taking percentage\nprop.table(table(data_train$Sex,data_train$Survived),1)\n# *** Output indicates that gender of the person really affected the chances of survival *** #\n\n#Checking with Sex & IsChild together\nt=count(data_train, c('Survived','IsChild', 'Sex'))\nt\n# *** Output still shows gender an important variable for depicting survival rate *** #\n\n#Checking with Embarked variable\nboxplot(data_train$Survived~data_train$Embarked)\ntable(data_train$Embarked,data_train$Survived)\nprop.table(table(data_train$Embarked,data_train$Survived),1)\n# *** Output says people departed from point C have a better survival rate *** #\n\n#Checking with Pclass variable\nboxplot(data_train$Survived~data_train$Pclass)\ntable(data_train$Pclass,data_train$Survived)\nprop.table(table(data_train$Pclass,data_train$Survived),1)\n# *** Output says people with Pclass-1 have a better survival rate *** #\n\n#Checking no of survived persons with Pclass & Embarked\naggregate(Survived~Pclass+Embarked,data_train,sum)\n\n#Checking no of survived persons with Pclass, Sex & Embarked\naggregate(Survived~Pclass+Sex+Embarked,data_train,sum)\n# *** Female has better chances of survival, so let's assume all females in data_test survived *** #\ndata_test$Survived<-ifelse(data_test$Sex==\"female\",1,0)\n\n#Changing Survived variable into factor\ndata_train$Survived<-as.factor(data_train$Survived)\ndata_test$Survived<-as.factor(data_test$Survived)\n\n###Creating Our Model with Naive Bayes method\ndata_1<- data_train[,c(\"Survived\",\"Pclass\",\"Sex\",\"SibSp\",\"Parch\",\"Fare2\",\"Embarked\",\"Fcat\",\"Title\",\"Age2\")]\ndata_test1<-data_test[,c(2,3,5,7,8,12,15,16,17,18)]\nnb_model<-naiveBayes(Survived~.,data=data_1)\nnb_model\n\n#Predicting Survival rate in test dataset\nnb_test_predict <- predict(nb_model,data_test1[,-1])\n\n#Confusion matrix\ntable(pred=nb_test_predict,true=data_test1$Survived)\n\n#Determining accuracy from confusion matrix\nmean(nb_test_predict==data_test1$Survived)\n#____________________________Accuracy rate from Naive Bayes approach is 0.8923445_________________________#\n\n###Checking Our Model with SVM method\nsvm_model<-svm(Survived~.,data=data_1)\nsvm_model\n\n#Predicting Survival rate in test dataset\nsvm_test_predict <- predict(svm_model,data_test1[,-1])\n\n#Confusion matrix\ntable(pred=svm_test_predict,true=data_test1$Survived)\n\n#Determining accuracy from confusion matrix\nmean(svm_test_predict==data_test1$Survived)\n#____________________________Accuracy rate from SVM approach is 0.9712919___________________________________#\n\n\n# *** Building the output dataset with SVM & exporting it into csv *** #\nMyOutput<-data.frame(PassengerId=data_test$PassengerId,Survived=svm_test_predict)\nwrite.csv(MyOutput,\"MyOutput.csv\",row.names = FALSE)\n\n","execution_count":null,"outputs":[]}],"metadata":{"kernelspec":{"display_name":"R","language":"R","name":"ir"},"language_info":{"mimetype":"text/x-r-source","name":"R","pygments_lexer":"r","version":"3.4.2","file_extension":".r","codemirror_mode":"r"}},"nbformat":4,"nbformat_minor":1}