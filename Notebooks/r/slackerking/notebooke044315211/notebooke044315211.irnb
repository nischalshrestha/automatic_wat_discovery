{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "_cell_guid": "b5f7c1d7-667f-8315-5dd1-4b1d49ff358c"
      },
      "source": [
        "# \u673a\u5668\u5b66\u4e60\u5de5\u7a0b\u5e08\u7eb3\u7c73\u5b66\u4f4d\n",
        "## \u5165\u95e8\n",
        "## \u9879\u76ee 0: \u9884\u6d4b\u6cf0\u5766\u5c3c\u514b\u53f7\u4e58\u5ba2\u751f\u8fd8\u7387\n",
        "\n",
        "1912\u5e74\uff0c\u6cf0\u5766\u5c3c\u514b\u53f7\u5728\u7b2c\u4e00\u6b21\u822a\u884c\u4e2d\u5c31\u4e0e\u51b0\u5c71\u76f8\u649e\u6c89\u6ca1\uff0c\u5bfc\u81f4\u4e86\u5927\u90e8\u5206\u4e58\u5ba2\u548c\u8239\u5458\u8eab\u4ea1\u3002\u5728\u8fd9\u4e2a\u5165\u95e8\u9879\u76ee\u4e2d\uff0c\u6211\u4eec\u5c06\u63a2\u7d22\u90e8\u5206\u6cf0\u5766\u5c3c\u514b\u53f7\u65c5\u5ba2\u540d\u5355\uff0c\u6765\u786e\u5b9a\u54ea\u4e9b\u7279\u5f81\u53ef\u4ee5\u6700\u597d\u5730\u9884\u6d4b\u4e00\u4e2a\u4eba\u662f\u5426\u4f1a\u751f\u8fd8\u3002\u4e3a\u4e86\u5b8c\u6210\u8fd9\u4e2a\u9879\u76ee\uff0c\u4f60\u5c06\u9700\u8981\u5b9e\u73b0\u51e0\u4e2a\u57fa\u4e8e\u6761\u4ef6\u7684\u9884\u6d4b\u5e76\u56de\u7b54\u4e0b\u9762\u7684\u95ee\u9898\u3002\u6211\u4eec\u5c06\u6839\u636e\u4ee3\u7801\u7684\u5b8c\u6210\u5ea6\u548c\u5bf9\u95ee\u9898\u7684\u89e3\u7b54\u6765\u5bf9\u4f60\u63d0\u4ea4\u7684\u9879\u76ee\u7684\u8fdb\u884c\u8bc4\u4f30\u3002 \n",
        "\n",
        "> **\u63d0\u793a**\uff1a\u8fd9\u6837\u7684\u6587\u5b57\u5c06\u4f1a\u6307\u5bfc\u4f60\u5982\u4f55\u4f7f\u7528 iPython Notebook \u6765\u5b8c\u6210\u9879\u76ee\u3002"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "_cell_guid": "e13f5ffe-d49a-6f2b-fde8-98c403c699cf"
      },
      "source": [
        "\u70b9\u51fb[\u8fd9\u91cc](https://github.com/udacity/machine-learning/blob/master/projects/titanic_survival_exploration/Titanic_Survival_Exploration.ipynb)\u67e5\u770b\u672c\u6587\u4ef6\u7684\u82f1\u6587\u7248\u672c\u3002"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "_cell_guid": "70e50f46-24c0-682a-a18f-2489e3198a84"
      },
      "source": [
        "# \u5f00\u59cb\n",
        "\n",
        "\u5f53\u6211\u4eec\u5f00\u59cb\u5904\u7406\u6cf0\u5766\u5c3c\u514b\u53f7\u4e58\u5ba2\u6570\u636e\u65f6\uff0c\u4f1a\u5148\u5bfc\u5165\u6211\u4eec\u9700\u8981\u7684\u529f\u80fd\u6a21\u5757\u4ee5\u53ca\u5c06\u6570\u636e\u52a0\u8f7d\u5230 `pandas` DataFrame\u3002\u8fd0\u884c\u4e0b\u9762\u533a\u57df\u4e2d\u7684\u4ee3\u7801\u52a0\u8f7d\u6570\u636e\uff0c\u5e76\u4f7f\u7528 `.head()` \u51fd\u6570\u663e\u793a\u524d\u51e0\u9879\u4e58\u5ba2\u6570\u636e\u3002 \n",
        "\n",
        "> **\u63d0\u793a**\uff1a\u4f60\u53ef\u4ee5\u901a\u8fc7\u5355\u51fb\u4ee3\u7801\u533a\u57df\uff0c\u7136\u540e\u4f7f\u7528\u952e\u76d8\u5feb\u6377\u952e **Shift+Enter** \u6216 **Shift+ Return** \u6765\u8fd0\u884c\u4ee3\u7801\u3002\u6216\u8005\u5728\u9009\u62e9\u4ee3\u7801\u540e\u4f7f\u7528**\u64ad\u653e**\uff08run cell\uff09\u6309\u94ae\u6267\u884c\u4ee3\u7801\u3002\u50cf\u8fd9\u6837\u7684 MarkDown \u6587\u672c\u53ef\u4ee5\u901a\u8fc7\u53cc\u51fb\u7f16\u8f91\uff0c\u5e76\u4f7f\u7528\u8fd9\u4e9b\u76f8\u540c\u7684\u5feb\u6377\u952e\u4fdd\u5b58\u3002[Markdown](http://daringfireball.net/projects/markdown/syntax) \u5141\u8bb8\u4f60\u7f16\u5199\u6613\u8bfb\u7684\u7eaf\u6587\u672c\u5e76\u4e14\u53ef\u4ee5\u8f6c\u6362\u4e3a HTML\u3002"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "_cell_guid": "f0348e68-d190-80f6-c835-47efcc3c3843"
      },
      "outputs": [],
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "\n",
        "# RMS Titanic data visualization code \n",
        "# \u6570\u636e\u53ef\u89c6\u5316\u4ee3\u7801\n",
        "from titanic_visualizations import survival_stats\n",
        "from IPython.display import display\n",
        "%matplotlib inline\n",
        "\n",
        "# Load the dataset \n",
        "# \u52a0\u8f7d\u6570\u636e\u96c6\n",
        "in_file = 'titanic_data.csv'\n",
        "full_data = pd.read_csv(in_file)\n",
        "\n",
        "# Print the first few entries of the RMS Titanic data \n",
        "# \u663e\u793a\u6570\u636e\u5217\u8868\u4e2d\u7684\u524d\u51e0\u9879\u4e58\u5ba2\u6570\u636e\n",
        "display(full_data.head())"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "_cell_guid": "1bb8f5e5-77c2-bfe4-b533-47cafa6bf06a"
      },
      "source": [
        "\u4ece\u6cf0\u5766\u5c3c\u514b\u53f7\u7684\u6570\u636e\u6837\u672c\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u8239\u4e0a\u6bcf\u4f4d\u65c5\u5ba2\u7684\u7279\u5f81\n",
        "\n",
        "- **Survived**\uff1a\u662f\u5426\u5b58\u6d3b\uff080\u4ee3\u8868\u5426\uff0c1\u4ee3\u8868\u662f\uff09\n",
        "- **Pclass**\uff1a\u793e\u4f1a\u9636\u7ea7\uff081\u4ee3\u8868\u4e0a\u5c42\u9636\u7ea7\uff0c2\u4ee3\u8868\u4e2d\u5c42\u9636\u7ea7\uff0c3\u4ee3\u8868\u5e95\u5c42\u9636\u7ea7\uff09\n",
        "- **Name**\uff1a\u8239\u4e0a\u4e58\u5ba2\u7684\u540d\u5b57\n",
        "- **Sex**\uff1a\u8239\u4e0a\u4e58\u5ba2\u7684\u6027\u522b\n",
        "- **Age**:\u8239\u4e0a\u4e58\u5ba2\u7684\u5e74\u9f84\uff08\u53ef\u80fd\u5b58\u5728 `NaN`\uff09\n",
        "- **SibSp**\uff1a\u4e58\u5ba2\u5728\u8239\u4e0a\u7684\u5144\u5f1f\u59d0\u59b9\u548c\u914d\u5076\u7684\u6570\u91cf\n",
        "- **Parch**\uff1a\u4e58\u5ba2\u5728\u8239\u4e0a\u7684\u7236\u6bcd\u4ee5\u53ca\u5c0f\u5b69\u7684\u6570\u91cf\n",
        "- **Ticket**\uff1a\u4e58\u5ba2\u8239\u7968\u7684\u7f16\u53f7\n",
        "- **Fare**\uff1a\u4e58\u5ba2\u4e3a\u8239\u7968\u652f\u4ed8\u7684\u8d39\u7528\n",
        "- **Cabin**\uff1a\u4e58\u5ba2\u6240\u5728\u8239\u8231\u7684\u7f16\u53f7\uff08\u53ef\u80fd\u5b58\u5728 `NaN`\uff09\n",
        "- **Embarked**\uff1a\u4e58\u5ba2\u4e0a\u8239\u7684\u6e2f\u53e3\uff08C \u4ee3\u8868\u4ece Cherbourg \u767b\u8239\uff0cQ \u4ee3\u8868\u4ece Queenstown \u767b\u8239\uff0cS \u4ee3\u8868\u4ece Southampton \u767b\u8239\uff09\n",
        "\n",
        "\u56e0\u4e3a\u6211\u4eec\u611f\u5174\u8da3\u7684\u662f\u6bcf\u4e2a\u4e58\u5ba2\u6216\u8239\u5458\u662f\u5426\u5728\u4e8b\u6545\u4e2d\u6d3b\u4e86\u4e0b\u6765\u3002\u53ef\u4ee5\u5c06 **Survived** \u8fd9\u4e00\u7279\u5f81\u4ece\u8fd9\u4e2a\u6570\u636e\u96c6\u79fb\u9664\uff0c\u5e76\u4e14\u7528\u4e00\u4e2a\u5355\u72ec\u7684\u53d8\u91cf `outcomes` \u6765\u5b58\u50a8\u3002\u5b83\u4e5f\u505a\u4e3a\u6211\u4eec\u8981\u9884\u6d4b\u7684\u76ee\u6807\u3002\n",
        "\n",
        "\u8fd0\u884c\u8be5\u4ee3\u7801\uff0c\u4ece\u6570\u636e\u96c6\u4e2d\u79fb\u9664 **Survived** \u8fd9\u4e2a\u7279\u5f81\uff0c\u5e76\u5c06\u5b83\u5b58\u50a8\u5728\u53d8\u91cf `outcomes` \u4e2d\u3002"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "_cell_guid": "a0de0f71-c81b-128d-366e-8d81b5ec164c"
      },
      "outputs": [],
      "source": [
        "# Store the 'Survived' feature in a new variable and remove it from the dataset \n",
        "# \u4ece\u6570\u636e\u96c6\u4e2d\u79fb\u9664 'Survived' \u8fd9\u4e2a\u7279\u5f81\uff0c\u5e76\u5c06\u5b83\u5b58\u50a8\u5728\u4e00\u4e2a\u65b0\u7684\u53d8\u91cf\u4e2d\u3002\n",
        "outcomes = full_data['Survived']\n",
        "data = full_data.drop('Survived', axis = 1)\n",
        "\n",
        "# Show the new dataset with 'Survived' removed\n",
        "# \u663e\u793a\u5df2\u79fb\u9664 'Survived' \u7279\u5f81\u7684\u6570\u636e\u96c6\n",
        "display(data.head())"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "_cell_guid": "e9591331-4f81-1cad-7e73-605cd37ead2f"
      },
      "source": [
        "\u8fd9\u4e2a\u4f8b\u5b50\u5c55\u793a\u4e86\u5982\u4f55\u5c06\u6cf0\u5766\u5c3c\u514b\u53f7\u7684 **Survived** \u6570\u636e\u4ece DataFrame \u79fb\u9664\u3002\u6ce8\u610f\u5230 `data`\uff08\u4e58\u5ba2\u6570\u636e\uff09\u548c `outcomes` \uff08\u662f\u5426\u5b58\u6d3b\uff09\u73b0\u5728\u5df2\u7ecf\u5339\u914d\u597d\u3002\u8fd9\u610f\u5473\u7740\u5bf9\u4e8e\u4efb\u4f55\u4e58\u5ba2\u7684 `data.loc[i]` \u90fd\u6709\u5bf9\u5e94\u7684\u5b58\u6d3b\u7684\u7ed3\u679c `outcome[i]`\u3002\n",
        "\n",
        "\u4e3a\u4e86\u9a8c\u8bc1\u6211\u4eec\u9884\u6d4b\u7684\u7ed3\u679c\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u6807\u51c6\u6765\u7ed9\u6211\u4eec\u7684\u9884\u6d4b\u6253\u5206\u3002\u56e0\u4e3a\u6211\u4eec\u6700\u611f\u5174\u8da3\u7684\u662f\u6211\u4eec\u9884\u6d4b\u7684**\u51c6\u786e\u7387**\uff0c\u65e2\u6b63\u786e\u9884\u6d4b\u4e58\u5ba2\u5b58\u6d3b\u7684\u6bd4\u4f8b\u3002\u8fd0\u884c\u4e0b\u9762\u7684\u4ee3\u7801\u6765\u521b\u5efa\u6211\u4eec\u7684 `accuracy_score` \u51fd\u6570\u4ee5\u5bf9\u524d\u4e94\u540d\u4e58\u5ba2\u7684\u9884\u6d4b\u6765\u505a\u6d4b\u8bd5\u3002\n",
        "\n",
        "**\u601d\u8003\u9898**\uff1a\u4ece\u7b2c\u516d\u4e2a\u4e58\u5ba2\u7b97\u8d77\uff0c\u5982\u679c\u6211\u4eec\u9884\u6d4b\u4ed6\u4eec\u5168\u90e8\u90fd\u5b58\u6d3b\uff0c\u4f60\u89c9\u5f97\u6211\u4eec\u9884\u6d4b\u7684\u51c6\u786e\u7387\u662f\u591a\u5c11\uff1f"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "_cell_guid": "3c5b69c7-9547-e116-0851-0e1b5c0012cf"
      },
      "outputs": [],
      "source": [
        "def accuracy_score(truth, pred):\n",
        "    \"\"\" Returns accuracy score for input truth and predictions. \"\"\"\n",
        "    \n",
        "    # Ensure that the number of predictions matches number of outcomes\n",
        "    # \u786e\u4fdd\u9884\u6d4b\u7684\u6570\u91cf\u4e0e\u7ed3\u679c\u7684\u6570\u91cf\u4e00\u81f4\n",
        "    if len(truth) == len(pred): \n",
        "        \n",
        "        # Calculate and return the accuracy as a percent\n",
        "        # \u8ba1\u7b97\u9884\u6d4b\u51c6\u786e\u7387\uff08\u767e\u5206\u6bd4\uff09\n",
        "        return \"Predictions have an accuracy of {:.2f}%.\".format((truth == pred).mean()*100)\n",
        "    \n",
        "    else:\n",
        "        return \"Number of predictions does not match number of outcomes!\"\n",
        "    \n",
        "# Test the 'accuracy_score' function\n",
        "# \u6d4b\u8bd5 'accuracy_score' \u51fd\u6570\n",
        "predictions = pd.Series(np.ones(5, dtype = int))\n",
        "print accuracy_score(outcomes[:5], predictions)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "_cell_guid": "15c48c32-8df5-177d-688a-16c1f17e6890"
      },
      "source": [
        "> **\u63d0\u793a**\uff1a\u5982\u679c\u4f60\u4fdd\u5b58 iPython Notebook\uff0c\u4ee3\u7801\u8fd0\u884c\u7684\u8f93\u51fa\u4e5f\u5c06\u88ab\u4fdd\u5b58\u3002\u4f46\u662f\uff0c\u4e00\u65e6\u4f60\u91cd\u65b0\u6253\u5f00\u9879\u76ee\uff0c\u4f60\u7684\u5de5\u4f5c\u533a\u5c06\u4f1a\u88ab\u91cd\u7f6e\u3002\u8bf7\u786e\u4fdd\u6bcf\u6b21\u90fd\u4ece\u4e0a\u6b21\u79bb\u5f00\u7684\u5730\u65b9\u8fd0\u884c\u4ee3\u7801\u6765\u91cd\u65b0\u751f\u6210\u53d8\u91cf\u548c\u51fd\u6570\u3002\n",
        "\n",
        "# \u9884\u6d4b\n",
        "\n",
        "\u5982\u679c\u6211\u4eec\u8981\u9884\u6d4b\u6cf0\u5766\u5c3c\u514b\u53f7\u4e0a\u7684\u4e58\u5ba2\u662f\u5426\u5b58\u6d3b\uff0c\u4f46\u662f\u6211\u4eec\u53c8\u5bf9\u4ed6\u4eec\u4e00\u65e0\u6240\u77e5\uff0c\u90a3\u4e48\u6700\u597d\u7684\u9884\u6d4b\u5c31\u662f\u8239\u4e0a\u7684\u4eba\u65e0\u4e00\u5e78\u514d\u3002\u8fd9\u662f\u56e0\u4e3a\uff0c\u6211\u4eec\u53ef\u4ee5\u5047\u5b9a\u5f53\u8239\u6c89\u6ca1\u7684\u65f6\u5019\u5927\u591a\u6570\u4e58\u5ba2\u90fd\u9047\u96be\u4e86\u3002\u4e0b\u9762\u7684 `predictions_0` \u51fd\u6570\u5c31\u9884\u6d4b\u8239\u4e0a\u7684\u4e58\u5ba2\u5168\u90e8\u9047\u96be\u3002  "
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "_cell_guid": "6f4d0c16-0646-e70c-9958-07a31c5b8518"
      },
      "outputs": [],
      "source": [
        "def predictions_0(data):\n",
        "    \"\"\" Model with no features. Always predicts a passenger did not survive. \"\"\"\n",
        "\n",
        "    predictions = []\n",
        "    for  passenger in data.iterrows():\n",
        "        \n",
        "        # Predict the survival of 'passenger'\n",
        "        # \u9884\u6d4b 'passenger' \u7684\u751f\u8fd8\u7387\n",
        "        predictions.append(0)\n",
        "    \n",
        "    # Return our predictions\n",
        "    # \u8fd4\u56de\u9884\u6d4b\u7ed3\u679c\n",
        "    return pd.Series(predictions)\n",
        "\n",
        "# Make the predictions\n",
        "# \u8fdb\u884c\u9884\u6d4b\n",
        "predictions = predictions_0(data)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "_cell_guid": "8926ed37-c856-8cbd-3e03-46f18f8302ac"
      },
      "source": [
        "### \u95ee\u98981\n",
        "\n",
        "\u5bf9\u6bd4\u771f\u5b9e\u7684\u6cf0\u5766\u5c3c\u514b\u53f7\u7684\u6570\u636e\uff0c\u5982\u679c\u6211\u4eec\u505a\u4e00\u4e2a\u6240\u6709\u4e58\u5ba2\u90fd\u6ca1\u6709\u5b58\u6d3b\u7684\u9884\u6d4b\uff0c\u4f60\u8ba4\u4e3a\u8fd9\u4e2a\u9884\u6d4b\u7684\u51c6\u786e\u7387\u80fd\u8fbe\u5230\u591a\u5c11\uff1f\n",
        "\n",
        "**\u63d0\u793a**\uff1a\u8fd0\u884c\u4e0b\u9762\u7684\u4ee3\u7801\u6765\u67e5\u770b\u9884\u6d4b\u7684\u51c6\u786e\u7387\u3002"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "_cell_guid": "a4d57792-34a0-eec4-5b39-4a79bb12c4dc"
      },
      "outputs": [],
      "source": [
        "print accuracy_score(outcomes, predictions)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "_cell_guid": "fe25004f-797d-52c0-774b-f0caf92aaed6"
      },
      "source": [
        "**\u56de\u7b54:** *Predictions have an accuracy of 61.62%.*"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "_cell_guid": "f6342cc5-1339-f975-7bd1-c42f93c26aa2"
      },
      "source": [
        "***\n",
        "\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 `survival_stats` \u51fd\u6570\u6765\u770b\u770b **Sex** \u8fd9\u4e00\u7279\u5f81\u5bf9\u4e58\u5ba2\u7684\u5b58\u6d3b\u7387\u6709\u591a\u5927\u5f71\u54cd\u3002\u8fd9\u4e2a\u51fd\u6570\u5b9a\u4e49\u5728\u540d\u4e3a `titanic_visualizations.py` \u7684 Python \u811a\u672c\u6587\u4ef6\u4e2d\uff0c\u6211\u4eec\u7684\u9879\u76ee\u63d0\u4f9b\u4e86\u8fd9\u4e2a\u6587\u4ef6\u3002\u4f20\u9012\u7ed9\u51fd\u6570\u7684\u524d\u4e24\u4e2a\u53c2\u6570\u5206\u522b\u662f\u6cf0\u5766\u5c3c\u514b\u53f7\u7684\u4e58\u5ba2\u6570\u636e\u548c\u4e58\u5ba2\u7684 \u751f\u8fd8\u7ed3\u679c\u3002\u7b2c\u4e09\u4e2a\u53c2\u6570\u8868\u660e\u6211\u4eec\u4f1a\u4f9d\u636e\u54ea\u4e2a\u7279\u5f81\u6765\u7ed8\u5236\u56fe\u5f62\u3002\n",
        "\n",
        "\u8fd0\u884c\u4e0b\u9762\u7684\u4ee3\u7801\u7ed8\u5236\u51fa\u4f9d\u636e\u4e58\u5ba2\u6027\u522b\u8ba1\u7b97\u5b58\u6d3b\u7387\u7684\u67f1\u5f62\u56fe\u3002 "
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "_cell_guid": "7c796821-e19c-081f-acc6-bcf1da70ac32"
      },
      "outputs": [],
      "source": [
        "survival_stats(data, outcomes, 'Sex')"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "_cell_guid": "8cd69800-25a9-08a8-b695-f10bd4177830"
      },
      "source": [
        "\u89c2\u5bdf\u6cf0\u5766\u5c3c\u514b\u53f7\u4e0a\u4e58\u5ba2\u5b58\u6d3b\u7684\u6570\u636e\u7edf\u8ba1\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u5927\u90e8\u5206\u7537\u6027\u4e58\u5ba2\u5728\u8239\u6c89\u6ca1\u7684\u65f6\u5019\u90fd\u9047\u96be\u4e86\u3002\u76f8\u53cd\u7684\uff0c\u5927\u90e8\u5206\u5973\u6027\u4e58\u5ba2\u90fd\u5728\u4e8b\u6545\u4e2d**\u751f\u8fd8**\u3002\u8ba9\u6211\u4eec\u5728\u5148\u524d\u63a8\u65ad\u7684\u57fa\u7840\u4e0a\u7ee7\u7eed\u521b\u5efa\uff1a\u5982\u679c\u4e58\u5ba2\u662f\u7537\u6027\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u9884\u6d4b\u4ed6\u4eec\u9047\u96be\uff1b\u5982\u679c\u4e58\u5ba2\u662f\u5973\u6027\uff0c\u90a3\u4e48\u6211\u4eec\u9884\u6d4b\u4ed6\u4eec\u5728\u4e8b\u6545\u4e2d\u6d3b\u4e86\u4e0b\u6765\u3002\n",
        "\n",
        "\u5c06\u4e0b\u9762\u7684\u4ee3\u7801\u8865\u5145\u5b8c\u6574\uff0c\u8ba9\u51fd\u6570\u53ef\u4ee5\u8fdb\u884c\u6b63\u786e\u9884\u6d4b\u3002  \n",
        "\n",
        "**\u63d0\u793a**\uff1a\u60a8\u53ef\u4ee5\u7528\u8bbf\u95ee dictionary\uff08\u5b57\u5178\uff09\u7684\u65b9\u6cd5\u6765\u8bbf\u95ee\u8239\u4e0a\u4e58\u5ba2\u7684\u6bcf\u4e2a\u7279\u5f81\u5bf9\u5e94\u7684\u503c\u3002\u4f8b\u5982\uff0c `passenger['Sex']` \u8fd4\u56de\u4e58\u5ba2\u7684\u6027\u522b\u3002"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "_cell_guid": "a984317e-2a30-191a-bea1-02fa973674f0"
      },
      "outputs": [],
      "source": [
        "def predictions_1(data):\n",
        "    \"\"\" Model with one feature: \n",
        "            - Predict a passenger survived if they are female. \"\"\"\n",
        "    \n",
        "    predictions = []\n",
        "    for _, passenger in data.iterrows():\n",
        "        \n",
        "        # Remove the 'pass' statement below \n",
        "        # \u79fb\u9664\u4e0b\u65b9\u7684 'pass' \u58f0\u660e\n",
        "        # and write your prediction conditions here\n",
        "        # \u8f93\u5165\u4f60\u81ea\u5df1\u7684\u9884\u6d4b\u6761\u4ef6\n",
        "        if passenger['Sex'] == 'female':\n",
        "            predictions.append(1);\n",
        "        else:\n",
        "            predictions.append(0)\n",
        "    \n",
        "    # Return our predictions\n",
        "    # \u8fd4\u56de\u9884\u6d4b\u7ed3\u679c\n",
        "    return pd.Series(predictions)\n",
        "\n",
        "# Make the predictions\n",
        "# \u8fdb\u884c\u9884\u6d4b\n",
        "predictions = predictions_1(data)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "_cell_guid": "0444698a-ab1b-1aaa-477a-e9ee4951ce96"
      },
      "source": [
        "### \u95ee\u98982\n",
        "\u5f53\u6211\u4eec\u9884\u6d4b\u8239\u4e0a\u5973\u6027\u4e58\u5ba2\u5168\u90e8\u5b58\u6d3b\uff0c\u800c\u5269\u4e0b\u7684\u4eba\u5168\u90e8\u9047\u96be\uff0c\u90a3\u4e48\u6211\u4eec\u9884\u6d4b\u7684\u51c6\u786e\u7387\u4f1a\u8fbe\u5230\u591a\u5c11\uff1f\n",
        "\n",
        "**\u63d0\u793a**\uff1a\u8fd0\u884c\u4e0b\u9762\u7684\u4ee3\u7801\u6765\u67e5\u770b\u6211\u4eec\u9884\u6d4b\u7684\u51c6\u786e\u7387\u3002 "
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "_cell_guid": "c3dd097d-e1bb-fbc7-a11b-9344cd278e1a"
      },
      "outputs": [],
      "source": [
        "print accuracy_score(outcomes, predictions)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "_cell_guid": "0d8c093d-188c-b136-ea4d-8c5ec76349d3"
      },
      "source": [
        "**\u56de\u7b54**: *Predictions have an accuracy of 78.68%*"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "_cell_guid": "34b24b09-ba24-f66e-7f9f-5bea0c78dd7d"
      },
      "source": [
        "***\n",
        "\u4ec5\u4ec5\u4f7f\u7528\u4e58\u5ba2\u6027\u522b\uff08Sex\uff09\u8fd9\u4e00\u7279\u5f81\uff0c\u6211\u4eec\u9884\u6d4b\u7684\u51c6\u786e\u6027\u5c31\u6709\u4e86\u660e\u663e\u7684\u63d0\u9ad8\u3002\u73b0\u5728\u518d\u770b\u4e00\u4e0b\u4f7f\u7528\u989d\u5916\u7684\u7279\u5f81\u80fd\u5426\u66f4\u8fdb\u4e00\u6b65\u63d0\u5347\u6211\u4eec\u7684\u9884\u6d4b\u51c6\u786e\u5ea6\u3002\u4f8b\u5982\uff0c\u7efc\u5408\u8003\u8651\u6240\u6709\u5728\u6cf0\u5766\u5c3c\u514b\u53f7\u4e0a\u7684\u7537\u6027\u4e58\u5ba2\uff1a\u6211\u4eec\u662f\u5426\u627e\u5230\u8fd9\u4e9b\u4e58\u5ba2\u4e2d\u7684\u4e00\u4e2a\u5b50\u96c6\uff0c\u4ed6\u4eec\u7684\u5b58\u6d3b\u6982\u7387\u8f83\u9ad8\u3002\u8ba9\u6211\u4eec\u518d\u6b21\u4f7f\u7528 `survival_stats` \u51fd\u6570\u6765\u770b\u770b\u6bcf\u4f4d\u7537\u6027\u4e58\u5ba2\u7684\u5e74\u9f84\uff08Age\uff09\u3002\u8fd9\u4e00\u6b21\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u7b2c\u56db\u4e2a\u53c2\u6570\u6765\u9650\u5b9a\u67f1\u5f62\u56fe\u4e2d\u53ea\u6709\u7537\u6027\u4e58\u5ba2\u3002\n",
        "\n",
        "\u8fd0\u884c\u4e0b\u9762\u8fd9\u6bb5\u4ee3\u7801\uff0c\u628a\u7537\u6027\u57fa\u4e8e\u5e74\u9f84\u7684\u751f\u5b58\u7ed3\u679c\u7ed8\u5236\u51fa\u6765\u3002"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "_cell_guid": "c38dcb6e-da58-1bc5-c585-930b074ac43c"
      },
      "outputs": [],
      "source": [
        "survival_stats(data, outcomes, 'Age', [\"Sex == 'female'\"])"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "_cell_guid": "7ac04c4d-80ac-6559-ffaf-63728be6ddc5"
      },
      "source": [
        "\u4ed4\u7ec6\u89c2\u5bdf\u6cf0\u5766\u5c3c\u514b\u53f7\u5b58\u6d3b\u7684\u6570\u636e\u7edf\u8ba1\uff0c\u5728\u8239\u6c89\u6ca1\u7684\u65f6\u5019\uff0c\u5927\u90e8\u5206\u5c0f\u4e8e10\u5c81\u7684\u7537\u5b69\u90fd\u6d3b\u7740\uff0c\u800c\u5927\u591a\u657010\u5c81\u4ee5\u4e0a\u7684\u7537\u6027\u90fd\u968f\u7740\u8239\u7684\u6c89\u6ca1\u800c**\u9047\u96be**\u3002\u8ba9\u6211\u4eec\u7ee7\u7eed\u5728\u5148\u524d\u9884\u6d4b\u7684\u57fa\u7840\u4e0a\u6784\u5efa\uff1a\u5982\u679c\u4e58\u5ba2\u662f\u5973\u6027\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u9884\u6d4b\u5979\u4eec\u5168\u90e8\u5b58\u6d3b\uff1b\u5982\u679c\u4e58\u5ba2\u662f\u7537\u6027\u5e76\u4e14\u5c0f\u4e8e10\u5c81\uff0c\u6211\u4eec\u4e5f\u4f1a\u9884\u6d4b\u4ed6\u4eec\u5168\u90e8\u5b58\u6d3b\uff1b\u6240\u6709\u5176\u5b83\u6211\u4eec\u5c31\u9884\u6d4b\u4ed6\u4eec\u90fd\u6ca1\u6709\u5e78\u5b58\u3002  \n",
        "\n",
        "\u5c06\u4e0b\u9762\u7f3a\u5931\u7684\u4ee3\u7801\u8865\u5145\u5b8c\u6574\uff0c\u8ba9\u6211\u4eec\u7684\u51fd\u6570\u53ef\u4ee5\u5b9e\u73b0\u9884\u6d4b\u3002  \n",
        "**\u63d0\u793a**: \u60a8\u53ef\u4ee5\u7528\u4e4b\u524d `predictions_1` \u7684\u4ee3\u7801\u4f5c\u4e3a\u5f00\u59cb\u6765\u4fee\u6539\u4ee3\u7801\uff0c\u5b9e\u73b0\u65b0\u7684\u9884\u6d4b\u51fd\u6570\u3002"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "_cell_guid": "372ab542-b558-501d-7381-3f97518f1af6"
      },
      "outputs": [],
      "source": [
        "def predictions_2(data):\n",
        "    \"\"\" Model with two features: \n",
        "            - Predict a passenger survived if they are female.\n",
        "            - Predict a passenger survived if they are male and younger than 10. \"\"\"\n",
        "    \n",
        "    predictions = []\n",
        "    for _, passenger in data.iterrows():\n",
        "        \n",
        "        # Remove the 'pass' statement below \n",
        "        # \u79fb\u9664\u4e0b\u65b9\u7684 'pass' \u58f0\u660e\n",
        "        # and write your prediction conditions here\n",
        "        # \u8f93\u5165\u4f60\u81ea\u5df1\u7684\u9884\u6d4b\u6761\u4ef6\n",
        "        if passenger['Sex'] == 'female'  :\n",
        "            predictions.append(1)\n",
        "        elif  passenger['Age'] < 10 :\n",
        "            predictions.append(1)\n",
        "        else :\n",
        "            predictions.append(0)\n",
        "        \n",
        "    \n",
        "    # Return our predictions\n",
        "    # \u8fd4\u56de\u9884\u6d4b\u7ed3\u679c\n",
        "    return pd.Series(predictions)\n",
        "\n",
        "# Make the predictions\n",
        "# \u8fdb\u884c\u9884\u6d4b\n",
        "predictions = predictions_2(data)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "_cell_guid": "b66db354-fbe1-ee4a-554b-131591f5f6e4"
      },
      "source": [
        "### \u95ee\u98983\n",
        "\n",
        "\u5f53\u9884\u6d4b\u6240\u6709\u5973\u6027\u4ee5\u53ca\u5c0f\u4e8e10\u5c81\u7684\u7537\u6027\u90fd\u5b58\u6d3b\u7684\u65f6\u5019\uff0c\u9884\u6d4b\u7684\u51c6\u786e\u7387\u4f1a\u8fbe\u5230\u591a\u5c11\uff1f\n",
        "\n",
        "**\u63d0\u793a\uff1a**\u8fd0\u884c\u4e0b\u9762\u7684\u4ee3\u7801\u6765\u67e5\u770b\u9884\u6d4b\u7684\u51c6\u786e\u7387\u3002"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "_cell_guid": "39c5af24-154d-65af-e1da-e776d8629f17"
      },
      "outputs": [],
      "source": [
        "print accuracy_score(outcomes, predictions)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "_cell_guid": "58ee71be-0fd8-a33f-130f-598e4f79896b"
      },
      "source": [
        "**\u56de\u7b54**: *Predictions have an accuracy of 79.35%.*"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "_cell_guid": "65f78c3c-3957-b3d7-2cc5-0ff96de65685",
        "collapsed": true
      },
      "source": [
        "***\n",
        "\u6dfb\u52a0\u5e74\u9f84\uff08Age\uff09\u7279\u5f81\u4e0e\u6027\u522b\uff08Sex\uff09\u7684\u7ed3\u5408\u6bd4\u5355\u72ec\u4f7f\u7528\u6027\u522b\uff08Sex\uff09\u4e5f\u63d0\u9ad8\u4e86\u4e0d\u5c11\u51c6\u786e\u5ea6\u3002\u73b0\u5728\u8be5\u4f60\u6765\u505a\u9884\u6d4b\u4e86\uff1a\u627e\u5230\u4e00\u7cfb\u5217\u7684\u7279\u5f81\u548c\u6761\u4ef6\u6765\u5bf9\u6570\u636e\u8fdb\u884c\u5212\u5206\uff0c\u4f7f\u5f97\u9884\u6d4b\u7ed3\u679c\u63d0\u9ad8\u523080%\u4ee5\u4e0a\u3002\u8fd9\u53ef\u80fd\u9700\u8981\u591a\u4e2a\u7279\u6027\u548c\u591a\u4e2a\u5c42\u6b21\u7684\u6761\u4ef6\u8bed\u53e5\u624d\u4f1a\u6210\u529f\u3002\u4f60\u53ef\u4ee5\u5728\u4e0d\u540c\u7684\u6761\u4ef6\u4e0b\u591a\u6b21\u4f7f\u7528\u76f8\u540c\u7684\u7279\u5f81\u3002**Pclass**\uff0c**Sex**\uff0c**Age**\uff0c**SibSp** \u548c **Parch** \u662f\u5efa\u8bae\u5c1d\u8bd5\u4f7f\u7528\u7684\u7279\u5f81\u3002   \n",
        "\n",
        "\u4f7f\u7528 `survival_stats` \u51fd\u6570\u6765\u89c2\u6d4b\u6cf0\u5766\u5c3c\u514b\u53f7\u4e0a\u4e58\u5ba2\u5b58\u6d3b\u7684\u6570\u636e\u7edf\u8ba1\u3002  \n",
        "**\u63d0\u793a:** \u8981\u4f7f\u7528\u591a\u4e2a\u8fc7\u6ee4\u6761\u4ef6\uff0c\u628a\u6bcf\u4e00\u4e2a\u6761\u4ef6\u653e\u5728\u4e00\u4e2a\u5217\u8868\u91cc\u4f5c\u4e3a\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u4f20\u9012\u8fdb\u53bb\u3002\u4f8b\u5982: `[\"Sex == 'male'\", \"Age < 18\"]`"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "_cell_guid": "5e8b513a-7e0f-513b-c394-8f41b891073a"
      },
      "outputs": [],
      "source": [
        "survival_stats(data, outcomes, 'Age', [\"Sex == 'female'\", \"Pclass == 3\"])"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "_cell_guid": "5b541995-93de-68f2-2ba0-7a6732802449"
      },
      "source": [
        "\u5f53\u67e5\u770b\u548c\u7814\u7a76\u4e86\u56fe\u5f62\u5316\u7684\u6cf0\u5766\u5c3c\u514b\u53f7\u4e0a\u4e58\u5ba2\u7684\u6570\u636e\u7edf\u8ba1\u540e\uff0c\u8bf7\u8865\u5168\u4e0b\u9762\u8fd9\u6bb5\u4ee3\u7801\u4e2d\u7f3a\u5931\u7684\u90e8\u5206\uff0c\u4f7f\u5f97\u51fd\u6570\u53ef\u4ee5\u8fd4\u56de\u4f60\u7684\u9884\u6d4b\u3002   \n",
        "\u5728\u5230\u8fbe\u6700\u7ec8\u7684\u9884\u6d4b\u6a21\u578b\u524d\u8bf7\u786e\u4fdd\u8bb0\u5f55\u4f60\u5c1d\u8bd5\u8fc7\u7684\u5404\u79cd\u7279\u5f81\u548c\u6761\u4ef6\u3002   \n",
        "**\u63d0\u793a:** \u60a8\u53ef\u4ee5\u7528\u4e4b\u524d `predictions_2` \u7684\u4ee3\u7801\u4f5c\u4e3a\u5f00\u59cb\u6765\u4fee\u6539\u4ee3\u7801\uff0c\u5b9e\u73b0\u65b0\u7684\u9884\u6d4b\u51fd\u6570\u3002"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "_cell_guid": "2ba91798-7d76-6883-c59c-ccc240b375e6"
      },
      "outputs": [],
      "source": [
        "def predictions_3(data):\n",
        "    \"\"\" Model with multiple features. Makes a prediction with an accuracy of at least 80%. \"\"\"\n",
        "    \n",
        "    predictions = []\n",
        "    for _, passenger in data.iterrows():\n",
        "        \n",
        "        # Remove the 'pass' statement below \n",
        "        # and write your prediction conditions here\n",
        "        \n",
        "        if passenger['Sex'] == 'female'and passenger['Pclass'] == 3 and passenger['Age'] >= 40  :\n",
        "            predictions.append(0)\n",
        "            \n",
        "        elif passenger['Sex'] == 'female':\n",
        "            predictions.append(1)\n",
        "            \n",
        "        elif  passenger['Age'] < 10:\n",
        "            predictions.append(1)\n",
        "    \n",
        "        else :\n",
        "            predictions.append(0)\n",
        "    \n",
        "    # Return our predictions\n",
        "    return pd.Series(predictions)\n",
        "\n",
        "# Make the predictions\n",
        "predictions = predictions_3(data)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "_cell_guid": "8c09e19d-55c8-a766-f5f7-3f4267a9e85e"
      },
      "source": [
        "### \u7ed3\u8bba\n",
        "\n",
        "\u8bf7\u63cf\u8ff0\u4f60\u5b9e\u73b080%\u51c6\u786e\u5ea6\u7684\u9884\u6d4b\u6a21\u578b\u6240\u7ecf\u5386\u7684\u6b65\u9aa4\u3002\u60a8\u89c2\u5bdf\u8fc7\u54ea\u4e9b\u7279\u5f81\uff1f\u67d0\u4e9b\u7279\u6027\u662f\u5426\u6bd4\u5176\u4ed6\u7279\u5f81\u66f4\u6709\u5e2e\u52a9\uff1f\u4f60\u7528\u4e86\u4ec0\u4e48\u6761\u4ef6\u6765\u9884\u6d4b\u751f\u8fd8\u7ed3\u679c\uff1f\u4f60\u6700\u7ec8\u7684\u9884\u6d4b\u7684\u51c6\u786e\u7387\u662f\u591a\u5c11\uff1f\n",
        "**\u63d0\u793a:**\u8fd0\u884c\u4e0b\u9762\u7684\u4ee3\u7801\u6765\u67e5\u770b\u4f60\u7684\u9884\u6d4b\u51c6\u786e\u5ea6\u3002"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "_cell_guid": "d8be0aa3-d4f5-7892-9ed9-56ac97a06620"
      },
      "outputs": [],
      "source": [
        "print accuracy_score(outcomes, predictions)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "_cell_guid": "65f9bdfc-bd1a-0282-9ab8-77b3017ef902"
      },
      "source": [
        "**\u56de\u7b54**: *Predictions have an accuracy of 80.25%.*"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "_cell_guid": "716b40b6-c9dc-b1dd-5141-5e0041f316a6"
      },
      "source": [
        "# \u7ed3\u8bba\n",
        "\n",
        "\u7ecf\u8fc7\u4e86\u6570\u6b21\u5bf9\u6570\u636e\u7684\u63a2\u7d22\u548c\u5206\u7c7b\uff0c\u4f60\u521b\u5efa\u4e86\u4e00\u4e2a\u9884\u6d4b\u6cf0\u5766\u5c3c\u514b\u53f7\u4e58\u5ba2\u5b58\u6d3b\u7387\u7684\u6709\u7528\u7684\u7b97\u6cd5\u3002\u5728\u8fd9\u4e2a\u9879\u76ee\u4e2d\u4f60\u624b\u52a8\u5730\u5b9e\u73b0\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u673a\u5668\u5b66\u4e60\u6a21\u578b\u2014\u2014\u51b3\u7b56\u6811\uff08decision tree\uff09\u3002\u51b3\u7b56\u6811\u6bcf\u6b21\u6309\u7167\u4e00\u4e2a\u7279\u5f81\u628a\u6570\u636e\u5206\u5272\u6210\u8d8a\u6765\u8d8a\u5c0f\u7684\u7fa4\u7ec4\uff08\u88ab\u79f0\u4e3a *nodes*\uff09\u3002\u6bcf\u6b21\u6570\u636e\u7684\u4e00\u4e2a\u5b50\u96c6\u88ab\u5206\u51fa\u6765\uff0c\u5982\u679c\u5206\u5272\u7ed3\u679c\u7684\u5b50\u96c6\u4e2d\u7684\u6570\u636e\u6bd4\u4e4b\u524d\u66f4\u540c\u8d28\uff08\u5305\u542b\u8fd1\u4f3c\u7684\u6807\u7b7e\uff09\uff0c\u6211\u4eec\u7684\u9884\u6d4b\u4e5f\u5c31\u66f4\u52a0\u51c6\u786e\u3002\u7535\u8111\u6765\u5e2e\u52a9\u6211\u4eec\u505a\u8fd9\u4ef6\u4e8b\u4f1a\u6bd4\u624b\u52a8\u505a\u66f4\u5f7b\u5e95\uff0c\u66f4\u7cbe\u786e\u3002[\u8fd9\u4e2a\u94fe\u63a5](http://www.r2d3.us/visual-intro-to-machine-learning-part-1/)\u63d0\u4f9b\u4e86\u53e6\u4e00\u4e2a\u4f7f\u7528\u51b3\u7b56\u6811\u505a\u673a\u5668\u5b66\u4e60\u5165\u95e8\u7684\u4f8b\u5b50\u3002  \n",
        "\n",
        "\u51b3\u7b56\u6811\u662f\u8bb8\u591a**\u76d1\u7763\u5b66\u4e60**\u7b97\u6cd5\u4e2d\u7684\u4e00\u79cd\u3002\u5728\u76d1\u7763\u5b66\u4e60\u4e2d\uff0c\u6211\u4eec\u5173\u5fc3\u7684\u662f\u4f7f\u7528\u6570\u636e\u7684\u7279\u5f81\u5e76\u6839\u636e\u6570\u636e\u7684\u7ed3\u679c\u6807\u7b7e\u8fdb\u884c\u9884\u6d4b\u6216\u5efa\u6a21\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6bcf\u4e00\u7ec4\u6570\u636e\u90fd\u6709\u4e00\u4e2a\u771f\u6b63\u7684\u7ed3\u679c\u503c\uff0c\u4e0d\u8bba\u662f\u50cf\u6cf0\u5766\u5c3c\u514b\u53f7\u751f\u5b58\u6570\u636e\u96c6\u4e00\u6837\u7684\u6807\u7b7e\uff0c\u6216\u8005\u662f\u8fde\u7eed\u7684\u623f\u4ef7\u9884\u6d4b\u3002\n",
        "\n",
        "### \u95ee\u98985\n",
        "\n",
        "\u60f3\u8c61\u4e00\u4e2a\u771f\u5b9e\u4e16\u754c\u4e2d\u5e94\u7528\u76d1\u7763\u5b66\u4e60\u7684\u573a\u666f\uff0c\u4f60\u671f\u671b\u9884\u6d4b\u7684\u7ed3\u679c\u662f\u4ec0\u4e48\uff1f\u4e3e\u51fa\u4e24\u4e2a\u5728\u8fd9\u4e2a\u573a\u666f\u4e2d\u80fd\u591f\u5e2e\u52a9\u4f60\u8fdb\u884c\u9884\u6d4b\u7684\u6570\u636e\u96c6\u4e2d\u7684\u7279\u5f81\u3002"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "_cell_guid": "df4ea134-8b86-df1c-76c0-874e93df9499",
        "collapsed": true
      },
      "source": [
        "**\u56de\u7b54**: *\u7528\u4f60\u7684\u7b54\u6848\u66ff\u6362\u6389\u8fd9\u91cc\u7684\u6587\u5b57*"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "_cell_guid": "54a4edec-f0fd-87f7-51d5-efc9fa360bd3"
      },
      "source": [
        "> **\u6ce8\u610f**: \u5f53\u4f60\u5199\u5b8c\u4e86\u6240\u6709\u7684\u4ee3\u7801\uff0c\u5e76\u4e14\u56de\u7b54\u4e86\u6240\u6709\u7684\u95ee\u9898\u3002\u4f60\u5c31\u53ef\u4ee5\u628a\u4f60\u7684 iPython Notebook \u5bfc\u51fa\u6210 HTML \u6587\u4ef6\u3002\u4f60\u53ef\u4ee5\u5728\u83dc\u5355\u680f\uff0c\u8fd9\u6837\u5bfc\u51fa**File -> Download as -> HTML (.html)** \u628a\u8fd9\u4e2a HTML \u548c\u8fd9\u4e2a iPython notebook \u4e00\u8d77\u505a\u4e3a\u4f60\u7684\u4f5c\u4e1a\u63d0\u4ea4\u3002"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "_cell_guid": "212ccc06-967f-e001-f8a5-8419be988860"
      },
      "source": [
        "---\n",
        "\u7ffb\u8bd1\uff1a\u6bdb\u793c\u5efa \uff5c \u6821\u8bd1\uff1a\u9ec4\u5f3a \uff5c \u5ba1\u8bd1\uff1a\u66f9\u6668\u5dcd"
      ]
    }
  ],
  "metadata": {
    "_change_revision": 0,
    "_is_fork": false,
    "kernelspec": {
      "display_name": "R",
      "language": "R",
      "name": "ir"
    },
    "language_info": {
      "codemirror_mode": "r",
      "file_extension": ".r",
      "mimetype": "text/x-r-source",
      "name": "R",
      "pygments_lexer": "r",
      "version": "3.3.2"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}