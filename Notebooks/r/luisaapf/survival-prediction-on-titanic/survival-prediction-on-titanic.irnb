{"cells": [{"metadata": {"_cell_guid": "86ee7e9a-5955-455b-af15-69fbe47e982a", "_uuid": "67235c1d03da542ca0b497d07c718f24e45dedea", "collapsed": true}, "cell_type": "markdown", "source": ["# Introduction\n", "\n", "In this kernel I will analyze data from the Titanic disaster. The end goal is to make a classification model to predict who would have survived the disaster. I will start pre-processing the data, to handle missing values. Then, I will do some exploratory analysis, to look for trends in the data. Finally, I will build the prediction model and apply it to a test set.\n", "\n", "# Pre-processing\n", "\n", "## Getting familiar with the data\n", "\n", "First of all, I'll load the necessary resources for the analysis:"]}, {"metadata": {"_cell_guid": "4dfb1ee3-5ca0-4761-976e-8c90a4fa6c19", "_kg_hide-output": true, "_uuid": "9dbd4f6eb29dd123803f77115a4bd25706f734a4"}, "cell_type": "code", "execution_count": null, "outputs": [], "source": ["# Loading the libraries\n", "library(VIM) # visualize missing values\n", "library(mice) # impute data\n", "library(lattice) # plot multiple graphs\n", "library(ggplot2) # plot graphs\n", "library(scales) # change ggplot scale\n", "library(randomForest) # model prediction\n", "library(repr) # resize graphs\n", "\n", "# Loading the data\n", "train <- read.csv('../input/train.csv', na.strings='')\n", "test  <- read.csv('../input/test.csv', na.strings='')"]}, {"metadata": {"_cell_guid": "bb38eb7f-1c1f-4b9c-8f46-746c0709cd2a", "_uuid": "ba2fac7cd0c2dbaf222c54b71d77841b4d77e0b7"}, "cell_type": "markdown", "source": ["For now, I'll leave aside the test data and work only with the training data.\n", "Let's start exploring by taking a look at the summary of the training set:"]}, {"metadata": {"_cell_guid": "b7063907-34a3-4f5c-8f8d-9678d61d35fb", "_uuid": "08a08eb2182c4679b3fab486b9afa040ae4f2393"}, "cell_type": "code", "execution_count": null, "outputs": [], "source": ["format(summary(train))"]}, {"metadata": {"_cell_guid": "22e96c01-5c5d-4edd-b099-ea1a4d289d61", "_uuid": "c40c467100af2dcc87f3c0060883c6cabc80135b"}, "cell_type": "markdown", "source": ["From this first peek at the data, we can see a lot of missing values. Let's take care of this before going any further.\n", "\n", "## Handling missing values on the training set\n", "\n", "To create a better picture of the missing values,  I'll use the VIM package to build graphical representations:"]}, {"metadata": {"_cell_guid": "e95b3e04-c5bb-4456-b3ce-078daaf9f3c4", "_uuid": "d241402f24c1068fa73a7e75b8893b8071311b04"}, "cell_type": "code", "execution_count": null, "outputs": [], "source": ["# set plot size\n", "options(repr.plot.width=6, repr.plot.height=4)\n", "\n", "aggr(train, sortVars=TRUE, numbers=TRUE, col=c(\"dodgerblue1\",\"firebrick1\"),\n", "     labels=names(train), gap=4, cex.lab=.8, cex.axis=.6, cex.numbers=.5)"]}, {"metadata": {"_cell_guid": "bb1656f8-7f7f-426c-aa9f-74730154582f", "_uuid": "104c3bbc74266b3b4b0fe6f8cac375df567e41a8"}, "cell_type": "markdown", "source": ["The graph on the left shows the proportion of missing values for each variable. The graph on the right shows the distribution of missing (red) and measured (blue) values across the rows.  \n", "\n", "Cabin has almost 80% of missing values and it's certainly not a reliable predictor. So I'll exclude it from the analysis:"]}, {"metadata": {"_cell_guid": "11c6942a-90ee-4ddf-8c34-c70d4afda005", "_uuid": "e5acc964bf2e784e262bf656c392ba5bf216bc90"}, "cell_type": "code", "execution_count": null, "outputs": [], "source": ["train <- train[ , -11]"]}, {"metadata": {"_cell_guid": "f6ddaa2a-3077-4495-b71f-4a10f3f9dc43", "_uuid": "a9ed61f66da2ddc56cf7ca500cbf9039699cba92"}, "cell_type": "markdown", "source": ["The variable Embarked has only 2 missing values. From the data summary, we can see that the most frequent boarding gate is S, used by around 70% of the passengers. So it's reasonable to replace the missing values with S."]}, {"metadata": {"_cell_guid": "d3ac2810-a84f-4cab-80d2-bc8432407672", "_uuid": "08794c867ea592408a4bdbc725af64951e86219f"}, "cell_type": "code", "execution_count": null, "outputs": [], "source": ["train$Embarked[is.na(train$Embarked)] <- 'S'"]}, {"metadata": {"_cell_guid": "6cc1e483-df7a-4cb3-adbf-90dd649c9d7f", "_uuid": "9b2791c1bb8d70b553bd332531b5c6fa91a30632"}, "cell_type": "markdown", "source": ["The variable Age will need a more elaborate imputation mechanism. I'll use the mice package to help me with that.  This package offers a long list of imputation methods. I chose pmm (predictive mean matching),  which limits the imputed values to those of the measured values, as to avoid nonsense data, like negative ages.\n", "Now let's select the variables that will be used as predictors on the imputation process. From all the variables in the data set, the number of siblings/spouses (SibSp) and the number parents/children (Parch) are, intuitively, the ones that have a stronger correlation with age. The Survived column has probably also a correlation, but I'll not use it as a predictor. The reason is that this column is missing in the test set, so it wouldn't be possible to treat the missing values there in the same way as in the training set."]}, {"metadata": {"_cell_guid": "d15b218c-5954-4e90-b3e2-cd2872e3a73d", "_kg_hide-output": true, "_uuid": "d0064800b9e6a52362732100cfee1faf1acbc7e4"}, "cell_type": "code", "execution_count": null, "outputs": [], "source": ["# building the matrix of predictors using only SibSp and Parch to predict Age\n", "m <- matrix(rep(0,55), nrow=5, ncol=11)\n", "v <- c(0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0)\n", "predictorMatrix <- rbind(m, v, m)\n", "\n", "impTrain <- mice(train, method='pmm', seed=1000, predictorMatrix=predictorMatrix)"]}, {"metadata": {"_cell_guid": "ded92e54-51a9-48a6-a46b-29e29ac8b3b6", "_uuid": "7e524c89bf6300eaeac7a73d5408ef29f464d71c"}, "cell_type": "code", "execution_count": null, "outputs": [], "source": ["format(impTrain$predictorMatrix)"]}, {"metadata": {"_cell_guid": "e3149466-22ae-43f0-b4fa-165cd3561f03", "_uuid": "55a468180cc8f799040be90ac6cfd4db43963643"}, "cell_type": "markdown", "source": ["The new complete data set can be obtained with:"]}, {"metadata": {"_cell_guid": "56c8b28d-31b1-4b1b-ad8b-f8ad8dd25af8", "_uuid": "09dc143766f749e0a4afe61ffdc8be076ee37cbe"}, "cell_type": "code", "execution_count": null, "outputs": [], "source": ["completeTrain <- complete(impTrain)"]}, {"metadata": {"_cell_guid": "afdbca77-d212-4587-820a-efc35a605270", "_uuid": "9ba6b9960746ad98cf3af7870eeaf6a3455d8907"}, "cell_type": "markdown", "source": ["We would expect the imputation process not to change too much the distribution of ages. Let's draw a comparison:"]}, {"metadata": {"_cell_guid": "8cbf00cd-f45e-4601-8a55-e85c5bf463ff", "_uuid": "7c7c2637d0927de72147ea7567034169ab703e3c"}, "cell_type": "code", "execution_count": null, "outputs": [], "source": ["d1 <- density(train$Age, na.rm=TRUE)\n", "d2 <- density(completeTrain$Age)\n", "\n", "par(mfrow=c(1,2))\n", "plot(d1, main=\"Before imputation\", xlab=\"Age\")\n", "polygon(d1, col=\"paleturquoise\", border=\"dodgerblue1\")\n", "plot(d2, main=\"After imputation\", xlab=\"Age\")\n", "polygon(d2, col=\"mistyrose\", border=\"firebrick1\")"]}, {"metadata": {"_cell_guid": "65f42eb2-f2eb-42af-b066-a6522a664c20", "_uuid": "e008072acc99e65aa31c300a5ef7f0141f36ae68"}, "cell_type": "markdown", "source": ["Nice! The imputation process preserved the distribution of ages fairly well.\n", "\n", "# Exploratory analysis \n", "## Women and children first?\n", "\n", "Now that the training set is complete, let's start looking for trends in the data. First, I'd like to see if women and children had a better chance of survival, given that we have a culture of protecting these groups.\n", "Let's start by making a comparative graph by sex:"]}, {"metadata": {"_cell_guid": "e1aa2a52-d907-4706-bdae-50aa779f08c5", "_uuid": "0e4f4862e79404584f5f070f91b36440cbc27318"}, "cell_type": "code", "execution_count": null, "outputs": [], "source": ["completeTrain$Survived <- as.factor(completeTrain$Survived)\n", "\n", "ggplot(completeTrain, aes(x=Sex, fill=Survived)) + \n", "  geom_bar(width=0.5, aes(y = (..count..)/sum(..count..)), position=\"fill\") +\n", "  scale_y_continuous(labels=percent) +\n", "  scale_fill_discrete(labels=c(\"No\", \"Yes\")) +\n", "  ylab(\"Percentage\")"]}, {"metadata": {"_cell_guid": "c5058a51-76db-4584-b3e1-3513fd1ba13f", "_uuid": "77d35cbde00a335a3c86648d0c0c722572e09c73"}, "cell_type": "markdown", "source": ["So the common sense was right. Women had a survival rate of ~ 75%, against ~ 19% of men. \n", "Now, let's see how age affected survival. I'll separate the data into 3 distinct age groups: kid (0-16), adult (16-60), elderly (60-) and plot the survival rates for each one:"]}, {"metadata": {"_cell_guid": "12632be7-b78e-4750-9aec-d69f546789b0", "_uuid": "c7ded16d7c604eb8e32f9fc939ba8c809da4838a"}, "cell_type": "code", "execution_count": null, "outputs": [], "source": ["completeTrain$AgeRange[completeTrain$Age <= 16] <- \"kid\"\n", "completeTrain$AgeRange[completeTrain$Age > 16 & completeTrain$Age <= 60] <- \"adult\"\n", "completeTrain$AgeRange[completeTrain$Age > 60] <- \"elderly\"\n", "\n", "completeTrain$AgeRange <- factor(completeTrain$AgeRange, levels=c(\"kid\", \"adult\", \"elderly\"))\n", "\n", "summary(completeTrain$AgeRange)"]}, {"metadata": {"_cell_guid": "bd2e38ac-4e91-4565-965a-7e2eab7a1cf5", "_uuid": "bc37c6deb828988a20bf5e1db4234b17918a83ab"}, "cell_type": "code", "execution_count": null, "outputs": [], "source": ["survivalByAge <- ggplot(completeTrain, aes(x=AgeRange, fill=Survived)) + \n", "  geom_bar(width=0.5, aes(y=(..count..)/sum(..count..)), position=\"fill\") +\n", "  scale_y_continuous(labels=percent) +\n", "  scale_fill_discrete(labels=c(\"No\", \"Yes\")) +\n", "  labs(x=\"Age group\", y=\"Percentage\")\n", "\n", "print(survivalByAge)"]}, {"metadata": {"_cell_guid": "2fc19814-aaed-4c11-8067-863191132670", "_uuid": "e910d34bda37490b773b75ec7963ed68f61db6ce"}, "cell_type": "markdown", "source": ["As one would expect, kids had a higher survival rate than adults. On the other hand, being over 60 decreased the chance of survival by 25% as compared to pure luck (50%).   \n", "\n", "Let's see if this picture changes if we split the age groups according to the sex:"]}, {"metadata": {"_cell_guid": "7845fb23-9838-4b15-83d9-6ae0d7758492", "_uuid": "d16db2aba3842c8ea5804f56632666d09678f96d"}, "cell_type": "code", "execution_count": null, "outputs": [], "source": ["survivalByAge + facet_grid(~Sex)"]}, {"metadata": {"_cell_guid": "df5a5f96-8493-49ba-b215-fa59c95fe231", "_uuid": "9e80a4aaa70020ee8ff5fad2f032b57cf6469924"}, "cell_type": "markdown", "source": ["Interesting... One result contradicts intuition: between females the survival rate increased with age. It's also remarkable that the survival pattern that benefits females over males happens for all age groups.\n", "\n", "## Being wealthy helps?\n", "\n", "Another fact that I would like to investigate is whether people who paid higher fares were benefited, by having a better chance of survival.\n", "Let's take a look at the distribution of fares:"]}, {"metadata": {"_cell_guid": "6f6c05d9-c5f6-4045-925e-1203829adac9", "_uuid": "8d06b3bec519335c3ce7febdb4e34716f4219b13"}, "cell_type": "code", "execution_count": null, "outputs": [], "source": ["hist(completeTrain$Fare, col=\"lightblue\", xlab=\"Fare\", main=\"Histogram of Fare\",\n", "     breaks=30)\n", "abline(v=median(completeTrain$Fare), col=\"red\", lwd=2)"]}, {"metadata": {"_cell_guid": "feb354d6-b013-4ab8-96f7-228554692273", "_uuid": "c695779a2923a0d2efb7855d1f290dbd7b22a24f"}, "cell_type": "markdown", "source": ["The median fare paid by the passengers was 14.45. Let's create a new variable that classifies the fare as low (equal than or below median) or high (above median) and see how survival depends on it. "]}, {"metadata": {"_cell_guid": "14925df8-cc86-4b6c-9e99-0f2afe80cca7", "_uuid": "cb81b833bc77cf49d2fa353e240cbf5c52f0c233"}, "cell_type": "code", "execution_count": null, "outputs": [], "source": ["medianFare <- median(completeTrain$Fare)\n", "completeTrain$FareRange[completeTrain$Fare <= medianFare] <- \"low\"\n", "completeTrain$FareRange[completeTrain$Fare > medianFare] <- \"high\"\n", "\n", "ggplot(completeTrain, aes(x=FareRange, fill=Survived)) + \n", "  geom_bar(width=0.5) + labs(x=\"Fare\", y=\"Counts\") +\n", "  scale_fill_discrete(labels=c(\"No\", \"Yes\"))"]}, {"metadata": {"_cell_guid": "dd670ac8-6e5b-406d-a949-477e97751767", "_uuid": "351544767bbe88c3940f4228ba0694c1c135613e"}, "cell_type": "markdown", "source": ["So, passengers who paid fares above the median had a survival rate twice as large than those who paid lower fares.  \n", "\n", "The new columns AgeRange and FareRange had served their purposed and won't be needed on the next step of our analysis, as they don't contain any new information. So I'll just remove them from the set:"]}, {"metadata": {"_cell_guid": "c560aa02-b7f8-4a1e-a778-1cd270179bfb", "_uuid": "157c73d850ddde17ac87b072c1618f21cd5b52be"}, "cell_type": "code", "execution_count": null, "outputs": [], "source": ["completeTrain <- completeTrain[ , -c(12,13)]"]}, {"metadata": {"_cell_guid": "0986f044-6c3a-476f-86e2-f153522c537c", "_uuid": "9f6fbaf7230975057b5f9c0bffd885735934979b"}, "cell_type": "markdown", "source": ["# Prediction\n", "\n", "## Building the model\n", "\n", "Now that the training set is complete, I'll use it to build the classification model that will tell if a passenger survived the Titanic or not. The algorithm of choice is random forest and I'll be using as predictors all variables in the completeTrain set, except Name and PassengerId. Those are unique (or almost unique) variables, which don't help finding patterns in the data."]}, {"metadata": {"_cell_guid": "c26e344e-d899-4a24-be67-570c15c882e1", "_uuid": "01473cc38f5b738e4c3044892071b259c61e72c8"}, "cell_type": "code", "execution_count": null, "outputs": [], "source": ["survivalModel <- randomForest(factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch\n", "                              + Fare + Embarked, data=completeTrain)\n", "print(survivalModel)"]}, {"metadata": {"_cell_guid": "d9abd9d9-a69d-4979-a32d-c15dfc5117af", "_uuid": "d7af924e5c1e7a6e37febd2c4ff9ee0442e4b7fd"}, "cell_type": "markdown", "source": ["From the above result, we see that the model has an accuracy (rate of correct predictions) of 83%. The classification error rates of the individual classes are 8.6% for death and 31.6% for survival.\n", "\n", "## Importance\n", "\n", "Let's find out the importance of each variable in the model:"]}, {"metadata": {"_cell_guid": "f600687f-d433-4bbe-b677-b11a01c07ed8", "_uuid": "d996c55c8b628cfcdc903e9d4bed5024ed5c66bc"}, "cell_type": "code", "execution_count": null, "outputs": [], "source": ["importance <- importance(survivalModel)\n", "bluePallete <- colorRampPalette(c(\"steelblue2\", \"steelblue4\"))\n", "barchart(sort(reorder(rownames(importance), importance)) ~ sort(importance), \n", "         col=bluePallete(7), xlab=\"Importance\")"]}, {"metadata": {"_cell_guid": "4d45f45c-db3f-41b9-ac9c-79e9a61fe030", "_uuid": "26aff063f2dd04f05e21bd6faf1b3c9835bb032c"}, "cell_type": "markdown", "source": ["Probably not surprisingly, the 3 variables I investigated before, sex, fare and age, are the ones that have a closest correlation with survival.\n", "\n", "## Handling missing values on the test set\n", "\n", "Let's now take a look at the missing values on the test set, by applying the same tools we did before with the training set:"]}, {"metadata": {"_cell_guid": "6a02ca3f-f457-4bca-bc25-b0be4545a9f3", "_uuid": "d8c7397066f0836c2cc3030a500f4fa647deef36"}, "cell_type": "code", "execution_count": null, "outputs": [], "source": ["format(summary(test))"]}, {"metadata": {"_cell_guid": "4e224b5e-4532-4be6-bf5f-e21979ece9d8", "_uuid": "f2239c544963dd7493ffb5271523f788573e3762"}, "cell_type": "code", "execution_count": null, "outputs": [], "source": ["aggr(test, sortVars=TRUE, numbers=TRUE, col=c(\"dodgerblue1\",\"firebrick1\"),\n", "     labels=names(test), gap=4, cex.lab=.8, cex.axis=.6, cex.numbers=.5)"]}, {"metadata": {"_cell_guid": "5815c912-896a-4bb8-a5d2-1459924cc096", "_uuid": "b922297ba14a3ccc46d0abfce4728316880f89e4"}, "cell_type": "markdown", "source": ["The distribution of missing values in the test set is similar to that of the training set, as one would expect. Again, I'll exclude the Cabin variable from the analysis. The missing fare will be replaced by the median value on the training set."]}, {"metadata": {"_cell_guid": "4e3e5211-a19e-4043-a028-c8de6ad5b647", "_kg_hide-output": true, "_uuid": "d19fec8265baea5ae7624e29ff84f04b1fd14b36"}, "cell_type": "code", "execution_count": null, "outputs": [], "source": ["test <- test[ , -10]\n", "test$Fare[is.na(test$Fare)] <- median(train$Fare)"]}, {"metadata": {"_cell_guid": "d6ba84ed-568a-4412-8f52-5140b221bcd4", "_uuid": "6dbed0ec9e2b51b6825860c086363c45a194eb88"}, "cell_type": "markdown", "source": ["Again, I'll do a mice imputation on the variable Age."]}, {"metadata": {"_cell_guid": "b27e0797-4735-4f40-b6df-1b70e96fd90c", "_kg_hide-output": true, "_uuid": "78b3e8ad4c4aa5fd1b8dba5649dd1348c7cd6056"}, "cell_type": "code", "execution_count": null, "outputs": [], "source": ["m1 <- matrix(rep(0, 40), nrow=4, ncol=10)\n", "v <- c(0, 0, 0, 0, 0, 1, 1, 0, 0, 0)\n", "m2 <- matrix(rep(0, 50), nrow=5, ncol=10)\n", "\n", "predictorMatrix <- rbind(m1, v, m2)\n", "\n", "impTest <- mice(test, method='pmm', predictorMatrix=predictorMatrix, seed=1000)"]}, {"metadata": {"_cell_guid": "fa1f7159-6f07-4ab5-890e-5b6aa8df84d1", "_uuid": "65a553614145107684bcd4979f5d57ebc6af9114"}, "cell_type": "markdown", "source": ["Now let's recover the complete set of ages:"]}, {"metadata": {"_cell_guid": "2cde5ead-9550-4b78-9ba9-d6f1840782d0", "_uuid": "fbfc50116a7cd125c3c8281616e5e5b60c4c6cdc"}, "cell_type": "code", "execution_count": null, "outputs": [], "source": ["testComplete <- complete(impTest)"]}, {"metadata": {"_cell_guid": "f02670e8-4d80-408c-8035-3774d051e1c9", "_uuid": "47bf2892cef6fb705981ae1b4bc1258208283a06"}, "cell_type": "markdown", "source": ["## Testing the model\n", "\n", "Now that we have our test set complete, let's assess the survival model using the test set:"]}, {"metadata": {"_cell_guid": "9dd60ab4-0fc3-4320-b611-41b6e5736f61", "_uuid": "f7fb1964bd23ca1811f73db5578912600a164445"}, "cell_type": "code", "execution_count": null, "outputs": [], "source": ["predicted <- predict(survivalModel, testComplete)\n", "result <- data.frame(PassengerId=test$PassengerId, Survived=predicted)\n", "write.csv(result, \"prediction.csv\", row.names=FALSE)"]}, {"metadata": {"_cell_guid": "b3b09b83-5197-4aa8-9f45-0c79543a06db", "_uuid": "00bd7a3f49e8d38caefc7115de801c2c7be1fec0"}, "cell_type": "markdown", "source": ["The final result of this analysis received a score of 0.77, meaning that 77% of the observations in the test set were correctly predicted.\n", "\n", "# Conclusion\n", "\n", "This analysis showed that the sex of a passenger was the most important factor in predicting survival on the Titanic disaster. Women had a much higher chance of survival than men: 75% against 19%, roughly. Regarding age, children had a higher survival rate than adults. Also, people who paid higher fares had a better chance of survival than those who paid lower fares. "]}], "metadata": {"language_info": {"pygments_lexer": "r", "mimetype": "text/x-r-source", "name": "R", "version": "3.4.1", "codemirror_mode": "r", "file_extension": ".r"}, "kernelspec": {"display_name": "R", "name": "ir", "language": "R"}}, "nbformat": 4, "nbformat_minor": 1}