{"nbformat_minor": 1, "nbformat": 4, "cells": [{"cell_type": "code", "source": ["# supress anoing warnings for now\n", "options(warn=-1)\n", "\n", "# Necessary Libraries \n", "library(ggplot2)\n", "library(cowplot)\n", "library(lattice)\n", "library(caret)\n", "library(MASS)"], "metadata": {"_cell_guid": "8ea14161-58d4-4b83-8ee4-ca807d2056ec", "_uuid": "407b6b0442e295de42f653c5b9ef3bebe8e0f8bc"}, "execution_count": null, "outputs": []}, {"cell_type": "markdown", "source": ["**Loadind the Data**\n", "\n", "**Data Info:**\n", "\n", "survival -- If survived\t(0 = No, 1 = Yes)\n", "\n", "pclass -- Ticket class\t(1 = 1st, 2 = 2nd, 3 = 3rd)\n", "\n", "embarked -- Port of Embarkation  (C = Cherbourg, Q = Queenstown, S = Southampton)"], "metadata": {"_cell_guid": "37e66f04-8a34-4c6e-ada4-246d33c7acdd", "_uuid": "dfae87eb3d9853e09763e2618a0f42ed4a883760"}}, {"cell_type": "code", "source": ["# load train.csv\n", "DstTrain <- read.csv('../input/train.csv', stringsAsFactors = FALSE)\n", "# load test.csv\n", "DstTest  <- read.csv('../input/test.csv', stringsAsFactors = FALSE)"], "metadata": {"_cell_guid": "f28eb44b-fd9b-4845-ad49-6ebbace75898", "_uuid": "3a3036713571a7fd9baa69ae2998888d52ae50d3"}, "execution_count": null, "outputs": []}, {"cell_type": "code", "source": ["# check data sample \n", "head(DstTrain, n=5L)"], "metadata": {"_cell_guid": "746f4c27-df06-48f9-b0f2-9cee63b0a8b0", "_uuid": "13ebf515d1bb3794061390ec2b1ce9e9f39d2561"}, "execution_count": null, "outputs": []}, {"cell_type": "code", "source": ["# dimensions of dataset\n", "dim(DstTrain)"], "metadata": {}, "execution_count": null, "outputs": []}, {"cell_type": "code", "source": ["# check column type\n", "sapply(DstTrain, typeof)"], "metadata": {"_cell_guid": "4a1dc97e-0b6c-4538-aec0-cae8d36666c3", "_uuid": "0815d93dc0a5f3566087a3a4c863fb60aea274c7"}, "execution_count": null, "outputs": []}, {"cell_type": "code", "source": ["# show dataframe info\n", "str(DstTrain)"], "metadata": {"_cell_guid": "a1689f10-1c1e-4ae5-8d2d-c1f532f7f758", "_uuid": "dba90e16659b6222912404f2744c08b7d9ffa324"}, "execution_count": null, "outputs": []}, {"cell_type": "markdown", "source": ["**Data Cleaning**"], "metadata": {"_cell_guid": "a6ed0a80-355e-466a-8587-275a795ec252", "_uuid": "fca6c32f90714d7e2e8d97c52fafa789f3401adf"}}, {"cell_type": "code", "source": ["# clean NA values\n", "DstTrain[is.na(DstTrain)] <- 0\n", "DstTest[is.na(DstTest)] <- 0"], "metadata": {}, "execution_count": null, "outputs": []}, {"cell_type": "markdown", "source": ["**Explore Data**"], "metadata": {"_cell_guid": "4c51c93c-df99-4499-9410-83ddeea9a3ea", "_uuid": "2cccd29b0dc236ce2406c98f0ece2daa1cf40967"}}, {"cell_type": "code", "source": ["# histogram of SibSp\n", "plot.SibSp <- ggplot(DstTrain, aes(SibSp,fill = factor(Survived))) +\n", "    geom_histogram(stat = \"count\")\n", "\n", "# histogram of Pclass\n", "plot.Pclass <- ggplot(DstTrain, aes(Pclass,fill = factor(Survived))) +\n", "    geom_histogram(stat = \"count\")\n", "\n", "# histogram of Sex\n", "plot.Sex <- ggplot(DstTrain, aes(Sex,fill = factor(Survived))) +\n", "    geom_histogram(stat = \"count\")\n", "\n", "# histogram of Embarked\n", "plot.Embarked <- ggplot(DstTrain, aes(Embarked,fill = factor(Survived))) +\n", "    geom_histogram(stat = \"count\")\n", "\n", "# create the plot grid with all\n", "plot_grid(plot.SibSp, plot.Pclass, plot.Sex, plot.Embarked )"], "metadata": {"_cell_guid": "446bc194-9aee-4f59-bae6-c3d82a62a130", "_uuid": "01fdb0b414bd722626b2259a85245a1751acdd2b"}, "execution_count": null, "outputs": []}, {"cell_type": "code", "source": ["# histogram of Age\n", "ggplot(DstTrain, aes(Age,fill = factor(Survived))) + \n", "geom_histogram(bins = 40)\n", "\n", "# histogram of Fare\n", "ggplot(DstTrain, aes(Fare,fill = factor(Survived))) + \n", "geom_histogram(bins = 40)"], "metadata": {"_cell_guid": "96e7960b-9199-4c1f-9a82-4bb0d636565d", "_uuid": "a00c806c8caa94c198ae675330c27202bf67f391"}, "execution_count": null, "outputs": []}, {"cell_type": "markdown", "source": ["**Test Harness**\n", "\n", "Set-up the test harness to use 10-fold cross validation"], "metadata": {}}, {"cell_type": "code", "source": ["# Run algorithms using 10-fold cross validation\n", "control <- trainControl(method=\"cv\", number=10)\n", "metric <- \"Accuracy\""], "metadata": {}, "execution_count": null, "outputs": []}, {"cell_type": "markdown", "source": ["**Build Models**\n", "\n", "Let\u2019s evaluate 6 different algorithms:\n", "* Logistic Regression\n", "* Linear Discriminant Analysis (LDA)\n", "* Classification and Regression Trees (CART).\n", "* k-Nearest Neighbors (kNN).\n", "* Support Vector Machines (SVM) with a linear kernel.\n", "* Random Forest (RF)"], "metadata": {"_cell_guid": "fb033b80-5cbb-4eed-a657-843bc2146cf9", "_uuid": "8323a1e48a2507519613357199a1438d1e9cf3b8"}}, {"cell_type": "code", "source": ["# create the test dataset with only the testing columns\n", "varsToKeep <- c(\"Survived\", \"Age\", \"Fare\", \"Sex\", \"Embarked\", \"SibSp\", \"Pclass\")\n", "DstTrainTest <- DstTrain[varsToKeep]\n", "\n", "# convert Survived to factor\n", "DstTrainTest$Survived <- as.factor(DstTrainTest$Survived)\n", "\n", "# logistic regression\n", "set.seed(7)\n", "fit.glm <- train(Survived ~ ., data=DstTrainTest, method=\"glm\", metric=metric, trControl=control)\n", "\n", "# linear algorithms\n", "set.seed(7)\n", "fit.lda <- train(Survived ~ ., data=DstTrainTest, method=\"lda\", metric=metric, trControl=control)\n", "\n", "# CART\n", "set.seed(7)\n", "fit.cart <- train(Survived ~ ., data=DstTrainTest, method=\"rpart\", metric=metric, trControl=control)\n", "\n", "# kNN\n", "set.seed(7)\n", "fit.knn <- train(Survived ~ ., data=DstTrainTest, method=\"knn\", metric=metric, trControl=control)\n", "\n", "# SVM\n", "set.seed(7)\n", "fit.svm <- train(Survived ~ ., data=DstTrainTest, method=\"svmRadial\", metric=metric, trControl=control)\n", "\n", "# Random Forest\n", "set.seed(7)\n", "fit.rf <- train(Survived ~ ., data=DstTrainTest, method=\"rf\", metric=metric, trControl=control)\n"], "metadata": {"_cell_guid": "57456d86-0101-4183-8b93-235e838a33d1", "_uuid": "2b958d9b65d78e664f39c9b62e8d22801a06efcc"}, "execution_count": null, "outputs": []}, {"cell_type": "markdown", "source": ["**Select Best Model**"], "metadata": {}}, {"cell_type": "code", "source": ["# summarize accuracy of models\n", "results <- resamples(list(\n", "    glm=fit.glm, \n", "    lda=fit.lda, \n", "    cart=fit.cart, \n", "    knn=fit.knn, \n", "    svm=fit.svm, \n", "    rf=fit.rf\n", "))\n", "summary(results)"], "metadata": {}, "execution_count": null, "outputs": []}, {"cell_type": "code", "source": ["# compare accuracy of models\n", "dotplot(results)"], "metadata": {}, "execution_count": null, "outputs": []}, {"cell_type": "markdown", "source": ["**Testing the model accuracy**\n", "\n", "For the most accurate, Random Forest in this case"], "metadata": {"_cell_guid": "99ad6bc2-b3e3-47e7-83e4-6015b82551ab", "_uuid": "b049985d5ef13e0b4750456368455cafab920b8e"}}, {"cell_type": "code", "source": ["# summarize Best Model\n", "print(fit.rf)"], "metadata": {}, "execution_count": null, "outputs": []}, {"cell_type": "code", "source": ["# prediction \n", "predictedval <- predict(fit.rf, newdata=DstTrainTest)\n", "\n", "# set the Survived variable\n", "#predict.Survived <- ifelse(predictedval > 0.5, 1, 0)\n", "#predict.Survived <- as.integer(predict.Survived)\n", "\n", "# summarize results with confusion matrix\n", "cm <- confusionMatrix(predictedval, DstTrain$Survived)\n", "cm$table\n", "\n", "# calculate accuracy of the model\n", "Accuracy<-round(cm$overall[1],2)\n", "Accuracy\n"], "metadata": {"_cell_guid": "32d89361-98fc-4013-a66c-ecf9b634a061", "_uuid": "85366e4c777b31f9f0ad099cd5d9c9bc94d70abd"}, "execution_count": null, "outputs": []}, {"cell_type": "markdown", "source": ["**Submit the Prediction**"], "metadata": {"_cell_guid": "7bffcca1-14f8-47e3-b777-b3e90a469517", "_uuid": "cb38b2dd0845d56fc11e0977ead2be354baf357f"}}, {"cell_type": "code", "source": ["# prediction \n", "predictedval <- predict(fit.rf, newdata=DstTest)"], "metadata": {"_cell_guid": "f5faf79a-d0f2-49a5-8546-e5dd96f3743b", "_uuid": "ba5a15eff243c83527a6416d0d812ee50a54bee7"}, "execution_count": null, "outputs": []}, {"cell_type": "code", "source": ["# create a csv file for submittion\n", "TitanicResult <- data.frame(PassengerId = DstTest$PassengerId, Survived = predictedval)\n", "table(TitanicResult$Survived)\n", "write.csv(TitanicResult,file = \"TitanicResult.csv\",row.names = FALSE)"], "metadata": {"_cell_guid": "aebd45dc-3956-4472-b191-50a74c788354", "_uuid": "d59b23221af5ebe3138d08f8e001227412a01ebd"}, "execution_count": null, "outputs": []}], "metadata": {"kernelspec": {"display_name": "R", "name": "ir", "language": "R"}, "language_info": {"mimetype": "text/x-r-source", "name": "R", "pygments_lexer": "r", "version": "3.4.2", "file_extension": ".r", "codemirror_mode": "r"}}}