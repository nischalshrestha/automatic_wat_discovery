{"nbformat": 4, "metadata": {"kernelspec": {"display_name": "R", "language": "R", "name": "ir"}, "language_info": {"file_extension": ".r", "pygments_lexer": "r", "codemirror_mode": "r", "version": "3.4.2", "mimetype": "text/x-r-source", "name": "R"}}, "nbformat_minor": 1, "cells": [{"outputs": [], "cell_type": "code", "execution_count": null, "source": ["# supress anoing warnings for now\n", "options(warn=-1)\n", "\n", "# Necessary Libraries \n", "library(cowplot)\n", "library(ggplot2)\n", "library(lattice)\n", "library(caret)\n", "library(MASS)"], "metadata": {"_uuid": "407b6b0442e295de42f653c5b9ef3bebe8e0f8bc", "_cell_guid": "8ea14161-58d4-4b83-8ee4-ca807d2056ec"}}, {"cell_type": "markdown", "source": ["**Loadind the Data**\n", "\n", "**Data Info:**\n", "\n", "survival -- If survived\t(0 = No, 1 = Yes)\n", "\n", "pclass -- Ticket class\t(1 = 1st, 2 = 2nd, 3 = 3rd)\n", "\n", "embarked -- Port of Embarkation  (C = Cherbourg, Q = Queenstown, S = Southampton)"], "metadata": {"_uuid": "dfae87eb3d9853e09763e2618a0f42ed4a883760", "_cell_guid": "37e66f04-8a34-4c6e-ada4-246d33c7acdd"}}, {"outputs": [], "cell_type": "code", "execution_count": null, "source": ["# load train.csv\n", "DstTrain <- read.csv('../input/train.csv', stringsAsFactors = FALSE)\n", "# load test.csv\n", "DstTest  <- read.csv('../input/test.csv', stringsAsFactors = FALSE)"], "metadata": {"_uuid": "3a3036713571a7fd9baa69ae2998888d52ae50d3", "_cell_guid": "f28eb44b-fd9b-4845-ad49-6ebbace75898"}}, {"outputs": [], "cell_type": "code", "execution_count": null, "source": ["# check data sample \n", "head(DstTrain, n=5L)"], "metadata": {"_uuid": "13ebf515d1bb3794061390ec2b1ce9e9f39d2561", "_cell_guid": "746f4c27-df06-48f9-b0f2-9cee63b0a8b0"}}, {"outputs": [], "cell_type": "code", "execution_count": null, "source": ["# dimensions of dataset\n", "dim(DstTrain)"], "metadata": {"_uuid": "866d873331428163a5f48f73a38644b9a10e4243", "_cell_guid": "fb588268-c8b8-417c-b27c-e8a74f7621dd"}}, {"outputs": [], "cell_type": "code", "execution_count": null, "source": ["# check column type\n", "sapply(DstTrain, typeof)"], "metadata": {"_uuid": "0815d93dc0a5f3566087a3a4c863fb60aea274c7", "_cell_guid": "4a1dc97e-0b6c-4538-aec0-cae8d36666c3"}}, {"outputs": [], "cell_type": "code", "execution_count": null, "source": ["# show dataframe info\n", "str(DstTrain)"], "metadata": {"_uuid": "dba90e16659b6222912404f2744c08b7d9ffa324", "_cell_guid": "a1689f10-1c1e-4ae5-8d2d-c1f532f7f758"}}, {"cell_type": "markdown", "source": ["**Data Cleaning**"], "metadata": {"_uuid": "fca6c32f90714d7e2e8d97c52fafa789f3401adf", "_cell_guid": "a6ed0a80-355e-466a-8587-275a795ec252"}}, {"outputs": [], "cell_type": "code", "execution_count": null, "source": ["# get the title from name\n", "DstTrain$Title <- gsub('(.*, )|(\\\\..*)', '', DstTrain$Name)\n", "DstTest$Title <- gsub('(.*, )|(\\\\..*)', '', DstTest$Name)"], "metadata": {}}, {"outputs": [], "cell_type": "code", "execution_count": null, "source": ["# histogram of Title\n", "ggplot(DstTrain, aes(Title,fill = factor(Survived))) + \n", "geom_histogram(stat=\"count\") + \n", "theme(axis.text.x = element_text(angle = 60, hjust = 1))"], "metadata": {}}, {"outputs": [], "cell_type": "code", "execution_count": null, "source": ["# Titles by Sex\n", "table(DstTrain$Sex, DstTrain$Title)"], "metadata": {}}, {"outputs": [], "cell_type": "code", "execution_count": null, "source": ["# 'Mr', 'Mrs', 'Miss', 'Mme', 'Ms', 'Mlle'\n", "# 'Master', 'Major', 'Capt', 'Col', 'Rev', 'Dr'\n", "# 'the Countess', 'Jonkheer', 'Lady', 'Sir', 'Don', 'Dona'\n", "\n", "Nobility.woman <- c('the Countess', 'Lady', 'Dona')\n", "Nobility.man <- c('Jonkheer', 'Sir', 'Don')\n", "Crew <- c('Master', 'Major', 'Capt', 'Col', 'Rev', 'Dr')\n", "Passenger.woman <- c('Mrs', 'Miss', 'Mme', 'Ms', 'Mlle')\n", "Passenger.man <- c('Mr')\n", "\n", "DstTest$TitleType <- ifelse(DstTest$Title %in% Nobility.woman, 'Nobility.woman','')\n", "DstTest$TitleType <- ifelse(DstTest$Title %in% Nobility.man, 'Nobility.man',DstTest$TitleType)\n", "DstTest$TitleType <- ifelse(DstTest$Title %in% Crew, 'Crew',DstTest$TitleType)\n", "DstTest$TitleType <- ifelse(DstTest$Title %in% Passenger.woman, 'Passenger.woman',DstTest$TitleType)\n", "DstTest$TitleType <- ifelse(DstTest$Title %in% Passenger.man, 'Passenger.man',DstTest$TitleType)\n", "\n", "DstTrain$TitleType <- ifelse(DstTrain$Title %in% Nobility.woman, 'Nobility.woman','')\n", "DstTrain$TitleType <- ifelse(DstTrain$Title %in% Nobility.man, 'Nobility.man',DstTrain$TitleType)\n", "DstTrain$TitleType <- ifelse(DstTrain$Title %in% Crew, 'Crew',DstTrain$TitleType)\n", "DstTrain$TitleType <- ifelse(DstTrain$Title %in% Passenger.woman, 'Passenger.woman',DstTrain$TitleType)\n", "DstTrain$TitleType <- ifelse(DstTrain$Title %in% Passenger.man, 'Passenger.man',DstTrain$TitleType)"], "metadata": {"_uuid": "e465d76c76361629fd01cf68169f759ec7c102fd", "_cell_guid": "70101250-4662-4e02-9986-65f0edd9c21f"}}, {"outputs": [], "cell_type": "code", "execution_count": null, "source": ["# clean NA values\n", "DstTrain[is.na(DstTrain)] <- 0\n", "DstTest[is.na(DstTest)] <- 0"], "metadata": {"_uuid": "888f9ab679c79e98f547ee6d30e2476c63855f60", "_cell_guid": "0cca96b9-7d5d-4e4d-8300-64af72b227de"}}, {"cell_type": "markdown", "source": ["**Explore Data**"], "metadata": {"_uuid": "2cccd29b0dc236ce2406c98f0ece2daa1cf40967", "_cell_guid": "4c51c93c-df99-4499-9410-83ddeea9a3ea"}}, {"outputs": [], "cell_type": "code", "execution_count": null, "source": ["# histogram of SibSp\n", "plot.SibSp <- ggplot(DstTrain, aes(SibSp,fill = factor(Survived))) +\n", "    geom_histogram(stat = \"count\")\n", "\n", "# histogram of Pclass\n", "plot.Pclass <- ggplot(DstTrain, aes(Pclass,fill = factor(Survived))) +\n", "    geom_histogram(stat = \"count\")\n", "\n", "# histogram of Sex\n", "plot.Sex <- ggplot(DstTrain, aes(Sex,fill = factor(Survived))) +\n", "    geom_histogram(stat = \"count\")\n", "\n", "# histogram of Embarked\n", "plot.Embarked <- ggplot(DstTrain, aes(Embarked,fill = factor(Survived))) +\n", "    geom_histogram(stat = \"count\")\n", "\n", "# create the plot grid with all\n", "plot_grid(plot.SibSp, plot.Pclass, plot.Sex, plot.Embarked )"], "metadata": {"_uuid": "01fdb0b414bd722626b2259a85245a1751acdd2b", "_cell_guid": "446bc194-9aee-4f59-bae6-c3d82a62a130"}}, {"outputs": [], "cell_type": "code", "execution_count": null, "source": ["# histogram of Title Type\n", "ggplot(DstTrain, aes(TitleType,fill = factor(Survived))) + \n", "geom_histogram(stat=\"count\") + \n", "theme(axis.text.x = element_text(angle = 60, hjust = 1))"], "metadata": {}}, {"outputs": [], "cell_type": "code", "execution_count": null, "source": ["# histogram of Age\n", "ggplot(DstTrain, aes(Age,fill = factor(Survived))) + \n", "geom_histogram(bins = 40)\n", "\n", "# histogram of Fare\n", "ggplot(DstTrain, aes(Fare,fill = factor(Survived))) + \n", "geom_histogram(bins = 40)"], "metadata": {"_uuid": "81cc0b2babc2417fdbc516e733e7e51358d634f2", "_cell_guid": "b1322d18-84ec-495e-895f-675398765205"}}, {"cell_type": "markdown", "source": ["**Test Harness**\n", "\n", "Set-up the test harness to use 10-fold cross validation"], "metadata": {"_uuid": "71de50750ef3823b042e2de51d85438d3b0ed164", "_cell_guid": "e8d18a0f-bb0d-49f3-896e-18b04378c83f"}}, {"outputs": [], "cell_type": "code", "execution_count": null, "source": ["# Run algorithms using 10-fold cross validation\n", "control <- trainControl(method=\"cv\", number=10)\n", "metric <- \"Accuracy\""], "metadata": {"_uuid": "a5ed801800763df5048ff0959b9d10d7ba133db6", "_cell_guid": "9540e383-5c60-493d-89b2-02b66d3eb24d"}}, {"cell_type": "markdown", "source": ["**Build Models**\n", "\n", "Let\u2019s evaluate 6 different algorithms:\n", "* Logistic Regression\n", "* Linear Discriminant Analysis (LDA)\n", "* Classification and Regression Trees (CART).\n", "* k-Nearest Neighbors (kNN).\n", "* Support Vector Machines (SVM) with a linear kernel.\n", "* Random Forest (RF)"], "metadata": {"_uuid": "8323a1e48a2507519613357199a1438d1e9cf3b8", "_cell_guid": "fb033b80-5cbb-4eed-a657-843bc2146cf9"}}, {"outputs": [], "cell_type": "code", "execution_count": null, "source": ["# create the test dataset with only the testing columns\n", "varsToKeep <- c(\"Survived\", \"Sex\", \"TitleType\", \"Age\", \"Pclass\", \"Fare\", \"Embarked\", \"SibSp\")\n", "DstTrainTest <- DstTrain[varsToKeep]\n", "\n", "# convert Survived to factor\n", "DstTrainTest$Survived <- as.factor(DstTrainTest$Survived)\n", "\n", "# logistic regression\n", "set.seed(7)\n", "fit.glm <- train(Survived ~ ., data=DstTrainTest, method=\"glm\", metric=metric, trControl=control)\n", "\n", "# linear algorithms\n", "set.seed(7)\n", "fit.lda <- train(Survived ~ ., data=DstTrainTest, method=\"lda\", metric=metric, trControl=control)\n", "\n", "# CART\n", "set.seed(7)\n", "fit.cart <- train(Survived ~ ., data=DstTrainTest, method=\"rpart\", metric=metric, trControl=control)\n", "\n", "# kNN\n", "set.seed(7)\n", "fit.knn <- train(Survived ~ ., data=DstTrainTest, method=\"knn\", metric=metric, trControl=control)\n", "\n", "# SVM\n", "set.seed(7)\n", "fit.svm <- train(Survived ~ ., data=DstTrainTest, method=\"svmRadial\", metric=metric, trControl=control)\n", "\n", "# Random Forest\n", "set.seed(7)\n", "fit.rf <- train(Survived ~ ., data=DstTrainTest, method=\"rf\", metric=metric, trControl=control)\n"], "metadata": {"_uuid": "2b958d9b65d78e664f39c9b62e8d22801a06efcc", "_cell_guid": "57456d86-0101-4183-8b93-235e838a33d1"}}, {"cell_type": "markdown", "source": ["**Select Best Model**"], "metadata": {"_uuid": "01014408e055e496622b840b1de65ca2304ba484", "_cell_guid": "b837b46e-2fc2-4901-89a5-5b01c86a55f1"}}, {"outputs": [], "cell_type": "code", "execution_count": null, "source": ["# summarize accuracy of models\n", "results <- resamples(list(\n", "    glm=fit.glm, \n", "    lda=fit.lda, \n", "    cart=fit.cart, \n", "    knn=fit.knn, \n", "    svm=fit.svm, \n", "    rf=fit.rf\n", "))\n", "summary(results)"], "metadata": {"_uuid": "15d994e2d12dbc84f7a1c157e4c0fe85b8797552", "_cell_guid": "1e9ae740-bc88-4607-b571-ef5149456a2e"}}, {"outputs": [], "cell_type": "code", "execution_count": null, "source": ["# compare accuracy of models\n", "dotplot(results)"], "metadata": {"_uuid": "ce5193bb420d4d8e3a3465387df69c567a4a2e9b", "_cell_guid": "80737fc6-2774-4492-b7ae-9827402b308d"}}, {"cell_type": "markdown", "source": ["**Testing the model accuracy**\n", "\n", "For the most accurate, Random Forest in this case"], "metadata": {"_uuid": "b049985d5ef13e0b4750456368455cafab920b8e", "_cell_guid": "99ad6bc2-b3e3-47e7-83e4-6015b82551ab"}}, {"outputs": [], "cell_type": "code", "execution_count": null, "source": ["# summarize Best Model\n", "print(fit.rf)"], "metadata": {"_uuid": "b8d76f2f0147867361c31b6d663478feb284f4e9", "_cell_guid": "57517eb6-4675-4e0d-83ec-1fb3b0ebaa29"}}, {"outputs": [], "cell_type": "code", "execution_count": null, "source": ["# prediction \n", "predictedval <- predict(fit.rf, newdata=DstTrainTest)\n", "\n", "# summarize results with confusion matrix\n", "cm <- confusionMatrix(predictedval, DstTrain$Survived)\n", "cm$table\n", "\n", "# calculate accuracy of the model\n", "Accuracy<-round(cm$overall[1],2)\n", "Accuracy\n"], "metadata": {"_uuid": "85366e4c777b31f9f0ad099cd5d9c9bc94d70abd", "_cell_guid": "32d89361-98fc-4013-a66c-ecf9b634a061"}}, {"cell_type": "markdown", "source": ["**Submit the Prediction**"], "metadata": {"_uuid": "cb38b2dd0845d56fc11e0977ead2be354baf357f", "_cell_guid": "7bffcca1-14f8-47e3-b777-b3e90a469517"}}, {"outputs": [], "cell_type": "code", "execution_count": null, "source": ["# prediction \n", "predictedval <- predict(fit.rf, newdata=DstTest)"], "metadata": {"_uuid": "ba5a15eff243c83527a6416d0d812ee50a54bee7", "_cell_guid": "f5faf79a-d0f2-49a5-8546-e5dd96f3743b"}}, {"outputs": [], "cell_type": "code", "execution_count": null, "source": ["# create a csv file for submittion\n", "TitanicResult <- data.frame(PassengerId = DstTest$PassengerId, Survived = predictedval)\n", "table(TitanicResult$Survived)\n", "write.csv(TitanicResult,file = \"TitanicResult.csv\",row.names = FALSE)"], "metadata": {"_uuid": "d59b23221af5ebe3138d08f8e001227412a01ebd", "_cell_guid": "aebd45dc-3956-4472-b191-50a74c788354"}}]}