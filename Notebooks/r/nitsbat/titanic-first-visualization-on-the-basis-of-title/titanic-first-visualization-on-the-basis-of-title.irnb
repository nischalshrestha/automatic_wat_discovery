{"nbformat": 4, "cells": [{"outputs": [], "metadata": {"_cell_guid": "91d0d442-2610-4ed0-9584-f3e52dc2c0aa", "_uuid": "0c595af2a8cf41859508342c2d7fea8dc83699e4"}, "execution_count": null, "cell_type": "code", "source": ["# This R environment comes with all of CRAN preinstalled, as well as many other helpful packages\n", "# The environment is defined by the kaggle/rstats docker image: https://github.com/kaggle/docker-rstats\n", "# For example, here's several helpful packages to load in \n", "\n", "library(ggplot2) # Data visualization\n", "library(readr) # CSV file I/O, e.g. the read_csv function\n", "library(stringr)\n", "# Input data files are available in the \"../input/\" directory.\n", "# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n", "\n", "system(\"ls ../input\")\n", "\n", "\n", "training <- read.csv(\"../input/train.csv\")\n", "test <- read.csv(\"../input/test.csv\")\n", "test$Survived <- rep(\"None\")\n", "data.combined <- rbind(training,test)\n", "#data.combined[892,]\n", "#table(training$Survived)\n", "#table(training$Pclass)\n", "training$Pclass <- as.factor(training$Pclass)\n", "p <- ggplot(training, aes(x=Pclass,fill= factor(Survived)))\n", "p <- p + geom_histogram(stat=\"count\",width=0.5)+ xlab(\"Pclass\")+ ylab(\"Total Count\")+ labs(fill = \"Survived\")\n", "\n", "dup_names <- as.character(data.combined[which(duplicated(data.combined$Name)),\"Name\"])\n", "dup_names <- data.combined[which(data.combined$Name %in% dup_names),]\n", "master <- data.combined[which(str_detect(data.combined$Name,\"Master.\")),]\n", "misis <- data.combined[which(str_detect(data.combined$Name,\"Miss.\")),]\n", "#misis[1:5,]\n", "mises <- data.combined[which(str_detect(data.combined$Name,\"Mrs\")),]\n", "#mises[1:5,]\n", "mister <- data.combined[which(data.combined$Sex == \"male\"),]\n", "#mister[1:5,]\n", "extract_title <- function(name){\n", "  name <- as.character(name)\n", "  \n", "  if(length(grep(\"Miss.\",name)) > 0){\n", "    return(\"Miss.\")\n", "  }\n", "  else if(length(grep(\"Master.\",name)) > 0){\n", "    return(\"Master.\")\n", "  }\n", "  else if(length(grep(\"Mrs.\",name)) > 0){\n", "    return(\"Mrs.\")\n", "  }\n", "  else if(length(grep(\"Mr.\",name)) > 0){\n", "    return(\"Mr.\")\n", "  }\n", "  else{\n", "    return(\"Other\")\n", "  }\n", "}\n", "\n", "title <- NULL\n", "for(i in 1:nrow(data.combined))\n", "{\n", "  title <- c(title,extract_title(data.combined[i,\"Name\"]))\n", "}\n", "\n", "data.combined$title <- as.factor(title)\n", "\n", "\n", "# ggplot() for the newly data\n", "ggplot(data.combined[1:891,],aes(x=title,fill = Survived)) + geom_bar(width=0.5) + facet_wrap(~ Pclass)\n", "\n", "#table(data.combined$Sex)\n", "\n", "#visualise the data through graph\n", "ggplot(data.combined[1:891,],aes(x=Sex,fill=Survived)) +\n", "  geom_bar(width=0.5) +\n", "  facet_wrap(~ Pclass) +\n", "  ggtitle(\"Pclass\") +\n", "  xlab(\"Sex\") + \n", "  ylab(\"Total Count\") +\n", "  labs(fill = \"Survived\")\n", "\n", "#Distribution on age criteria\n", "#summary(data.combined$Age)\n", "#summary(data.combined[1:891,\"Age\"])\n", " ggplot(data.combined[1:891,],aes(x=Age,fill=Survived)) +\n", "  geom_histogram(binwidth=10) +\n", "  facet_wrap(~ Sex + Pclass) +\n", "  ggtitle(\"Pclass\") +\n", "  xlab(\"Age\") + \n", "  ylab(\"Total Count\") +\n", "  labs(fill = \"Survived\")\n", "\n", "# knowledge about master \n", "mast <- data.combined[which(data.combined$title == \"Master.\"),]\n", "summary(mast$Age)\n", "\n", "# knowledge about Miss as it is complicated\n", "miss <- data.combined[which(data.combined$title == \"Miss.\"),]\n", "summary(miss$Age)\n", "\n", "#visualisation on miss\n", "ggplot(miss[miss$Survived != \"none\",],aes(x=Age,fill=Survived)) +\n", "  geom_histogram(binwidth=5) +\n", "  facet_wrap(~ Pclass) +\n", "  ggtitle(\"Age for 'mis' by Pclass\") +\n", "  xlab(\"Age\") + \n", "  ylab(\"Total Count\") +\n", "  labs(fill = \"Survived\")\n", "\n", "#More condition on misses\n", "miss.alone <- miss[which(miss$SibSp==0 &miss$Parch == 0),]\n", "#summary(miss.alone$Age)\n", "\n", "#female equivalent to master boys\n", "#length(which(miss.alone$Age <= 14.5))\n", "\n", "#looking at sibsp\n", "#summary(data.combined$SibSp)\n", " \n", "#can we treat it as a factor\n", "#length(unique(data.combined$SibSp))\n", "\n", "# as it is only seven yes we can convert it into factor\n", "data.combined$SibSp <- as.factor(data.combined$SibSp)\n", "\n", "#visualising the survival rates by SibSp,pclass and title\n", "ggplot(data.combined[1:891,],aes(x=SibSp,fill=Survived)) +\n", "  geom_histogram(stat = \"count\",binwidth=1) +\n", "  facet_wrap(~ title + Pclass) +\n", "  ggtitle(\"Title & Pclass\") +\n", "  xlab(\"Sibsp\") + \n", "  ylab(\"Total Count\") +\n", "  labs(fill = \"Survived\")\n", "\n", "#Similarly we do for Parch\n", "\n", "data.combined$SibSp <- as.factor(data.combined$Parch)\n", "\n", "#visualising the survival rates by SibSp,pclass and title\n", "ggplot(data.combined[1:891,],aes(x=Parch,fill=Survived)) +\n", "  geom_histogram(stat = \"count\",binwidth=1) +\n", "  facet_wrap(~ title + Pclass) +\n", "  ggtitle(\"Title & Pclass\") +\n", "  xlab(\"Parch\") + \n", "  ylab(\"Total Count\") +\n", "  labs(fill = \"Survived\")\n", "\n", "\n", "# Let's make a family factor and add it to the frame (family size)\n", "\n", "Sib <- c(train$SibSp,test$SibSp)\n", "PAr <- c(train$Parch,test$Parch)\n", "\n", "data.combined$family.size <- as.factor(Sib+PAr+1)\n", "\n", "#visualising the survival rates by familySize,pclass and title\n", "ggplot(data.combined[1:891,],aes(x=family.size,fill=Survived)) +\n", "  geom_histogram(stat = \"count\",binwidth=1) +\n", "  facet_wrap(~ title + Pclass) +\n", "  ggtitle(\"Title & Pclass\") +\n", "  xlab(\"Family size\") + \n", "  ylab(\"Total Count\") +\n", "  labs(fill = \"Survived\")\n", "\n", "\n", "#experimenting on Ticket\n", "#data.combined$Ticket[1:5]\n", "tick <- ifelse(data.combined$Ticket == \"\",\"\",substr(data.combined$Ticket,1,1))\n", "\n", "#Adding a column in dat.combined according to ticket letter\n", "data.combined$ticket.letter <- as.factor(tick)\n", "\n", "ggplot(data.combined[1:891,],aes(x=ticket.letter,fill=Survived)) +\n", "  geom_histogram(stat = \"count\",binwidth=1) +\n", "  facet_wrap(~ title + Pclass) +\n", "  ggtitle(\"Title & Pclass\") +\n", "  xlab(\"Ticket\") + \n", "  ylab(\"Total Count\") +\n", "  labs(fill = \"Survived\")\n", "\n", "#visualisation on Fares\n", "\n", "ggplot(data.combined,aes(x=Fare)) +\n", "  geom_histogram(binwidth=5) +\n", "  ggtitle(\"Fare\") +\n", "  xlab(\"fare\") + \n", "  ylab(\"Total Count\") +\n", "  ylim(0,200)\n", "\n", "#visualisation based on Survival and Fares\n", "\n", "ggplot(data.combined[1:891,],aes(x=Fare,fill=Survived)) +\n", "  geom_histogram(binwidth=5) +\n", "  facet_wrap(~ title + Pclass) +\n", "  ggtitle(\"Title & Pclass\") +\n", "  xlab(\"Ticket\") + \n", "  ylab(\"Total Count\") +\n", "  labs(fill = \"Survived\") +\n", "  ylim(0,50)\n", "\n", "# visualisation on Cabins\n", "#str(data.combined$Cabin)\n", "\n", "#cabin is not really a factor , hence converted into strings\n", "data.combined$Cabin <- as.character(data.combined$Cabin)\n", "#data.combined$Cabin[1:100]\n", "\n", "#Lots of no empty cabins\n", "#Making empty cabins as \"U\" Unknown\n", "data.combined[which(data.combined$Cabin==\"\"),\"Cabin\"] <- \"U\"\n", "#data.combined$Cabin[1:100]\n", "\n", "#look on first letter of cabin and making it a factor\n", "fact <- as.factor(substr(data.combined$Cabin,1,1))\n", "#str(fact)\n", "#levels(fact)\n", "\n", "#adding the variable to dataframe as cabinLeter\n", "\n", "data.combined$cabinLetter <- fact\n", "\n", "#High level plot\n", "\n", "ggplot(data.combined[1:891,],aes(x=cabinLetter,fill=Survived)) +\n", "  geom_histogram(stat=\"count\",binwidth=5) +\n", "  ggtitle(\"Cabin Letter Factors\") +\n", "  xlab(\"Cabin_Letter\") + \n", "  ylab(\"Total Count\") +\n", "  labs(fill = \"Survived\") \n", "\n", "# Based on pclass\n", "\n", "ggplot(data.combined[1:891,],aes(x=cabinLetter,fill=Survived)) +\n", "  geom_histogram(stat=\"count\",binwidth=5) +\n", "  facet_wrap(~ Pclass) +\n", "  ggtitle(\"Pclass\") +\n", "  xlab(\"Cabin_Letter\") + \n", "  ylab(\"Total Count\") +\n", "  labs(fill = \"Survived\") +\n", "  ylim(0,750)\n", "\n", "# Based on pclass and Title\n", "ggplot(data.combined[1:891,],aes(x=cabinLetter,fill=Survived)) +\n", "  geom_histogram(stat=\"count\",binwidth=5) +\n", "  facet_wrap(~ title + Pclass) +\n", "  ggtitle(\"Pclass\") +\n", "  xlab(\"Cabin_Letter\") + \n", "  ylab(\"Total Count\") +\n", "  labs(fill = \"Survived\") +\n", "  ylim(0,750)\n", "\n", "# Visualisation on multiple cabins\n", "library(stringr)\n", "cht <- ifelse(str_detect(data.combined$Cabin,\" \"),\"MC\",\"SC\") #Mc for multiple cabins\n", "#length(which(cht == \"MC\")) \n", "\n", "# Making it a variable of dataframe\n", "data.combined$MulitpleCabin <- as.factor(cht)\n", "data.combined[1:2,]\n", "\n", "#Visualisation\n", "ggplot(data.combined[1:891,],aes(x=MulitpleCabin,fill=Survived)) +\n", "  geom_histogram(stat=\"count\",binwidth=5) +\n", "  facet_wrap(~ title + Pclass) +\n", "  ggtitle(\"Pclass and Title\") +\n", "  xlab(\"Multiple Cabin\") + \n", "  ylab(\"Total Count\") +\n", "  labs(fill = \"Survived\") +\n", "  ylim(0,750)\n", "\n", "# visualisation on places onboard\n", "#data.combined$Embarked[1:10]\n", "\n", "ggplot(data.combined[1:891,],aes(x=Embarked,fill=Survived)) +\n", "  geom_histogram(stat=\"count\",binwidth=5) +\n", "  ggtitle(\"Survival\") +\n", "  xlab(\"Boarding_Place\") + \n", "  ylab(\"Total Count\") +\n", "  labs(fill = \"Survived\") +\n", "  ylim(0,750)\n", "\n", "\n", "ggplot(data.combined[1:891,],aes(x=Embarked,fill=Survived)) +\n", "  geom_histogram(stat=\"count\",binwidth=5) +\n", "  facet_wrap(~ Pclass + title) +\n", "  ggtitle(\"Pclass and Title\") +\n", "  xlab(\"Boarding_Place\") + \n", "  ylab(\"Total Count\") +\n", "  labs(fill = \"Survived\") +\n", "  ylim(0,750)\n", "\n", "   \n", "    \n"]}, {"outputs": [], "metadata": {}, "execution_count": null, "cell_type": "code", "source": ["#"]}], "metadata": {"language_info": {"pygments_lexer": "r", "name": "R", "mimetype": "text/x-r-source", "codemirror_mode": "r", "file_extension": ".r", "version": "3.4.2"}, "kernelspec": {"language": "R", "name": "ir", "display_name": "R"}}, "nbformat_minor": 1}