{"cells": [{"outputs": [], "metadata": {"_cell_guid": "b37af3d4-0754-406e-a760-feb1761c3c04", "_uuid": "efc8ff5d6547288d96db5b17512e02254ce5a54f"}, "execution_count": null, "cell_type": "code", "source": ["library(ggplot2) # Data visualization\n", "library(readr) # CSV file I/O, e.g. the read_csv function\n", "\n", "# Input data files are available in the \"../input/\" directory.\n", "# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n", "\n", "system(\"ls ../input\")\n", "\n", "# Any results you write to the current directory are saved as output."]}, {"outputs": [], "metadata": {"_cell_guid": "099a00b3-8fe6-4895-8c50-6f2d2d7a9112", "_uuid": "394a43cbccd3b3dcd005a4194b90f0bda989d29b"}, "execution_count": null, "cell_type": "code", "source": ["train <- read.csv(\"../input/train.csv\",header=TRUE,stringsAsFactors = F)\n", "test  <- read.csv(\"../input/test.csv\",header=TRUE,stringsAsFactors = F)\n", "dim(train)\n", "dim(test)"]}, {"outputs": [], "metadata": {"_cell_guid": "9d72b1c2-a4f6-4a64-be50-8e6f105f4d8a", "_uuid": "7ebc938f47b62b60473a81e35a505edf5f53e493"}, "execution_count": null, "cell_type": "code", "source": ["library('dplyr')\n", "data  <- bind_rows(train,test)\n", "dim(data)"]}, {"outputs": [], "metadata": {"_cell_guid": "733fc571-8f1e-4508-bb11-ed5f3216945e", "_uuid": "80aecade4aa5bd54e69079a2b8fee208cc7a1e36"}, "execution_count": null, "cell_type": "code", "source": ["str(data)"]}, {"outputs": [], "metadata": {"_cell_guid": "e550508e-2547-42c0-ab60-9218a2f55a9d", "_uuid": "877eacd139d7ab22de0020a7b78e2414a2d90ffd"}, "execution_count": null, "cell_type": "code", "source": ["data$Title <- gsub('(.*, )|(\\\\..*)', '', data$Name)\n", "\n", "rare_title <- c('Dona', 'Lady', 'the Countess','Capt', 'Col', 'Don', \n", "                'Dr', 'Major', 'Rev', 'Sir', 'Jonkheer')\n", "\n", "# Also reassign mlle, ms, and mme accordingly\n", "data$Title[data$Title == 'Mlle']        <- 'Miss' \n", "data$Title[data$Title == 'Ms']          <- 'Miss'\n", "data$Title[data$Title == 'Mme']         <- 'Mrs' \n", "data$Title[data$Title %in% rare_title]  <- 'Rare Title'"]}, {"outputs": [], "metadata": {"_cell_guid": "c174cde8-d1b8-4481-a60f-e0c3e6981e37", "_uuid": "f3d922f1c41dbfae348a9b773e003decdb3e2a86"}, "execution_count": null, "cell_type": "code", "source": ["data$Embarked[c(62, 830)] <- 'C'\n", "data$Fare[1044] <- median(data[data$Pclass == '3' & data$Embarked == 'S', ]$Fare, na.rm = TRUE)\n", "data$Fare[data$Fare <3.0] = NA\n", "data$Fare[data$Fare > 300] <- median(data[data$Pclass == '1' & data$Embarked == 'C', ]$Fare, na.rm = TRUE)"]}, {"outputs": [], "metadata": {"_cell_guid": "a75f96dd-e6dd-4329-87a7-8b89f8cded00", "_uuid": "420cf189048dc2a3c8ad6c1fb7d1a9dea6c31988"}, "execution_count": null, "cell_type": "code", "source": ["library('mice') # imputation\n", "\n", "factor_vars <- c('Pclass','Sex','Age','SibSp','Parch','Fare','Embarked')\n", "\n", "# Perform mice imputation, excluding certain less-than-useful variables:\n", "mice_mod <- mice(data[, names(data) %in% factor_vars], \n", "                 method='rf')\n", "                            \n", "# Save the complete output \n", "mice_output <- complete(mice_mod)\n", "\n", "# Replace Age variable from the mice model.\n", "for(ivar in factor_vars){\n", "    data[,ivar] <- mice_output[,ivar]\n", "}"]}, {"outputs": [], "metadata": {"_cell_guid": "d00578ff-a3dc-4721-89cd-6ca0b733f778", "_uuid": "c206b20a30ea2a79c22d267e800667d134648592"}, "execution_count": null, "cell_type": "code", "source": ["data$FamilySize <- data$SibSp + data$Parch + 1\n", "data$Fare_Per_Person <- data$Fare/as.numeric(data$FamilySize)\n", "data$Deck <- sapply(data$Cabin, function(x) strsplit(x, NULL)[[1]][1])\n", "data$Deck[is.na(data$Deck)] <- \"Unknown\""]}, {"outputs": [], "metadata": {"_cell_guid": "70252f3c-4d41-4bf6-bec5-1a35bedf89a4", "_uuid": "48b6e816d20168938e9dc6affcde00b7089a417f"}, "execution_count": null, "cell_type": "code", "source": ["# Discretize age\n", "data$Age_Group[data$Age <= 10] <- 'Kid'\n", "data$Age_Group[data$Age <= 20 & data$Age > 10] <- 'Teen'\n", "data$Age_Group[data$Age <= 30 & data$Age > 20] <- 'Young'\n", "data$Age_Group[data$Age <= 40 & data$Age > 30] <- 'Adult'\n", "data$Age_Group[data$Age <= 50 & data$Age > 40] <- 'Senior'\n", "data$Age_Group[data$Age > 50] <- 'old'"]}, {"outputs": [], "metadata": {"_cell_guid": "3b3ab1ac-9e64-405a-a075-1c7f9d40b49b", "_uuid": "e49d5e3e01f9e4cd89802d6c044576ef23fab36b"}, "execution_count": null, "cell_type": "code", "source": ["factor_vars <- c('Pclass','SibSp','Parch','FamilySize')\n", "data[factor_vars] <- lapply(data[factor_vars], function(x) as.factor(x))\n", "                            \n", "factor_vars <- c(\"Name\",\"Sex\",\"Ticket\",\"Cabin\",\"Embarked\",\"Title\",\"Deck\",\"Age_Group\")\n", "data[factor_vars] <- lapply(data[factor_vars], function(x) as.factor(x))\n"]}, {"outputs": [], "metadata": {"_cell_guid": "112edd5c-34ac-4bb4-beea-b6afbdce6c3a", "_uuid": "6ddc02bd2cac9636742e3dc108bba9dd27dfe5f5"}, "execution_count": null, "cell_type": "code", "source": ["# Split the data back into a train set and a test set\n", "train <- data[1:891,]\n", "test <- data[892:1309,]"]}, {"outputs": [], "metadata": {"_cell_guid": "6abd8551-43a5-4a61-981e-64e606574685", "_uuid": "efb58c9bcd8b29246325b29903e4e5f338c5a694"}, "execution_count": null, "cell_type": "code", "source": ["train$PassengerId <- NULL\n", "train$Name <- NULL\n", "train$Ticket <- NULL\n", "train$Cabin <- NULL"]}, {"outputs": [], "metadata": {"_cell_guid": "c53e4ef9-96ba-4428-b26e-238254dcf559", "_uuid": "163c99d83616d1cbe796f06ec36ebccf50c3fce2"}, "execution_count": null, "cell_type": "code", "source": ["# Build the model (note: not all possible variables are used)\n", "library('randomForest') \n", "rf_model <- randomForest(factor(Survived) ~ .,data = train)"]}, {"outputs": [], "metadata": {"_cell_guid": "9ad5d3a4-ac8f-484b-a939-81ac1d486e7a", "_uuid": "3d36acff42414f4049f3361847aa10943d3d26a1"}, "execution_count": null, "cell_type": "code", "source": ["importance(rf_model)"]}, {"outputs": [], "metadata": {"_cell_guid": "8a74139c-0670-407e-a1ad-0ceacbbbf908", "_uuid": "561cbc3086bde81d9f45c47ef3402f1aca929cf6"}, "execution_count": null, "cell_type": "code", "source": ["# Predict using the test set\n", "prediction <- predict(rf_model, test)\n", "\n", "# Save the solution to a dataframe with two columns: PassengerId and Survived (prediction)\n", "solution <- data.frame(PassengerID = test$PassengerId, Survived = prediction)\n", "\n", "# Write the solution to file\n", "write.csv(solution, file = 'rf_mod_Solution.csv', row.names = F)"]}, {"outputs": [], "metadata": {"_cell_guid": "6aa56c30-355d-4209-8408-ade5849b9bc4", "_uuid": "677da071b00b0df3a9767d887e43bd0b06f7574a"}, "execution_count": null, "cell_type": "code", "source": []}], "metadata": {"kernelspec": {"language": "R", "display_name": "R", "name": "ir"}, "language_info": {"pygments_lexer": "r", "name": "R", "mimetype": "text/x-r-source", "version": "3.4.1", "codemirror_mode": "r", "file_extension": ".r"}}, "nbformat_minor": 1, "nbformat": 4}