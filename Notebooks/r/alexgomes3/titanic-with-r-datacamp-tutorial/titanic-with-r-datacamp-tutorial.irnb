{"cells": [{"source": ["# This R environment comes with all of CRAN preinstalled, as well as many other helpful packages\n", "# The environment is defined by the kaggle/rstats docker image: https://github.com/kaggle/docker-rstats\n", "# For example, here's several helpful packages to load in \n", "\n", "library(ggplot2) # Data visualization\n", "library(readr) # CSV file I/O, e.g. the read_csv function\n", "\n", "# Input data files are available in the \"../input/\" directory.\n", "# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n", "\n", "list.files(\"../input\")\n", "\n", "# Any results you write to the current directory are saved as output.\n", "\n", "#########################################3\n", "############## my code starts here\n", "\n", "# decision trees library\n", "library(rpart)\n", "\n", "# Load in the packages to build a fancy plot\n", "library(rpart.plot)\n", "library(RColorBrewer)\n", "train = read.csv(\"../input/train.csv\")\n", "test = read.csv(\"../input/test.csv\")"], "metadata": {"_uuid": "e26a3a46b6585fd242a988225659a16ac13819ed", "_execution_state": "idle", "_cell_guid": "61f6d424-9d18-44e7-b709-dee93c5a078a"}, "execution_count": null, "outputs": [], "cell_type": "code"}, {"source": ["# Your train and test set are still loaded in\n", "str(train)\n", "\n", "# Build the decision tree\n", "my_tree_two <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked, data = train, method = \"class\")\n", "\n", "# Visualize the decision tree using plot() and text()\n", "plot(my_tree_two)\n", "text(my_tree_two)\n", "\n", "# Time to plot your fancy tree\n", "fancyRpartPlot(my_tree_two)"], "metadata": {"_uuid": "282731cbbb2ff389ed73a292301cee44ab22e6cb", "_execution_state": "idle", "_cell_guid": "f3add8cc-6d33-4f00-9190-6369806c2fcd"}, "execution_count": null, "outputs": [], "cell_type": "code"}, {"source": ["my_tree_two"], "metadata": {"_uuid": "93ff3aab93eca26afb0fe860fe8c99895286e674", "_cell_guid": "a6fcc345-aa09-4b1b-8460-d0e24386a089"}, "execution_count": null, "outputs": [], "cell_type": "code"}, {"source": ["# Make predictions on the test set\n", "my_prediction <- predict(my_tree_two, newdata = test, type = \"class\")\n", "\n", "# Finish the data.frame() call\n", "my_solution <- data.frame(PassengerId = test$PassengerId, Survived = my_prediction)\n", "\n", "# Use nrow() on my_solution\n", "nrow(my_solution)\n", "\n", "# Finish the write.csv() call\n", "write.csv(my_solution, file = \"my_solution.csv\", row.names = FALSE)"], "metadata": {"_uuid": "5a8be3b51ed4752af48272b749ac511df757190d", "_execution_state": "idle", "_cell_guid": "7a0059db-c259-4c1e-bc2c-99250ce2614a"}, "execution_count": null, "outputs": [], "cell_type": "code"}, {"source": ["# Prediction 3\n", "my_tree_three <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked,\n", "                     data = train, method = \"class\", control = rpart.control(minsplit = 50, cp = 0))\n", "\n", "# Visualize my_tree_three\n", "fancyRpartPlot(my_tree_three)\n", "\n", "# predict\n", "my_prediction3 <- predict(my_tree_three, newdata = test, type = \"class\")\n", "\n", "# Finish the data.frame() call\n", "my_solution3 <- data.frame(PassengerId = test$PassengerId, Survived = my_prediction3)\n", "\n", "# Finish the write.csv() call\n", "write.csv(my_solution3, file = \"my_solution3.csv\", row.names = FALSE)"], "metadata": {"_uuid": "ade72ad17868304c18684dbef80eb7221296012d", "_cell_guid": "a9540e04-6162-43c4-a149-13e7f969f877"}, "execution_count": null, "outputs": [], "cell_type": "code"}], "nbformat_minor": 1, "metadata": {"language_info": {"pygments_lexer": "r", "mimetype": "text/x-r-source", "file_extension": ".r", "name": "R", "codemirror_mode": "r", "version": "3.4.1"}, "kernelspec": {"display_name": "R", "language": "R", "name": "ir"}}, "nbformat": 4}