{"cells":[{"metadata":{"_uuid":"47da6263acd358829706e54249b6878ac02f6b34"},"cell_type":"markdown","source":"## Introduction\nThis was just a quick attempt at predicting the survival of individual passengers using random forests. In the movie there is the scene before the announcement is made where the captain says \"Women and children first!\" (https://www.youtube.com/watch?v=uAotd1YvRf8). As we all know, movies are always exact reconstruction of true events, therefore the decision was made to predict a passenger's survival using age and gender. "},{"metadata":{"_uuid":"7f7107efe74f837a64f3fa39a214aae31da06013"},"cell_type":"markdown","source":"### Import libraries  "},{"metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"_kg_hide-input":false,"_kg_hide-output":true},"cell_type":"code","source":"library(ggplot2)\nlibrary(ggthemes)\nlibrary(dplyr)\nlibrary(randomForest)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"f54bb072389ea39d08294f4ee6b8b39b089f03df"},"cell_type":"markdown","source":"### Import Datasets  "},{"metadata":{"_cell_guid":"79c7e3d0-c299-4dcb-8224-4455121ee9b0","_uuid":"d629ff2d2480ee46fbb7e2d37f6b5fab8052498a","trusted":true,"_kg_hide-output":true},"cell_type":"code","source":"train <- read.csv(\"../input/train.csv\")\ntest <- read.csv(\"../input/test.csv\")\nmanifest <- bind_rows(train, test) ## Combine to create the full dataset","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"2648857dc4c444649d3109e22a30807aa48f93f8"},"cell_type":"code","source":"head(manifest, 5)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"e1c45645eb9f1ccafad629f3287690689a0e25f2"},"cell_type":"markdown","source":"## EDA "},{"metadata":{"trusted":true,"_uuid":"b075677dd0da72c58d95652e923d44de9d390125"},"cell_type":"code","source":"## Overall plot of the age of those that survived\nggplot(manifest[1:891,], aes( x = Age, fill = factor(Survived)))+\n    geom_bar(stat='count', position='dodge') +\n    scale_x_continuous(breaks=seq(0,80, 5)) +\n    scale_y_continuous(breaks = seq(0,20,2))+\n    labs(x = 'Age') +\n    theme_minimal()\n","execution_count":null,"outputs":[]},{"metadata":{"_kg_hide-output":false,"_kg_hide-input":false,"trusted":true,"_uuid":"3b5a3134daa45ba16142fa9cba458cf21e6ba2e7"},"cell_type":"code","source":"par(mfrow = c(1,2))\nggplot(manifest[1:891,], aes( x = Age, fill = factor(Survived)))+\n    geom_histogram() +\n    scale_x_continuous(breaks=seq(0,80, 10)) +\n    labs(x = 'Age') +\n    facet_grid(.~Sex) +\n    theme_minimal()","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"ede71be6c61e2bcd21e752df8b3cec6f60928fc8"},"cell_type":"code","source":"## Now seperating the genders\npar(mfrow = c(1,2))\nggplot(manifest[1:891,], aes( x = Age, color =factor(Survived)))+\n    geom_density()+\n    facet_grid(.~Sex) +\n    theme_minimal()","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"c2de9b34fbd1d302968d43ee9c16519e886c68cf"},"cell_type":"markdown","source":"### Replacing NA \nMany of the ages of the passengers are listed as NA in the ship's manifest. I have seen other kernels that have undertaken ML methods to fill in these gaps. Here we use a simple mean of the age of the passengers without NA. This is obviously not the best way to do this, but it would certainly be very interesting to compare the results with those who have used ML.\n"},{"metadata":{"trusted":true,"_uuid":"492faa62782d167dcfeae206cc4715c272265ac3"},"cell_type":"code","source":"Age <- manifest$Age\nAge[is.na(Age)] <- mean(Age[!is.na(Age)])\nmanifest$Age <- Age\n","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"19b86866332279fc48a1aac90416fe70e248c9e0"},"cell_type":"markdown","source":"### Random Forests "},{"metadata":{"trusted":true,"_uuid":"c411087e928f557b015f2945c9d9444a689e1381"},"cell_type":"code","source":"## Splitting the full dataset back\ntrain <- manifest[1:891,]\ntest <- manifest[892:1309,]\n\n## Seed set\nset.seed(821)\n\nrandoforest <- randomForest(factor(Survived) ~ Sex + Age, data = train)\nplot(randoforest, ylim=c(0.1,0.35))\nlegend(\"bottom\", colnames(randoforest$err.rate), col=1:3, fill=1:3, bty = \"n\")","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"cee69e8db45be6aaf1dd5d9cbc890791742786af"},"cell_type":"markdown","source":"### Predictions "},{"metadata":{"trusted":true,"_uuid":"9078d622c3077bbb34c67374428a14851e9e2d56"},"cell_type":"code","source":"prediction <- predict(randoforest, test)\nfinal_predictions <- data.frame(ID = test$PassengerId, Survived = prediction)\nwrite.csv(final_predictions, file = 'randomforest_predictions.csv', row.names = FALSE)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"2b409fafdac46bfd9a616bcc7d65ffea6187d062"},"cell_type":"markdown","source":"## Conclusion\nThanks for having a quick read. As always, do let me know if you have and questions or feedback!\n"}],"metadata":{"kernelspec":{"display_name":"R","language":"R","name":"ir"},"language_info":{"mimetype":"text/x-r-source","name":"R","pygments_lexer":"r","version":"3.4.2","file_extension":".r","codemirror_mode":"r"}},"nbformat":4,"nbformat_minor":1}