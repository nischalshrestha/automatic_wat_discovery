{"metadata": {"kernelspec": {"language": "R", "display_name": "R", "name": "ir"}, "language_info": {"codemirror_mode": "r", "mimetype": "text/x-r-source", "pygments_lexer": "r", "file_extension": ".r", "name": "R", "version": "3.4.1"}}, "nbformat_minor": 1, "nbformat": 4, "cells": [{"metadata": {"_uuid": "7eb954522f4ef75bab1c374dc87bc42fc649f2c8", "_cell_guid": "85dd30cb-560c-48db-a095-2c00ecfdfc53"}, "cell_type": "code", "execution_count": null, "source": ["# This R environment comes with all of CRAN preinstalled, as well as many other helpful packages\n", "# The environment is defined by the kaggle/rstats docker image: https://github.com/kaggle/docker-rstats\n", "# For example, here's several helpful packages to load in \n", "\n", "library(ggplot2) # Data visualization\n", "library(readr) # CSV file I/O, e.g. the read_csv function\n", "\n", "# Input data files are available in the \"../input/\" directory.\n", "# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n", "\n", "system(\"ls ../input\")\n", "\n", "train_df_ <- read.csv(\"../input/train.csv\")\n", "test_df_ <- read.csv(\"../input/test.csv\")\n", "\n", "# Any results you write to the current directory are saved as output."], "outputs": []}, {"metadata": {"_uuid": "67cd57fbb15fe7a984ffa8e3d833eed8a3a48dfd", "_cell_guid": "926b2000-bb2e-4968-99a2-094479dd865b"}, "cell_type": "code", "execution_count": null, "source": ["train_df_$Ticket <- as.character(train_df_$Ticket)\n", "train_df_$Name <- as.character(train_df_$Name)\n", "train_df_$Cabin <- as.character(train_df_$Cabin)\n", "\n", "# dim(train_df_)\n", "# sum(train_df_$Cabin==\"\")\n", "\n", "cherbourg_df_ <- train_df_[train_df_$Embarked==\"C\",]\n", "aggregate(Survived ~ Pclass + Sex, train_df_, FUN=mean)\n", "aggregate(Survived ~ Pclass + Sex + SibSp, train_df_, FUN=mean)\n", "\n", "first_lm_ <- lm(Survived ~ Pclass + Sex + Age + SibSp + Parch + Embarked, train_df_)\n", "summary(first_lm_)\n", "first_pred_ <- predict(first_lm_,test_df_)\n", "\n", "write.csv(first_pred_, \"../submission.csv\")"], "outputs": []}, {"metadata": {"_uuid": "e0b5a4b7653fc390c19a6e86b385493344b8ccc5", "_cell_guid": "60c7a6f9-e532-4951-9918-f7472d76eea2"}, "cell_type": "code", "execution_count": null, "source": [], "outputs": []}]}