{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "_cell_guid": "f9926b3f-66d1-c37e-f056-f2327515c5a5"
      },
      "source": [
        "Titanic Survival Prediction"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "_cell_guid": "9199b939-b2b3-c9f3-ec0d-e2548afa9809"
      },
      "outputs": [],
      "source": [
        "# This R environment comes with all of CRAN preinstalled, as well as many other helpful packages\n",
        "# The environment is defined by the kaggle/rstats docker image: https://github.com/kaggle/docker-rstats\n",
        "# For example, here's several helpful packages to load in \n",
        "\n",
        "library(ggplot2) # Data visualization\n",
        "library(readr) # CSV file I/O, e.g. the read_csv function\n",
        "\n",
        "# Input data files are available in the \"../input/\" directory.\n",
        "# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n",
        "\n",
        "system(\"ls ../input\")\n",
        "\n",
        "# Any results you write to the current directory are saved as output."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "_cell_guid": "28fea095-095f-6f5f-5b2b-387f0ee3d82b"
      },
      "outputs": [],
      "source": [
        "train = read.csv('../input/train.csv')\n",
        "test = read.csv('../input/test.csv')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "_cell_guid": "10127d65-7bec-f0de-ae21-3e4d7032e6ff"
      },
      "outputs": [],
      "source": [
        "head(train)\n",
        "head(test)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "_cell_guid": "d47d6e01-f135-075e-22bb-bf31aaf9413b"
      },
      "outputs": [],
      "source": [
        "train1 = train[ -c(1, 4, 6, 9, 11, 12)]\n",
        "head(train1, n=20)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "_cell_guid": "69ceff53-c314-6364-f322-7ec4e3c0e159"
      },
      "outputs": [],
      "source": [
        "library(\"e1071\")\n",
        "m <- svm(Survived ~ ., data = train1)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "_cell_guid": "5ae16754-aa2b-07f1-93e1-456256bf96a0"
      },
      "outputs": [],
      "source": [
        "test1 = test[ -c(1, 3, 5, 8, 10, 11)]\n",
        "head(test1, n=20)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "_cell_guid": "d9ff9c88-7c69-12bf-a1e4-09f3f881baf9"
      },
      "outputs": [],
      "source": [
        "test_surv = predict(m, test1)\n",
        "test_surv"
      ]
    }
  ],
  "metadata": {
    "_change_revision": 0,
    "_is_fork": false,
    "kernelspec": {
      "display_name": "R",
      "language": "R",
      "name": "ir"
    },
    "language_info": {
      "codemirror_mode": "r",
      "file_extension": ".r",
      "mimetype": "text/x-r-source",
      "name": "R",
      "pygments_lexer": "r",
      "version": "3.3.3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}