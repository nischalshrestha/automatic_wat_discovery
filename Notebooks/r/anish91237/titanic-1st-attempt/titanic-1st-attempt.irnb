{"cells":[{"metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"collapsed":true},"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"../input/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"../input\"))\n\n# Any results you write to the current directory are saved as output.","execution_count":null,"outputs":[]},{"metadata":{"_cell_guid":"79c7e3d0-c299-4dcb-8224-4455121ee9b0","_uuid":"d629ff2d2480ee46fbb7e2d37f6b5fab8052498a","trusted":true,"scrolled":true},"cell_type":"code","source":"test <- read.csv(\"../input/test.csv\")\ntrain <- read.csv(\"../input/train.csv\")\n\nstr(train)\nsummary(train)\ntable(train$Survived)\nprop.table(table(train$Survived))\ntest$Survived<-rep(0,418)\nprop.table(table(train$Sex,train$Survived),1)\ntable(train$Sex,train$Survived)\ntrain$Child<-0\ntrain$Child[train$Age<18]<-1\naggregate(Survived~Child+Sex,data = train,FUN = sum)\naggregate(Survived~Child+Sex,data = train,FUN = function(x){sum(x)/length(x)})\naggregate(Survived~Pclass+Sex,data = train,FUN = function(x){sum(x)/length(x)})\ntrain$Farecategory <- '30+'\ntrain$Farecategory[train$Fare < 30 & train$Fare >= 20] <- '20-30'\ntrain$Farecategory[train$Fare < 20 & train$Fare >= 10] <- '10-20'\ntrain$Farecategory[train$Fare < 10] <- '<10'\naggregate(Survived~Farecategory+Pclass+Sex,data = train,FUN = function(x){sum(x)/length(x)})\nlibrary(rpart)\n#class is used to get categorical variables while anova is used for continuous variable \nfit<-rpart(Survived~Pclass+Sex+Age+Fare+SibSp+Parch+Embarked,\n           data = train,\n           method = 'class')\nplot(fit)\ntext(fit)\nlibrary(rattle)\nlibrary(rpart.plot)\nlibrary(RColorBrewer)\nfancyRpartPlot(fit)\n\nPrediction <- predict(fit, test, type = \"class\")\nsubmit <- data.frame(PassengerId = test$PassengerId, Survived = Prediction)\nwrite.csv(submit, file = \"titanicdtree.csv\", row.names = FALSE)\n\n","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"66a73849cad487216fa7ea412f65f81b76c2a703"},"cell_type":"code","source":"","execution_count":null,"outputs":[]}],"metadata":{"kernelspec":{"display_name":"R","language":"R","name":"ir"},"language_info":{"mimetype":"text/x-r-source","name":"R","pygments_lexer":"r","version":"3.4.2","file_extension":".r","codemirror_mode":"r"}},"nbformat":4,"nbformat_minor":1}