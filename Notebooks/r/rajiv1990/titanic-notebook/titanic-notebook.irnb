{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "_cell_guid": "54725a04-9d82-a30e-bbf4-781b27dc6551"
      },
      "source": [
        ""
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "_cell_guid": "569a6e2e-8b6e-68cf-f9fd-4534ea81d4fe"
      },
      "outputs": [],
      "source": [
        "# This Python 3 environment comes with many helpful analytics libraries installed\n",
        "# It is defined by the kaggle/python docker image: https://github.com/kaggle/docker-python\n",
        "# For example, here's several helpful packages to load in \n",
        "\n",
        "import numpy as np # linear algebra\n",
        "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
        "\n",
        "# Input data files are available in the \"../input/\" directory.\n",
        "# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n",
        "\n",
        "from subprocess import check_output\n",
        "print(check_output([\"ls\", \"../input\"]).decode(\"utf8\"))\n",
        "\n",
        "# Any results you write to the current directory are saved as output."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "_cell_guid": "bfb4fc65-99b5-5df3-cf48-a8bdadcffba8"
      },
      "outputs": [],
      "source": [
        "from datetime import timedelta, date\n",
        "\n",
        "nhl_teams = [\"ANA\", \"ARI\", \"ATL\", \"BOS\", \"BUF\",\"CAR\", \"CBJ\", \"CGY\", \"CHI\", \"COL\", \"DAL\", \"DET\", \"EDM\", \"FLA\", \"LA\", \"MIN\",\"MTL\",\n",
        "             \"NSH\",\"NJ\", \"NYI\", \"NYR\", \"OTT\", \"PHI\", \"PIT\", \"SJS\", \"STL\", \"TBL\", \"TOR\", \"VAN\", \"WSH\", \"WPG\"]\n",
        "             \n",
        "\n",
        "all_urls = []"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "_cell_guid": "38ac0774-0ddc-9d9d-90fb-6788c493fdc8"
      },
      "outputs": [],
      "source": [
        "# Load packages\n",
        "library('ggplot2') # visualization\n",
        "library('ggthemes') # visualization\n",
        "library('scales') # visualization\n",
        "library('dplyr') # data manipulation\n",
        "library('mice') # imputation\n",
        "library('randomForest') # classification algorithm\n",
        "\n",
        "train <- read.csv('../input/train.csv', stringsAsFactors = F)\n",
        "test  <- read.csv('../input/test.csv', stringsAsFactors = F)\n",
        "\n",
        "all_data  <- bind_rows(train, test) #use dpylr's bind_rows when columns aren't the same across datasets\n",
        "\n",
        "str(all_data) #check the structure of the data "
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "_cell_guid": "54c0e17e-03e4-5bd2-557c-47b4123a0b73"
      },
      "outputs": [],
      "source": [
        "# Grab title from passenger names\n",
        "all_data$Title <- gsub('(.*, )|(\\\\..*)', '', all_data$Name)\n",
        "\n",
        "table(all_data$Sex, all_data$Title)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "_cell_guid": "40d39a2f-9f55-5ce2-0f57-b6fb69e1dfcc"
      },
      "outputs": [],
      "source": [
        "#create a variable that indicates family size \n",
        "\n",
        "all_data$Fam_Size = all_data$SibSp + all_data$Parch + 1\n",
        "\n",
        "ggplot(all_data[1:891,], aes(x = Fam_Size, fill = factor(Survived))) +\n",
        "  geom_bar(stat='count', position='dodge') +\n",
        "  scale_x_continuous(breaks=c(1:11)) +\n",
        "  labs(x = 'Family Size') +\n",
        "  theme_few()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "_cell_guid": "2742b1ee-c781-7e0b-1b30-58228e381929"
      },
      "outputs": [],
      "source": [
        "#What about survival by gender? \n",
        "ggplot(all_data[1:891,], aes(x = Sex, fill = factor(Survived))) +\n",
        "  geom_bar(stat='count') +\n",
        "  labs(x = 'Gender') \n",
        "\n",
        "##The Cabin variable appears to have missing values: \n",
        "#is.na(all_data$Cabin)\n",
        "#We'll deal with that later...\n",
        "\n",
        "\n",
        "    \n",
        "    "
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "_cell_guid": "335b928c-7c33-fbc2-6798-ab2acba6c78b"
      },
      "outputs": [],
      "source": [
        "all_data[c(62, 830), 'Pclass']\n",
        "\n",
        "# Create a Deck variable. Get passenger deck A - F:\n",
        "all_data$Deck<-factor(sapply(all_data$Cabin, function(x) strsplit(x, NULL)[[1]][1]))\n",
        "    \n",
        "all_data$Deck[2]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "_cell_guid": "27489e64-7769-c5a6-e6f4-6c1692e1f487"
      },
      "outputs": [],
      "source": [
        "embark_fare <- all_data %>%\n",
        "  filter(PassengerId != 62 & PassengerId != 830)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "_cell_guid": "e4012b0d-25ef-2d0a-6809-b1531facc078"
      },
      "outputs": [],
      "source": [
        "embark_fare <- all_data %>%\n",
        "  filter(PassengerId != 62 & PassengerId != 830)\n",
        "\n",
        "ggplot(embark_fare, aes(x = Embarked, y = Fare, fill = factor(Pclass))) +\n",
        "  geom_boxplot() +\n",
        "  geom_hline(aes(yintercept=80),\n",
        "    colour='red', linetype='dashed', lwd=2) +\n",
        "  scale_y_continuous(labels=dollar_format()) +\n",
        "  theme_few()# %>% takes the value on the left and pass it to the right as an argument \n",
        "embark_fare <- all_data %>%\n",
        "    filter(PassengerId != 62 & PassengerId != 830)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "_cell_guid": "2feb1cf5-15c8-d886-58d2-1afd7b379860"
      },
      "outputs": [],
      "source": [
        "all_data$Embarked[c(62, 830)] <- 'C'"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "_cell_guid": "504681cf-ee86-7ed7-351a-42b387d7899a"
      },
      "outputs": [],
      "source": [
        "#Passenger 1044 has NA for fare, survived, and deck \n",
        "all_data[1044,]\n",
        "\n",
        "#1044 was in 3rd class and embarked from \"S\". \n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "_cell_guid": "4f49b57e-028a-66f2-0c98-51342d8fb0a5"
      },
      "outputs": [],
      "source": [
        "sum(is.na(all_data$Age))"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "_cell_guid": "6b5c47a6-293e-5bf8-01f7-bfcac95c9db7"
      },
      "outputs": [],
      "source": [
        "#Visualizing the variables with missing observations \n",
        "library(VIM)\n",
        "aggr_plot <- aggr(all_data, col=c('cornflower blue','red'), numbers=TRUE, sortVars=TRUE, labels=names(all_data), cex.axis=.7, gap=3, ylab=c(\"Histogram of missing data\",\"Pattern\"))"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "_cell_guid": "e4ca96a4-c810-d415-ae03-63cf9d566af8"
      },
      "outputs": [],
      "source": [
        "#Visualizing the variables with missing observations \n",
        "library(VIM)\n",
        "aggr_plot <- aggr(all_data, col=c('cornflower blue','red'), numbers=TRUE, sortVars=TRUE, labels=names(all_data), cex.axis=.7, gap=3, ylab=c(\"Histogram of missing data\",\"Pattern\"))"
      ]
    }
  ],
  "metadata": {
    "_change_revision": 0,
    "_is_fork": false,
    "kernelspec": {
      "display_name": "R",
      "language": "R",
      "name": "ir"
    },
    "language_info": {
      "codemirror_mode": "r",
      "file_extension": ".r",
      "mimetype": "text/x-r-source",
      "name": "R",
      "pygments_lexer": "r",
      "version": "3.3.2"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}