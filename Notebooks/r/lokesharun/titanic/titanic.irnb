{"cells":[{"metadata":{"_uuid":"6cb5d401a7950adf2a9e4ded829ec31aa5507a3e","_execution_state":"idle","trusted":true},"cell_type":"code","source":"#Hello to everyone, I am an Aeronautical Engineer working as Research Assistant.\n#This is my very first code in kaggle and also in my life time and i would like to thank the kagglers for your submissions.They gave me some good idea about the codings.\n\n##Loading of all Libraries##\n\nlibrary('dplyr') # Data Manipulation\nlibrary('mice') # Data Imputaion\nlibrary('ggplot2') # Data Visualization\nlibrary('ggthemes') # Data Visualization\nlibrary('Hmisc') # Exploratory Analysis\nlibrary('caret') # Classification and Regression\nlibrary('randomForest') # Classification and Regression\nlibrary('e1071') # Statistical Methods\n\n##Loading and Consolidation of Data##\n\ntrain <- read.csv('../input/train.csv', stringsAsFactors = F)\ntest  <- read.csv('../input/test.csv', stringsAsFactors = F)\n\n##Joining of Training and Testing Dataset##\n\nTitanic <- bind_rows(train, test)\n\n##Summary of Whole Titanic Dataset##\n\nsummary(Titanic)\n\n##To Understand the Structure of the Dataset##\n\nstr(Titanic) \n\n##To know the Missing Values in given Dataset##\n\ncolSums(Titanic=='')\n\n##To know the number of NA in dataset#\n\ncolSums(is.na(Titanic))\n\n##Data Visualization (start with the first variable \"Pclass\", which gives the basic understanding of this survival Analysis)##\n\nggplot(Titanic[1:891,],aes(x = Pclass,fill=factor(Survived))) +\n                        geom_bar() + ggtitle(\"Pclass versus Survival Rate\")+\n                          xlab(\"Pclass\") + ylab(\"Count\") + labs(fill = \"Survived\")\n # The Visualization Clearly explains the 1st class peoples had a better surviaval rate than other class#\n##Feature Analysis on Name##\n\nTitanic$Title <- gsub('(.*, )|(\\\\..*)', '',Titanic$Name)\n\ntable(Titanic$Title)\n\ntable(Titanic$Sex, Titanic$Title)\n\n # combine and Replace the small titles for understanding#\nTitanic$Title[Titanic$Title == 'Ms'] <- 'Miss'\nTitanic$Title[Titanic$Title == 'Lady'] <- 'Miss'\nTitanic$Title[Titanic$Title == 'Mme'] <- 'Mrs'\nTitanic$Title[Titanic$Title == 'Mlle'] <- 'Miss'\n\nrare_title <- c('Dona','the Countess','Capt', 'Col', 'Don', 'Dr', 'Major', 'Rev', 'Sir', 'Jonkheer')\n\nTitanic$Title[Titanic$Title %in% rare_title]  <- 'Officer'\n\ntable(Titanic$Sex, Titanic$Title)\n\n \nggplot(Titanic[1:891,],aes(x = Title,fill=factor(Survived))) +\n                        geom_bar() + ggtitle(\"Title Versus Survival rate\")+\n                         xlab(\"Title\") + ylab(\"Count\") + labs(fill = \"Survived\") \n # The above plot proves the female has a very good survuival rate\"\n\n##Exploratory analysis on Age##\n\nsum(is.na(Titanic$Age))\n\n # Conveting the Useful variables into factors#\n\nvariables <- c('PassengerId','Pclass','Sex','Embarked','Title')\n\nTitanic[variables] <- lapply(Titanic[variables], function(x) as.factor(x))\n\n #Imputation#\n\nmice_mod <- mice(Titanic[, !names(Titanic) %in% c('PassengerId','Name','Ticket','Cabin','Sibsp','Parch','Survived','Fare')], method='rf') \n\nmice_output <- complete(mice_mod)\n\n #Comparison of oth original and mice age data#\n\nhist(Titanic$Age, freq=F, main='Original Age ',col='darkgreen', ylim=c(0,0.05))\n\nhist(mice_output$Age, freq=F, main='MICE Output Age',col='Red', ylim=c(0,0.05))\n # the comparison of data almost same so we can use the impute the mice age into original dataset#\n\nTitanic$Age <- mice_output$Age\n\nsum(is.na(Titanic$Age))\n\nggplot(Titanic[1:891,], aes(Age, fill = factor(Survived))) + \n                          geom_histogram() + facet_grid(.~Sex) + theme_few()\n\n##Feature Analysis on Family Size using the Passenger, SibSp and Parch Data##\n\nTitanic$FamilySize <-Titanic$SibSp + Titanic$Parch + 1\n\nTitanic$FamilySized[Titanic$FamilySize == 1]   <- 'Single'\nTitanic$FamilySized[Titanic$FamilySize < 5 & Titanic$FamilySize >= 2]   <- 'Small'\nTitanic$FamilySized[Titanic$FamilySize >= 5]   <- 'Big'\n\nTitanic$FamilySized=as.factor(Titanic$FamilySized)\n\nggplot(Titanic[1:891,],aes(x = FamilySized,fill=factor(Survived))) +\n                        geom_bar() + ggtitle(\"Family Size V/S Survival Rate\") +\n                          xlab(\"FamilySize\") + ylab(\"Total Count\") + labs(fill = \"Survived\")\n # Single and Small size family has a good surviaval rate than big family#\n\n##Exploratory analysis on Embarked##\n\ntable(Titanic$Embarked)\n\nTitanic$Embarked[Titanic$Embarked ==''] = 'S'\n\ntable(Titanic$Embarked)\n \nggplot(Titanic[1:891,],aes(x = Embarked,fill=factor(Survived))) +\n                        geom_bar() + ggtitle(\"Embarked vs Survival\") +\n                          xlab(\"Embarked\") + ylab(\"Total Count\") + labs(fill = \"Survived\") \n\n##Spliting the data into a training set and a testing set##\n\nTrain <- Titanic[1:600,]\n\nTrain_1 <- Titanic[601:891,]\n #30 percent of data has been splited to cross verify the result#\n\nTest <- Titanic[892:1309,]\n\n# Set a random seed\n\nset.seed(754)\n\n## Model Building##\n\nModel <- randomForest(factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch + \n                          Embarked + Title +FamilySized,data = Train)\n\n##Get importance##\n\nimportance    <- importance(Model)\n\nvarImportance <- data.frame(Variables = row.names(importance), \n                            Importance = round(importance[ ,'MeanDecreaseGini'],2))\n\n##**Predict using the train_1 set (For Cross Verification)**##\n #prediction <- predict(Model, Train_1)#\n #solution <- data.frame(PassengerID = Train_1$PassengerId, Survived = prediction)#\n #write.csv(solution, file = 'Solution_Train_1.csv', row.names = F)#\n # The model accuracy is 82 percent#\n \n##Predict using the test set##\n\nprediction <- predict(Model, Test)\n\n##Save the solution to a dataframe##\n\nsolution <- data.frame(PassengerID = Test$PassengerId, Survived = prediction)\n\n##Write the solution to file##\n\nwrite.csv(solution, file = 'Solution_Test.csv', row.names = F)","execution_count":null,"outputs":[]}],"metadata":{"kernelspec":{"display_name":"R","language":"R","name":"ir"},"language_info":{"mimetype":"text/x-r-source","name":"R","pygments_lexer":"r","version":"3.4.2","file_extension":".r","codemirror_mode":"r"}},"nbformat":4,"nbformat_minor":1}