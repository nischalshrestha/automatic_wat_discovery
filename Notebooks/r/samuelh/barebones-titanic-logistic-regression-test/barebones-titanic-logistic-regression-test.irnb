{"cells": [{"metadata": {"_uuid": "d841c9f99b6bc1ee17c3577c25ec12a193c2426f", "_cell_guid": "807c279c-0a74-41a6-9739-a1e4e07519aa"}, "cell_type": "markdown", "source": ["Load the data"]}, {"outputs": [], "metadata": {"_uuid": "331a98970a8d913eafb3419822852cddad37e879", "_cell_guid": "f3a37d05-c870-4db2-800a-5de73d7e9de1"}, "cell_type": "code", "source": ["# This R environment comes with all of CRAN preinstalled, as well as many other helpful packages\n", "# The environment is defined by the kaggle/rstats docker image: https://github.com/kaggle/docker-rstats\n", "# For example, here's several helpful packages to load in \n", "\n", "library(ggplot2) # Data visualization\n", "library(readr) # CSV file I/O, e.g. the read_csv function\n", "\n", "# Input data files are available in the \"../input/\" directory.\n", "# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n", "\n", "system(\"ls ../input\")\n", "\n", "# Any results you write to the current directory are saved as output.\n", "\n", "library(tidyverse)\n", "library(mice)\n", "\n", "#Load data\n", "\n", "df.train = read_csv(\"../input/train.csv\")\n", "df.test = read_csv(\"../input/test.csv\")\n", "df.example = read_csv(\"../input/gender_submission.csv\")"], "execution_count": null}, {"metadata": {"_uuid": "4aa8449855ca8abb677505f44a06c242fc54307b", "_cell_guid": "c7ac48f1-64c7-4263-b45c-5233fa74593f"}, "cell_type": "markdown", "source": ["Look at the data and example submission"]}, {"outputs": [], "metadata": {"_uuid": "09695e9cc591af4145977181d8869ca018430953", "_cell_guid": "875d1f04-a33d-41c1-bab2-848283da4caa"}, "cell_type": "code", "source": ["df.train  %>%  head(100)\n", "df.train  %>%  sapply(class)\n", "summary(df.train)\n", "\n", "df.example  %>%  head(10)\n", "df.example  %>%  sapply(class)\n", "summary(df.example)"], "execution_count": null}, {"metadata": {"_uuid": "c6f94c5a4a25e231153b9037841083bb3275fd2f", "_cell_guid": "2d5bb6b0-0f10-465c-af05-c7c893c25569"}, "cell_type": "markdown", "source": ["Let's clean it up a bit"]}, {"outputs": [], "metadata": {"_uuid": "7d9766ed63c945f39d711b11e0b231ea09f04567", "scrolled": true, "_cell_guid": "c4071f83-41a8-4e3a-aa35-bda58967e1b4"}, "cell_type": "code", "source": ["df.train2 = df.train  %>% \n", "  mutate(Cabin = ifelse(Cabin == \"\", NA, Cabin)) %>% \n", "  mutate(Embarked = ifelse(Embarked == \"\", NA, Embarked)) %>%\n", "  mutate(\n", "    Pclass = factor(Pclass),\n", "    Sex = factor(Sex),\n", "    age_minor = Age < 18,\n", "    cabin_code = factor(str_extract(Cabin, \"[A-Z]+\")),\n", "    Embarked = factor(Embarked))  %>% \n", "  select(PassengerId, Survived, Pclass, Sex, age_minor, Fare, cabin_code, Embarked)\n", "\n", "df.test2 = df.test  %>% \n", "  mutate(Cabin = ifelse(Cabin == \"\", NA, Cabin)) %>% \n", "  mutate(Embarked = ifelse(Embarked == \"\", NA, Embarked)) %>%\n", "  mutate(\n", "    Pclass = factor(Pclass),\n", "    Sex = factor(Sex),\n", "    age_minor = Age < 18,\n", "    cabin_code = factor(str_extract(Cabin, \"[A-Z]+\")),\n", "    Embarked = factor(Embarked))  %>% \n", "  select(PassengerId, Pclass, Sex, age_minor, Fare, cabin_code, Embarked)\n", "\n", "#Impute missing values\n", "df.train3 = mice(df.train2)  %>% \n", "complete  %>% \n", "mutate(age_minor = as.logical(age_minor))\n", "\n", "df.test3 = mice(df.test2)  %>% \n", "complete %>% \n", "mutate(age_minor = as.logical(age_minor))\n"], "execution_count": null}, {"metadata": {"_uuid": "6ee3a832ca0d0c3937aae2443cc13bc19fa757b9", "_cell_guid": "51c779cd-41fb-440d-8dab-4d3861c689a1"}, "cell_type": "markdown", "source": ["Plot correlation"]}, {"outputs": [], "metadata": {"_uuid": "47fd4e6e29b0c2053807a0a4d3409bdac05ae896", "_cell_guid": "c263e8b9-ef88-4354-aa9f-f3f93c27bb95"}, "cell_type": "code", "source": ["panel.cor <- function(x, y, digits = 2, prefix = \"\", cex.cor, ...)\n", "{\n", "    usr <- par(\"usr\"); on.exit(par(usr))\n", "    par(usr = c(0, 1, 0, 1))\n", "    r <- abs(cor(x, y, use = \"complete.obs\"))\n", "    txt <- format(c(r, 0.123456789), digits = digits)[1]\n", "    txt <- paste0(prefix, txt)\n", "    if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)\n", "    text(0.5, 0.5, txt, cex = cex.cor * r)\n", "}\n", "\n", "df.train3  %>% select(-PassengerId)  %>% pairs(upper.panel = panel.cor)"], "execution_count": null}, {"metadata": {"_uuid": "d2ec1fa4d43752ce3882456d05c951136f595c79", "_cell_guid": "f5008e20-51b9-42ef-9752-e5a69df63dd3"}, "cell_type": "markdown", "source": ["Do Logistic regression"]}, {"outputs": [], "metadata": {"_uuid": "f72731311e58243eb665406b95ceae341af93440", "_cell_guid": "b03c4db6-164c-44ec-a2d0-53c40db6b023"}, "cell_type": "code", "source": ["model.logit = glm(\n", "    Survived ~ Pclass + Sex + age_minor + Fare + cabin_code + Embarked,\n", "    data = df.train3,\n", "    family = binomial)\n", "\n", "summary(model.logit)"], "execution_count": null}, {"metadata": {"_uuid": "d618d5ed77a3333152afb943825e3886fafbd9ec", "_cell_guid": "50a99d0e-0b8c-4a0a-9e21-e5f110ef4d38"}, "cell_type": "markdown", "source": ["Form a prediction from the logistic model"]}, {"outputs": [], "metadata": {"_uuid": "dacd09b547237e1b80df9d74a7ea3011bf167185", "_cell_guid": "b65c1889-464b-471e-a077-5b2d1c38e44e"}, "cell_type": "code", "source": ["vt.predicted <- predict.glm(object = model.logit,\n", "                            newdata = df.test3,\n", "                            type = 'response')"], "execution_count": null}, {"metadata": {"_uuid": "17684f32e505eb7fe0217a1ecb93e8d1a4e3d8b7", "_cell_guid": "5de914d0-6542-478a-9ea7-7978f7085072"}, "cell_type": "markdown", "source": ["Form the submission"]}, {"outputs": [], "metadata": {"_kg_hide-input": true, "_kg_hide-output": true, "_cell_guid": "5fab2921-2221-4eed-bf17-d7cbf28659d8", "_uuid": "8557d58062f60a09ed27933384bf8854acad6f46"}, "cell_type": "code", "source": ["df.submission = data.frame(PassengerId = as.integer(df.test3$PassengerId),\n", "                          Survived = as.numeric(vt.predicted > 0.5))\n", "\n", "df.submission\n", "\n", "write_csv(df.submission,\n", "          'logistic_reg_sub_ex.csv')"], "execution_count": null}], "metadata": {"kernelspec": {"display_name": "R", "language": "R", "name": "ir"}, "language_info": {"version": "3.4.2", "codemirror_mode": "r", "pygments_lexer": "r", "name": "R", "file_extension": ".r", "mimetype": "text/x-r-source"}}, "nbformat": 4, "nbformat_minor": 1}