{"cells": [{"source": ["# This R environment comes with all of CRAN preinstalled, as well as many other helpful packages\n", "# The environment is defined by the kaggle/rstats docker image: https://github.com/kaggle/docker-rstats\n", "# For example, here's several helpful packages to load in \n", "\n", "library(ggplot2) # Data visualization\n", "library(readr) # CSV file I/O, e.g. the read_csv function\n", "library(keras)"], "outputs": [], "metadata": {"_cell_guid": "f28a1b37-2487-4807-a016-9533f94a38c7", "_uuid": "f129e2537915a6b67c7684fbb1450c48eb514e65"}, "execution_count": null, "cell_type": "code"}, {"source": ["raw_train <- read.csv(file=\"../input/train.csv\", header=TRUE, sep=\",\", na.strings=c(\"\")) #891 reg\n", "raw_train <- raw_train[!is.na(raw_train$Age), ] # 714 reg\n", "raw_train <- raw_train[!is.na(raw_train$Embarked), ] # 712 reg"], "outputs": [], "metadata": {"_cell_guid": "f2e1b19e-8de9-4193-b76f-e51965c52c7d", "_uuid": "8d8fdd700022c8c25fd578f6949fe0b1121c82b0"}, "execution_count": null, "cell_type": "code"}, {"source": ["sapply(raw_train,function(x) sum(is.na(x)))"], "outputs": [], "metadata": {"_cell_guid": "8f489bad-0d97-4072-978f-50b67b0f28b8", "_uuid": "43f13d04e131d7fffe5c38a5f19e9b243c65f9f9"}, "execution_count": null, "cell_type": "code"}, {"source": ["# Encodes categorical variables to numeric\n", "raw_train$NumSex <- as.numeric(factor(raw_train$Sex,labels=c(1,2)))\n", "raw_train$NumEmbarked <- as.numeric(factor(raw_train$Embarked,labels=c(1,2,3)))"], "outputs": [], "metadata": {"_cell_guid": "60e02927-d778-4779-948b-15a75e90ac06", "_uuid": "94b0ddb9f23665a9fc38ad1c7e8461af214d1742"}, "execution_count": null, "cell_type": "code"}, {"source": ["train_nn <- raw_train[ , c(\"Pclass\", \"NumSex\", \"Age\", \"SibSp\", \"Parch\", \"NumEmbarked\", \"Fare\")]\n", "label_nn <- raw_train$Survived"], "outputs": [], "metadata": {"_cell_guid": "a906b1ef-7422-4161-b476-f11ab0d47a19", "_uuid": "9bd268463d1631ea410a8a27e6255241f66f1cec"}, "execution_count": null, "cell_type": "code"}, {"source": ["train_nn$Pclass <-  (train_nn$Pclass - min(train_nn$Pclass)) /\n", "                    (max(train_nn$Pclass) - min(train_nn$Pclass))\n", "train_nn$NumSex <-  (train_nn$NumSex - min(train_nn$NumSex)) /\n", "                    (max(train_nn$NumSex) - min(train_nn$NumSex))\n", "train_nn$Age <-  (train_nn$Age - min(train_nn$Age)) /\n", "                    (max(train_nn$Age) - min(train_nn$Age))\n", "train_nn$SibSp <-  (train_nn$SibSp - min(train_nn$SibSp)) /\n", "                    (max(train_nn$SibSp) - min(train_nn$SibSp))\n", "train_nn$Parch <-  (train_nn$Parch - min(train_nn$Parch)) /\n", "                    (max(train_nn$Parch) - min(train_nn$Parch))\n", "train_nn$NumEmbarked <-  (train_nn$NumEmbarked - min(train_nn$NumEmbarked)) /\n", "                    (max(train_nn$NumEmbarked) - min(train_nn$NumEmbarked))\n", "train_nn$Fare <-  (train_nn$Fare - min(train_nn$Fare)) /\n", "                    (max(train_nn$Fare) - min(train_nn$Fare))"], "outputs": [], "metadata": {"_cell_guid": "b7ffcf33-1444-4a16-9d7c-c902bfc4c49e", "_uuid": "d4de34f6b9a3ba146bbdbd443a7764f347dc1203"}, "execution_count": null, "cell_type": "code"}, {"source": ["colnames(train_nn)=NULL\n", "for (i in 1:7){train_nn[,i]=as.numeric(train_nn[,i])}\n", "train_nn=as.matrix(train_nn)\n", "label_nn=as.matrix(label_nn)"], "outputs": [], "metadata": {"_cell_guid": "993fc271-754d-4978-b54b-c916411a6709", "_uuid": "3e9812d7748f3e6c3f20756743958c5e0ec8e96e"}, "execution_count": null, "cell_type": "code"}, {"source": ["set.seed(0)\n", "model <- keras_model_sequential() \n", "\n", "model %>% \n", "  layer_dense(units = 256, activation = 'relu', input_shape = dim(train_nn)[2]) %>% \n", "  layer_dropout(rate = 0.5) %>% \n", "  layer_dense(units = 256, activation = 'relu') %>%\n", "  layer_dropout(rate = 0.5) %>%\n", "  layer_dense(units = 1, activation = 'sigmoid')\n", "\n", "model %>% compile(\n", "  loss = 'binary_crossentropy',\n", "  optimizer = optimizer_rmsprop(),\n", "  metrics = c('accuracy')\n", ")\n", "\n", "history <- model %>% fit(\n", "  train_nn,label_nn,\n", "  epochs = 70, batch_size = 128\n", ")"], "outputs": [], "metadata": {"_cell_guid": "0b29c778-5209-4e0c-a66b-271a2bd1050a", "_uuid": "0912fe60827770e8bd01d1a91952dab22ffee529"}, "execution_count": null, "cell_type": "code"}, {"source": ["plot(history)"], "outputs": [], "metadata": {"_cell_guid": "1f191153-1fdf-4dd9-b277-167179b7c9ab", "_uuid": "b2fe93114af901bc1a732c35f71fa96603fdbd76"}, "execution_count": null, "cell_type": "code"}, {"source": ["\n", "eval <- model %>% evaluate(train_nn, label_nn)\n", "eval"], "outputs": [], "metadata": {"_cell_guid": "c04fe5c2-d67d-48bb-8f20-95e4fae075fa", "_uuid": "57cd2401d5f5078e53ae6776c25edc4de7ccf56c"}, "execution_count": null, "cell_type": "code"}, {"source": ["raw_test <- read.csv(file=\"../input/test.csv\", header=TRUE, sep=\",\", na.strings=c(\"\"))"], "outputs": [], "metadata": {"_cell_guid": "c1829642-b7b3-447d-aaea-fdadde493be3", "_uuid": "5f81e7b45964c7ff2f607e54e6d3220ad4af8c2e"}, "execution_count": null, "cell_type": "code"}, {"source": ["sapply(raw_test,function(x) sum(is.na(x)))"], "outputs": [], "metadata": {"_cell_guid": "6d3c65ca-2af9-4510-a7d0-894dce724b69", "_uuid": "e8af8057b57a3a524ef89b04626f3e59bd39db23"}, "execution_count": null, "cell_type": "code"}, {"source": ["raw_test$Age[is.na(raw_test$Age)] <- mean(raw_test$Age,na.rm=T)\n", "raw_test$Fare[is.na(raw_test$Fare)] <- mean(raw_test$Fare,na.rm=T)"], "outputs": [], "metadata": {"_cell_guid": "85464ccf-e105-431f-be17-5d4e3dcc3f21", "_uuid": "893c16c0a795b1239851a340054751414837050c"}, "execution_count": null, "cell_type": "code"}, {"source": ["raw_test$NumSex <- as.numeric(factor(raw_test$Sex,labels=c(1,2)))\n", "raw_test$NumEmbarked <- as.numeric(factor(raw_test$Embarked,labels=c(1,2,3)))\n", "test_nn <- raw_test[ , c(\"Pclass\", \"NumSex\", \"Age\", \"SibSp\", \"Parch\", \"NumEmbarked\", \"Fare\")]\n", "test_nn$Pclass <-  (test_nn$Pclass - min(test_nn$Pclass)) /\n", "                    (max(test_nn$Pclass) - min(test_nn$Pclass))\n", "test_nn$NumSex <-  (test_nn$NumSex - min(test_nn$NumSex)) /\n", "                    (max(test_nn$NumSex) - min(test_nn$NumSex))\n", "test_nn$Age <-  (test_nn$Age - min(test_nn$Age)) /\n", "                    (max(test_nn$Age) - min(test_nn$Age))\n", "test_nn$SibSp <-  (test_nn$SibSp - min(test_nn$SibSp)) /\n", "                    (max(test_nn$SibSp) - min(test_nn$SibSp))\n", "test_nn$Parch <-  (test_nn$Parch - min(test_nn$Parch)) /\n", "                    (max(test_nn$Parch) - min(test_nn$Parch))\n", "test_nn$NumEmbarked <-  (test_nn$NumEmbarked - min(test_nn$NumEmbarked)) /\n", "                    (max(test_nn$NumEmbarked) - min(test_nn$NumEmbarked))\n", "test_nn$Fare <-  (test_nn$Fare - min(test_nn$Fare)) /\n", "                    (max(test_nn$Fare) - min(test_nn$Fare))\n", "colnames(test_nn)=NULL\n", "for (i in 1:7){test_nn[,i]=as.numeric(test_nn[,i])}\n", "test_nn=as.matrix(test_nn)"], "outputs": [], "metadata": {"_cell_guid": "284c1ff2-d029-4a47-ab7d-9e2a6acde047", "_uuid": "0d5340f26da986fdd28ee3f88b14edf8489b7a32"}, "execution_count": null, "cell_type": "code"}, {"source": ["result <- model %>% predict(test_nn)"], "outputs": [], "metadata": {"_cell_guid": "8191d758-c947-4081-a4f1-5bfd0ca63d1a", "_uuid": "b0017bf476de7ecd6a80f95c4f910d82d59ac8de"}, "execution_count": null, "cell_type": "code"}, {"source": ["result_bin <- ifelse(result < 0.5, 0, 1)"], "outputs": [], "metadata": {"_cell_guid": "f09288dc-a195-424c-bd9d-60cb1cce7aee", "_uuid": "c7c8f0450c6a6b885209d91d585d7d3e001c0e9b"}, "execution_count": null, "cell_type": "code"}, {"source": ["out=cbind(raw_test$PassengerId,result_bin)\n", "colnames(out)=c(\"PassengerId\", \"Survived\")"], "outputs": [], "metadata": {"_cell_guid": "c1109b32-6b4d-43c7-843b-80791cd3c0b9", "_uuid": "7a9a55d65ee3e43ca2f1bfcb5944bb4f9f92d049"}, "execution_count": null, "cell_type": "code"}, {"source": ["write.table(out, file = \"Resultado_Titanic_NN_20180104.csv\", row.names=FALSE, sep=\",\")"], "outputs": [], "metadata": {"_cell_guid": "b9a3fe00-ebe3-4df1-9a70-681f3e7d6aca", "_uuid": "47114a363df470d126353d1a04314aec852a5db1"}, "execution_count": null, "cell_type": "code"}, {"source": [], "outputs": [], "metadata": {"_cell_guid": "b7e82e4a-d7a2-4f8a-8133-214665feaf43", "_uuid": "5f6e69fde29616b2da2f65c1b0a4bf187785d78a"}, "execution_count": null, "cell_type": "code"}], "nbformat_minor": 1, "nbformat": 4, "metadata": {"language_info": {"mimetype": "text/x-r-source", "pygments_lexer": "r", "name": "R", "version": "3.4.2", "file_extension": ".r", "codemirror_mode": "r"}, "kernelspec": {"display_name": "R", "language": "R", "name": "ir"}}}