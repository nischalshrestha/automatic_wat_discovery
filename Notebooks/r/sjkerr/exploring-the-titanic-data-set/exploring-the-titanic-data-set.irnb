{"cells":[{"metadata":{"_uuid":"d99987c961095526992672a61e660e01e9f4a97f","_cell_guid":"4e85675d-4a43-4a68-b421-83970f4397f0"},"cell_type":"markdown","source":"---\n**Exploring the Titanic Data Set**  \nSara J Kerr  \nFebruary 2018\n\n--- \n\n**Introduction**  \n\nThis notebook explores the Kaggle Titanic competition dataset. The purpose of the competition is to create a model can predict survival based on other data about a passenger. The competition provides two datasets: a train.csv which includes survival data, and a test.csv which does not.\n\nThe notebook covers the following phases:\n1.  Understanding the data\n2. Preparing the data\n3. Modelling\n4. Evaluating the models\n","outputs":[],"execution_count":null},{"metadata":{"trusted":true,"_uuid":"7a9f7bad19f4d09e29a02ffe9c7529282342a0d3"},"cell_type":"code","source":"# Load the packages\n\nlibrary(tidyverse)\nlibrary(caret)\nlibrary(class)\nlibrary(naivebayes)\nlibrary(pROC)\nlibrary(randomForest)\nlibrary(rpart)\nlibrary(rpart.plot)\nlibrary(broom)\nlibrary(mgcv)\nlibrary(ranger)\nlibrary(vtreat)\nlibrary(xgboost)\nlibrary(class)\nlibrary(WVPlots)\nlibrary(magrittr)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"0f1abc7f255049b2b512b1b8ee5df97e672da009","trusted":true,"_cell_guid":"b3026e99-72d0-4474-bbfd-5c1dee9d86da"},"cell_type":"code","source":"# Read in the data\ntitanic <- read.csv('../input/train.csv', stringsAsFactors = F)\n\n# Turn data into a tbl\ntitanic <- as_tibble(titanic)\n\nglimpse(titanic)\n","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"e4675ffba647f97a285d9a8371979d4a2e42cdae","_cell_guid":"29bf092b-cbfc-4a03-8db1-3af9dfdca48e"},"cell_type":"markdown","source":"**Understanding the Data**  \n\nUsing `glimpse` reveals the number of observations in the train set (891) and the variables (12). From this initial view, the variables are a mixture of character, integer and double types, and the Age variable has at least one `NA`.  The first thing to check is how many `NA` values there are and in which variables.","outputs":[],"execution_count":null},{"metadata":{"_uuid":"fe9aed977273fa8b12a5a769e977ad1df338d63f","trusted":true,"_cell_guid":"c413d26a-fcba-498c-a9be-46e044b7d9fe"},"cell_type":"code","source":"na_cols <- sapply(titanic, is.na) \ncolSums(na_cols)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"679f4ff9a40b7236df2f8052e6ab6bf742527c74","_cell_guid":"6c5445e4-481e-42fb-8dd5-828aa3496fdc"},"cell_type":"markdown","source":"This reveals that there is only one variable containing `NA`, however there are 177 accounting for almost 20% of the Age data. \n\nVisualisations are used to gain an overview of the data, starting with the combination of Sex and Pclass.\n","outputs":[],"execution_count":null},{"metadata":{"_uuid":"d5697b9fe1fdec46f2e6225452a182f4c5d59afc","trusted":true,"_cell_guid":"2549760f-7876-4867-a5c9-5cc1c68abec5"},"cell_type":"code","source":"ggplot(titanic, aes(x = Pclass, y = Sex, color = Survived)) +\n        geom_jitter() +\n        geom_point(alpha = 0.4) +\n        ggtitle(\"Passengers by Class and Sex\")","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"a7d7e6afea614d7783dbcc796be7acde0da55a7f","_cell_guid":"e67b67b8-5b8b-4e47-a566-7a92838923ab"},"cell_type":"markdown","source":"This clearly shows that both Sex:male and Pclass:3 have a considerable impact on the survival rate. We can explore these details further by looking at the percentage of travellers who died by Sex and Pclass.","outputs":[],"execution_count":null},{"metadata":{"_uuid":"063d5110bfc0559c3edfdb4596015b6ac1682a2d","trusted":true,"_cell_guid":"43c750f7-1290-4822-bca3-12ceab8eee20"},"cell_type":"code","source":"titanic %>%\n        group_by(Pclass, Sex, Survived) %>%\n        summarise(n = n()) %>%\n        group_by(Pclass, Sex) %>%\n        summarise(Total = sum(n),\n                  Died_percent =  round(sum(n[Survived == 0]) / Total * 100 ),\n                  Died_Percent_PTotal = round(sum(n[Survived == 0]) / 891 * 100))","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"89e33e83695b2a3e06c7f997784fc2f9b74bad37","_cell_guid":"f8db8e1e-7a33-411e-b79c-764918a1eaef"},"cell_type":"markdown","source":"This reveals that the women and children first policy worked well if you were travelling in First or Second class, but the odds were far worse if you were in Third, the percentage of Third class women who died is not far from the percentage of First class men.  \n\nWe can also look at the totals by Sex regardless of class:","outputs":[],"execution_count":null},{"metadata":{"_uuid":"2f59705ff9bbf5e8545e861eda9e7b4e6ef72722","trusted":true,"_cell_guid":"4ed67a79-84ac-43c7-8551-6b06ed41ed02"},"cell_type":"code","source":"titanic %>%\n        group_by(Pclass, Sex, Survived) %>%\n        summarise(n = n()) %>%\n        group_by(Sex) %>%\n        summarise(Total = sum(n),\n                  Died = round(sum(n[Survived == 0]) / Total * 100),\n                  Died_Percent_PTotal = round(sum(n[Survived == 0]) / 891 * 100))","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"9761d038a944595c8f5d4c21c20da3dfe0b26451","_cell_guid":"63f41cb5-e767-4255-8e13-c0ceeda03661"},"cell_type":"markdown","source":"These totals reveal that there was a much larger number of male passengers and that over 80% died. So we can determine that:  \n* Males are more likely to die\n* Third class females have a 50:50 chance of dying\n\nThe next areas to examine are the SibSp and Parch variables which indicate the numbers of siblings and spouses, and parents and children.","outputs":[],"execution_count":null},{"metadata":{"_uuid":"0dff9bba3194e0c7fb0ac7e7e50f800d869b8bbd","trusted":true,"_cell_guid":"209aa6c0-a7dd-4781-80e1-f0852882a17b"},"cell_type":"code","source":"ggplot(titanic, aes(x = SibSp, y = Parch, color = as.factor(Survived))) +\n        geom_jitter() +\n        geom_point(alpha = 0.4) +\n        ggtitle(\"Passengers Siblings, Parents, Children\")","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"14c7ba835fe056c9bdbb199718218470c7021286","_cell_guid":"0dde9cc5-73c7-4c34-88a5-54d0dfc84c01"},"cell_type":"markdown","source":"This plot makes it very clear that 0 for both SibSp and Parch indicates a greater chance of a negative outcome, as does Parch of 1 or 2 combined with SibSp of 3 or more. SibSp of 0 or 1 combined with Parch of 4 or more also indicates negative outcomes. To look at this in greater detail we will look at the percentages for those with SibSp greater than 2. Third class passengers falling into this category only had a 1 in 10 chance of survival. Those who died made up 4% of the passenger total.","outputs":[],"execution_count":null},{"metadata":{"_uuid":"ec721e2787493ca78d110f07cec55052a813d88c","trusted":true,"_cell_guid":"c89c9f60-461e-4901-ab4e-b4067625af54"},"cell_type":"code","source":"titanic %>%\n        filter(SibSp > 2) %>%\n        group_by(Pclass, Survived) %>%\n        summarise(n = n()) %>%\n        summarise(Total = sum(n),\n                  Died_Percent = round(sum(n[Survived == 0]) / Total * 100),\n                  Died_Percent_PTotal = round(sum(n[Survived == 0]) / 891 * 100))\n\ntitanic %>%\n        group_by(SibSp, Parch, Survived) %>%\n        summarise(n = n()) %>%\n        summarise(Total = sum(n),\n                  Died_Percent = round(sum(n[Survived == 0]) / Total * 100),\n                  Died_Percent_PTotal = round(sum(n[Survived == 0]) / 891 * 100))","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"a4d3649302ca491fcbb3fdb7835621ac3f614d24","trusted":true,"_cell_guid":"31bc60bc-3479-488f-8a06-1018925fff39"},"cell_type":"code","source":"titanic %>%\n        filter(Parch > 0, SibSp > 2) %>%\n        group_by(Pclass, Survived) %>%\n        summarise(n = n()) %>%\n        summarise(Total = sum(n),\n                  Died_Percent = round(sum(n[Survived == 0]) / Total * 100),\n                  Died_Percent_PTotal = round(sum(n[Survived == 0]) / 891 * 100))","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"3e9b3611143469dcc5c458e559a06d58bfc5d502","_cell_guid":"4455e2c1-f1eb-41e2-b9eb-dc40ecc420ec"},"cell_type":"markdown","source":"Finally the impact of Age is considered, while keeping in mind the high number of `NA`. To do this an additional variable AgeGroup was created. ","outputs":[],"execution_count":null},{"metadata":{"_uuid":"f472e3e08189085d8ec0f9fea0a5cbf2205af376","trusted":true,"_cell_guid":"b240f162-f7bd-44b6-84af-765a6ee89100"},"cell_type":"code","source":"# I'm sure there is an easier way of doing this!\ntitanic$Age_Group <- ifelse(is.na(titanic$Age),0, titanic$Age)\ntitanic$Age_Group <- ifelse(titanic$Age_Group > 0 & titanic$Age_Group < 16,\n                            1, titanic$Age_Group)\ntitanic$Age_Group <- ifelse(titanic$Age_Group >= 16 & titanic$Age_Group < 30, \n                            21, titanic$Age_Group)\ntitanic$Age_Group <- ifelse(titanic$Age_Group >= 30 & titanic$Age_Group < 45, \n                            22, titanic$Age_Group)\ntitanic$Age_Group <- ifelse(titanic$Age_Group >= 45 & titanic$Age_Group < 60, \n                            23, titanic$Age_Group)\ntitanic$Age_Group <- ifelse(titanic$Age_Group >= 60, 3, titanic$Age_Group)\n\n# Factorise groupings\n\ntitanic$Age_Group <- factor(titanic$Age_Group, levels = c(0, 1, 21, 22, 23, 3), \n                            labels = c(\"Unknown\", \"Child\", \"Adult1\", \"Adult2\",\n                                       \"Adult3\", \"Senior\"))\n\nggplot(titanic, aes(Age_Group, fill = as.factor(Survived))) +\n        geom_bar(position = position_dodge()) +\n        ggtitle(\"Age Group\")","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"b3c06f9b6de5a2bebc695f1bcb70654f889e2c72","trusted":true,"_cell_guid":"4e172314-af4a-4f24-ba62-43901b5666e2"},"cell_type":"code","source":"titanic %>%\n        group_by(Age_Group, Survived) %>%\n        summarise(n = n()) %>%\n        summarise(Total = sum(n),\n                  Died_Percent = round(sum(n[Survived == 0]) / Total * 100),\n                  Died_Percent_PTotal = round(sum(n[Survived == 0]) / 891 * 100))\n\ntitanic %>%\n        group_by(Age_Group, Pclass, Survived) %>%\n        summarise(n = n()) %>%\n        summarise(Total = sum(n),\n                  Died_Percent = round(sum(n[Survived == 0]) / Total * 100),\n                  Died_Percent_PTotal = round(sum(n[Survived == 0]) / 891 * 100))\n\n","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"fd012da17dea7fcf98d5d1b65618ab6d83129e4d","_cell_guid":"1bc7676a-6672-4c5b-a80d-b0bbb71c5c36"},"cell_type":"markdown","source":"These inital analyses suggest that Sex and Pclass are the main indicators for survival, followed by those whose Age_Group falls in Adult1, Adult2 and Unknown, finally SibSp and Parch provide additional indicators.\n\n**Preparing the Data ** \n\nAlthough the data is split into train and test, the test data does not have the Survived variable. In order to test any model created the train data was split into a train and a test set based on a 60:40 split. The train data was read back in.","outputs":[],"execution_count":null},{"metadata":{"_uuid":"fd40357bf201260674fa9f247849e369fdb16413","trusted":true,"_cell_guid":"6c7ca200-aa18-46f8-990e-34706f4ec188"},"cell_type":"code","source":"titanic <- read.csv('../input/train.csv', stringsAsFactors = F)\n\n# Set seed\nset.seed(42)\n\n# Shuffle row indices: rows\nrows <- sample(nrow(titanic))\n\n# Randomly order data\ntitanic <- titanic[rows, ]\n\n# Determine row to split on: split 60:40\nsplit <- round(nrow(titanic) * .60)\n\n# Create train\ntitanic_train <- titanic[1:split, ]\n\n# Create test\ntitanic_test <- titanic[(split + 1): nrow(titanic), ]\n\nstr(titanic_train)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"5797ce74176d5e8487c3da81a2b364dcc924e0f3"},"cell_type":"markdown","source":"As two of the variables are non-numeric, and one of them includes `NA` values the data needs to be cleaned for use with some modelling packages. This has been done using the `vtreat` package.","outputs":[],"execution_count":null},{"metadata":{"trusted":true,"_uuid":"2afe61bdb0723cbece54007f98128422891e7d1f"},"cell_type":"code","source":"outcome <- titanic_train$Survived\nvars <- c(\"Pclass\", \"Sex\", \"Age\", \"SibSp\", \"Parch\")\n\n# Create the treatment plan\ntreatplan <- designTreatmentsZ(titanic_train, vars)\n\nscoreFrame <- treatplan %>%\n                use_series(scoreFrame) %>%\n                select(varName, origName, code)\n\n# Select the rows with codes \"clean\" or \"lev\"\nnewvars <- scoreFrame %>%\n                filter(code %in% c(\"clean\", \"lev\")) %>%\n                use_series(varName)\n\n# Create the treated training data\ntitanic_train.treat <- prepare(treatplan, titanic_train, varRestriction = newvars)\n\nnewvars","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"565413c6eafe7c432c40f71e1525b3d538c46ff1"},"cell_type":"markdown","source":"**Modelling**  \n\nNow the data has been prepared there are two versions of the training data set `titanic_train` which can be used with most packages and `titanic_train.treat` which can be used with `xgboost`.\n\n","outputs":[],"execution_count":null},{"metadata":{"trusted":true,"_uuid":"dd7a7d909ff6be96bf91c3347066cafa901c5338"},"cell_type":"code","source":"\n# Create formula\nfmla.1 <- Survived ~ Pclass + Sex + SibSp + Parch\nfmla.2 <- Survived ~ Pclass:Sex + SibSp + Parch\n\n# Fit the logistic regression model\nt_model.1 <- glm(fmla.1, data = titanic_train, family = binomial)\n\n# Call summary\nsummary(t_model.1)\n\n# Call glance\nperf.1 <- glance(t_model.1)\n\n# Calculate pseudo-R-squared\npseudoR2.1 <- 1 - perf$deviance / perf$null.deviance\n\n# Fit the logistic regression model\nt_model.2 <- glm(fmla.2, data = titanic_train, family = binomial)\n\n# Call summary\nsummary(t_model.2)\n\n# Call glance\nperf.2 <- glance(t_model.2)\n\n# Calculate pseudo-R-squared\npseudoR2.2 <- 1 - perf$deviance / perf$null.deviance","execution_count":null,"outputs":[]}],"metadata":{"kernelspec":{"display_name":"R","language":"R","name":"ir"},"language_info":{"mimetype":"text/x-r-source","name":"R","pygments_lexer":"r","version":"3.4.2","file_extension":".r","codemirror_mode":"r"}},"nbformat":4,"nbformat_minor":1}