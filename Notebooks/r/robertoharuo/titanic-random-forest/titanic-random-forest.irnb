{"nbformat": 4, "cells": [{"cell_type": "markdown", "source": ["# Autor: Roberto Haruo Lopes Fuzimoto\n", "# Projeto: Neste desafio, pedimos que voc\u00ea complete a an\u00e1lise de que tipos de pessoas provavelmente sobrevivem. Em particular, pedimos que voc\u00ea aplique as ferramentas de aprendizado de m\u00e1quina para prever quais passageiros sobreviveram \u00e0 trag\u00e9dia.\n"], "metadata": {"_cell_guid": "ff8a35c6-084a-48f5-ab22-af49ea881add", "_uuid": "5335685e150ff12a19357ae6dd3bce4163739657"}}, {"cell_type": "code", "source": ["# This R enviro ere's several helpful packages to load in \n", "\n", "library(ggplot2) # Gr\u00e1ficos\n", "library(dplyr) # data manipulation\n", "library(randomForest)\n", "library(ggthemes)\n", "# Any results you write to the current directory are saved as output."], "outputs": [], "metadata": {"_cell_guid": "1d4b37ce-057d-4017-b775-8bbec8285459", "_uuid": "cdf8deee4a86444ed9d6c0c9d8d05052290c598a", "_kg_hide-input": true}, "execution_count": null}, {"cell_type": "code", "source": ["# Carregando os arquivos de Treino e Teste.\n", "data_train <- read.csv(\"../input/train.csv\")\n", "data_test<- read.csv(\"../input/train.csv\")\n", "\n"], "outputs": [], "metadata": {"_cell_guid": "d0f685f1-a8a1-4504-9e05-87614e7c2337", "_uuid": "b4fac4643280fb97504181d23e589cbbd4312fb7", "_kg_hide-output": true, "_kg_hide-input": false}, "execution_count": null}, {"cell_type": "code", "source": ["head(data_train)\n", "colnames(data_train)"], "outputs": [], "metadata": {"_cell_guid": "fcf0681a-87a0-4144-a422-f8e916494fa9", "_uuid": "656e2ec7de87f40ef9f45043c0d33c47063355bb"}, "execution_count": null}, {"cell_type": "code", "source": ["# Removendo colunas.\n", "data_train$PassengerId <- NULL\n", "data_train$SibSp <- NULL\n", "data_train$Parch <- NULL\n", "data_train$Ticket <- NULL\n", "data_train$Cabin <- NULL\n", "data_train$Name <- NULL"], "outputs": [], "metadata": {"_cell_guid": "5c3506aa-0c80-4b8c-8d80-02ad4df0238d", "_uuid": "e6eaf423929dfa2753502b0c5ed3bdcbbe41439b"}, "execution_count": null}, {"cell_type": "code", "source": ["# Ordenando as colunas\n", "data_train <- data_train %>%\n", "select(Pclass, Age, Sex, Fare, Embarked, Survived)"], "outputs": [], "metadata": {"_cell_guid": "3da693d8-1f3e-438f-abb6-fe747198b339", "_uuid": "1b86b1879d06716e813813a4c8181421d8f2d0d8"}, "execution_count": null}, {"cell_type": "code", "source": ["head(data_train)"], "outputs": [], "metadata": {"_cell_guid": "727b6c33-a490-4d36-b9a2-ec5466ba5d47", "_uuid": "cc3fdf03eb2aa02c7fd21f2ac1cee58a6999b88d"}, "execution_count": null}, {"cell_type": "code", "source": ["# Transformando as vari\u00e1veis em facto.\n", "data_train$Survived <- as.factor(data_train$Survived)\n", "levels(data_train$Survived) <- c(\"N\u00e3o\", \"Sim\")\n", "\n", "data_train$Sex <- as.factor(data_train$Sex)\n", "levels(data_train$Sex) <- c(\"Feminino\", \"Masculino\")\n", "\n", "data_train$Pclass <- as.factor(data_train$Pclass)\n", "levels(data_train$Pclass) <- c(\"Alta\", \"M\u00e9dia\", \"Baixa\")\n", "\n", "data_train$Age <- as.numeric(data_train$Age)\n", "data_train$Age <- cut(data_train$Age, c(0, 30, 50, 100), labels = c(\"Jovem\", \"adulto\", \"Idoso\"))\n", "\n", "data_train$Embarked <- as.factor(data_train$Embarked)\n", "levels(data_train$Embarked) <- c(0,\"Cherbourg\",\"Southampton\", \"Queenstown\")"], "outputs": [], "metadata": {"_cell_guid": "d17eda76-f2dc-4990-a28a-56fdebc86e51", "_uuid": "f652ef357cb3b4207509ab022a1ad86868913623"}, "execution_count": null}, {"cell_type": "code", "source": ["head(data_train)"], "outputs": [], "metadata": {"_cell_guid": "3b6896d6-098f-474d-8368-1b9cd5e30403", "_uuid": "36683718311aa9b16694be9553c4260e7c1e2dfd"}, "execution_count": null}, {"cell_type": "code", "source": ["#########################################################################\n", "#Eclat Algotitmo utilizado para encontrar padr\u00f5es nos data sets #########\n", "#########################################################################\n", "library(arules)\n", "library(arulesViz)\n", "\n", "data_train$Fare <- as.factor(data_train$Fare)\n", "regras <- eclat(data_train, parameter = list(supp = 0.1, maxlen = 5))\n", "inspect(regras)\n", "#install.packages(\"aruleViz\")\n", "plot(regras, method=\"graph\", control=list(type=\"items\"))\n"], "outputs": [], "metadata": {"_cell_guid": "7f61e2fb-e639-4f69-9437-bb36f6d29a02", "_uuid": "d47cc1313fad2cfe0d743b802e6aee64fdc43db1"}, "execution_count": null}, {"cell_type": "code", "source": ["# Verificando se a valores missing\n", "sapply(data_train, function(x) sum(is.na(x)))\n", "#missmap(data_train, main = \"Valores Missing Observados\")\n", "data_train <- na.omit(data_train)\n", "head(data_train)"], "outputs": [], "metadata": {"_cell_guid": "43995f37-6956-4b2d-b145-326d80600f86", "_uuid": "d324d68e7d9cb5f3facf19c3218dc14984de881a"}, "execution_count": null}, {"cell_type": "code", "source": ["# Esses 3 gr\u00e1ficos nos mostram que pessoas mais velhas, de classe social alta e do sexo \n", "# feminino pagarama mais caro nas cabines do navio.\n", "\n", "data_train$Fare <- as.numeric(data_train$Fare)\n", "# Gr\u00e1fico m\u00e9dia de pre\u00e7o da passagem por Idade\n", "ggplot(data_train) + stat_summary(aes(x = data_train$Age, y = data_train$Fare),\n", "                               fun.y = mean, geom = \"bar\",\n", "                               fill = \"lightgreen\", col = \"grey50\")\n", "#Gr\u00e1fico m\u00e9dia de pre\u00e7o da passagem por CLasse Social\n", "ggplot(data_train) + stat_summary(aes(x = data_train$Pclass, y = data_train$Fare),\n", "                               fun.y = mean, geom = \"bar\",\n", "                               fill = \"lightblue\", col = \"grey50\")\n", "\n", "#Gr\u00e1fico m\u00e9dia de pre\u00e7o da passagem por Sexo\n", "ggplot(data_train) + stat_summary(aes(x = data_train$Sex, y = data_train$Fare),\n", "                               fun.y = mean, geom = \"bar\",\n", "                               fill = \"lightblue\", col = \"grey50\")"], "outputs": [], "metadata": {"_cell_guid": "78b33952-ca8f-4ffe-8ee7-5250a3261856", "_uuid": "ed5a88134d411912eac498f728bede63fc2e640d"}, "execution_count": null}, {"cell_type": "code", "source": ["# Age vs Survived\n", "ggplot(data_train[1:714,],aes(Age, fill = (Survived))) + \n", "  geom_bar(stat = \"count\") + \n", "  theme_few() +\n", "  xlab(\"Age\") +\n", "  facet_grid(.~Sex)+\n", "  ylab(\"count\") +\n", "  scale_fill_discrete(name = \"Survived\") + \n", "  ggtitle(\"Age vs Survived\")\n", "\n", "# Pclass vc Survived\n", "ggplot(data_train[1:714,], aes(Pclass, fill = (Survived))) +\n", "  geom_bar(stat = \"count\") +\n", "  theme_few() +\n", "  xlab(\"Pclass\") +\n", "  facet_grid(.~Sex) +\n", "  ylab(\"count\") +\n", "  scale_fill_discrete(name = \"Survided\") +\n", "  ggtitle(\"Pclass vs Survived\")\n", "\n", "# Embarked vs Survived\n", "ggplot(data_train[1:714,], aes(Embarked, fill = (Survived))) +\n", "  geom_bar(stat = \"count\") +\n", "  xlab(\"Embarked\") +\n", "  facet_grid(.~Sex) +\n", "  ylab(\"count\") +\n", "  scale_fill_discrete(name = \"Survived\") +\n", "  ggtitle(\"Embarked vs Survived\")"], "outputs": [], "metadata": {"_cell_guid": "ad4c261d-ff5c-4404-8ef6-b4ea982c14c5", "_uuid": "0d165643ab3380f7b59dad82f9cf8502063ed709"}, "execution_count": null}, {"cell_type": "code", "source": ["#########################################################################\n", "################## Random Forest Classification Model ###################\n", "#########################################################################\n", "\n", "# Set the seed\n", "set.seed(12345)\n", "\n", "# Contruindo o modelo Random Forest\n", "rf_model <- randomForest(Survived ~ ., data = data_train)\n", "print(\"Modelo contruido\")\n", "rf_model"], "outputs": [], "metadata": {"_cell_guid": "07e6415f-1367-4ffe-890d-2003dc16c07d", "_uuid": "9e73d6db9fec4f4d103507a1092fe79dd5c4a70b"}, "execution_count": null}, {"cell_type": "code", "source": ["varImpPlot(rf_model)"], "outputs": [], "metadata": {"_cell_guid": "896e80fc-9fe5-4b81-b1af-68c89a1d1334", "_uuid": "ba073e6aad3ad10b1b0b7635590a222b95fe6ba5"}, "execution_count": null}, {"cell_type": "code", "source": ["########################################################################\n", "############## Carregando dataset de Teste #############################\n", "########################################################################\n", "\n", "head(data_test)"], "outputs": [], "metadata": {"_cell_guid": "07ea9bf6-9013-4e56-a7bc-caec2d95558e", "_uuid": "5799d8cc7d949a7dbaca0674fefbb8d3cd669942"}, "execution_count": null}, {"cell_type": "code", "source": ["data_test$PassengerId <- NULL\n", "data_test$Name <- NULL\n", "data_test$SibSp <- NULL\n", "data_test$Parch <- NULL\n", "data_test$Parch <- NULL\n", "data_test$Ticket <- NULL\n", "data_test$Cabin <- NULL"], "outputs": [], "metadata": {"_cell_guid": "51646794-4931-43b8-90a3-a05e45c24fbb", "_uuid": "8bbdfd7dd1aa35df5f12dd9f98ba0146399dad18"}, "execution_count": null}, {"cell_type": "code", "source": ["# Ordenando as colunas\n", "data_test <- data_test %>%\n", "  select(Pclass, Age, Sex, Fare, Embarked)"], "outputs": [], "metadata": {"_cell_guid": "a793f145-477c-4670-b038-e5c5252a38ab", "_uuid": "59a7ffced3455bf97e3da1d2827fd0b5f36fa417"}, "execution_count": null}, {"cell_type": "code", "source": ["head(data_test)"], "outputs": [], "metadata": {"_cell_guid": "f54ca617-437d-4ff5-b366-a899100902bd", "_uuid": "35c9e05e9aeed96d51cc6b2e7e18fb3d5c7936c9"}, "execution_count": null}, {"cell_type": "code", "source": ["# Transoformando as Vari\u00e1veis em fator, numerico e character\n", "data_test$Pclass <- as.factor(data_test$Pclass)\n", "levels(data_test$Pclass) <- c(\"Alta\", \"M\u00e9dia\", \"Baixa\")\n", "\n", "data_test$Sex <- as.factor(data_test$Sex)\n", "levels(data_test$Sex) <- c(\"Feminino\", \"Masculino\")\n", "\n", "data_test$Age <- as.numeric(data_test$Age)\n", "data_test$Age <- cut(data_test$Age, c(0, 30, 50, 100), labels = c(\"Jovem\", \"adulto\", \"Idoso\"))\n", "\n", "data_test$Embarked <- as.factor(data_test$Embarked)\n", "levels(data_test$Embarked) <- c(0, \"Cherbourg\", \"Queenstown\", \"Southampton\")"], "outputs": [], "metadata": {"_cell_guid": "40fd9648-6ee4-45bc-a8ea-b7a04327f013", "_uuid": "593274e8759bce48aa2ca325b6af2f2c6c23b6e1"}, "execution_count": null}, {"cell_type": "code", "source": ["head(data_test)"], "outputs": [], "metadata": {"_cell_guid": "6196ef82-c2a6-4d21-90e0-e99d3b285145", "_uuid": "474c7069e8f36b65b1ac6f23a9448372ab339b4f"}, "execution_count": null}, {"cell_type": "code", "source": ["# Verificando se a valores missing\n", "sapply(data_test, function(x) sum(is.na(x)))\n", "data_test <- na.omit(data_test)\n", "head(data_test)"], "outputs": [], "metadata": {"_cell_guid": "779091be-6ade-4bf1-a902-b701d501299a", "_uuid": "6dc3ae926629e48a5e18b09990eefe6d26d6faa5"}, "execution_count": null}, {"cell_type": "code", "source": ["####################### Previs\u00e3o Randon Forest #####################################\n", "####################################################################################\n", "predictionrf <- predict(rf_model, data_test)\n", "predictionrf <- data.frame(predictionrf)\n", "predictionrf"], "outputs": [], "metadata": {"_cell_guid": "e10ea00e-a62f-4632-be33-c6979602cdf3", "_uuid": "cfe110f3011901969e18bf7572cab27ed8fd7d77", "_kg_hide-output": true, "_kg_hide-input": true}, "execution_count": null}, {"cell_type": "code", "source": ["data_test['Previs\u00e3o'] <- c(predictionrf)\n", "data_test\n", "table(predictionrf)"], "outputs": [], "metadata": {"_cell_guid": "de1510c5-ff7d-4cca-81df-b070d3ff9760", "_uuid": "adde9dd46955d08f7d0809dfaf18a29c7d7986ce"}, "execution_count": null}, {"cell_type": "code", "source": ["# Conferindo o erro do modelo \n", "plot(rf_model, ylim = c(0,0.36))\n", "legend('topright', colnames(rf_model$err.rate), col = 1:3, fill = 1:3)\n", "\n", "varImpPlot(rf_model)"], "outputs": [], "metadata": {"_cell_guid": "18bb9985-445f-47c9-8807-00b9e3ab9daa", "_uuid": "05e25632b2a432ae6f4786a26e1095f5369341cd"}, "execution_count": null}, {"cell_type": "code", "source": ["# Obtendo as variaveis mais importantes\n", "importance <- importance(rf_model)\n", "varimportance <- data.frame(Variables = row.names(importance), importance = round(importance[,'MeanDecreaseGini'],2))\n", "\n", "# Criando o rank de variaveis baseado na import\u00e2ncia\n", "rankImportance <- varimportance %>%\n", "  mutate(Rank = paste0('#', dense_rank(desc(importance))))\n", "\n", "# Usando o ggplot2 para visualizar a import\u00e2ncia relativa das variaveis\n", "ggplot(rankImportance, aes(x = reorder(Variables, importance), y = importance, fill = importance))+\n", "  geom_bar(stat = 'identity')+\n", "  geom_text(aes(x = Variables, y = 0.5, label = Rank), hjust = 0, vjust=0.55, size = 4, colour = 'red')+\n", "  labs(x = 'Variables')+\n", "  coord_flip()\n"], "outputs": [], "metadata": {"_cell_guid": "61bf4a10-d363-47b5-b2e1-93eb8e2574ae", "_uuid": "880a2d140d09b4eed23ec6d33d6a8e90df138295"}, "execution_count": null}], "nbformat_minor": 1, "metadata": {"kernelspec": {"name": "ir", "language": "R", "display_name": "R"}, "language_info": {"file_extension": ".r", "mimetype": "text/x-r-source", "name": "R", "codemirror_mode": "r", "pygments_lexer": "r", "version": "3.4.1"}}}