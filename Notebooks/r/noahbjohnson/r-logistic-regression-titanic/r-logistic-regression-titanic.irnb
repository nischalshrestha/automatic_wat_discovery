{"cells":[{"metadata":{"_cell_guid":"e53cd6d2-6b35-4127-a6cd-0013153206a7","_execution_state":"idle","_uuid":"d0d3a0794fe6b34153e825a63b5d77bcd4d74b04","scrolled":true,"trusted":false},"cell_type":"code","source":"library(readr)\nlibrary(arm)\nlibrary(pROC)","execution_count":249,"outputs":[]},{"metadata":{"_uuid":"b4cee79c8cb182c2642cc1b653554a889d396be6","trusted":false},"cell_type":"code","source":"data <- read_csv(file = \"../train.csv\") # Import training file with default settings\n#training <- read_csv(file = \"../input/train.csv\") # Import training file (kaggle directory)\ndata <- data.frame(data)","execution_count":250,"outputs":[]},{"metadata":{"trusted":false,"_uuid":"5d1184b1f3b8fd824825a325f222205a8df67b50"},"cell_type":"code","source":"# clean variables for machine readability\nsummary(data) # print summaries to decide what to do\n\n# factoring\ndata$Sex <- factor(data$Sex) # Factor Sex as (male/female)\ndata$Embarked <- factor(data$Embarked) # Factor Embarked as (C/Q/S) C = Cherbourg, Q = Queenstown, S = Southampton\ndata$Pclass <- factor(data$Pclass) # Factor Pclass as (1/2/3) for passenger's cabin class\ndata$Survived <- factor(data$Survived) # Factor Survived as (1/0) 1 = TRUE","execution_count":251,"outputs":[]},{"metadata":{"trusted":false,"_uuid":"a93f0daa6dab597cceb31ff8ef7b05f55a03b5a6"},"cell_type":"code","source":"# remove useless variables\ndata$PassengerId <- NULL # same as key\ndata$Name <- NULL # they didn't load the lifeboats in alphabetic order\ndata$Cabin <- NULL # deciphering this gibberish is beyond the scope of this project\ndata$Ticket <- NULL","execution_count":252,"outputs":[]},{"metadata":{"trusted":false,"_uuid":"1ff9bd01b4049d109668b15dbc209aa92d822d4c"},"cell_type":"code","source":"# Imputing missing values\n\nnafrequency <- is.na(data) # check the frequency of missing values\nsummary(nafrequency) # print summaries to decide what to do\n\n# impute missing Ages with regression\n#agemodel <- lm(Age ~ (Pclass + Sex + SibSp + Parch + Fare + Embarked)^2,data=data)\n\n#data$Age[is.na(data$Age)] <- agemodel$fitted.values\n\n#median worked better\ndata$Age[is.na(data$Age)] <- median(na.omit(data$Age))\ndata$Embarked[is.na(data$Embarked)] <- 'S'","execution_count":253,"outputs":[]},{"metadata":{"trusted":false,"_uuid":"24d2a34338a9419bba52db048efd98f45745aa94"},"cell_type":"code","source":"# Split off test set\n## 75% of the sample size\nsmp_size <- floor(0.8 * nrow(data))\n\n## set the seed to make your partition reproductible\nset.seed(123)\ntrain_ind <- sample(seq_len(nrow(data)), size = smp_size)\n\ntraining <- data[train_ind, ]\ntest <- data[-train_ind, ]","execution_count":254,"outputs":[]},{"metadata":{"trusted":false,"_uuid":"4f88d0cfcc4a52b5bbe3a7d777f77cf737cbbbfa"},"cell_type":"code","source":"fit1 <- bayesglm(Survived ~ .^2,family='binomial',data=training,)","execution_count":255,"outputs":[]},{"metadata":{"trusted":false,"_uuid":"cb4c42bcf431e9850ad4a9b527f8b94a0fb6b5fd"},"cell_type":"code","source":"fitted.results <- predict(fit1,newdata=training)\nrocmodel <- roc(training$Survived,fitted.results)\npROC::plot.roc(rocmodel,print.thres = TRUE,print.auc = TRUE,main = \"ROC Curve\")","execution_count":256,"outputs":[]},{"metadata":{"trusted":false,"_uuid":"446afdd9a2680b083431b3299885970aeb00670f"},"cell_type":"code","source":"test.results <- predict(fit1,newdata=test)\nfitted.results.binary <- ifelse(test.results > -.5,1,0)\nmisClasificError <- mean(fitted.results.binary != test$Survived)\nprint(paste('Accuracy',1-misClasificError))","execution_count":264,"outputs":[]},{"metadata":{"trusted":false,"_uuid":"8994eec6cbfc5d48da6810e3cf3f54228fd01ad9"},"cell_type":"code","source":"","execution_count":null,"outputs":[]},{"metadata":{"trusted":false,"_uuid":"364c8872de7b85c1b336fc7e715ca0c2d9d86261"},"cell_type":"code","source":"","execution_count":null,"outputs":[]},{"metadata":{"trusted":false,"_uuid":"69f9f7c3a16bf5d64caa33213049a20016b2f1d2"},"cell_type":"code","source":"","execution_count":null,"outputs":[]}],"metadata":{"kernelspec":{"display_name":"R","language":"R","name":"ir"},"language_info":{"codemirror_mode":"r","file_extension":".r","mimetype":"text/x-r-source","name":"R","pygments_lexer":"r","version":"3.4.2"}},"nbformat":4,"nbformat_minor":1}