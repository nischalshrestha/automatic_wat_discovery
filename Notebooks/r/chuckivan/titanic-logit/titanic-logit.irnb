{"cells":[{"metadata":{"_uuid":"da6921fd956bc0dd19e7cd82d60116d47de5e8dc"},"cell_type":"markdown","source":"Imports and setup"},{"metadata":{"_uuid":"8160c4cedf32cc57279dcd47d53065731e24608f","_execution_state":"idle","trusted":true,"scrolled":true},"cell_type":"code","source":"# Files located in ../input \nlibrary(tidyverse)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"377b29726c5c612d9db896c1208ef200fcddc1fa"},"cell_type":"markdown","source":"Reading and cleaning"},{"metadata":{"trusted":true,"_uuid":"3b743d4b46d5429e3bbda5eebcd4e7bd1326313d"},"cell_type":"code","source":"# Train and test data are read in, and combined for easier cleaning\ntrain = read.csv(\"../input/train.csv\", stringsAsFactors=FALSE, header = TRUE)\ntest = read.csv(\"../input/test.csv\", stringsAsFactors=FALSE, header = TRUE)\ntrain$IsTrain = TRUE\ntest$IsTrain = FALSE\ntest$Survived = NA\nfull = rbind(train, test)\n# Full columns with NA entries: Age (263/1309), Fare (1/1309), Embarked (2/1309)\n# The 2 missing Embarked rows (from train) are omitted outright. The 1 missing Fare row from test is made the median\nfull = full[!(full$Embarked == ''),]\nfare_mean = summary(full$Fare)[4]\nfull[is.na(full$Fare),]$Fare = fare_mean\n# The many missing Age rows are predicted\n# TODO: Find significance of training data before creating models\nage_outlier_filter  = full$Age <  boxplot.stats(full$Age)$stats[5]\nage_model = lm(Age ~ Pclass + Sex + SibSp + Parch + Fare + Embarked, data = full[age_outlier_filter,])\nage_missing = full[is.na(full$Age), c(\"Pclass\", \"Sex\", \"SibSp\", \"Parch\", \"Fare\", \"Embarked\")]\nage_pred = predict(age_model, newdata = age_missing)\nfull[is.na(full$Age), \"Age\"] = age_pred\n\n# Categorical casting for appropritate predictors\nfull$Pclass = as.factor(full$Pclass)\nfull$Sex = as.factor(full$Sex)\n#full$SibSp = as.factor(full$SibSp)\n#full$Parch = as.factor(full$Parch)\nfull$Embarked = as.factor(full$Embarked)\n\n# Split back into cleaned train and test data\ntrain = full[full$IsTrain == TRUE,]\ntest = full[full$IsTrain == FALSE,]\n# The binary classification training response\n# train$Survived = as.factor(train$Survived)\n\n\n","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"scrolled":false,"_uuid":"78f31165e321a76467996a67a38179aff92a0d80"},"cell_type":"markdown","source":"Binary classifcation prediction"},{"metadata":{"trusted":true,"_uuid":"4c64ac3c09f9ee20156e9311bf6826807a396e57"},"cell_type":"code","source":"# Null model\nlogit_model_null = glm(Survived ~ 1, data=train, family = binomial)\nsummary(logit_model_null)","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"64dbbb67962ce179180b0b409df7cd86ff085939"},"cell_type":"code","source":"logit_model_prime = glm(Survived ~ . -(Name + Ticket + Cabin), data = train, family = binomial)\nsummary(logit_model_prime)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"dd74535129e8b5d1d70043d8d91c819648ef9fe6"},"cell_type":"markdown","source":"Taken as a whole (based on p-value);\nPclass, Sex, Age and SibSp look significant.\nParch, Fare and Embarked look insignificant."},{"metadata":{"trusted":true,"_uuid":"e89110aafe0c45e71c99fa72c79ac3471b9a5479"},"cell_type":"code","source":"logit_model = glm(Survived ~ Pclass + Sex + Age + SibSp, data = train, family = binomial)\nsummary(logit_model)","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"5166cf21c7709df7b88b782f21f55bda1cf7109c"},"cell_type":"code","source":"# Anova table\nanova(logit_model_null, logit_model_prime, logit_model, test=\"Chisq\")","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"6dc1adf6997aaf91bc2a5a32cff7ef318b8f0cb1"},"cell_type":"code","source":"logit_prob = predict(logit_model, test, type = \"response\")\nlogit_pred = rep(0, dim(test)[1])\nplot(logit_prob)\nlogit_pred[logit_prob > 0.5] = 1","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"ea18b371d539f238641cede6071b5fb80eaa4ff8"},"cell_type":"markdown","source":"Output"},{"metadata":{"trusted":true,"_uuid":"0d9a25fb3c4cddb5ca68869273331dc942633c6d"},"cell_type":"code","source":"PassengerId = test$PassengerId\noutput_df = as.data.frame(PassengerId)\noutput_df$Survived = logit_pred\nwrite.csv(output_df, file = \"titanic_logit_submission.csv\", row.names = FALSE)","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"e9216f067779f35729feb30638ca582fe2e2d393"},"cell_type":"code","source":"","execution_count":null,"outputs":[]}],"metadata":{"kernelspec":{"display_name":"R","language":"R","name":"ir"},"language_info":{"mimetype":"text/x-r-source","name":"R","pygments_lexer":"r","version":"3.4.2","file_extension":".r","codemirror_mode":"r"}},"nbformat":4,"nbformat_minor":1}