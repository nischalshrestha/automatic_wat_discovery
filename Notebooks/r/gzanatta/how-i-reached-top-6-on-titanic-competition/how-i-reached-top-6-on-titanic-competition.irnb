{"cells":[{"metadata":{"_uuid":"ffe75929ed6d1ade293ad6e454b9a3373c496b99","_execution_state":"idle","trusted":false},"cell_type":"markdown","source":"**My first Competition**\n\nI'm a post-degree statistics student and this is my first competition on Kaggle.\n\nI'm going to share here how did I do to reach a 0.80382 score on Titanic: Machine Learning from Disaster competition.\nOnce I'm a begginner in data science, I really appreciate if you can tell me whether the analysis is pursuing for a correct logical, the topics I can improve or what else I could do using this dataset.\n\n"},{"metadata":{"_uuid":"deb5078d875e32cd1417bc9727a100c4528ce3e8"},"cell_type":"markdown","source":"**Loading packages and dataset**\n\nHere I'm going bind the datasets and create the variable Survived on the test dataset."},{"metadata":{"trusted":true,"_uuid":"c32c8b8620228926969db21681d2767b4ee0bff8"},"cell_type":"code","source":"library(readr)\nlibrary(randomForest)\nlibrary(caret)\n\ntitanic_train <- read.csv(\"../input/train.csv\", header = TRUE, dec = '.', sep = ',')\ntitanic_test <- read.csv(\"../input/test.csv\", header = TRUE, dec = '.', sep = ',')\n\ntitanic_test$Survived <- NA\n\ntitanic_total <- rbind(titanic_train, titanic_test)\n\nstr(titanic_total)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"16d201d09a4e6dfaa0d7b4888add1635392ed9b1"},"cell_type":"markdown","source":"**Filling missing values **\n\nFirst of all, I'm going to remove the variables I won't use in this model, which is PassengerId, Ticket and Cabin.\n\nThen I'm going to used caret's function 'preProcess' to predict any missing values in the data frame.\n\nMost of the missing values are in the Age variable, and I'll turn the values that correspond to the test data into NA again.\n\nSince the variable Embarked is a factor and it has only 2 missing values I'll fill it with the most common category.\n\n\n"},{"metadata":{"trusted":true,"_uuid":"89acc2626e7cbae6a8fdf2c6a93645f862767162"},"cell_type":"code","source":"titanic_total <- titanic_total[,-c(1,9,11)]\n\nimpute <- preProcess(titanic_total, method = \"bagImpute\")\ntitanic_total <- predict(impute, titanic_total)\ntitanic_total$Survived[892:1309] <- NA\n\ntable(titanic_total$Embarked)\ntitanic_total$Embarked<- as.character(titanic_total$Embarked)\ntitanic_total$Embarked[titanic_total$Embarked == \"\"] <- \"S\"\ntable(titanic_total$Embarked)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"0bae754b859c23b62c788760c25478025676cefe"},"cell_type":"markdown","source":"**Feature Engineering**\n\nFor the feature engineering I'm going to add new variables such as Family, which is the number of siblings / spouses aboard plus  the number of parents / children aboard plus the passenger itself.\nAlso add a new variable separating the children and adults aboard.\nAnd finally a new variable for the title. There are many titles so we're going to reduce it to little groups."},{"metadata":{"trusted":true,"_uuid":"6fb7a207b823641cac05ed4ec9e2be8afb4f633a"},"cell_type":"code","source":"# Adding Family variable\ntitanic_total$Family <- 1 + titanic_total$SibSp + titanic_total$Parch\n\n# Adding Stage variable\ntitanic_total$Stage[titanic_total$Age < 18] <- \"Child\"\ntitanic_total$Stage[titanic_total$Age >= 18] <- \"Adult\"\n\n# Adding Title variable\n# But first we have to transform the Name into character, and separe it. And then, remove the variable Name.\n\ntitanic_total$Name <- as.character(titanic_total$Name)\n\ntitanic_total$Title <- sapply(titanic_total$Name, FUN=function(x) {strsplit(x, split='[,.]')[[1]][2]})\ntitanic_total$Title <- sub(' ', '', titanic_total$Title)\n\ntitanic_total$Title[titanic_total$Title %in% c('Mme', 'Mlle')] <- 'Mlle'\ntitanic_total$Title[titanic_total$Title %in% c('Capt', 'Don', 'Major', 'Sir')] <- 'Sir'\ntitanic_total$Title[titanic_total$Title %in% c('Dona', 'Lady', 'the Countess', 'Jonkheer')] <- 'Lady'\n\ntitanic_total <- titanic_total[,-3]","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"b3d0e5142f86ee521fc88cbb9313d011d1b29406"},"cell_type":"markdown","source":"**Standardizing the variables**\n\nHere I'm going to standardize the variables. \nCreate dummy variables for the factors and put quantitative values into a [0,1] range."},{"metadata":{"trusted":true,"_uuid":"60bfe783d57bfce7e8de6a04027eb39b6c7c5557"},"cell_type":"code","source":"titanic_total$Survived <- as.factor(titanic_total$Survived)\ntitanic_total$Pclass <- factor(titanic_total$Pclass, ordered = TRUE, levels = c('1','2','3'))\ntitanic_total$Embarked <- as.factor(titanic_total$Embarked)\ntitanic_total$Stage <- as.factor(titanic_total$Stage)\ntitanic_total$Title <- as.factor(titanic_total$Title)\n\n# Standardizing quantitative Variables in a  [0,1] range\nstandard <- function(x)(x-min(x))/(max(x)-min(x))\n\ntitanic_total$Age <- standard(titanic_total$Age)\ntitanic_total$SibSp <- standard(titanic_total$SibSp)\ntitanic_total$Parch <- standard(titanic_total$Parch)\ntitanic_total$Family <- standard(titanic_total$Family)\ntitanic_total$Fare <- standard(titanic_total$Fare)\n\n# Now creating the dummy variables for the factors\ndummy.vars <- dummyVars(~., data = titanic_total[,-1])\ndummy_titanic <- predict(dummy.vars, titanic_total[,-1])\ntitanic_total <- data.frame(titanic_total[,1], dummy_titanic)\ncolnames(titanic_total)[1] <- \"Survived\"\n\n\n# The data frame will look like this\nstr(titanic_total)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"fbba0add5f0c320e662c0d35c796644cae71b773"},"cell_type":"markdown","source":"**Model and Prediction**\n\nOnce I did the feature feature engineering with all data, I'm going to split it again in train and test.\nAnd use Random Forest to build the model."},{"metadata":{"trusted":true,"_uuid":"b06301ea179854c1e902dc834f44802165ad0b9c"},"cell_type":"code","source":"titanic_train <- titanic_total[1:891,]\ntitanic_test <- titanic_total[892:1309,]\n\n# Creating the model\nset.seed(415)\nfit_rf <- randomForest(Survived ~., data = titanic_train, importance = TRUE, ntree=2000)\n\n#Fitting it to test\ntitanic_pred <- predict(fit_rf, newdata = titanic_test)\n\nsummary(titanic_pred)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"15e42190df1066ca4b6bb035e592077a237b1e72"},"cell_type":"markdown","source":"**Applying into submission file**"},{"metadata":{"trusted":true,"_uuid":"b1c5fc1a4941c5dea7afa039621cae81d061c3e4"},"cell_type":"code","source":"submit <- data.frame(PassengerId=892:1309,Survived=0)\n\nsubmit$Survived <- titanic_pred\n\nwrite.csv(submit, 'gender_submission.csv', row.names = FALSE)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"766749a656608c9cfcdca6e6d5386848a9a5ed2a"},"cell_type":"markdown","source":"**Conclusion**\n\nI got a 0,80 score with this model. Of course there is more room for feature engineering and it's possible to use other algorithms."}],"metadata":{"kernelspec":{"display_name":"R","language":"R","name":"ir"},"language_info":{"mimetype":"text/x-r-source","name":"R","pygments_lexer":"r","version":"3.4.2","file_extension":".r","codemirror_mode":"r"}},"nbformat":4,"nbformat_minor":1}