{"cells":[{"metadata":{"collapsed":true,"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19"},"cell_type":"markdown","source":"# TITANIC: Would you have survived?\n\nAuthor: Kevin Okiah\n\n> Novice Kaggler. 4/21/18\n\n> My first attempt at Exploratory data analysis of Kaggle dataset. This notebook is geared towards preprocessing, data cleaning, handling missing data, feature engineering in R.\n\n> Predictive Models will be built on a follow-up notebook.\n\n>Feedback is welcomed.\n"},{"metadata":{"_uuid":"d629ff2d2480ee46fbb7e2d37f6b5fab8052498a","trusted":true,"_cell_guid":"79c7e3d0-c299-4dcb-8224-4455121ee9b0"},"cell_type":"code","source":"#Import  packages\npacman::p_load(pacman, ggplot2, dplyr,stringr,gridExtra,knitr,tidyverse,reshape2, readr, plyr)\ndetach(\"package:plyr\")","execution_count":1,"outputs":[]},{"metadata":{"_uuid":"d832cecbb74db261acf924664ae2c9ea9c6a22c7","trusted":true,"_cell_guid":"5d708862-adb7-4eef-b795-2574aad33948"},"cell_type":"code","source":"#import dataset \ntrain <- read.csv('../input/train.csv', stringsAsFactors = F)\ntest  <- read.csv('../input/test.csv', stringsAsFactors = F)\n\nFull <- bind_rows(train, test) # Merged test and training sets for preprocessing","execution_count":2,"outputs":[]},{"metadata":{"_uuid":"3688f5b7fe9e944bfc442ae81b687ba23028c32e","trusted":true,"_cell_guid":"b20dd4c4-83f0-4369-85f4-0f3e114f1586"},"cell_type":"code","source":"head(Full, 2)\nstr(Full)","execution_count":3,"outputs":[]},{"metadata":{"_uuid":"650fb614bbf2a6a066ba1a225a97a7d5223599ff","_cell_guid":"4578fc67-f9cb-42d4-b731-5c4addb529a7"},"cell_type":"markdown","source":" **DATA CLEANING AND FEATURE ENGINEERING**"},{"metadata":{"_uuid":"518339139989851808e6df6497ba2f4c397206a7","_cell_guid":"e62bd934-f2dc-4185-a451-7e9ef6f0eb19"},"cell_type":"markdown","source":"\n\nBefore we dig into this data, lets first understand what each feature in the dataset represent.\n\n|Variables\t|Descriptions|\n|---|---|\n|PassengerId\t|Unique ID assigned to each passenger|\n|Survived\t|Binary variable. 1 = Survived, 0 = Did not survive.|\n|Pclass\t|Passenger’s Traveling class Number.|\n|Name\t|Passenger’s first name, last name, and title|\n|Sex\t|Passenger’s gender|\n|Age\t|Passenger’s age (in years)|\n|SibSp\t|The number of siblings/spouses aboard the ship with the passenger|\n|Parch\t|The number of parents/children aboard the ship with the passenger|\n|Ticket\t|The passenger’s ticket number|\n|Fare\t|How much the passenger paid to board the ship|\n|Cabin\t|Passenger’s cabin number|\n|Embarked\t|Where the passenger embarked from.|"},{"metadata":{"_uuid":"d4e8d7cec9bdd49cb9fe3edb3f85587293ff563a","_cell_guid":"38e7157a-0522-4bf6-a225-10e222c77281"},"cell_type":"markdown","source":"Our dataset has 12 features and 1309 observations. Let’s update some features their appropriate  data types based on their description."},{"metadata":{"_uuid":"ea57a79c4cd6d4714e4124ba3d362bd3fea89428","trusted":true,"_cell_guid":"3770d316-2241-460c-b096-5aa5969386d8"},"cell_type":"code","source":"Full$Name<-as.character(Full$Name)\nFull$Survived<-as.factor(Full$Survived)\nFull$Pclass<-as.factor(Full$Pclass)\nFull$Sex<-as.factor(Full$Sex)\nFull$Embarked<-as.factor(Full$Embarked)\nstr(Full)","execution_count":4,"outputs":[]},{"metadata":{"_uuid":"50d1f8f8a3d25e8e7cc491f3a1abb715be7f3ec8","trusted":true,"_cell_guid":"83d4cf29-f66c-4f0a-8688-0da41d86fe2b"},"cell_type":"code","source":"head(Full, 2)","execution_count":5,"outputs":[]},{"metadata":{"_uuid":"030ad114ace1814d4e037faec0d7b2c3965cfa63","_cell_guid":"90d866e9-51f8-4dbb-b192-778e18aba85f"},"cell_type":"markdown","source":"### FEATURE ENGINEERING:  Exploring possible new features:\nFrom the table above there are potentially valuable new features listed below that can create from the data. Let's explore them one by one.\n*  Title from Name\n*  Cabin (A, B, C) \n*  Age Group binning from Age. \n*  Family Size\n*  Father and Mother?\n\n"},{"metadata":{"_uuid":"96747afdbc42662bca9badd50c96ff7e718af32a","_cell_guid":"6344add0-7b16-44a5-a2db-3da2a1b98cca"},"cell_type":"markdown","source":"**1.  Title**"},{"metadata":{"_uuid":"59471830e3636e41431aa45208a3ef73d3e2d29d","trusted":true,"_cell_guid":"d1f862f3-fd8d-443e-a627-9267e11c3f76"},"cell_type":"code","source":"Full$Title <- as.factor(gsub(\"(^.*,)|(\\\\..*)\", \"\", Full$Name)) #use gsub to grab title from the \nsummary(Full$Title)","execution_count":6,"outputs":[]},{"metadata":{"_uuid":"ab4fe2148fa591a7e5dae3faa21b7bf38985e57e","_cell_guid":"6052a2e7-ee38-48bd-afb1-a6d45ca1f901"},"cell_type":"markdown","source":">The most common Titles are Mr, Mrs, Master and Miss. Let's explore how to incorporate the other titles into these 4."},{"metadata":{"_uuid":"abe9fe58a0c3852995d885171c22aaad9b3c2c10","_cell_guid":"118a5349-6c27-48e2-a7b6-b50420e7c71b"},"cell_type":"markdown","source":"> **  Males Titles**\n\n>' Major',' Capt', ' Rev', ' Col', ' Sir', ' Don', ' Dr',  and ' Jonkheer'  seems to all apply to Male age > 25 years. We will replace them with the title `Mr`. This is  a blind replacement based solely on age. There is One female with the title Dr who we reassign  the title Mrs.  "},{"metadata":{"_uuid":"b536d5b1db7160ea20e5a34b37793e24459db0ca","trusted":true,"_cell_guid":"38900d9c-148a-46ef-b53e-52c1dff38b97"},"cell_type":"code","source":"temp<-Full[which(as.character(Full$Title) %in% c(' Major',' Capt', ' Rev', ' Col', ' Sir', ' Don', ' Dr', ' Jonkheer')),] \ntemp","execution_count":7,"outputs":[]},{"metadata":{"_uuid":"0f15350d0ee6e266cfc0fba3fbbc9440cf26ccb5","trusted":true,"_cell_guid":"a31c0436-8598-4ddf-97d6-c75489a520da"},"cell_type":"code","source":"for(i in 1:nrow(temp)){\n    Full<-Full%>%\n     mutate(Title=replace(Title, Title==temp$Title[i], ' Mr')) %>%\n     as.data.frame()\n    }\n# rerun factor level to delete empy factors levels\nFull$Title<-factor(Full$Title)\nsummary(Full$Title)\n\n# reassigning passanger 797 title to Miss\nFull[which((Full$Title ==' Mr') & (Full$Sex=='female')),]$Title<-' Mrs'","execution_count":8,"outputs":[]},{"metadata":{"_uuid":"dc42c34d155ca19ebc427d7d9f2f50b2d713ccc3","_cell_guid":"cf9c647e-c083-48f6-bf0b-b62bf4e74f36"},"cell_type":"markdown","source":"> **Female Titles**\n\n> Replace all ' Lady', ' Mlle', ' Ms' with Miss and  'Mme', ' the Countess' with Mrs"},{"metadata":{"_uuid":"0838ca30ca75670543117237f58632b7a6b5bca0","trusted":true,"_cell_guid":"87cefcd1-3675-4812-bd83-17dfbcee3227"},"cell_type":"code","source":"# Replace all ' Lady', ' Mlle', ' Ms' with Miss and  'Mme', ' the Countess' with Mrs\ntemp<-Full[which(as.character(Full$Title) %in% c(' Lady', ' Mlle', ' Ms', ' Dona')),] \ntemp\n\nfor(i in 1:nrow(temp)){\n    Full<-Full%>%\n     mutate(Title=replace(Title, Title==temp$Title[i], ' Miss')) %>%\n     as.data.frame()\n    }\n\n\ntemp<-Full[which(as.character(Full$Title) %in% c(' Mme', ' the Countess')),] \ntemp\nfor(i in 1:nrow(temp)){\n    Full<-Full%>%\n     mutate(Title=replace(Title, Title==temp$Title[i], ' Mrs')) %>%\n     as.data.frame()\n    }\n# rerun factor level to delete empy factors levels\nFull$Title<-factor(Full$Title)\nsummary(Full$Title)\n","execution_count":9,"outputs":[]},{"metadata":{"_uuid":"84b27006f7d57aac10c4ad312b7846a5ff478a93","_cell_guid":"34afa777-e55b-4f33-a057-bf575cfcf66f"},"cell_type":"markdown","source":"All the titles have been reassigned to 4 majority catagories"},{"metadata":{"_uuid":"cd7e5d3e558d94e4e8fa75a2963d9ee446b9d835","trusted":true,"_cell_guid":"882c5af0-9c4f-4885-bf07-ee00869cd951"},"cell_type":"code","source":"#Facet Age Histogram by title\nfacet =ggplot(Full, aes(x=Age, color=Title)) +\n  geom_histogram(alpha=0.5, position=\"identity\")\n\nfacet + facet_grid(. ~ Title)","execution_count":10,"outputs":[]},{"metadata":{"_uuid":"e00410b509f5da0ae0255e9b6c0640693493a843","_cell_guid":"e02c3b5e-d643-4f60-9d3c-368361bc5a1c"},"cell_type":"markdown","source":"** 2. Family Size**\n\nWe can impute family size by summing SibSp `The number of siblings/spouses aboard the ship with the passenger` , Parch `The number of parents/children aboard the ship with the passenger` and 1 for the actual passenger\n\n"},{"metadata":{"_uuid":"5877431db23e4f468eab5ac298316a39447b085a","trusted":true,"_cell_guid":"60c5755e-4bde-4b96-9f9a-919b757bded2"},"cell_type":"code","source":"Full$Family_Size <- Full$SibSp + Full$Parch + 1\nhead(Full, 3)\n# Family Size Histogram\nfacet= ggplot(Full, aes(x=Family_Size)) +\n  geom_histogram(alpha=0.5, position=\"identity\")\nfacet + ggtitle('Family Size')","execution_count":11,"outputs":[]},{"metadata":{"_uuid":"ec27c853eb452cca47ac211fa2d2fd2ba26df7b7","_cell_guid":"14efe173-a217-4dd2-8956-c8753f763171"},"cell_type":"markdown","source":">From above, it can be noted most passengers are travelling solo. The largest family has 11 passengers. It will be interesting to see if families swim or sink together. We will explore this in the visualization section"},{"metadata":{"_uuid":"8a17a58c92932bca7c8568eece0db4e304bd871f","_cell_guid":"d2d8f230-326d-412c-ba96-99fa61fddeeb"},"cell_type":"markdown","source":"#### **3. Cabin Class**\nLets take a closer look at the cabin Feature"},{"metadata":{"_uuid":"35e72edb42388a0376836852c8a9eefa029465b0","trusted":true,"_cell_guid":"bc389d11-6873-4e77-9f8f-4b14578199fd"},"cell_type":"code","source":"unique(Full$Cabin)","execution_count":12,"outputs":[]},{"metadata":{"_uuid":"c8a89f52629ec3227e342ef08d1df5ff8b93e6a8","_cell_guid":"cee987bc-debd-4f7f-9bd7-38a02ff9109f"},"cell_type":"markdown","source":"Below we create a new feature Cabin_Class as the first Character from the Cabin feature. Passangers with missing cabins are assigned to cabin Z"},{"metadata":{"_uuid":"83cf5b97afca297d9d8b856495ce06258c4d062c","trusted":true,"_cell_guid":"b8a38738-b399-4f80-b780-2440d32e456c"},"cell_type":"code","source":"Full$Cabin_Class <- as.character(substr(Full$Cabin, 1, 1))\n#Full[which((is.na(Full$Cabin_Class))),]$Cabin_Class<-'X'# Missing Cabin \n#Full$Cabin_Class <-Full$Cabin_Class)\nFull[which(Full$Cabin_Class==''),]$Cabin_Class<-'Z'\nFull$Cabin_Class <-as.factor(Full$Cabin_Class)\nsummary(Full$Cabin_Class)\n\nprint(paste0('There are Cabins ', length(summary(Full$Cabin_Class)), ' in the Titanic. Does your survival depend on which cabin you are in? Keep reading to find out'))","execution_count":13,"outputs":[]},{"metadata":{"_uuid":"ced876081e33e84272b5b9f1ef932e755962777c"},"cell_type":"markdown","source":"**4. Age Brackets**"},{"metadata":{"_uuid":"a99dc6fc5b268223fa4e6443dc8d5e031c9397b4","_cell_guid":"e525f8fe-95df-485f-a568-b90ba2ba07fc"},"cell_type":"markdown","source":"Some basic statistics on Age.\n"},{"metadata":{"_uuid":"fbfb5d51d13b30984993f6a8f51b6792f04f0c11","trusted":true,"_cell_guid":"343fa7c9-d493-44e3-9849-7431473908c4"},"cell_type":"code","source":"Age_Temp<-Full%>%\nselect(Title,Sex, Age)%>%\ngroup_by(Title,Sex)%>%\nsummarize(Youngest = min(Age, na.rm=TRUE),\n          Avg.Age = mean(Age, na.rm=TRUE),\n          Median.Age = median(Age, na.rm=TRUE),\n          Oldest = max(Age, na.rm=TRUE)\n         \n         \n         )\nAge_Temp","execution_count":15,"outputs":[]},{"metadata":{"_uuid":"7cd1f226471f18128b15a2d945e0551086ef431c","_cell_guid":"6c8fe357-cec9-4f42-8859-30ee1ee5ac5c"},"cell_type":"markdown","source":"**Replacing missing Age values**"},{"metadata":{"_uuid":"383715cbfea161c03c35615f5711e4de80dbcf63","_cell_guid":"88defdfc-4a32-4b05-852c-f6e4d6720a7c"},"cell_type":"markdown","source":"To keep it simple, I choose to impute the missing age with a random number between Average Age and Median Age. Let’s use a seed for repeatability. Depending on how well our models perform , we could consider imputing this missing age data algorithmically later."},{"metadata":{"_uuid":"2b1e963f142af06c30c9663fc1c6704c14187d12","trusted":true,"_cell_guid":"e3ae7b3c-d7b6-48ed-baed-d8eaaebc1e58"},"cell_type":"code","source":"set.seed(10000)\nX1 = round(runif(1, Age_Temp[which((Age_Temp$Title ==' Mr')),]$Median.Age, Age_Temp[which((Age_Temp$Title ==' Mr')),]$Avg.Age), 2)\nprint(paste0(\"Mr: \", X1))\nX2 = round(runif(1, Age_Temp[which((Age_Temp$Title ==' Mrs')),]$Median.Age, Age_Temp[which((Age_Temp$Title ==' Mrs')),]$Avg.Age), 2)\nprint(paste0(\"Mrs: \", X2))\nX3 = round(runif(1, Age_Temp[which((Age_Temp$Title ==' Miss')),]$Median.Age, Age_Temp[which((Age_Temp$Title ==' Miss')),]$Avg.Age), 2)\nprint(paste0(\"Miss: \", X3))\nX4 = round(runif(1, Age_Temp[which((Age_Temp$Title ==' Master')),]$Median.Age, Age_Temp[which((Age_Temp$Title ==' Master')),]$Avg.Age), 2)\nprint(paste0(\"Master: \", X4))","execution_count":16,"outputs":[]},{"metadata":{"_uuid":"e851396c635f0c53cc498e910b3b1ca7b66fda26","trusted":true,"_cell_guid":"1a3991f8-f7f9-4f8c-b5a3-e7818228ce52"},"cell_type":"code","source":"Full[which((Full$Title ==' Mr') & (is.na(Full$Age))),]$Age<-X1#Mr\nFull[which((Full$Title ==' Mrs') & (is.na(Full$Age))),]$Age<-X2 #Mrs\nFull[which((Full$Title ==' Miss') & (is.na(Full$Age))),]$Age<-X3 #Miss\nFull[which((Full$Title ==' Master') & (is.na(Full$Age))),]$Age<-X4 #Master","execution_count":17,"outputs":[]},{"metadata":{"_uuid":"8afdd21328fde81ce88a23b7c3ac67e781a2afbd","trusted":true,"_cell_guid":"f72ba81f-b2ab-47ee-8a88-e728e036c985"},"cell_type":"code","source":"#Facet Age Histogram by title\nfacet =ggplot(Full, aes(x=Age, color=Title)) +\n  geom_histogram(alpha=0.5, position=\"identity\")\n\nfacet + facet_grid(. ~ Title)","execution_count":18,"outputs":[]},{"metadata":{"_uuid":"dfa0060629373b7a924f8122aab207e2f2bc7380","_cell_guid":"1d6ed705-0f54-4371-9c99-26463126bada"},"cell_type":"markdown","source":"> ** Age Brackets**\n\n>Now that we have all the missing age values replace, let's break the Age feature into bins.\n\n>* < 14 Teens\n* Ages 14 - 25 Youth\n* Ages 26 - 39 Young Adults\n* Ages 40 - 65 middle-aged adults\n* Ages 65> senior citizens"},{"metadata":{"_uuid":"8416e513a8789ec3ee34cc5f72cc5e88a46e9304","trusted":true,"_cell_guid":"68fc2da0-b09a-463f-8e75-8d3cf84242f4"},"cell_type":"code","source":"pacman::p_load(plyr)\n\n\nlower_bound <- c(0,14,26,40,65)\nFull$Age_group <- findInterval(Full$Age, lower_bound)\n\n# Create Definition Table\nAge_group <- c(1,2,3,4,5)\nAge_Brackets <- c(\"Below_14\", \"14_to_25\", \"26_to_39\", \"40_to_64\", \"Above_64\")\nAge_Table <- data.frame(Age_group, Age_Brackets)\n\n\nFull <- join(Full, Age_Table, by = \"Age_group\")\nFull$Age_Brackets <- as.factor(Full$Age_Brackets)\n\n\n\nhead(Full)","execution_count":19,"outputs":[]},{"metadata":{"_uuid":"455d04c9b56223ef906fca96467a87b61f3ce898","trusted":true,"_cell_guid":"83674793-5363-4250-a707-6b8995ac2b3e"},"cell_type":"code","source":"# check if there are any more missing values\nFull %>%\n  select(everything()) %>% \n  summarise_all(funs(sum(is.na(.))))\nstr(Full)","execution_count":20,"outputs":[]},{"metadata":{"_uuid":"d180ef9b379d15a2a8151aedf13378a906a9a28a","trusted":true,"_cell_guid":"d25f7132-5f04-4fcd-b25a-370d02c68151"},"cell_type":"code","source":"#replace missing Fare with median as mean looks skewed\nFull[which( (is.na(Full$Fare))),]$Fare<-14.454\n#median(Full$Fare)","execution_count":21,"outputs":[]},{"metadata":{"_uuid":"c77eff97fb3ccc93da2954754bed1c1019cf5af0","trusted":true,"_cell_guid":"4db3ad21-451a-434d-8f7a-c7e37ac7a436"},"cell_type":"code","source":"summary(Full)","execution_count":22,"outputs":[]},{"metadata":{"_uuid":"55597c61708c4f404cd1daaafeeb90f96b4b23f5","trusted":true,"_cell_guid":"3ca7e46d-b74a-41f5-b127-4160401469ab"},"cell_type":"code","source":"# check if there are any more missing values\nFull %>%\n  select(everything()) %>% \n  summarise_all(funs(sum(is.na(.))))\nstr(Full)","execution_count":23,"outputs":[]},{"metadata":{"_uuid":"37da3522d0c2285935d63b52a99bfb7f6ff46d4f","trusted":true,"_cell_guid":"1405d01f-7fed-4acc-b92a-dc9d482a0b57"},"cell_type":"code","source":"#replace missing Missing Embarked based on Fare\nFull$Embarked <-as.character(Full$Embarked)\nFull[which(Full$Embarked==''),]$Embarked<-'C' #mode\nFull$Embarked <- as.factor(Full$Embarked)\nsummary(Full)","execution_count":24,"outputs":[]},{"metadata":{"_uuid":"a11cac887829ef2518fa9265b5d6bcac5f9a575c","_cell_guid":"66ba9e7a-58d5-4417-bf31-fc00a93809d8"},"cell_type":"markdown","source":"**Now that we have all our data cleaned, lets split back our modeling data into train and test sets based on the original PassangerId**\n"},{"metadata":{"_uuid":"4c32b27dd28e7460debb4d350f54ca787ec70ab4","trusted":true,"_cell_guid":"a3c2ceda-4ce5-4321-bf94-a9e369538620"},"cell_type":"code","source":"# Split the data back into a train set and a test set\ntest<-Full[which(Full$PassengerId %in% c(test$PassengerId)),]\ntrain<-Full[which(Full$PassengerId %in% c(train$PassengerId)),]","execution_count":25,"outputs":[]},{"metadata":{"_uuid":"632ae71d8d1d9e9808e742a6377b1e776cb2e768","_cell_guid":"d87a36e9-6683-494e-8787-3e6677ff9bdf"},"cell_type":"markdown","source":" **EXPLORATORY DATA ANALYSIS/DATA VISUALIZATION**\n \n All the visualizations that follow below are done on the training set"},{"metadata":{"_uuid":"8c5741c8c0ffe8163d60974bb49c45880dbe12f5","trusted":true,"_cell_guid":"f20b3084-5beb-47b7-9353-836f4facf50d"},"cell_type":"code","source":"p <- ggplot(train, aes(Survived))\n# Number of cars in each class:\np + geom_bar(aes(fill = Survived))+ ggtitle('Survived?')+\n  theme(plot.title = element_text(hjust = 0.5), aspect.ratio = .9)# adjust title location\n","execution_count":26,"outputs":[]},{"metadata":{"_uuid":"3f3272347b2d608a664c4f672a8e5781902bc81f","_cell_guid":"6a5b1b1e-0313-4a57-8b56-907b5032061f"},"cell_type":"markdown","source":"Most passangers perished."},{"metadata":{"_uuid":"1bdd68cc7b4a661b68c03183e5d3b80b3b5163af","trusted":true,"_cell_guid":"c6563554-25e9-4b44-a9c7-d9cc0ce1cbf0"},"cell_type":"code","source":"p1 <- ggplot(train, aes(Pclass))+ geom_bar(aes(fill = Survived), position = \"Fill\")+ ggtitle('% Survival by Passanger Class')+\n    theme(plot.title = element_text(hjust = 0.5), aspect.ratio = 2)# adjust title location\n\np2 <- ggplot(train, aes(Pclass))+ geom_bar(aes(fill = Survived), position = \"dodge\")+ ggtitle('Survival by Passanger Class')+\n  theme(plot.title = element_text(hjust = 0.5), aspect.ratio = 2)# adjust title location\n\ngrid.arrange(p1,p2, ncol=2)#, heights=c(2.5/4, 1.5/4), ncol=1)","execution_count":27,"outputs":[]},{"metadata":{"_uuid":"4b45557b5b62db7a3b56946ad8ff0c5af58d5469","_cell_guid":"1f701d37-4f1d-4245-b0e7-4afe4721eb8c"},"cell_type":"markdown","source":"You are more likely to survive if you are in first class, than if you are in third class. You better spend that money on a first class ticket :)"},{"metadata":{"_uuid":"c80ad26c47aa5c15e0ab14a65e50d5c97cd6b1b4","trusted":true,"_cell_guid":"c7cfbeb6-3768-4ade-9a3d-e457b21aacf6"},"cell_type":"code","source":"p1 <- ggplot(train, aes(Sex))+ geom_bar(aes(fill = Survived), position = \"Fill\")+ ggtitle('% Survival by Gender')+\n    theme(plot.title = element_text(hjust = 0.5), aspect.ratio = 2)# adjust title location\n\np2 <- ggplot(train, aes(Sex))+ geom_bar(aes(fill = Survived), position = \"dodge\")+ ggtitle('Survival by Gender')+\n  theme(plot.title = element_text(hjust = 0.5), aspect.ratio = 2)# adjust title location\n\ngrid.arrange(p1,p2, ncol=2, heights=c(2.5/4, 1.5/4))","execution_count":28,"outputs":[]},{"metadata":{"_uuid":"79098962e6e6c634ac4d3d630bb7a92fd29ae03b","_cell_guid":"fb9b7ff5-e934-465c-b664-34570a4a7c5b"},"cell_type":"markdown","source":"Wow, I hate to break this to you but, you are doomed if you are a male? Damn you Titanic!!!!"},{"metadata":{"_uuid":"777f926be6a3d69029a598e17dcbe750421f8b73","trusted":true,"_cell_guid":"1e4165ea-c500-4d84-b22e-300c924d8222"},"cell_type":"code","source":"p1 <- ggplot(train, aes(as.factor(Family_Size)))+ geom_bar(aes(fill = Survived), position = \"Fill\")+  ggtitle('% Survival by Family Size')+\n    theme(plot.title = element_text(hjust = 0.5), aspect.ratio = 2)# adjust title location\n\np2 <- ggplot(train, aes(as.factor(Family_Size)))+ geom_bar(aes(fill = Survived), position = \"dodge\")+ ggtitle('Survival by Family Size')+\n  theme(plot.title = element_text(hjust = 0.5), aspect.ratio = 2)# adjust title location\n\ngrid.arrange(p1,p2, ncol=2, heights=c(2.5/4, 1.5/4))","execution_count":29,"outputs":[]},{"metadata":{"_uuid":"a12190a867d853dd964a39cac1ed728d40823b64","_cell_guid":"885f5c4f-ce6b-45fa-a53f-9ec103aa355a"},"cell_type":"markdown","source":"Larger families sink together."},{"metadata":{"_uuid":"fd3a0468e039f9b362352ce638a54fb6ea47af87","trusted":true,"_cell_guid":"74b8c1a2-fd3c-4187-b205-1fae9d0b9fb6"},"cell_type":"code","source":"p1 <- ggplot(train, aes(Age_Brackets))+ geom_bar(aes(fill = Survived), position = \"Fill\")+  ggtitle('% Survival by Age Bracket')+\n    theme(plot.title = element_text(hjust = 0.5), aspect.ratio = 0.7)# adjust title location\n\np2 <- ggplot(train, aes(Age_Brackets))+ geom_bar(aes(fill = Survived), position = \"dodge\")+ ggtitle('Survival by Age Bracket')+\n  theme(plot.title = element_text(hjust = 0.5), aspect.ratio = 0.7)# adjust title location\n\ngrid.arrange(p1,p2, ncol=1)","execution_count":30,"outputs":[]},{"metadata":{"_uuid":"f602383a0e0344c6b07aa0fb9a2f1d836b51fcc3","trusted":true,"_cell_guid":"404bb6a4-d900-42fd-b398-7b5a742da74c"},"cell_type":"code","source":"p <- ggplot(data = train, aes(Sex)) + geom_bar(aes(fill = Survived), position = \"Fill\")\np + facet_wrap(~Age_Brackets)","execution_count":31,"outputs":[]},{"metadata":{"_uuid":"80bd7dffc162bfca619dcd41863ed9393d6d0412","trusted":true,"_cell_guid":"847f4b96-6ecb-4362-97ab-297d3b3d3f61"},"cell_type":"code","source":"# Relationship between age & survival\nggplot(train, aes(Age, fill = factor(Survived))) + \n  geom_histogram() + \n  facet_grid(.~Sex)\n","execution_count":32,"outputs":[]},{"metadata":{"_uuid":"52bf92ae135ac0bb53aa793d72bd236077ae288e","trusted":true,"_cell_guid":"bc458f0e-596f-439a-987c-f227934e0844"},"cell_type":"code","source":"# Relationship between Fare & survival\nggplot(train, aes(Fare, fill = factor(Survived))) + \n  geom_histogram() \n  \n","execution_count":33,"outputs":[]},{"metadata":{"_uuid":"ac13a9bf7a22e59bc83911611204af75e7734538","_cell_guid":"c631519a-475b-41b9-b6a5-5919e81316f6"},"cell_type":"markdown","source":"Too bad for those customes who spend a fortune on their ticket and still perished"},{"metadata":{"_uuid":"78e447f1efd762662c21c67b810b35ddb9f0839a","trusted":true,"_cell_guid":"53d573d2-9aa1-4327-908d-6ed968b79c46"},"cell_type":"code","source":"# Relationship between Fare & survival  by class\nggplot(train, aes(Fare, fill = factor(Survived))) + \n  geom_histogram() + \n  facet_grid(.~Pclass)\n","execution_count":34,"outputs":[]},{"metadata":{"_uuid":"6100d117fab37a4e076fa9b502d66243f5524e70","trusted":true,"_cell_guid":"03173866-6091-4637-a9b5-e5f76b620904"},"cell_type":"code","source":"pacman::p_load(mlr)","execution_count":35,"outputs":[]},{"metadata":{"_uuid":"429dcdf9b17dc3431a349068df8a0bff96c9c75a","trusted":true,"_cell_guid":"91d374fd-3b51-463f-88c6-e912e5ec6bda"},"cell_type":"code","source":"head(Full, 1)","execution_count":36,"outputs":[]},{"metadata":{"_uuid":"9987aa722f7abda12a2b346d893e4c2c86006c93","trusted":true,"_cell_guid":"fdb015ba-7d54-4356-9468-73592655ccb3"},"cell_type":"code","source":"#columns to keep except Name, Ticket, Cabin, Age_group\nFull_Final<-Full\n\nFull_Final$Name<-NULL\nFull_Final$Ticket<-NULL # will revisit this feature\nFull_Final$Cabin<-NULL\nFull_Final$Age_group<-NULL\n\n\n\nhead(Full_Final)\nstr(Full_Final)","execution_count":37,"outputs":[]},{"metadata":{"_uuid":"60917124a215281faea67e548ba2c8f970e6642b","trusted":true,"_cell_guid":"8032db99-3985-405b-a480-9cc1701314f8"},"cell_type":"code","source":"#create dummies\npacman::p_load(mlr)\nhead(Full_Final)","execution_count":38,"outputs":[]},{"metadata":{"_uuid":"c4999c7df5fbfd5b7f5f3c6d1778fd1af3cb2bb6","trusted":true,"_cell_guid":"cbde12a1-bc26-4b3b-9c35-abdafce26928"},"cell_type":"code","source":"df1 =Full_Final\ndf1 = createDummyFeatures(df1, cols = c('Sex','Pclass', 'Embarked', 'Cabin_Class', 'Title', 'Age_Brackets'))\nhead(df1)\nnames(df1)","execution_count":39,"outputs":[]},{"metadata":{"_uuid":"66fe7f19fa19501c2b720a0e8e0349c21b65d05d","trusted":true,"_cell_guid":"7c9c8e1b-47b3-46f2-b766-b196a530f8c4"},"cell_type":"code","source":"# Split the data back into a train set and a test set\ntest<-df1[which(df1$PassengerId %in% c(test$PassengerId)),]\ntrain<-df1[which(df1$PassengerId %in% c(train$PassengerId)),]","execution_count":40,"outputs":[]},{"metadata":{"_uuid":"44e9e643a03169f601eba4fd101fb7069397d567","_cell_guid":"480770df-0aad-4746-bc8b-362e36a5c222"},"cell_type":"markdown","source":"## Conclusion and Future plans\n\nThis EDA has given us some insight into the titanic dataset. \n\n**Some key Ooservations on  Survival **\n* Woe unto you if you are a male. You had a slim chance of survival regardless of your age compared to a female passenger. \n* Women and Children had a high chance of survival.\n* Larger families sunk together.\n* Passengers in first class had a high chance of Survival\n\n**Other Possible Features and further plans**\n* Ticket, I dropped this feature but would consider engineering a feature from this.\n* Family relations features such as Father and Mother based on Parch.\n* Adult - Would consider this features spinned from age when passenger above 18 is considered and adult.\n* We have some outliers in the Fare. Will consider deleting this observation or binning the Fares feature.\n\nAfter cleaning and creating new features. We are ready to build predictive models. Below I save the data from the preprocessing in csv files to be used for modeling.\n"},{"metadata":{"_uuid":"7401e8c868f5a05a3a77205722345e931baff799","trusted":true,"_cell_guid":"e7d825d7-1cf9-487f-96b8-b5d8e7646a94"},"cell_type":"code","source":"write.csv(train, 'modeling_train.csv', row.names=FALSE)\nwrite.csv(test, 'modeling_test.csv', row.names=FALSE)","execution_count":41,"outputs":[]},{"metadata":{"_uuid":"e4a4c3c674546539a48778ebe5fd74cd5c6bdeaf","_cell_guid":"feb4b366-98c3-4f57-b702-abdb81afe239"},"cell_type":"markdown","source":"### References:\n*  https://www.kaggle.com/rtatman/getting-started-in-r-load-data-into-r\n*  https://www.tutorialspoint.com/r/r_mean_median_mode.htm\n* https://www.kaggle.com/c/titanic\n* https://www.kaggle.com/mrisdal/exploring-survival-on-the-titanic\n"},{"metadata":{"_uuid":"ebbc1027317fe2fd72c4e42fca564a08b20c796b","trusted":true,"_cell_guid":"aafb4107-7121-48b1-a445-d4b333cffa60"},"cell_type":"code","source":"sessionInfo()","execution_count":42,"outputs":[]},{"metadata":{"_uuid":"109b8b3b740d110663f95c573054a2eea371201c","trusted":false,"_cell_guid":"154c4e26-ac1f-4cf2-9f15-4f2fd425f491"},"cell_type":"code","source":"","execution_count":null,"outputs":[]}],"metadata":{"kernelspec":{"display_name":"R","language":"R","name":"ir"},"language_info":{"mimetype":"text/x-r-source","name":"R","pygments_lexer":"r","version":"3.4.2","file_extension":".r","codemirror_mode":"r"}},"nbformat":4,"nbformat_minor":1}