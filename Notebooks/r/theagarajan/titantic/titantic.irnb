{"metadata": {"language_info": {"version": "3.4.2", "file_extension": ".r", "codemirror_mode": "r", "pygments_lexer": "r", "name": "R", "mimetype": "text/x-r-source"}, "kernelspec": {"display_name": "R", "name": "ir", "language": "R"}}, "nbformat_minor": 1, "cells": [{"outputs": [], "execution_count": null, "metadata": {"_uuid": "a140687dd611e0e0dbdda28ff700936d289c5ade", "_cell_guid": "9f75e561-057d-41fc-ab9a-51a6c7c9a7af"}, "cell_type": "code", "source": ["library(caret)\n", "library(randomForest)\n", "train<- read.csv(file=\"../input/train.csv\",stringsAsFactors = T)\n", "test <- read.csv(file=\"../input/test.csv\",stringsAsFactors = T)\n", "#Creating new features\n", "train$estAge <- grepl(\"\\\\.5\",train$Age)\n", "test$estAge <- grepl(\"\\\\.5\",test$Age)\n", "\n", "#Extracting Title from the Name\n", "train$Title <- gsub('(.*, )|(\\\\..*)', '', train$Name)\n", "test$Title <- gsub('(.*, )|(\\\\..*)', '', test$Name)\n", "\n", "train$Title[train$Title == 'Mlle']        <- 'Miss' \n", "train$Title[train$Title == 'Ms']          <- 'Miss'\n", "train$Title[train$Title == 'Mme']         <- 'Mrs' \n", "\n", "test$Title[test$Title == 'Mlle']        <- 'Miss' \n", "test$Title[test$Title == 'Ms']          <- 'Miss'\n", "test$Title[test$Title == 'Mme']         <- 'Mrs' \n", "\n", "MainTitles <- c(\"Master\",\"Miss\",\"Mr\",\"Mrs\",\"Rev\")\n", "\n", "train[!train$Title %in% MainTitles,c(\"Title\")] <- \"Others\"\n", "test[!test$Title %in% MainTitles,c(\"Title\")] <- \"Others\"\n", "\n", "train$Title <- as.factor(train$Title)\n", "train$Embarked <- as.factor(train$Embarked)\n", "\n", "train$Cabinsize<- nchar(as.character(train$Cabin))==0\n", "\n", "test$Title <- as.factor(test$Title)\n", "test$Embarked <- as.factor(test$Embarked)\n", "\n", "test$Cabinsize<- nchar(as.character(test$Cabin))==0\n", "\n", "colnames(train)\n", "var <- c(\"Pclass\",\"Sex\",\"Age\",\"SibSp\",'Parch','Fare','Embarked','estAge','Title','Cabinsize')\n", "ImputeTrain <- train[,var]\n", "colnames(ImputeTrain)\n", "\n", "preProcValues <- preProcess(ImputeTrain, method = c(\"knnImpute\"))\n", "train <- predict(preProcValues, train)\n", "test <- predict(preProcValues,test)\n", "\n", "summary(train)\n", "\n", "# Set a random seed\n", "set.seed(754)\n", "\n", "# Build the model (note: not all possible variables are used)\n", "rf_model <- randomForest(factor(Survived) ~ Pclass + Title + estAge + (SibSp + Parch) + Sex + Age + Cabinsize + Fare ,\n", "                                           data = train)\n", "\n", "# Show model error\n", "plot(rf_model, ylim=c(0,0.36))\n", "legend('topright', colnames(rf_model$err.rate), col=1:3, fill=1:3)\n", "\n", "prediction <- predict(rf_model,test)\n", "# Save the solution to a dataframe with two columns: PassengerId and Survived (prediction)\n", "solution <- data.frame(PassengerID = test$PassengerId, Survived = prediction)\n", "\n", "# Write the solution to file\n", "write.csv(solution, file = 'rf_mod_Solution.csv', row.names = F)\n"]}, {"outputs": [], "execution_count": null, "metadata": {"_uuid": "f0141de2e8bb7b4c330e8c5060532040344476bc", "_cell_guid": "d7ae6aee-757c-4bb4-b386-79ae92abc09b"}, "cell_type": "code", "source": []}, {"outputs": [], "execution_count": null, "metadata": {"_kg_hide-input": false, "_uuid": "8b5f70ddc78b02ea694d3c656cee02454126f0c5", "_cell_guid": "ebf394f3-a5b4-4ef5-8013-af805cf781b0"}, "cell_type": "code", "source": ["\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n"]}], "nbformat": 4}