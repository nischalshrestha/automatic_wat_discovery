{"nbformat_minor": 1, "nbformat": 4, "cells": [{"source": ["# This notebook is very much inspired from : https://machinelearningmastery.com/machine-learning-ensembles-with-r/\n", "library(mlbench)\n", "library(caret)\n", "library(caretEnsemble)\n", "library(data.table)\n", "library(dplyr)\n", "system(\"ls ../input\")\n", "\n", "# Any results you write to the current directory are saved as output."], "execution_count": null, "cell_type": "code", "outputs": [], "metadata": {"_uuid": "c772e77a15a187dbd6f2ca5c94d6f65a562e200a", "_cell_guid": "d04fa247-2b36-4c30-8cac-d8bb17105dc0"}}, {"source": ["train <- fread(\"../input/train.csv\", stringsAsFactors = TRUE)\n", "test <- fread(\"../input/test.csv\", stringsAsFactors = TRUE)\n", "ids <- test$PassengerId\n", "all <- rbind(train%>%dplyr::select(-Survived), test)"], "execution_count": null, "cell_type": "code", "outputs": [], "metadata": {"_uuid": "e5a22a65ab6c8f9db2da664de05c4899e4ab993e", "_cell_guid": "3bea6e2c-4986-4327-b1c2-f414b15340a4"}}, {"source": ["Survived = train$Survived\n", "PassengerId = test$PassengerId\n", "all$Name = as.character(all$Name)\n", "all$Title <- sapply(all$Name, FUN=function(x) {strsplit(x, split='[,.]')[[1]][2]})\n", "all$Title <- sub(' ', '', all$Title)\n", "all[!all$Title %in% c(\"Mr\", \"Miss\", \"Mrs\", \"Master\")]$Title = \"Rare\"\n", "all$Title <- as.factor(all$Title)"], "execution_count": null, "cell_type": "code", "outputs": [], "metadata": {"_uuid": "7a76a093808100343828c9aa9fd4a973343e7199", "_cell_guid": "5af5f168-f607-4f8b-ad60-3ebf40f8bb33"}}, {"source": ["age_group <- all %>%\n", "  filter(!is.na(Age)) %>%\n", "  group_by(Title, Pclass, Sex) %>%\n", "  dplyr::summarise(avgAge = mean(Age), count = n())"], "execution_count": null, "cell_type": "code", "outputs": [], "metadata": {"_uuid": "5842ee82a821eba08c2f549feeea02748405edea", "_cell_guid": "622f2443-3de6-4404-b23a-0cde94ec070c"}}, {"source": ["all <- all %>%\n", "  left_join(age_group) %>%\n", "  mutate(Age = ifelse(is.na(Age), avgAge, Age)) %>%\n", "  dplyr::select(-avgAge, -count)"], "execution_count": null, "cell_type": "code", "outputs": [], "metadata": {"_uuid": "378636182579b0ef4fd8918a0cad374dd397de88", "_cell_guid": "4c3cef69-634d-4131-8516-59987b15712b"}}, {"source": ["all <- all%>%dplyr::select(-PassengerId, -Name, -Ticket, -Cabin)\n", "dmy <- dummyVars(\" ~ .\", data = all, fullRank = T)\n", "all <- data.frame(predict(dmy, newdata = all))\n", "\n", "train <- cbind(all[1:nrow(train),], Survived)\n", "test <- all[nrow(train)+1 : nrow(test), ]\n", "train$Survived <- as.factor(ifelse(train$Survived == 0, \"N\", \"Y\") )"], "execution_count": null, "cell_type": "code", "outputs": [], "metadata": {"_uuid": "5d96869f542fae84a437d848049944b43026d564", "_cell_guid": "00d123ec-ed9f-4256-ae94-f1fd7b26e4fb"}}, {"source": ["# Example of Stacking algorithms\n", "# create submodels\n", "control <- trainControl(method=\"repeatedcv\", number=10, repeats=3, savePredictions=TRUE, classProbs=TRUE)\n", "algorithmList <- c('lda', 'rpart', 'glm', 'knn', 'svmRadial')\n", "set.seed(3)\n", "models <- caretList(Survived~., data=train, trControl=control, methodList=algorithmList)\n", "results <- resamples(models)\n", "summary(results)"], "execution_count": null, "cell_type": "code", "outputs": [], "metadata": {"_uuid": "4c53e854d34b3c6d8e2804368315f49c77a32509", "_cell_guid": "3e06a0a2-b4e6-49e4-a4ec-06b6166c9b2d"}}, {"source": ["dotplot(results)"], "execution_count": null, "cell_type": "code", "outputs": [], "metadata": {"_uuid": "c014e51f5497917d40d0a45f24ade4d1f577e562", "_cell_guid": "d173834c-5ed7-4a09-8aa5-18e24541383d"}}, {"source": ["modelCor(results)"], "execution_count": null, "cell_type": "code", "outputs": [], "metadata": {"_uuid": "1c7841403a24d24bf390be7417c344717fab871b", "_cell_guid": "35cf74e3-622e-4766-a4e3-074a0ffed4ac"}}, {"source": ["# stack using glm\n", "stackControl <- trainControl(method=\"repeatedcv\", number=10, repeats=3, savePredictions=TRUE, classProbs=TRUE)\n", "set.seed(3)\n", "stack.glm <- caretStack(models, method=\"glm\", metric=\"Accuracy\", trControl=stackControl)\n", "print(stack.glm)"], "execution_count": null, "cell_type": "code", "outputs": [], "metadata": {"_uuid": "88872517245a84baf39c33a540b65910260070aa", "_cell_guid": "d0a059ed-ce3b-4650-8d25-a69a2395bfbe"}}, {"source": ["set.seed(3)\n", "stack.rf <- caretStack(models, method=\"rf\", metric=\"Accuracy\", trControl=stackControl)\n", "print(stack.rf)"], "execution_count": null, "cell_type": "code", "outputs": [], "metadata": {"_uuid": "fadaf260fb5093d65c9477764abc81d8e539e358", "_cell_guid": "37c42475-75dc-48a4-827d-ae71491430bf"}}, {"source": ["pred_test <- ifelse(predict(stack.rf, newdata =test) == \"Y\",1,0)\n", "Submission <- as.data.frame(cbind(ids, pred_test))\n", "names(Submission) <- c(\"PassengerId\", \"Survived\")\n", "write.csv(Submission, \"stacked_submission.csv\", row.names = FALSE)"], "execution_count": null, "cell_type": "code", "outputs": [], "metadata": {"_uuid": "d717884866fd24d5d05aad6970c70bb728c3ffae", "_cell_guid": "13198835-94d6-4727-9b06-d6f4d4f6d00a"}}], "metadata": {"language_info": {"name": "R", "mimetype": "text/x-r-source", "file_extension": ".r", "codemirror_mode": "r", "pygments_lexer": "r", "version": "3.4.1"}, "kernelspec": {"name": "ir", "language": "R", "display_name": "R"}}}