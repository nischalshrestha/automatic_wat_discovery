{"cells":[{"metadata":{"_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","trusted":true},"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load in \n\nlibrary(\"ggplot2\")\nlibrary(\"forecast\")\nlibrary(\"dplyr\")\nlibrary(\"readr\")\nlibrary(\"data.table\")\nlibrary(\"lubridate\")\nlibrary(\"caret\")\nlibrary(\"zoo\")\n\n#read data from train.csv\ntrain<- read.csv(\"../input/train.csv\")\n\n#convert all categorical characters into factors variable for further use\ntrain$Pclass=as.factor(train$Pclass)\ntrain$Survived=as.factor(train$Survived)\ntrain$Sex=as.factor(train$Sex)\ntrain$Embarked=as.factor(train$Embarked)\ntrain$SibSp<-as.factor(train$SibSp)\ntrain$Age[is.na(train$Age)]<-sample(train$Age[!is.na(train$Age)], size = length(train$Age[is.na(train$Age)]) )\ntrain$Age<-round(train$Age,0)\ntrain$Age<-as.integer(train$Age)\n\n#q1.  to find the survival rate we need visualize the survival variable \np1<-ggplot(train, aes(x=Survived)  )\np1<- p1+ geom_bar() + theme_bw()+labs(y=\"passanger count\", title=\"titanic survival rate\" )\np1\n\n# if we want % of survival variable\nprop.table(table(train$Survived))\n\n#q2.   survival rate by gender\np2<-ggplot(train, aes(x=Survived, fill= Sex)  )\np2<- p2+ geom_bar() + theme_bw()+labs(y=\"passanger count\", title=\"titanic survival rate by sex\" )\np2\n\n#q3.  survival rate by class of tickets\np3<-ggplot(train, aes(x=Pclass, fill= Survived)  )\np3<- p3+ geom_bar() + theme_bw()+labs(y=\"passanger count\", title=\"titanic survival rate by Pclass\" )\np3\n\n#q4.  survival rate by class of tickets and gender\np4<-ggplot(train, aes(x=Sex, fill= Survived)  )\np4<- p4 + facet_wrap(~Pclass) + geom_bar() + theme_bw()+labs(y=\"passanger count\", title=\"titanic survival rate by Pclass and gender\" )\np4\n\n#q5. distribution of passanger age\np5<- ggplot(train, aes(x=Age))+geom_histogram(binwidth=5)+ theme_bw()+ labs(y= \"passanger count\", title=\"distribution by age\")\np5\n\n#q6. survival rate by age\np6<-ggplot(train , aes(x=Age, fill= Survived))+ geom_histogram(binwidth=5)+theme_classic()+labs(y= \"passanger count\", title=\"titanic survival by age\")\np6\n\n#q7. survival rate by age when segmented by pclass and gender\np7<- ggplot(train, aes(x= Age, fill=Survived))+ geom_density(alpha=0.5) + theme_bw()+ labs(y= \"passanger count\", title=\"titanic survival by age along with gender and pclass\") + facet_wrap(Pclass~Sex)\np7\n\n#q8  survival rate by people travelling with sibbling and spouse\np8<-ggplot(train, aes(x=SibSp,fill= Survived))+ geom_bar()+theme_get()+labs(y=\"passenger count\", x=\"number of sibsp\",  title=\"titanic survival rate by sibsp\")\np8\n\n#q9  survival rate by people travelling with sibbling and spouse\np9<-ggplot(train, aes(x= Parch ,fill= Survived))+ geom_bar()+theme_get()+labs(y=\"passenger count\", x=\"number of Parch\", title=\"titanic survival rate by parch\")\np9\n\n#q10. survival rate by ticket fare\np10<-ggplot(train , aes(x=Fare, fill= Survived))+ geom_histogram(binwidth=5)+theme_classic()+labs(y= \"passanger count\", title=\"titanic survival by ticket fare\")\np10\n\n#q11 survival rate by having cabin\ntrain$Cabin<-as.character(train$Cabin)\ntrain$Cabin[train$Cabin==\"\"]<-\"no\"\ntrain$Cabin[!train$Cabin==\"no\"]<-\"yes\"\ntrain$Cabin<-as.factor(train$Cabin)\np11<-ggplot(data = train, aes(x = Survived, fill = Cabin))+geom_bar()\np11\n\n## ML model random forest##\nintrain<-createDataPartition(train$Survived, p = 0.7, list = F)\ntraining<-train[intrain,]\ntesting<-train[-intrain,]\nrelation<-train(Survived~Sex+Pclass+Age+SibSp+Parch+Cabin+Embarked,\n                data = training, method = \"rf\", trcontrol = trainControl(method = \"cv\", number = 5))\n\nresult<-predict(relation, testing)\nconfusionMatrix(testing$Survived, result)\n# chi square test for all categorical variables\n\nt1<- table(train$Survived,train$Sex)\nt2<- table(train$Survived,train$Pclass)\nt3<- table(train$Survived,train$Embarked)\nt4<- table(train$Survived,train$SibSp)\nt5<- table(train$Survived,train$Parch)\nchisq.test(t1)\nchisq.test(t2)\nchisq.test(t3)\nchisq.test(t4)\nchisq.test(t5)\n\n\ntest<-read.csv(\"../input/test.csv\")\ntest$Pclass=as.factor(test$Pclass)\ntest$Sex=as.factor(test$Sex)\ntest$Embarked=as.factor(test$Embarked)\ntest$Cabin<-as.character(test$Cabin)\ntest$Cabin[test$Cabin==\"\"]<-\"no\"\ntest$Cabin[!test$Cabin==\"no\"]<-\"yes\"\ntest$Cabin<-as.factor(test$Cabin)\ntest$SibSp<-as.factor(test$SibSp)\ntest$Age[is.na(test$Age)]<-sample(test$Age[!is.na(test$Age)], size = length(test$Age[is.na(test$Age)]) )\ntest$Age<-round(test$Age,0)\ntest$Age<-as.integer(test$Age)\n\nrelation<-train(Survived~Sex+Pclass+Age+SibSp+Parch+Cabin+Embarked,\n    data = train, method = \"rf\", trcontrol = trainControl(method = \"cv\", number = 5))\n\n\ntest$Survived<-predict(relation, test)\nwrite.csv(x = test$Survived, file = \"../input/output.csv\", sep = \",\", row.names = F)\n\n# Input data files are available in the \"../input/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\n\n# Any results you write to the current directory are saved as output.","execution_count":null,"outputs":[]},{"metadata":{"_cell_guid":"79c7e3d0-c299-4dcb-8224-4455121ee9b0","_uuid":"d629ff2d2480ee46fbb7e2d37f6b5fab8052498a","collapsed":true,"trusted":false},"cell_type":"code","source":"#","execution_count":null,"outputs":[]}],"metadata":{"kernelspec":{"display_name":"R","language":"R","name":"ir"},"language_info":{"mimetype":"text/x-r-source","name":"R","pygments_lexer":"r","version":"3.4.2","file_extension":".r","codemirror_mode":"r"}},"nbformat":4,"nbformat_minor":1}