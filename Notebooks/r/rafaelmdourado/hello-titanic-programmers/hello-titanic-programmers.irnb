{"nbformat_minor": 0, "nbformat": 4, "metadata": {"kernelspec": {"name": "ir", "display_name": "R", "language": "R"}, "language_info": {"name": "R", "version": "3.4.1", "codemirror_mode": "r", "mimetype": "text/x-r-source", "file_extension": ".r", "pygments_lexer": "r"}}, "cells": [{"execution_count": null, "outputs": [], "metadata": {"collapsed": false, "_execution_state": "idle", "_cell_guid": "cb66a3e1-f8d2-490a-ab47-2532b6f5dea0", "_uuid": "0cdd0020aa4b65e525d9a1cad3651cba52c5e64b"}, "source": "# Consumo dos dados\n", "cell_type": "markdown"}, {"execution_count": null, "outputs": [], "metadata": {"_cell_guid": "ae4c6326-971b-40e2-a222-a5cb46a3b8e9", "trusted": false, "_execution_state": "idle", "_uuid": "4f600695e3c4b96b77c232e8516ef2bce74d718a"}, "source": "library(ggplot2)\nlibrary(dplyr)\nlibrary(randomForest)\n\ntrain <- read.csv('../input/train.csv', stringsAsFactors = F)\ntest <- read.csv('../input/test.csv', stringsAsFactors = F)\n\ntrain$isTrain <- T\ntest$isTrain <- F\n\nfull <- bind_rows(train, test)\nglimpse(full)", "cell_type": "code"}, {"execution_count": null, "outputs": [], "metadata": {"collapsed": false, "_execution_state": "idle", "_cell_guid": "edb46080-be72-40e2-8091-55ee319ec018", "_uuid": "bc5f80251323e6dd48f834e69778ecd09d2dc914"}, "source": "# An\u00e1lise das variaveis", "cell_type": "markdown"}, {"execution_count": null, "outputs": [], "metadata": {"collapsed": false, "trusted": false, "_execution_state": "idle", "_cell_guid": "e53a3209-e132-4b3d-adcd-42ae216123a4", "_uuid": "c0e030c549dbd6ea1428b996f552d874faa79f4c"}, "source": "summary(full)", "cell_type": "code"}, {"execution_count": null, "outputs": [], "metadata": {"collapsed": false, "_execution_state": "idle", "_cell_guid": "986a4322-a95c-416a-9010-d5529583d3f9", "_uuid": "c8ad15836b30f97ed244752b76693693375d80ee"}, "source": "# A Rose sobrevive", "cell_type": "markdown"}, {"execution_count": null, "outputs": [], "metadata": {"collapsed": false, "trusted": false, "_execution_state": "idle", "_cell_guid": "3bb230da-c9ae-429d-8f30-8513984457ba", "_uuid": "ada653338ffddbe43ac80dfaf83f4b9bf08583b7"}, "source": "full$isFemale <- F\nfull$isFemale[full$Sex == \"female\"] <- T\n\nggplot(full[full$isTrain,], aes(x = isFemale, fill = factor(Survived))) +\n  geom_bar(stat='count', position='dodge')", "cell_type": "code"}, {"execution_count": null, "outputs": [], "metadata": {"collapsed": false, "_execution_state": "idle", "_cell_guid": "2cb70423-1b2f-4c73-b7e5-52d5492fe515", "_uuid": "a9f69407e40023b50153b5773e41fcec40e7826e"}, "source": "# Crian\u00e7as", "cell_type": "markdown"}, {"execution_count": null, "outputs": [], "metadata": {"collapsed": false, "trusted": false, "_execution_state": "idle", "_cell_guid": "d306cd4c-db4f-4de8-b83d-20b178f9eb8b", "_uuid": "c12bc5090b825467694cc7cb7c7e30b0a715b5ac"}, "source": "full$underTen <- F\nfull$underTen[full$Age > 0 & full$Age < 10 ] <- T\n\nggplot(full[full$isTrain,], aes(x = underTen, fill = factor(Survived))) +\n  geom_bar(stat='count', position='dodge')", "cell_type": "code"}, {"execution_count": null, "outputs": [], "metadata": {"collapsed": false, "_execution_state": "idle", "_cell_guid": "3d29f6e3-b005-433f-af7c-c701c84fde35", "_uuid": "15bfabf20022f42c8b04bf7aac08dcbbba640f0b"}, "source": "# Compre seu lugar no ceu", "cell_type": "markdown"}, {"execution_count": null, "outputs": [], "metadata": {"collapsed": false, "trusted": false, "_execution_state": "idle", "_cell_guid": "840ed82b-d126-496a-9738-5b79795568e9", "_uuid": "bf4001df7668c6f3d883d616680119ffd0b80cf0"}, "source": "full$Fare <- round(full$Fare)\n\nfull[full$isTrain,] %>%\n  group_by(Survived) %>%\n  summarise(TotalFare = sum(Fare), count = n(), Mean = mean(Fare))", "cell_type": "code"}, {"execution_count": null, "outputs": [], "metadata": {"collapsed": false, "trusted": false, "_execution_state": "idle", "_cell_guid": "f9fdce57-5468-4486-99f4-7edf3bcee7c8", "_uuid": "d8747db0409fde0667e62b44e2fd90cdd45e30af"}, "source": "full$FamilySize <- full$SibSp + full$Parch + 1\n\nggplot(full[full$isTrain,], aes(x = FamilySize, fill = factor(Survived))) +\n  geom_bar(stat='count', position='dodge')", "cell_type": "code"}, {"execution_count": null, "outputs": [], "metadata": {"collapsed": false, "trusted": false, "_execution_state": "idle", "_cell_guid": "e6a8b5fb-ce9f-4d82-acb7-4c58aaa893e4", "_uuid": "3f78c1a4cadf9f7b62427598cc4fb78c0a900ff6"}, "source": "full$FamilySizeFactor[full$FamilySize == 1] <- 'alone'\nfull$FamilySizeFactor[full$FamilySize < 5 & full$FamilySize > 1] <- 'small'\nfull$FamilySizeFactor[full$FamilySize > 4] <- 'large'\n\nfull$FamilySizeFactor <- factor(full$FamilySizeFactor)", "cell_type": "code"}, {"execution_count": null, "outputs": [], "metadata": {"collapsed": false, "trusted": false, "_execution_state": "idle", "_cell_guid": "f8bd1a83-0be3-4005-b298-e65e0393f1f1", "_uuid": "4f59afe016cd2d275190b20c98e2a52a8a2568ca"}, "source": "ggplot(full[full$isTrain,], aes(x = Pclass, fill = factor(Survived))) +\n  geom_bar(stat='count', position='dodge')\n\nfull$Pclass <- factor(full$Pclass)", "cell_type": "code"}, {"execution_count": null, "outputs": [], "metadata": {"collapsed": false, "trusted": false, "_execution_state": "idle", "_cell_guid": "1d0652f0-1c35-4509-a44b-20be0cbd4315", "_uuid": "3c65b529ceabfde46cb3dfc2ab9ff21a3ef1422d"}, "source": "full$Title <- gsub('(.*, )|(\\\\..*)', '', full$Name)\n\nrare_title <- c('Dona', 'Lady', 'the Countess','Capt', 'Col', 'Don', \n                'Dr', 'Major', 'Rev', 'Sir', 'Jonkheer')\n\n# Also reassign mlle, ms, and mme accordingly\nfull$Title[full$Title == 'Mlle']        <- 'Miss' \nfull$Title[full$Title == 'Ms']          <- 'Miss'\nfull$Title[full$Title == 'Mme']         <- 'Mrs' \nfull$Title[full$Title %in% rare_title]  <- 'Rare Title'\n\n# Show title counts by sex again\ntable(full$Sex, full$Title)", "cell_type": "code"}, {"execution_count": null, "outputs": [], "metadata": {"collapsed": false, "trusted": false, "_execution_state": "idle", "_cell_guid": "edfd9ffd-eb15-48a1-8703-105aa6d71e77", "_uuid": "ef8e07be5b4eedbdd2f6d3fae50427d21e6250cb"}, "source": "full <-\n  full %>%\n  select(PassengerId, Survived, Title, Pclass, FamilySizeFactor, Fare, underTen, isFemale, isTrain)\n\nfull$Fare[is.na(full$Fare)] <- 14\nfull$Title <- factor(full$Title)\nsummary(full)", "cell_type": "code"}, {"execution_count": null, "outputs": [], "metadata": {"collapsed": false, "trusted": false, "_execution_state": "idle", "_cell_guid": "40dcddf0-70ac-4df1-9864-b9f933b28596", "_uuid": "8db3e3f5cc6e7e9f42765e4faf7f7dcd926789dc"}, "source": "set.seed(42)\n\ntotalrows <- nrow(full[full$isTrain,])\ntrainrows <- sample(c(T,F), totalrows, replace = T, prob = c(0.8, 0.2))\n\ntrainningSet <- full[full$isTrain,][trainrows,]\ntestingSet <- full[full$isTrain,][!trainrows,]\n\nmodel <- randomForest(factor(Survived) ~ Title + Pclass + FamilySizeFactor \n                      + Fare + underTen + isFemale, \n                      data = trainningSet,\n                      ntree = 50)\n", "cell_type": "code"}, {"execution_count": null, "outputs": [], "metadata": {"collapsed": false, "trusted": false, "_execution_state": "idle", "_cell_guid": "1b397f0e-9243-4db9-93f5-3909465eab8e", "_uuid": "02b2a0a522b6917b6c71fbb14301e2dba754b8d7"}, "source": "importance(model)", "cell_type": "code"}, {"execution_count": null, "outputs": [], "metadata": {"collapsed": false, "trusted": false, "_execution_state": "idle", "_cell_guid": "d95d77e1-5d13-46a5-9bbc-68ccb3f1d7dc", "_uuid": "7bd5807de47f156e2d0784650df0887fc93904d9"}, "source": "predicted <- predict(model, testingSet)\n\nglimpse(predicted)\n\nconfusion_matrix <- table(testingSet$Survived, predicted)\nconfusion_matrix\n\nTP <- confusion_matrix[2, 2]\nTN <- confusion_matrix[1, 1]\n\nacc <- (TP + TN) / (nrow(testingSet))\nacc", "cell_type": "code"}, {"execution_count": null, "outputs": [], "metadata": {"collapsed": false, "trusted": false, "_execution_state": "idle", "_cell_guid": "1de3d2a5-2e23-4caa-88e3-559384b826d3", "_uuid": "3465993e0ce1f9e3fb73230b8ba47caa7a8d170a"}, "source": "final <- predict(model, full[!full$isTrain,])\n\nsolution <- data.frame(PassengerId = full[!full$isTrain,]$PassengerId, Survived = final)\n\nwrite.csv(solution, file = 'out.csv', row.names = F)", "cell_type": "code"}]}