{"nbformat_minor": 1, "nbformat": 4, "metadata": {"kernelspec": {"language": "R", "display_name": "R", "name": "ir"}, "language_info": {"name": "R", "version": "3.4.1", "pygments_lexer": "r", "file_extension": ".r", "codemirror_mode": "r", "mimetype": "text/x-r-source"}}, "cells": [{"outputs": [], "execution_count": null, "cell_type": "code", "metadata": {"_cell_guid": "97192514-3e2b-462b-96d9-1f6b0f010455", "_uuid": "385e4e1e378cf16d00fa3c1df193ad4b95e72000"}, "source": ["# This R environment comes with all of CRAN preinstalled, as well as many other helpful packages\n", "# The environment is defined by the kaggle/rstats docker image: https://github.com/kaggle/docker-rstats\n", "# For example, here's several helpful packages to load in \n", "\n", "library(ggplot2) # Data visualization\n", "library(readr) # CSV file I/O, e.g. the read_csv function\n", "\n", "# Input data files are available in the \"../input/\" directory.\n", "# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n", "\n", "list.files(\"../input\")\n", "\n", "# Any results you write to the current directory are saved as output."]}, {"source": ["**Data Exploration**"], "cell_type": "markdown", "metadata": {"_cell_guid": "af290fa4-4819-4037-a86d-16109c853b3d", "_uuid": "b0967ceb5a7a658de9162f9ac364ef215194da50"}}, {"outputs": [], "execution_count": null, "cell_type": "code", "metadata": {"_cell_guid": "f08e75a2-eb26-4212-9110-ee9a0339587e", "_uuid": "c980266d511981a4f8bcaee5ae3ce96d63ca0d8f"}, "source": ["#read Training data\n", "train<- read.csv(\"../input/train.csv\")\n", "#read Test data\n", "test<-read.csv('../input/test.csv')\n", "str(train)\n", "dim(train)\n", "dim(test)\n", "str(test)\n"]}, {"source": ["The training data consists of 12 vars with 891 observations.Test data consists of 11 columns and 418 rows. The traning set has 1 extra varible. Check which which one we is missing\n", "\n", " \n", "  \n", "    "], "cell_type": "markdown", "metadata": {"_cell_guid": "96ded9a0-37e4-46af-9569-675166e28f99", "_uuid": "d6ba0d298c5e312053f2247be96bc32505f55b4a"}}, {"outputs": [], "execution_count": null, "cell_type": "code", "metadata": {"_cell_guid": "e7d8250c-bb51-4258-b002-993f808d60a0", "_uuid": "d35e2e2ca5ebd260bdf796285e2aae4942e7098c"}, "source": ["check<-colnames(train) %in% colnames(test)\n", "colnames(train[check==F])\n"]}, {"source": ["since \"Survived\" is our target varible we want to predict the number of passengers that survived in test data. but first lets lets take a deep dive at our training set and see how many people survived."], "cell_type": "markdown", "metadata": {"_cell_guid": "b4fb1f8c-0156-4989-9c97-4218a1c52528", "_uuid": "e9db91621d5ee6a542cc23df2ea093e6ce33f44c"}}, {"outputs": [], "execution_count": null, "cell_type": "code", "metadata": {"_cell_guid": "f8ea7701-9807-43c0-9c5c-2d5983cb105b", "_uuid": "1563ea0aa2ff8ddf7013be037ccf806b28187b34"}, "source": ["ts<-table(train$Survived)\n", "ts"]}, {"source": ["This shows that only 342 of the 891 survived and 549 died, lets look at the propotions"], "cell_type": "markdown", "metadata": {"_cell_guid": "963be9e4-25cf-4f94-a689-3f5cedf38870", "_uuid": "421219427272986f954d681ff0ff9289e3b84dfe"}}, {"outputs": [], "execution_count": null, "cell_type": "code", "metadata": {"_cell_guid": "3d5bded7-d10a-4eec-b7f8-d774f3a13b31", "_uuid": "1b7f512b625bf1cbf57773d4fd08b62f5e62a0b3"}, "source": ["prop.table(ts)"]}, {"source": ["We can see that the propotion of those who survived is 38% and the proportion of those who did not survive is 61%. Now lets compare these propotions while considering their Gender."], "cell_type": "markdown", "metadata": {"_cell_guid": "1c2954fc-d2d6-46cf-9e38-c89a0f7d9606", "_uuid": "8adacaadb706907ff7e80f84da7829fa1af3b970"}}, {"outputs": [], "execution_count": null, "cell_type": "code", "metadata": {"_cell_guid": "c7427f48-05a9-4469-a80b-5bec1e083d68", "_uuid": "12c9409283589ef11e6b562abf0070f9eecfbc28"}, "source": ["tsg<-table(train$Sex,train$Survived)\n", "tsg\n", "prop.table(tsg, margin=1)"]}, {"source": ["As we can see the Survival rate amongst Females is high compared to males. So Females are more likely to survive than Males"], "cell_type": "markdown", "metadata": {"_cell_guid": "cd684bdf-85dc-46ea-97c9-edbba4fc78b1", "_uuid": "7c3435341b3761bf4868bd75192551092083fb83"}}, {"source": ["**Model building**\n"], "cell_type": "markdown", "metadata": {"_cell_guid": "1cb7b80f-e62a-4ffd-b27e-4244fb4284db", "_uuid": "f8e066e4015184fb6b0b2d5e69a4fa2b2b78f477"}}, {"source": ["using the above, we may assume that females survived and build our model as follows. create a copy of the test data set to tf, "], "cell_type": "markdown", "metadata": {"_cell_guid": "01c665f9-6de1-4c4f-9943-b18015064bfd", "_uuid": "c31356d50277b5de7a02f3727972b43ec31c1285"}}, {"outputs": [], "execution_count": null, "cell_type": "code", "metadata": {"_uuid": "0fc458817a88c3842e449fcb1e896e1e3c41a501", "collapsed": true, "_cell_guid": "457fd06d-845f-4854-8107-851d4a51a5d1"}, "source": ["tf<- test\n", "tf$Survived<-0\n", "tf$Survived[tf$Sex==\"female\"]<- 1\n", "#writing results to a csv file\n", "solution<-data.frame(PassengerId=tf$PassengerId,Survived=tf$Survived)\n", "#write.csv(solution, file =  \"females.csv\", row.names = FALSE)"]}, {"source": ["**Data Cleaning**"], "cell_type": "markdown", "metadata": {"_cell_guid": "7c42f75f-5547-4683-966b-bfc6fd4f0590", "_uuid": "fe3be39b14af6fa23bdc998026535fa52fde3d8e"}}, {"source": ["Now we need to clean our data set for durther modelling, its important explore the dataset to understand what features are to be cleaned. for a start we would check for missing values per column in the train and test sets."], "cell_type": "markdown", "metadata": {"_cell_guid": "347c8dae-490e-4864-bc07-0d55a300852f", "_uuid": "e1d2659a9a4b9a75824fab953b20306a322f9e74"}}, {"outputs": [], "execution_count": null, "cell_type": "code", "metadata": {"_cell_guid": "2cb06700-a02b-475d-adc7-5a8e6775bdc9", "_uuid": "23fba5132973816d8b3b84ad2f2b70d0f087c215"}, "source": ["colSums(is.na(train))\n", "colSums(is.na(test))"]}, {"source": ["We can see that both our data sets have missing values in the Age column and Fare in the test set. To deal with the problem of missing cases we need to work with a full dataset. Initially we will create copies of  the train and test set, and then combine them to create a full Titanic set.Note: Initialize the Survived column as NA in the test data"], "cell_type": "markdown", "metadata": {"_cell_guid": "7de0abd7-2858-4985-b2cb-f4631200f310", "_uuid": "745aab3abd7cd6058e9a0680836dbef34c014d9c"}}, {"outputs": [], "execution_count": null, "cell_type": "code", "metadata": {"_cell_guid": "2bd09d99-9b20-406d-b9a3-c65df205c425", "_uuid": "d4d669a04a5834f92c0422bc9d0ff10ab211c954"}, "source": ["Train<- train\n", "Test<-test\n", "Test$Survived<-NA\n", "titanic<- rbind(Train,Test)\n", "summary(titanic)"]}, {"source": ["Firstly, lets deal with the Fare variable. Since there's only one missing value, we can just take a look at it."], "cell_type": "markdown", "metadata": {"_cell_guid": "3ccfaf71-ff5b-42e2-a770-68c1d420dbd8", "_uuid": "c614d76c249ea370619daa2a4f839bbd056fd454"}}, {"outputs": [], "execution_count": null, "cell_type": "code", "metadata": {"_cell_guid": "8a490c37-5342-4898-873a-a2727e95d8f2", "_uuid": "95170bf9bb3bbdc3ff842e747f73d27506613294"}, "source": ["titanic[!complete.cases(titanic$Fare),]\n"]}, {"source": ["Now that we know which row (1044) has a missing Fare, we can simply impute it."], "cell_type": "markdown", "metadata": {"_cell_guid": "5350599d-d006-4409-a01e-324103b40962", "_uuid": "e21ba06fba3535dc03fff94070759f4d07e6082d"}}, {"outputs": [], "execution_count": null, "cell_type": "code", "metadata": {"_cell_guid": "0e1350e2-a0e3-402d-81c3-c69abd577dd0", "_uuid": "7099aa4fe8e82c8228994e2bb88552b447b9fec1"}, "source": ["titanic$Fare[1044]<- mean(titanic$Fare,na.rm=TRUE)\n", "titanic[!complete.cases(titanic$Fare),]"]}, {"source": ["Now how do we fill the Age missing values. We will Predict the Missing values with a decision tree"], "cell_type": "markdown", "metadata": {"_cell_guid": "c2a505cc-e2a4-4271-88bf-c2a4f6a539a9", "_uuid": "7531e606a4b15ef36c8d65ff6192f465a85ce4d1"}}, {"outputs": [], "execution_count": null, "cell_type": "code", "metadata": {"_uuid": "b3846874877e8cc99928fdf35c09aa20d2b3afe4", "collapsed": true, "_cell_guid": "cb20924d-1280-4a52-8a64-cdfed34d9756"}, "source": ["library(rpart)\n", "fit_age<-rpart(Age ~Pclass +Sex +SibSp +Parch +Fare + Embarked, data= titanic[is.na(titanic$Age),] ,method= \"anova\")\n", "titanic$Age[is.na(titanic$Age)]<- predict(fit_age,titanic[is.na(titanic$Age),])"]}, {"outputs": [], "execution_count": null, "cell_type": "code", "metadata": {"_uuid": "772332390e4b0ffd57cffe7d6236ad1e649b0d07", "collapsed": true, "_cell_guid": "39793397-475b-4037-9a8a-127e92757ca9"}, "source": ["library(rpart)\n", "fit_age<-rpart(Age ~Pclass +Sex +SibSp +Parch +Fare + Embarked, data= titanic[!is.na(titanic$Age),] ,method= \"anova\")\n", "titanic$Age[is.na(titanic$Age)]<- predict(fit_age,titanic[is.na(titanic$Age),])\n", "#summary(fit_age)"]}, {"source": ["\n", "Since we know that the full data set is made up of 891 train and 418 test, we can split the data "], "cell_type": "markdown", "metadata": {"_uuid": "0ad4d9b48d7bf41d45bbe56730995e2f4b89cd92", "collapsed": true, "_cell_guid": "c937dbfd-110b-480b-8655-db0f1c37a7eb"}}, {"outputs": [], "execution_count": null, "cell_type": "code", "metadata": {"scrolled": true, "_uuid": "a0261d966c09cc21d09860b1a31ae0723fe6221a", "collapsed": true, "_cell_guid": "962376f7-9841-4f47-a319-4c7fbf102a80"}, "source": ["train2<- titanic[1:891,]\n", "test2<- titanic[892:1309,]"]}, {"source": ["**Survival Prediction-Decision Tree Model**"], "cell_type": "markdown", "metadata": {"_cell_guid": "9fcef499-582c-4ba6-a5b2-c7431a16f03a", "_uuid": "35ae4843beff0946b411764310b2a2904105e3f1"}}, {"outputs": [], "execution_count": null, "cell_type": "code", "metadata": {"_cell_guid": "d881fd79-020f-411d-9dbb-09c8b260e600", "_uuid": "071c5dd33dd45e7b0a966d384d81553cbdafe3e6"}, "source": ["library(rattle)\n", "library(rpart.plot)\n", "library(RColorBrewer)"]}, {"outputs": [], "execution_count": null, "cell_type": "code", "metadata": {"scrolled": true, "_cell_guid": "3353af4a-b13d-4c8c-be04-943d4868b112", "_uuid": "7ac20144afe705ad34719893b595faf05bd1239f"}, "source": ["fit <- rpart(Survived ~ Pclass + Sex + Fare + Age + SibSp + Parch + Embarked, data = train2, method = 'class')  \n", "fancyRpartPlot(fit)"]}, {"source": ["From the top we can see that the node is voting 0, so at this level everyone would die. Below that we see that 62% of passengers die, while 38% survive (the most will die here that\u2019s why the node is voting that everyone die). If we go down to the male/female 81%/26% will die and 19%/74% will survive as the proportions exactly match those we find earlier. Let\u2019s see the proportions again rounded with two decimals.\n"], "cell_type": "markdown", "metadata": {"_cell_guid": "78947227-85bd-4de8-95c2-a0eed576ea50", "_uuid": "3f254432c818af93888d629ff701927bee26f512"}}, {"outputs": [], "execution_count": null, "cell_type": "code", "metadata": {"_cell_guid": "4814037a-9b87-4bb1-ab36-a12bdf6b5519", "_uuid": "720d706f736fb80aacccb3a74f50f3b8f42e2a29"}, "source": ["round(prop.table(table(train2$Survived)),2)\n", "round(prop.table(table(train2$Sex, train2$Survived),margin = 1),2)"]}, {"source": ["The numbers produced by the Decision tree are exactly the  same as the ones produced from training data. Make the prediction using the test2 set"], "cell_type": "markdown", "metadata": {"_uuid": "31d581910088f184a8a78a004fb82be69d0a3533", "collapsed": true, "_cell_guid": "4d021f53-edf3-4898-ae4d-5d2c797d023d"}}, {"outputs": [], "execution_count": null, "cell_type": "code", "metadata": {"_uuid": "aa390d734a79040d9e669e18c3e336356253c061", "collapsed": true, "_cell_guid": "f7c57e86-846e-4413-93ba-35e7913184f5"}, "source": ["my_pred <- predict(fit, newdata = test2, type = \"class\")\n", "#head(my_pred)\n", "solution2<- data.frame(PassengerId = test2$PassengerId, Survived=my_pred)"]}, {"source": ["Write solution to csv file"], "cell_type": "markdown", "metadata": {"_cell_guid": "9d51c385-dab0-4413-a1e4-c36d90347dc8", "_uuid": "445ddedd6e375fdf9eb1f306c4d0bf0e1ccb7994"}}, {"outputs": [], "execution_count": null, "cell_type": "code", "metadata": {"_uuid": "414363c9cf17a47be5090648d3841ccf1352009b", "collapsed": true, "_cell_guid": "4e469b71-c518-421b-977f-5808a575b366"}, "source": ["write.csv(solution2, file =  \"Tsolution.csv\",row.names = FALSE)"]}, {"outputs": [], "execution_count": null, "cell_type": "code", "metadata": {"_uuid": "ab8ce35cb8cf966d109da491227702f096929e74", "collapsed": true, "_cell_guid": "2f039105-5caa-4df8-b390-62091737b040"}, "source": ["\n", "\n"]}]}