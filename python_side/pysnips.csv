snippets
mslacc=mslacc[:train_size]
"mslacc=mslacc.drop(columns=['PassengerId','Survived'])"
mslacc=mslacc[l_predictors]
"mslacc=mslacc.drop(['PassengerId','Name','Ticket','FirstName',
'LastName','Commentaire','Cabin'],axis=1)"
mslacc=mslacc[(mslacc['SibSp']==0)&(mslacc['Parch']==0)]
mslacc=mslacc[new_columns]
df_real_test['PassengerId']=mslacc['PassengerId']
"mslacc=mslacc[['Pclass','Sex','Age','SibSp','Parch','Ticket','Fare',
'Cabin','Embarked']]"
"mslacc=mslacc.drop('title',axis=1)"
"mslacc[(mslacc['Sex']=='female')&(mslacc['Fare']<=10)&(mslacc['Age'
]>28)&(mslacc['Name_title_Miss']==1.0)]"
"mslacc[['sibsp','parch','familysize']].head()"
"mslacc=mslacc.drop(['Pclass','SibSp'],axis=1)"
"mslacc[['Survived','Sex','Embarked','Fare','Pclass','Age','Parch',
'SibSp']]"
mslacc[:1]
mslacc=[mslacc[1]foriteminst_pred_items]
mslacc=mslacc[Selected_features]
"mslacc=mslacc.drop(['Pclass','Sex','SibSp','Parch','Title'],axis=1)"
"df_temp.loc[df_temp['FareCat']==i,'Count']=mslacc[df_temp['FareCat']==i
]['Count']/mslacc[i]"
mslacc=mslacc[0][0]+mslacc[0][1]+mslacc[0][2]
"mslacc=mslacc[['Pclass','Sex','Embarked','IsAlone','Title','FareBin',
'AgeBin']]"
mslacc=mslacc[891:1310]
mslacc=mslacc[Target]
"mslacc=mslacc.drop(['Embarked_S','Sex_female','Name_Rare','Name_Mr.',
'SibSp','Parch','Pclass_1'],axis=1)"
mslacc=mslacc.iloc[mslacc[0]]
df['Children']=mslacc['Fare'].loc[mslacc.Child==1]
"mslacc.drop(['PassengerId','Survived','Name','Ticket','Cabin'],axis=1,
inplace=True)"
mslacc=mslacc[test]
mslacc=[mslacc[0]forxinresults]
"mslacc.loc[:,('Name')]"
df['CuicoHijoUnico']=(4-mslacc['Pclass'])/(mslacc['Parch']+1)
"mslacc.drop(['class3'],axis=1,inplace=True)"
mslacc=mslacc[700:]
"mslacc=mslacc.loc[:,(['SibSp','Parch','Person_Class','Age_Missing',
'Survived'])]"
titanic['Fare']=mslacc['Fare']
data['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc=mslacc.loc[:,(['Survived'])]"
data_all['Embarked_C']=(mslacc['Embarked']==2)+0
mslacc.shape[0]==ntrain+ntest
"mslacc=mslacc.drop(['Survived','PassengerId','Name','Ticket','Age',
'SibSp','Parch','Cabin'],axis=1)"
"mslacc=mslacc.drop(['PassengerId','SibSp','Parch','Ticket','Name',
'Cabin','Title','FamilySize'],axis=1)"
mslacc[mslacc['Ticket']==111361]
"mslacc.loc[0:11,'Name':'Ticket']"
mslacc=mslacc[df_train['Survived']==1]['Age']
"mslacc=X=mslacc.drop(['Survived','PassengerId','Parch'],axis=1)"
"mslacc.drop('Age_Band',axis=1,inplace=True)"
data_all['Cabin_F']=(mslacc['Cabin']=='F')+0
mslacc=mslacc[mslacc['Age']==50]
mslacc=mslacc[mslacc.Title=='Other']
"mslacc=mslacc.drop(['PassengerId','Survived','Name','Ticket','Cabin'],
axis=1)"
df_dums['Parch_0']=[(1ifele==0else0)foreleinmslacc['Parch']]
"mslacc.drop(['PassengerId','Cabin','Sex','Embarked','Name','Ticket'],
axis=1,inplace=True)"
mslacc=mslacc[:-1]
mslacc=mslacc[:SURV]['Survived']
"mslacc=mslacc.loc[:,(['Pclass','Sex','SibSp','Age','Parch','Embarked'])
]"
"mslacc.drop(['PassengerId','SibSp'],axis=1,inplace=True)"
train[feature]=(mslacc[feature]-min_)/(max_-min_)
dfnum['Age']=mslacc['Age']
"mslacc['Deck'],"
Xtrf_df['Fsize']=mslacc['SibSp']+mslacc['Parch']
mslacc.drop('Salutation')
df_data['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
dataset.Fare=1.0*mslacc.Fare//mslacc[mslacc.Pclass-1]
"mslacc=mslacc.iloc[(i),:]"
mslacc=mslacc[new_order]
mslacc.stats.describe(X[0])
X['is_child_and_sex']=mslacc['Sex']*mslacc['is_child']
mslacc.head()
"mslacc=mslacc.drop(columns=['SibSp','Parch'])"
mslacc=mslacc[label_name]
"mslacc[['Name','Master']].head(10)"
mslacc['FareBin_Code']
"mslacc=mslacc.drop(['EmbarkedFill','Title'],axis=1)"
df['Alone']=(mslacc['SibSp']==0)&(mslacc['Parch']==0)
mslacc=mslacc['Algorithm']
mslacc=mslacc[prediction_var]
"mslacc.drop(['Cabin','PassengerId','Name','Ticket','Sex_female',
'Parch','SibSp'],axis=1,inplace=True)"
mslacc['Sex'].head()
train['Sex_Class_Age']=mslacc['Sex_Class']+'_'+mslacc['age_cuts']
mslacc=mslacc.loc[mslacc.Pclass==2]
"mslacc=mslacc[1,1]/(mslacc[0,1]+mslacc[1,1])"
train['FamSize']=mslacc['Parch']+mslacc['SibSp']+1
full_data['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
test_1['PPT']=mslacc['SibSp']+mslacc['Parch']+1
mslacc['ValidationScore']
mslacc=mslacc[test_nan>0]
"mslacc=mslacc.drop(['Survived','AgeBand'],axis=1)"
"mslacc=mslacc[mslacc.index[mslacc.loc[:,('Survived')]==mslacc.nan],...]"
tit_df_test['numofrelatives']=mslacc['SibSp']+mslacc['Parch']
"mslacc=mslacc.drop(['PassengerId','Name','Ticket','Cabin','Embarked',
'Fare'],axis=1)"
mslacc=pd.read_csv(test_csv)
data_all['Pclass_2']=(mslacc['Pclass']==2)+0
"mslacc.loc[:,(['Age*Class','AgeFill','Pclass'])].head(10)"
"mslacc=mslacc[['Pclass','Sex','Age','SibSp','Parch','Embarked']]"
comb['EC']=mslacc['Embarked']=='C'
mslacc=mslacc[mslacc.columns.drop('Survived')]
"mslacc=mslacc.drop('Cabin4',axis=1)"
"mslacc=mslacc.drop([_id],axis=1)"
"df['CLASS']=mslacc['A']+mslacc['B']*mslacc['C']+mslacc['A']*mslacc[
'D']"
"mslacc.drop(columns=['Name'],inplace=True)"
df_test['Free']=mslacc['Free'][891:]
dftest['Fsize']=mslacc['Fsize']
df_all['AdjFare']=mslacc['Fare']/mslacc['TicketCount']
"mslacc=mslacc.drop(['Name','Cabin','Fare','Parch','SibSp','Ticket',
'title'],axis=1)"
"mslacc.drop(['PassengerId','Name','Cabin','Embarked','Ticket','Fare'],
axis=1,inplace=True)"
predictions_df['PassengerId']=mslacc['PassengerId']
test['Fare_per_person']=mslacc['Fare']/(mslacc['Family_Size']+1)
"mslacc=mslacc[['Pclass','Sex','ParchCat','Embarked','Fare','CabinCat']]"
survived_pclass['Rate']=mslacc[1]/(mslacc[1]+mslacc[0])
mslacc=mslacc[trainIndex]
"mslacc=mslacc[mslacc['Ticket']==mslacc.loc[pid,'Ticket']]"
mslacc=mslacc[:m1-100]
train_df['familysize']=mslacc['sibsp']+mslacc['parch']+1
"X,y=X_train,mslacc['Survived']"
s[f'db{l}']=beta2*mslacc[f'db{l}']+(1-beta2)*mslacc[f'db{l}']**2
"mslacc=mslacc.drop(columns=['Ticket','PassengerId','Cabin'])"
df_test['SexN']=mslacc['Sex']
test_df['family_size']=mslacc['sibsp']+mslacc['parch']
mslacc=mslacc[s==True]
dcee[0]=mslacc[0]+(mslacc[n]-mslacc.loc[n])
mslacc=mslacc[mslacc['sex']==j]
"mslacc=mslacc[(mslacc['group_type']=='alone')&(mslacc['Sex']=='female')
]"
mslacc=mslacc[mslacc['survived']==1]
mslacc=mslacc[:n_train]
titanic['Age']=mslacc['Age']
"X_text[e,p+max_name_length+max_ticket_length]=mslacc[w]"
train_data.head()['Embarked']
res['Accurate']=(mslacc['ProbaMin']<0.2)|(mslacc['ProbaMax']>0.8)
data_df['Title']=mslacc['Name']
mslacc[mslacc['is_estimated_Age']==True]
mslacc=mslacc[~idx]
mslacc=mslacc[mslacc['is_test']==0]
mslacc=mslacc[cat_attri_index]
"mslacc=mslacc.drop(['Fare','Pclass'],axis=1)"
titanicANDtest_df['Sb']=mslacc['SibSpBinary']
"mslacc=mslacc[(mslacc['Cabin']>=1)&(mslacc['Name']>=2)&(mslacc[
'Cabin']<mslacc['Name'])]"
test_df['Family_Size']=mslacc['SibSp']+mslacc['Parch']+1
mslacc=[mslacc['PassengerId']]
"mslacc=mslacc.drop(['SibSp','Parch','Fare','Family_members',
'FareBand'],axis=1)"
mslacc.shape[:]
mslacc=pd.read_csv(filepath_or_buffer=trainFile)
mslacc=mslacc[mslacc['Percent']>0]
"mslacc={'PassengerId':mslacc['PassengerId'],'Survived':Y_pred}"
"mslacc.drop(rest,inplace=True,axis=1)"
new_data['Fare']=mslacc['Fare']/20
mslacc=pd.read_csv('../input/dataset2/test_tmp.csv')
master_df['fare_per_person']=mslacc['Fare']/mslacc['fam_size']
"mslacc=mslacc.drop(['Cabin','Ticket','PassengerId'],axis=1,errors=
'ignore')"
"mslacc=mslacc.drop('Cabin',axis='columns')"
"mslacc=mslacc.drop('Sex_female',1)"
mslacc=running_corrects/mslacc[phase]
mslacc[mslacc.Ticket=='113760']
"mslacc=mslacc.drop(['Dataset','PassengerId','Survived'],axis=1)"
train['Embarked_2']=mslacc['Embarked']=='Q'
"mslacc=mslacc[['Title','Age','FamilySize']]"
mslacc=mslacc[to_keep]
"mslacc.drop('Embarked_Missing',axis=1,inplace=True)"
"mslacc=mslacc.drop(['PassengerId','Name','Ticket','Cabin','Embarked'],1)"
mslacc=mslacc[mslacc.Survived!='S']
"mslacc=mslacc.drop(['Name','Title'],axis=1)"
titanic_test['Family']=mslacc['Parch']+mslacc['SibSp']
"mslacc=mslacc[['PassengerId','Pclass','Sex','Age']]"
"train_X,train_Y=mslacc[:891],train_label"
train_set['Died']=1-mslacc['Survived']
"mslacc=mslacc[['PassengerId','Name']]"
mslacc[(mslacc.Title=='Master')&(mslacc.Survived==0)]
"mslacc=pd.read_csv('../input/train.csv',header=0,dtype={'Age':np.float64})"
"mslacc.drop(['Parch','SibSp'],inplace=True,axis=1)"
"mslacc=(mslacc['Title']!='Mr')&(mslacc['Title']!='Miss')&(mslacc[
'Title']!='Mrs')&(mslacc['Title']!='Master')"
mslacc=mslacc[titanic_X_colns]
mslacc.head(20)
mslacc['Age'].head()
"mslacc=mslacc.loc[:,(['Age','SibSp','Parch','Sex','Pclass',
'Age_Missing','Survived'])]"
"mslacc.drop(['Pclass','Sex','Ticket','Title'],axis=1,inplace=True)"
X_full['Pclass']=mslacc['Pclass']-2
mslacc=1ifmslacc['Pclass']==2else0
mslacc=mslacc[test_idx:]
"mslacc=mslacc.drop(['Age_Group'],axis=1)"
mslacc[mslacc.SibSp>7]
"mslacc=mslacc[['Pclass','Sex','Age','SibSp','Parch','Mr','Mrs',
'Miss','royalty','officer','Embarked_S','Embarked_C','Embarked_Q',
'Embarked_unknown','Fare_cheap','Fare_average','Fare_costly']]"
mslacc=pd.read_csv(default_path+'test.csv')
Titanic['Fsize']=mslacc['SibSp']+mslacc['Parch']+1
mslacc=mslacc['Pclass'][i]
mslacc.drop(columns=train_bfe.columns[index_deleted]).head(3)
"mslacc=mslacc[['PassengerId','Age','SibSp','Parch','Sex','Pclass']]"
"train['Title']=[(valifvalin['Mr','Mrs','Miss','Ms','Master']else
'Others')forvalinmslacc['Title']]"
"mslacc=mslacc.drop(['Ticket','Cabin','Name','PassengerId'],axis=1)"
"mslacc=mslacc.loc[:,(['Pclass','Sex','Age','SibSp','Parch','Fare',
'Embarked','Survived'])]"
mslacc=mslacc[0]['best_params']
"mslacc.drop(['Alone','person','Pclass','WithoutFamily','male',
'class_3'],axis=1,inplace=True)"
mslacc=mslacc[melb_features]
"mslacc[['Age','Survived','Embarked']][0:15]"
"X_prob0[:,(1)]=mslacc[mslacc[:,(1)]]"
mslacc=mslacc[SURV:][cols_cut12]
mslacc[mslacc['Fare']>400]
mslacc['Cabin_num']
mslacc[cond_notnull&cond_m]['Age']
train_temp['engineered_feature']=mslacc['engineered_feature']
mslacc=mslacc[my_columns]
"mslacc.drop(['Title'],axis=1,inplace=True)"
"mslacc.drop(['Sex_male','Embarked_S'],axis=1,inplace=True)"
output['PassengerId']=mslacc['PassengerId']
acc_test[k]=mslacc[k]['acc_test']
mslacc.loc[mslacc['deck']=='T']
"mslacc.drop('index',1,inplace=True)"
"mslacc=mslacc.drop(['Name','Ticket','PassengerId','Cabin'],axis=1)"
df_train['Family_Survival']=mslacc['Family_Survival'][:891]
mslacc=mslacc[final_features]
"mslacc=mslacc.iloc[:,([0,1,3,4,5,6,8,10])]"
"mslacc.drop(labels='Ticket',axis=1,inplace=True)"
mslacc=mslacc[predictors_train]
"mslacc=mslacc.iloc[891:].drop('Survived',axis=1)"
sol['PassengerId']=mslacc['PassengerId']
"mslacc=mslacc.drop(j,axis=1)"
mslacc=mslacc[f][0]
train['Pclass_3']=mslacc['Pclass']==3
"mslacc.describe(percentiles=[0.01,0.05,0.1,0.25,0.5,0.75,0.9,0.95,0.99]
)"
mslacc=pd.read_csv('../kaggle/train.csv')
mslacc=mslacc[model_params]
comb['Family_Size']=mslacc['Parch']+mslacc['SibSp']+1
mslacc=mslacc[mslacc['SibSp']+mslacc['Parch']>=1]
train_data['RelativesOnboard']=mslacc['SibSp']+mslacc['Parch']
mslacc=mslacc[parameters]
"mslacc=mslacc.loc[(mslacc['Survived']==0)&(mslacc['Pclass']==1),'Age']"
mslacc=mslacc[fcol]
mslacc.iloc[0]
df_train['norm_fare']=(mslacc['Fare']-fare_mean)/fare_std
"mslacc=mslacc.drop(['PassengerId','Name','Ticket','Embarked'],axis=1)"
"dftrain.loc[idx,'CountTicket_InTrain']=mslacc[ticket]"
"test.loc[test.PassengerId==j,'Age']=mslacc.iloc[i,0]"
"mslacc.drop(labels=column_drop,axis=1,inplace=True)"
mslacc=mslacc[1]
"mslacc=mslacc[['Survived','Age']]"
train.head()['Cabin']
"mslacc=pd.read_csv(path,index_col='PassengerId')"
mslacc.head(6)
mslacc=mslacc['Sex'][sel_age_fin]=='male'
mslacc=pd.read_csv('../input/titanic-dataset/train.csv')
mslacc[(mslacc['Ticket']>'113500')&(mslacc['Ticket']<'113600')]
"mslacc=mslacc.drop(['Name','PassengerId','Cabin','Ticket'],axis=1)"
"mslacc=pd.read_csv('../input/test.csv').drop('Ticket',axis=1)"
mslacc[mslacc.surname=='Brown']
mslacc=mslacc[test_index]
train['FamilySize']=mslacc['Family']
"mslacc=mslacc[(mslacc['group_type']=='family')&(mslacc[
'immediate_family']==0)]"
"mslacc=mslacc.drop(columns=['PassengerId','Survived','Cabin','Ticket'])"
"mslacc=mslacc.drop(['PassengerId','Name','Ticket','Survived'],axis=1)"
mslacc=mslacc.loc[mslacc['Age']>15].loc[mslacc['Age']<=30]
mslacc=mslacc.loc[test_index]
df_train['individualticket']=mslacc['Fare']/mslacc['ticketcount']
test.head()['Embarked']
mslacc=mslacc[0:t_n[0]]['Survived']
df['Family_Size']=mslacc['SibSp']+mslacc['Parch']
"mslacc=pd.read_csv('../input/test.csv')[['Age','Fare']]"
"id_ts,X_ts=mslacc.loc[:,('PassengerId')],mslacc.drop(columns=[
'PassengerId'])"
df['NumFam']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc.drop('CabinLetter',axis=1,inplace=True)"
mslacc=mslacc[num]
test['Fam']=mslacc['SibSp']+mslacc['Parch']
mslacc['Family_Size'].head()
"mslacc.drop('Title',axis=1,inplace=True)"
train['FamilySize']=1+mslacc['SibSp']+mslacc['Parch']
mslacc=mslacc['loss'][a:b]
s[f'dW{l}']=beta2*mslacc[f'dW{l}']+(1-beta2)*mslacc[f'dW{l}']**2
"mslacc=mslacc[['MaxDepth','AverageAccuracy']]"
mslacc=mslacc[mslacc['sex']=='male']
titanic['Cabin']=mslacc['Cabin']
sub_vot2['PassengerId']=mslacc['PassengerId']
mslacc=mslacc.loc[mslacc['Survived']==True]
mslacc=mslacc[:5]
mslacc=mslacc.shape[0]-num_training
mslacc=title_base+mslacc[port]+'(Female)'
"mslacc.loc[mslacc['age'],['age','Survived']]"
mslacc=mslacc['SibSp']==df_titanic.iloc[age]['SibSp']
"dftrain.loc[idx,'CountTicketButLast_InTrain']=mslacc[ticketButLast]"
mslacc=mslacc[1][1]/(mslacc[1][1]+mslacc[0][1])
mslacc=PNetworkSum-mslacc['Status']
mslacc=mslacc['Ticket'][mslacc['Parch']==0]
"mslacc=mslacc[['title','Age']]"
mslacc=mslacc[0]
"mslacc.loc[1:10,'Age':'Name']"
"mslacc.drop(drop_features,axis=1,inplace=True)"
"all_data['Married']=[(1ifiin['Mrs','Countess','Mme','Dona']else0
)foriinmslacc['Title']]"
df_proportions['variance']=mslacc['%passengers']-mslacc['%survived']
"mslacc=mslacc.drop('CabinNum3',axis=1)"
"mslacc.drop(['Embarked','Name'],axis=1,inplace=True)"
mslacc=mslacc['Title']==idx
"mslacc=mslacc.drop(['Cabin','Ticket','PassengerId','Survived'],axis=1)"
mslacc[mslacc.qtd_same_ticket==11]
"mslacc.drop(['NameLen'],axis=1,inplace=True)"
"train_y,val_y=mslacc[:split_idx],mslacc[split_idx:]"
sub_gbdt['PassengerId']=mslacc['PassengerId']
mslacc=mslacc.iloc[891:1309]
mslacc.Family_Survival.describe()
mslacc=pd.read_csv('../input/my-dataset/train.csv')
test['CategoricalAge']=mslacc[891:]
mslacc=mslacc[features_cat+features_num]
mslacc.shape(train)
"mslacc.drop(['PassengerId','Name','Ticket'],axis=1)"
output['Sex_Age']=mslacc['Age']*mslacc['Sex']
"mslacc=mslacc['depth'],"
"mslacc=mslacc.drop(['FamilyBucket'],axis=1)"
"mslacc=mslacc[(mslacc['group_type']=='family')&(mslacc['Sex']==
'female')&(mslacc['immediate_family']==0)]"
train6['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
mslacc=mslacc[len_train:]
mslacc=mslacc[mslacc['survived']==isv]
"mslacc.drop(labels=['PassengerId','Name','Embarked'],axis=1,inplace=True)"
mslacc.head(3)
"mslacc=mslacc.iloc[(0),:]"
df['embarked_fill']=mslacc['Embarked']
df_all['SharedFeatures']=mslacc['SharedTicket']+mslacc['SharedName']
data_df['AgeBin_Code']=mslacc['AgeBin_Code']
"mslacc.drop(labels=['Ticket','Sex_male'],axis=1,inplace=True)"
"mslacc.drop(['Cabin','Embarked','Name','Ticket','Title','old_age'],
axis=1,inplace=True)"
"mslacc=mslacc.drop(['Salutation'],axis=1)"
mslacc=(mslacc['Embarked']=='Q')&(mslacc['Survived']==1)
"X_prime[:,(0)]=mslacc['Pclass']-2"
df_data['Family']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc.drop(columns=['SibSp','Parch'],inplace=True)"
mslacc=mslacc.iloc[dev_index]
"mslacc=mslacc[:,(2)][y_train4==j]"
mslacc=mslacc.loc[train_fold]
X_test['FamilySize']=1+mslacc['SibSp']+mslacc['Parch']
mslacc=mslacc.iloc[[row_to_show]]
"mslacc.drop('Embarked_Q',axis=1,inplace=True)"
mslacc[mslacc.Ticket=='CA.2343']
"mslacc=mslacc.drop('Age',axis=1)"
"mslacc=mslacc.drop(['NamePrefix'],axis=1)"
mslacc[mslacc['Age']>=80]
"mslacc[['Age','Age_0','Age_1','Age_2','Age_3','Age_4','Age_5','Age_6']
].head(10)"
"mslacc=mslacc.drop('Survived',axis=1)"
mslacc['Ticket'].head(10)
titanic_training_data['FamilySize']=mslacc['SibSp']+mslacc['Parch']
"mslacc=pd.read_csv(f'{PATH}train.csv',low_memory=False)"
test_csv['PassengerId']=mslacc['PassengerId']
mslacc=pd.read_csv('../input//train.csv')
titanic_train['Family']=mslacc['SibSp']+mslacc['Parch']
df['Men']=mslacc['Fare'].loc[mslacc.Man==1]
mslacc=mslacc[j][0]ifj==ielse'black'
"test_df.loc[p,'Age']=mslacc[is_m]"
"mslacc=[['Cabin_isnan','Pclass','Sex_Bin','Embarked_Num_fill',
'Age_fill','SibSp','Parch','Fare_fill','Fare_origna','Age_origna',
'Embarked_Num_origna'][x]forxinindices]"
data_test['Family']=mslacc['Parch']+mslacc['SibSp']
f1_dict[clf]=mslacc[clf]/10.0
mslacc=mslacc['Survived']==0
mslacc['Cabin_Letter']
mslacc=mslacc.drop([xforxinmiss.indexifxinno_parch.index])
ship['High_Fare']=[(1ifx>50else0)forxinmslacc['Fare']]
df_train['TitleCat']=mslacc['TitleCat'][:891]
"mslacc=mslacc.iloc[2,5]"
mslacc=mslacc['val_loss'][a:b]
df_train['Fare']=(mslacc['Fare']-fare_mean)/fare_std
mslacc=mslacc['Survived'][801:]
mslacc=mslacc['classifier']
mslacc=mslacc[l:]
"mslacc=mslacc.drop(['PassengerId','Name','Sex','Ticket','Cabin',
'child','Embarked','title','mother'],axis=1)"
"mslacc=mslacc.drop(['Age'],1)"
"mslacc.drop(['Cabin','Name','Parch','PassengerId','SibSp','Ticket'],
axis=1,inplace=True)"
"mslacc.drop(columns_to_drop,axis=1,inplace=True)"
"mslacc=mslacc.loc[:890,(cols)]"
df_full['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc.drop('Pclass',inplace=True,axis=1)"
mslacc=mslacc.loc[mslacc['Age']>30].loc[mslacc['Age']<=60]
mslacc[mslacc.TicketButLast=='34708']
"mslacc=mslacc.drop(['Ageband'],axis=1)"
mslacc=mslacc[counts<10]
"mslacc.drop(index=idx,inplace=True)"
mslacc['Age_cat'].head()
"class_fare.loc[(3),:]=mslacc[df['Pclass']==3]['Fare_per_ticket_member'
].describe()"
mslacc.describe(include=[np.object])
mslacc=mslacc[predictors]
new_data['Age']=mslacc['Age']/15
"data.head()[['Pclass','Age','SibSp','Parch','Ticket','Cabin','Embarked']]"
mslacc=mslacc[mslacc['group_type']=='family']
data['f_size']=mslacc['SibSp']+mslacc['Parch']+1
df['ClassFare']=mslacc['Pclass']*mslacc['Fare_Per_Person']
"mslacc=mslacc.drop(columns=['ABC','SVC','ETC'],axis=1)"
mslacc=pd.read_csv(passenger_data_filepath)
mslacc=mslacc.drop(d)
"mslacc={'PassengerID':mslacc['PassengerId'],'Survived':y_pred}"
mslacc=mslacc[mslacc['Sex']=='female']
"mslacc.drop(cols_to_drop,inplace=True,axis=1)"
mslacc=mslacc[good_feature_list]
df.loc['Store1']['Cost']
"mslacc=mslacc.drop(columns=['Age','age_stage'],axis=1)"
"mslacc.drop('Alone',axis=1,inplace=True)"
data['Family']=mslacc['SibSp']+mslacc['Parch']+1
mslacc=mslacc[b_test]
"trainy,testy=mslacc.iloc[x],mslacc.iloc[y]"
"mslacc=mslacc[['Age','Fare','Family','Pclass']]"
"mslacc=mslacc[['Pclass','Sex_Code','Age','SibSp','Parch','Fare',
'Agebin_Code','Farebin_Code','FamilySize','IsAlone','Title_Code',
'Embarked_Code']]"
"mslacc=mslacc.drop(['Sex','Embarked'],axis=1)"
data_out['RelativesOnboard']=mslacc['SibSp']+mslacc['Parch']
"mslacc=mslacc.drop(['passengerid','name'],axis=1)"
"mslacc=mslacc.loc[fare_null_filter,]"
mslacc[0:5]
df['fare/ticket']=mslacc['Fare']/mslacc['rep_ticket']
"mslacc=mslacc.iloc[:,:-1]"
"x_tr,x_te=mslacc[train_index],mslacc[test_index]"
df_test['ParchBool']=mslacc['Parch']>0
"mslacc.drop(['Name','Embarked','Pclass','Ticket'],axis=1,inplace=True)"
titanic_data['SharedTicket']=mslacc['SharedTicket']
mslacc=mslacc[mslacc['sex']=='female']
mslacc=pd.read_csv('../input/test.csv')['PassengerId']
trainData['Label']=mslacc['Survived']
"mslacc=mslacc.drop('Ticket',axis=1).drop('Name',axis=1)"
"mslacc.drop(columns=drop_columns,inplace=True)"
"mslacc=mslacc.drop(columns=['High','Miss','Mr','Mrs','Other'],axis=1,
inplace=False)"
"mslacc=mslacc.drop(['Pclass','Sex','Name','SibSp','Parch','Ticket',
'Fare','Cabin','Embarked','Age'],axis=1)"
train_ds['FamilySize']=mslacc['Parch']+mslacc['SibSp']+1
mslacc=mslacc[var2]
"mslacc=mslacc.drop(['Age','Fare','Age_bin','Fare_bin'],1)"
"mslacc.drop(drop_columns_test,axis=1,inplace=True)"
mslacc=pd.read_csv('./data/valid_split_final.csv')
"mslacc=mslacc.iloc[:,0:]"
mslacc['Title']=='Jonkheer'
"mslacc=mslacc.drop(['Survived','Name','PassengerId','Ticket','Cabin',
'Embarked'],axis=1)"
master_df['fam_size']=mslacc['Parch']+mslacc['SibSp']+1
mslacc=pd.read_csv(data_dir+'/train.csv')
mslacc=train_num.drop(columns='Survived')[~idxs_mask]
"fill_fare.loc[fill_fare['Pclass']==pclass,'Fare']=mslacc[pclass]"
"mslacc=mslacc.drop(['Ticket','PassengerId','Name','SibSp','Parch',
'Lname','Family'],axis=1)"
"data.loc[index,'Fare']=mslacc[mslacc['Pclass']]"
mslacc=mslacc[0:12]
"mslacc.loc[:,('GenderId','Sex','EmbarkedId','Embarked')].head(20)"
"mslacc.loc[0:11,(['Name','Sex','Ticket'])]"
"mslacc=mslacc[mslacc['Set']=='test'].drop('Set',1)"
mslacc.drop(columns=['AgeBand'])
"train_results_splitted,test_results_splitted=mslacc.iloc[train_data_index
],mslacc.iloc[train_result_index]"
"mslacc=mslacc[['Pclass','female','Age','Family','Embarked']]"
"mslacc=mslacc.loc[group_ids,mslacc[model_id][group_type]]"
mslacc=mslacc[col].drop(col)
test['Fare_1']=mslacc['Fare']<20
output['Parch']=mslacc['Parch']/6
mslacc=mslacc['New_Age']<=16
mslacc=mslacc[mslacc.Survived==1]
mslacc=pandas.read_csv('titanic_test.csv')
train_set['Familysize']=mslacc['Parch']+mslacc['SibSp']
"mslacc=mslacc.drop(columns=['PassengerId','Name','Ticket','Cabin','Fare']
)"
titanic['SibSp']=mslacc['SibSp']
mslacc=mslacc[i%2]
xtest_annoted['Real']=mslacc['Survived']
"mslacc=-mslacc['mean_test_%s'%scorer][best_index]ifmslacc[scorer
]=='neg_log_loss'elsemslacc['mean_test_%s'%scorer][best_index]"
mslacc=mslacc['Fare'][mslacc.Survived==0]
data_encode['Cluster']=mslacc['cluster']
train_df['Sex']=mslacc['Sex']=='male'
train_data.head()['Cabin']
mslacc=mslacc.iloc[test_index]
mslacc[:20]
"mslacc.drop(['PassengerId','Ticket'],axis=1,inplace=True)"
mslacc=mslacc.shape[-1]
"mslacc.drop(labels=['AgeBin','FamilySize','FareBin'],axis=1,inplace=True)"
mslacc=mslacc[~rnd_indices]
"X,y=mslacc.drop('age',axis=1),mslacc.age"
df['Fare']=mslacc['Fare']
mslacc['Title'].describe()
"mslacc=pd.read_csv(
'../input/titanicdivethrough-featurecave/feature_cave_train.csv',
index_col=0)"
"mslacc.drop(labels=['Cabin','Ticket'],inplace=True,axis=1)"
"mslacc=mslacc.loc[:,'Pclass':'alone']"
mslacc='Confidence_member_survived'+'_'+mslacc[0]
"mslacc=mslacc.drop(columns=['Parch','SibSp','Cabin','Name'],axis=1)"
"mslacc=mslacc.drop(['PassengerId','Ticket','Name','Cabin'],axis=1)"
mslacc=mslacc.loc[index]
"xtr,xvl=mslacc.loc[train_index],mslacc.loc[test_index]"
"mslacc=pd.read_csv('../input/train.csv',encoding='utf-8')"
"survived['Pct_Survived']=mslacc['Survived','Survived']/mslacc[
'Survived','Passengers']"
"mslacc['train-logloss'][0],"
"mslacc.drop(['Sex','Embarked','Name','Ticket','Cabin'],axis=1,inplace
=True)"
"mslacc.drop('CorrectGuess',axis=1,inplace=True)"
"X_train,X_test=mslacc[train_index],mslacc[test_index]"
mslacc.describe(include='all')
titanic_train['FamilySize']=mslacc['SibSp']+mslacc['Parch']
"mslacc[mslacc.missing_values.index.values],"
mslacc=mslacc[mslacc[i]:mslacc[i+1]]
"mslacc=mslacc.drop(labels=['PassengerId','Name','Sex_male'],axis=1)"
"mslacc=mslacc[mslacc['cp_id']==mslacc.loc[pid,'family_has_couple']]"
"(mslacc['SharedTicket']==0)&(mslacc['SharedName']==1)&(mslacc[
'FamilySize']>1),"
"mslacc.drop(columns=['Name','Age','Fare'],inplace=True,axis=1)"
"(mslacc['Embarked']=='S')&(mslacc['Fare']>8),"
combine['AgeAbove12']=[(2ifx>12else1)forxinmslacc['Age']]
"mslacc=mslacc.drop(['Ticket','Last_Name','Name','Cabin','Age','Fare'
],axis=1)"
"mslacc.drop(['PassengerId','Name','Age','SibSp','Parch','Ticket',
'Fare','Cabin'],axis=1,inplace=True)"
df['M_C3']=mslacc['Sex_male']*mslacc['Pclass_3']
mslacc[mslacc.Cabin=='C123']
"mslacc=mslacc.drop(col,1)"
X_test['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc['Title'],"
mslacc=pd.read_csv(f'{DATASET}/test.csv')
mslacc=mslacc.drop(mslacc[mslacc.Sex=='male'].index)
"mslacc['Age']>15,"
df_test['age_norm']=(mslacc['Age']-age_mean)/age_std
mslacc[dataset['IsMother']==1]['Age'].describe()
dataset['FamilyS']=mslacc['SibSp']+mslacc['Parch']+1
mslacc.Age.head(20)
mslacc=mslacc[['Name']]
mslacc[mslacc['Survived']==0]
"mslacc.loc[:,(['Gender','Sex'])].head()"
"mslacc.drop(['Cabin','Name','Ticket'],axis=1,inplace=True)"
mslacc=mslacc[feature_columns+['Survived']]
+0.3*mslacc['Survived']
"n_train,m_train=mslacc.shape"
mslacc=mslacc.loc[mslacc['Pclass']==2]
mslacc=mslacc[f'dW{l}']/(mslacc[f'dW{l}']**0.5+epsilon)
train_df['aile']=mslacc['Parch']+mslacc['SibSp']
train_df['isAlone']=mslacc['family_size'][mslacc['family_size']==1]
df['family_size']=mslacc['SibSp']+mslacc['Parch']+1
"Y_tr,Y_val=mslacc.iloc[train_index],mslacc.iloc[test_index]"
mslacc=mslacc[te_index]
mslacc=mslacc[(mslacc['Sex']=='female')&(mslacc['Pclass']==3)]
mslacc=mslacc[train_size:][cols]
mslacc=mslacc[one_hot_columns]
train_df['New_Age']=mslacc['Age']
"mslacc=mslacc.drop(['PassengerId','Name','Age','Ticket','Cabin'],axis=1)"
"mslacc.loc[(mslacc['Survived']==1)&(mslacc['Sex']=='female')&mslacc
['Age']]"
mslacc=mslacc[used_features]
"mslacc.drop(['Fare_Bin','Age_Bin'],axis=1,inplace=True)"
"mslacc=mslacc.drop(drop_elementsONS,axis=1)"
mslacc[dataset['Mrs']==1]['Age'].describe()
"train['TSNE1']=mslacc.iloc[0:train_rows-1,(0)]"
mslacc=mslacc[(mslacc.Cabin>0)&(mslacc.Cabin<mslacc.Name)]
"tr[['Age','Parch','Pclass']]=mslacc[['Age','Parch','Pclass']]"
test_df['FareBin_Code']=mslacc['FareBin_Code'][891:]
mslacc=mslacc['Fare'][mslacc['Survived']==0]
mslacc=mslacc['Cabin']!='M'
mslacc=pd.read_csv('input./Titanic_train.csv')
mslacc=mslacc.loc[mslacc['Sex']=='female']
X_train['Age']=mslacc['Age']
"mslacc=mslacc[['Sex','Age','Fare']]"
mslacc[mslacc.Age<age_cutoff].head()
"mslacc.drop(['PassengerId','Name','Ticket','Cabin'],inplace=True,axis=1)"
mslacc=mslacc[mslacc['Title']!='special']
mslacc[:11]
"mslacc.loc[('count'),:]"
"mslacc=mslacc[['PassengerId','Name','Pclass','Sex','Age','SibSp',
'Parch','Fare','Embarked']]"
mslacc=mslacc[train_idx]
df['M_C2']=mslacc['Sex_male']*mslacc['Pclass_2']
mslacc=mslacc['Pclass']==3
"mslacc=mslacc.drop(['SibSp','Parch','Ticket','Embarked','Name',
'Cabin','PassengerId','Fare','Age'],axis=1)"
test['SexAge']=mslacc['Sex']
df_output['PassengerId']=mslacc['PassengerId']
"mslacc.drop(['girl1','girl2','3rdGirls','BoyClass'],axis=1,inplace=True)"
avg_std_age['High']=mslacc['Age']+mslacc['Std']
mslacc=mslacc[i][0]
"mslacc.drop(['PassengerId','Ticket','Cabin'],axis=1,inplace=True)"
"mslacc=mslacc.loc[:,(mslacc.support_)]"
df[score[0][parameter]]=mslacc[1]
mslacc=mslacc[(mslacc['FamilySize']==3)|(mslacc['FamilySize']==4)]
"mslacc.drop(['title'],axis=1,inplace=True)"
mslacc=mslacc[mslacc.Age<19].shape[0]
"mslacc.drop(0,axis=1,inplace=True)"
predictions['PassengerId']=mslacc['PassengerId']
mslacc=mslacc[ntrain:]
df['IsAlone']=(mslacc['Family_size']==1)*1
"mslacc[['Q','S','C']].head()"
"mslacc=pd.read_csv('../input/'+filename).drop(['Cabin','Ticket',
'Name'],axis=1)"
mslacc=mslacc[output].iloc[test]
dt_train['Family']=mslacc['SibSp']+mslacc['Parch']+1
mslacc=pd.read_csv(f'{DATASET}/train.csv')
data_all['Title_Miss']=(mslacc['Title']==2)+0
mslacc=mslacc[var3]
"mslacc=mslacc.drop(titanic_train.columns[[3,8]],axis=1)"
self.models[i]['Model']=mslacc[i]
concat_set['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
mslacc=mslacc[x_columns]
df_train['norm_len_name']=(mslacc['len_name']-len_name_avg)/len_name_std
"mslacc=pd.read_csv('../input/train.csv',usecols=['Survived',
'PassengerId']+feature_names)"
data_pred['PassengerId']=mslacc['PassengerId']
mslacc=mslacc[(mslacc.Survived==1)&(mslacc.Age>40)]
mslacc[mslacc['TicketType']=='FCC']
"mslacc=mslacc.loc[:,(idx)]"
train['Embarked']=mslacc['Embarked']
tmp['AgeGroup']=mslacc[sex]
train['Embarked_1']=mslacc['Embarked']=='C'
"mslacc=mslacc[['Pclass','Sex','Parch','SibSp','title_age_level',
'Fare','age_level']]"
mslacc=mslacc[numerical_data]
"mslacc[train_size:train_size+dev_size],"
mslacc['Name'].head(20)
"mslacc.drop(columns=['Name','PassengerId'],inplace=True)"
df_submit['Relatives']=mslacc['SibSp']+mslacc['Parch']
titanic_data['Died']=1-mslacc['Survived']
"mslacc=mslacc.drop(columns=['Cabin','Sex','Embarked'],axis=1)"
"mslacc=mslacc[(mslacc['Parch']>0)&(mslacc['Sex']=='male')&(mslacc
['Title']=='Master')]"
train_data['Fam_Size']=mslacc['SibSp']+mslacc['Parch']
"mslacc=mslacc[['Pclass','Sex']]"
"mslacc=mslacc[['Pclass','Sex','ParchCat']]"
mslacc=mslacc[(mslacc['Sex']=='male')&(mslacc['Pclass']==1)]
"X_prime[:,(8)]=(mslacc['Fare']-mu)/sigma"
"mslacc=mslacc.drop(['Survived','Type'],axis=1)"
"mslacc.drop(columns={'Name','Cabin','Ticket','PassengerId'},inplace=True)"
"pdModelos.loc[row,'Modelo']=pipe.steps[3][1]"
temp_train['Age']=mslacc['Age']
"mslacc.loc[mslacc.Fare==0,['Survived','Fare']]"
mslacc=mslacc['probabilities'][class_id]
mslacc=mslacc[train_indices]
"mslacc.drop('AgeCategory',axis=1,inplace=True)"
mslacc=mslacc['Parch']==0
"mslacc=mslacc.drop(columns=['Name','Ticket','PassengerId'])"
titanic_df['Age1']=mslacc[mslacc['Age1']<60]
"mslacc.drop(['Name','FName'],axis=1,inplace=True)"
mslacc=new_train.loc[index[i]]['PassengerId']
"mslacc=mslacc.drop('Age_bin',axis=1)"
"mslacc=mslacc.drop(col_list,axis=1)"
"data_train['Age_imputed']=mslacc.iloc[:,(0)]"
"mslacc.drop(drop_columns,axis=1,inplace=True)"
test_df['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc=mslacc.drop(['PassengerId','Cabin','SibSp','Parch','Name',
'Ticket','FamilySize'],axis=1)"
"mslacc=mslacc.drop(['PassengerId','Pclass','Sex','Name','SibSp',
'Parch','Ticket','Fare','Cabin','Embarked','Age'],axis=1)"
mslacc=mslacc[data_cols]
"raw_test.loc[index,'Age']=mslacc[row['Title']][mslacc['Pclass']]"
"mslacc=mslacc.drop(['Name','PassengerId'],axis=1)"
"mslacc.drop([col],inplace=True,axis=1)"
mslacc=mslacc[cat_cols]
mslacc[(mslacc.Parch>1)&(mslacc.Pclass==1)]
"difference['Difference']=mslacc.iloc[:,(1)]-mslacc.loc[:,('TestScore')]"
"mslacc=mslacc[['Sex_female','Sex_male']]"
"mslacc.head(),mslacc.head()"
"mslacc.loc[5:10,'Age':'Pclass']"
train2_df['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
df['Family_size']=mslacc['SibSp']+mslacc['Parch']+1
fare_peoples[1][index]=mslacc.loc[mslacc['Survived']==1].shape[0]
item['FamilySize']=mslacc['Parch']+mslacc['SibSp']
"mslacc=mslacc.drop(['Age','Fare','SibSp','Parch'],axis=1)"
"mslacc.drop(columns={'RGroup','Survived'},inplace=True)"
"mslacc=mslacc.drop(['Survived'],1)"
"mslacc.drop('Name_title',axis=1,inplace=True)"
mslacc=mslacc.drop(columns=['Embarked'])
"mslacc=mslacc.drop(['HasCabin','Embarked'],axis=1)"
"mslacc.drop(['Cabin','Name','Ticket','PassengerId'],axis=1,inplace=True)"
grouped['s_rate']=mslacc['sum_of_survior']/mslacc['count_of_sex']
"mslacc.drop(['Name','Sex','Age','Embarked','Male','Survived','Parch',
'SibSp','ParchBinary','SibSpBinary','Pclass','Class1','Class2',
'Class3','ClassSex','Female','MasterMiss','S','1male','2male',
'3male','Boy'],axis=1,inplace=True)"
"dftest.loc[idx,'CountTicketButLast']=mslacc[ticketButLast]"
"mslacc=mslacc.drop(['SibSp','Parch','Emb','Name','Surname','Maiden',
'Title','Fid'],axis=1)"
"train_df['title']=[('Rare'ifiinrare_titleelsei)foriinmslacc[
'title']]"
mslacc=pd.read_csv(test_loc)
"mslacc.drop(['PassengerId','SibSp','Name','Ticket','Parch','Cabin',
'Embarked'],axis=1,inplace=True)"
"mslacc=mslacc.drop(['AgeBand'],axis=1)"
mslacc=mslacc[:train_rows]
full_set['FamSize']=mslacc['Parch']+mslacc['SibSp']+1
"X_text_train,X_text_test=mslacc[split_n:],mslacc[:split_n]"
mslacc=mslacc[features+[target]+['train']]
"test['Title']=[(valifvalin['Mr','Mrs','Miss','Ms','Master']else
'Others')forvalinmslacc['Title']]"
data['family']=mslacc['SibSp']+mslacc['Parch']
mslacc.Parch.describe()
"mslacc=mslacc.drop(['young','C'],axis=1)"
FeatureDF['RealFare']=mslacc['Fare']/mslacc['FamilySize']
train_df['Ticket_XXX']=mslacc['Ticket_'+extra]
join_data['FamilySize']=mslacc['Parch']+mslacc['SibSp']+1
"mslacc.drop(labels='Ticket',inplace=True,axis=1)"
"mslacc=mslacc.drop('Type_Mr',axis=1)"
train['SexAge']=mslacc['Sex']
"mslacc=mslacc['learning_rate'],"
"mslacc.drop(columns=['PassengerId','Ticket','Pclass','Name','Sex',
'Cabin','Embarked'],axis=1,inplace=True)"
"mslacc=mslacc[['Pclass','SexF','Age','Fare','family_is','cabin_is']]"
"dftest.loc[idx,'CountTicket']=mslacc[ticket]"
"mslacc.drop(columns='Sex',inplace=True)"
"mslacc.drop('Sex',axis=1,inplace=True)"
"mslacc.drop(['SibSp','Parch','FamilySize'],axis=1,inplace=True)"
"mslacc=mslacc.drop(['Pclass','Age','SibSp','Parch','Cabin'],axis=1)"
"mslacc.drop('index',axis=1,inplace=True)"
"mslacc.loc['Store1','Cost']"
train['Family']=mslacc['Parch']+mslacc['SibSp']+1
"mslacc=mslacc.drop(labels=['SibSp','Parch','Age','Fare','Title'],axis=1)"
my_submission['producto']=mslacc['PassengerId']*mslacc['Survived']
"mslacc.drop('FamilySize',axis=1,inplace=True)"
"mslacc=mslacc.drop(columns=['Survived','Cabin','Sex','Embarked'],axis=1)"
combdata['Fsize']=mslacc['SibSp']+mslacc['Parch']+1
"data_test['Age_imputed']=mslacc.iloc[:,(0)]"
titanic_test['Fare']=mslacc['FareBand']
"mslacc.drop([xforxintest.columnsifxnotintrain.columns],axis=1,
inplace=True)"
df['family_size']=mslacc['Parch']+mslacc['SibSp']
"mslacc=mslacc.drop([col],axis=1)"
result_df['Survived']=mslacc['Survived']
"mslacc=mslacc['max_depth'],"
"test.at[i,'Cabin_section']=test.at[i,'Cabin'][0]"
"mslacc=mslacc.drop(features_to_drop,axis=1)"
mslacc.loc[mslacc['Title']=='the']
df['Family']=mslacc['SibSp']+mslacc['Parch']
mslacc=[mslacc['class_ids'][0]forpinpreds]
dcee[m+1]=mslacc[m+1]+(mslacc[n]-mslacc.loc[n])*mslacc[key][n]
mslacc=pd.read_csv(dataset)
"mslacc=mslacc.loc[:,(Yrcol)]"
mslacc=pd.read_csv(url_test)
X['Family']=mslacc['SibSp']+mslacc['Parch']+1
df_train['Family_Size']=mslacc['Parch']+mslacc['SibSp']
mslacc=mslacc[:limit]
mslacc=pd.read_csv(f'{datadir}train.csv')
mslacc=mslacc[nClassifier][1]
mslacc[2]['best_model']
"mslacc=mslacc[['PassengerId','Pclass','Sex','SibSp','Parch']]"
"mslacc=mslacc.drop(['Pclass','Sex','Survived'],axis=1)"
no_family['Group_size']=mslacc['Family']+mslacc['Friends_group']
"mslacc.drop(['Ticket','Name','Cabin'],axis=1,inplace=True)"
"mslacc=mslacc.drop(['Survived','Cabin','Ticket','Name','Parch',
'SibSp'],axis=1)"
mslacc.Embarked.shape
"mslacc=mslacc.drop(['Male','Fare','SibSp','Parch','Age'],axis=1)"
"mslacc=mslacc.drop(['PassengerId','Name','Ticket','Cabin','Embarked'],
axis=1)"
mslacc=mslacc['Age'][sel_age_fin]<4
"training_number,variables=mslacc.shape"
"mslacc.drop(Field2Drop,axis=1,inplace=True)"
mslacc[mslacc['surname']=='Fortune']
titanicANDtest_df['Pch']=mslacc['ParchBinary']
df_train['AdjFare']=mslacc[df_all['Dataset']=='train']['AdjFare']
"mslacc.drop(['PassengerId','Ticket','Name','Fare','Age','SibSp',
'Parch'],axis=1,inplace=True)"
X_test['Parch']=mslacc['Parch']
"mslacc=mslacc.loc[:,(['Pclass','Sex','Age','Embarked'])]"
"mslacc=mslacc.drop(train_df.columns[3],axis=1)"
"mslacc=mslacc.drop(['Name','Ticket','Embarked','Cabin','Sex'],axis=1)"
df_test['FamilyBool']=(mslacc['SibSp']>0)|(mslacc['Parch']>0)
"all_data.iloc[i,0]={(1):30,(2):20,(3):18}[mslacc.iloc[i,7]]"
mslacc=pd.read_csv('./data/test_le.csv')
Test_Master['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
mslacc=mslacc['fare_bin']
test['EmbarkedC']=mslacc['Embarked']
"mslacc=mslacc.iloc[891:,:].drop('Survived',axis=1)"
"mslacc=mslacc.drop(['PassengerId','Name'],axis=1)"
"mslacc=mslacc[mslacc['train_test_test']==1].drop(['train_test_test',
'train_test_train','Survived'],axis=1)"
mslacc=pd.read_csv('../kaggle/test.csv')
mslacc=mslacc[mslacc.index]
"mslacc.loc[[0,5,10,20,50],['Name','Sex','Ticket']]"
"mslacc.drop(drop_cols,axis=1,inplace=True)"
testdataframe2['Fare']=mslacc['Fare']/10
mslacc=mslacc[~index]
mslacc=mslacc.drop(columns='ticket')
mslacc.feature.drop(['Name'])
"train,target=mslacc.iloc[train_idx],mslacc.iloc[train_idx]"
mslacc=d=pd.read_csv('../input/test.csv')
"mslacc.drop(columns=['Survived'],inplace=True)"
"mslacc=mslacc.drop(['cabin','_cabin'],axis=1,inplace=False)"
mslacc[SURV:SURV+11:3]
"mslacc={'train':mslacc[['Sex']],'test':mslacc[['Sex']]}"
mslacc=pd.read_csv(data_dir+'test.csv')
mslacc.PassengerId.shape
mslacc[titanic_df['Pclass']==2]['Age'].describe()
mslacc.iloc[3]
test['FamilySize']=mslacc['Family']
mslacc=mslacc[data_train['Survived']==0]['Fare']
mslacc=mslacc.loc[ntr:ntr+ncv-1]
"mslacc=mslacc.loc[(mslacc['data_label']=='test'),:]"
"mslacc.drop(['Name','Ticket','Cabin'],inplace=True,axis=1)"
mslacc=mslacc['set1']
mslacc=mslacc[cat_num_col]
"mslacc=mslacc.drop(family_cols+group_cols,axis=1)"
df_test['Deck']=mslacc['Deck'][891:]
"mslacc=mslacc.drop(['PassengerId','Name','Cabin','Ticket'],axis=1)"
mslacc=mslacc[:slice_i]
"mslacc.drop(['Embarked','Sex','Ticket','Cabin','Name','PassengerId'],
inplace=True,axis=1)"
mslacc.ix[whole_index].head()
df['family']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc=mslacc[['Fare','Sex','Embarked']]"
"mslacc=mslacc.drop(columns=[column_name,'Pclass_2'])"
mslacc=mslacc[features_top_n]
"mslacc=mslacc[['SibSp','Parch','Pclass','Sex','Age']]"
"mslacc=pd.read_csv(
'../input/titanic-voting-pipeline-stack-and-guide/train_soft_pred_matrix.csv'
,index_col='PassengerId')"
mslacc=mslacc[mslacc.Age>=0]
"mslacc[['Sex','Pclass','Cabin']][0:3]"
"mslacc.drop('PassengerId',axis=1,inplace=True,errors='ignore')"
"mslacc=mslacc[['Pclass','Age','Family','Sex_d']]"
full_df['FamilySizeCategories']=mslacc['FamilySize']
"n_x,m=mslacc.shape"
"mslacc.drop(['Age_group'],inplace=True,axis=1)"
"mslacc=mslacc[891:].drop(['Survived'],axis=1)"
"mslacc=mslacc.drop(['Cabin','Cabin_M'],axis=1)"
"mslacc=mslacc.loc[mslacc['Sex']=='female',['Survived','Sex']]"
full['Adult']=mslacc['Age']>18
mslacc.columns.drop('Age')
mslacc=pd.read_csv(filePath)
test_data['FamilySize']=mslacc['Parch']+mslacc['SibSp']+1
train['famSize']=mslacc['SibSp']+mslacc['Parch']
"mslacc=mslacc.columns.drop(['Name','PassengerId'],1)"
mslacc['Ticket'].head(20)
is_alone['Samples']=mslacc['Survived']
titanic['Pclass_Sex']=mslacc['Pclass']*mslacc['Sex']
DataFile['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
mslacc=mslacc[2:]
"self.train=mslacc.drop('Survived',axis=1)"
"mslacc=mslacc[['Survived','nFamily','PassengerId']]"
"mslacc=mslacc.drop('training_set',axis=1)"
"mslacc=mslacc[['PassengerId','Survived','Age','SibSp','Parch','Fare',
'Pclass_1','Pclass_2','Pclass_3','Gender','Singleton',
'FamilySmall','FamilyLarge','Child','Embarked_C','Embarked_Q',
'Embarked_S','Embarked_nan']]"
mslacc.head(1)
"mslacc=mslacc.drop(['AgeBins'],axis=1)"
mslacc=mslacc[df_train['Survived']==0]['Age']
"mslacc=mslacc.drop('Fare',axis=1)"
train_df['kisibasiucret']=mslacc['Fare']/(mslacc['aile_boyut']+1)
"mslacc=mslacc.drop(['passengerid','survived'],axis=1,errors='ignore')"
data['companions']=mslacc['SibSp']+mslacc['Parch']
"mslacc.drop(columns=['Ticket','Cabin','Name'],inplace=True)"
X['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
mslacc[(mslacc['Survived']>0)&(mslacc['Survived']==0)]
train_data['Cabin_F']=mslacc['F']
"mslacc=mslacc[['Age','Sex','Pclass','Fare','SibSp','Parch','Ticket',
'Embarked','Cabin','Name']]"
"mslacc=mslacc.drop(['Survived','ind_indx','ind_','PassengerId'],axis=1)"
mslacc['Cabin'][27:32]
comb['ES']=mslacc['Embarked']=='S'
"mslacc=mslacc[['Pclass','Mr','Mrs','Miss','Sex','Age','SibSp',
'Parch','Fare','Cabin']]"
dataframe['Family']=mslacc['Parch']+mslacc['SibSp']
"mslacc.drop(labels=['Survived'],axis=1,inplace=True)"
mslacc=[mslacc[1][1]forcincontinuous]
"X_train_v,X_test_v=mslacc[train_index],mslacc[test_index]"
"mslacc=mslacc[['Age','Sex','Fare','Parch','Pclass','SibSp','Embarked']]"
mslacc=mslacc.drop(columns=collinear_features)
pd.read_csv('../input/gender_submission.csv').head()
test['Embarked_2']=mslacc['Embarked']=='Q'
test_df['aile_boyut']=mslacc['SibSp']+mslacc['Parch']
test['EmbarkedS']=mslacc['Embarked']
df_test['Family_Survival']=mslacc['Family_Survival'][train_size:]
df_test['FamilySize']=mslacc['Parch']+mslacc['SibSp']
"mslacc=mslacc.drop(['index'],axis=1)"
"mslacc['Age'],"
mslacc=pd.read_csv(input_io_dir+'test.csv')
"train_model_red.loc[:,('Survived')]=mslacc['Survived']"
"df_dums['age_2']=[(1if(ele<=10.0)&(ele>5.0)else0)forelein
mslacc['Age']]"
mslacc.shape(X_NumPy_Mat)
train['CategoricalAge']=mslacc[:891]
"mslacc=mslacc.drop(['PassengerId','Name','SibSp','Parch','Title',
'Ticket','Cabin','Sex','Embarked','FamilyMembers','FamilySize',
'Deck','Fare'],axis=1)"
mslacc=mslacc.loc[passengerId]
"mslacc=mslacc.drop(['Pclass'],axis=1)"
"mslacc=mslacc.drop(['Embarked_Numerical'],axis=1)"
test['SmallFamily*Pclass']=mslacc['SmallFamily']*mslacc['Pclass']
"mslacc=mslacc.drop(['Survived','Age','PassengerId'],axis=1)"
df['Family_size']=mslacc['Parch']+mslacc['SibSp']+1
"mslacc=mslacc.drop(['Name','Parch','SibSp','Ticket','Last_Name',
'PassengerId'],axis=1)"
"mslacc.drop(['SibSp'],axis=1,inplace=True)"
"mslacc=mslacc.drop(['Survived','Fare'],axis=1)"
test_df['s']=mslacc['SibSpBinary']
mslacc=mslacc.head(data_train.shape[0])
df_titanic['Family']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc=mslacc.drop('GuassianNaivebayes',1)"
mslacc=mslacc[cat_atrib]
mslacc=mslacc.loc[(mslacc.SibSp!=0)^(mslacc.Parch!=0)]
"mslacc=mslacc[['Pclass','Sex','Age','Parch','Fare','Survived']]"
"mslacc=mslacc.drop(['Name','Ticket','PassengerId','Cabin','Embarked'],
axis=1)"
titanic_df.head()['Name']
dataset['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
train_df['family_onboard']=mslacc['Parch']+mslacc['SibSp']
"mslacc.loc[(row_null_age),:].head()"
"mslacc=mslacc.drop(['PassengerId','Name','Ticket','Cabin','SibSp'],1)"
test['FamilySize*Pclass']=mslacc['FamilySize']*mslacc['Pclass']
mslacc=mslacc[data_train['Survived']==1]['Age']
"test.loc[v[i],'Female_Friends_NotSurvived']=mslacc[(mslacc.Sex==
'female')&(mslacc.Survived==0)].shape[0]"
"mslacc=mslacc.drop(['SibSp','Parch'],axis=1)"
"x,y=mslacc.drop(['Survived'],axis=1),mslacc['Survived']"
mslacc=mslacc.drop(columns=['Cabin'])
"mslacc=pd.read_csv('../input/test.csv',index_col='PassengerId',nrows=n_row)"
mslacc.stats.describe(kpca_X[0])
test_df['aile']=mslacc['Parch']+mslacc['SibSp']
test['SexF']=mslacc['Sex']
data_test['FarePP']=mslacc['Fare']/mslacc['famsz']
"mslacc.drop(labels=['Age','SibSp','Parch','Title','FamilySize'],axis=1,
inplace=True)"
"mslacc.drop(['Sex','SibSp','Parch','Embarked'],axis=1,inplace=True)"
"mslacc.drop('Training_set',axis=1)"
"df['famsizbutemr']=mslacc['famsize']-mslacc['famwithmr']-mslacc[
'famtestdatcnt']"
"db[l]=mslacc[l],1"
"mslacc.drop('TravelBuds',axis=1,inplace=True)"
mslacc[numerical].head()
mslacc=[rforrinscoresifmslacc[2]]
mslacc=mslacc[optimal_idx]
"mslacc=mslacc.drop(['Survived','Pclass','PassengerId'],axis=1)"
"test['Young_f']=(mslacc['Age']>=18)&(mslacc['Age']<=40)&(mslacc[
'Sex']=='female')"
mslacc=mslacc[800:]
"mslacc.loc[1:5,(['Name','Age','Sex'])]"
mslacc=mslacc[(mslacc.Sex==sex)&(mslacc.Pclass==pclass)]
mslacc['age_quantile']
"mslacc.drop(['PassengerId','Survived','Ticket'],axis=1,inplace=True)"
titanicANDtest_df['m']=mslacc['MasterMiss']
"assertmslacc.shape==(2,2
),'Confusionmatrixshouldbefrombinaryclassificationonly.'"
mslacc=mslacc['Family']>0
"mslacc.drop(['Sex','Embarked','Name','Ticket','Pclass','Cabin'],axis=
1,inplace=True)"
"mslacc=mslacc.drop(['Name','PassengerId','Ticket'],axis=1)"
"mslacc=train['Fare'].describe()[['min','25%','50%','75%','max']]"
raw_df['Family_Size']=mslacc['SibSp']+mslacc['Parch']
mslacc.iloc[[0]]
"mslacc=mslacc[['Name','Sex']]"
mslacc=mslacc[:split]
mslacc=mslacc[mslacc['fare']>=55]
mslacc.head().shape
"mslacc=mslacc.drop([colforcolindf.columnsifcolnotinlabel],axis=1)"
"mslacc.describe('Age'[0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,0.99])"
comb['old_age']=mslacc['Age']
testData['Family_Size']=mslacc['Parch']+mslacc['SibSp']
"mslacc=mslacc.loc[mslacc['Survived']==0,'Parch']"
mslacc.shape(X_scale_train)
data['Male']=(mslacc['Sex']=='male')+0
"mslacc.drop(cols_to_be_dropped,axis=1,inplace=True)"
"test_df.loc[test_df['Ticket']==tick,'n_on_ticket']=mslacc[tick]"
data_Y['notEqual']=mslacc['predict']-mslacc['Survived']
"mslacc=mslacc.drop(['PassengerId','SibSp','Parch','Family'],axis=1)"
"mslacc=mslacc.drop(column,axis=1)"
test_forest2['family_size']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc=mslacc[['male','female','Higher','Middle','Lower']]"
mslacc=[mslacc[1]forclfinclassifiers]
data['FamilySize']=mslacc['Parch']+mslacc['SibSp']+1
"mslacc=mslacc.drop(drop_col,axis=1)"
titanic_comb['familly_size']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc=mslacc.loc[(mslacc['Ptype']=='child')&(mslacc['family']==
'withoutfamily')]"
test['Singleton*Pclass']=mslacc['Singleton']*mslacc['Pclass']
mslacc=mslacc.drop('Fare')
mslacc=mslacc[mslacc.columns[1]]
mslacc[mslacc.Survived==1]
"mslacc.describe(percentiles=[0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,
0.68,0.69,0.75,0.99],include=[np.number])"
Titanic_Master['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc.drop(['Cabin_T'],axis=1,inplace=True)"
"mslacc=mslacc.loc[mslacc.Ticket==tk,'Fare']"
"mslacc=mslacc.drop(mslacc.to_predict_col,inplace=False,axis=1)"
"mslacc=pd.read_csv('train.csv',header=0)"
mslacc.describe(include=[np.number])
trainPCA2['11']=mslacc['Pclass2']
"mslacc['Pclass'],"
train_data['Family_Size']=mslacc['Parch']+mslacc['SibSp']+1
"mslacc.drop(list_category_features,axis=1,inplace=True)"
"mslacc=mslacc.loc[:,(['Survived','Pclass','Sex'])]"
test['Title_mrs']=mslacc['Title']=='Mrs'
data_all['NumFamily']=mslacc['SibSp']+mslacc['Parch']
test.Cabin=[mslacc[0]foriinmslacc.Cabin]
dumies['Survived']=mslacc['Survived']
testdataframe2['Parch']=mslacc['Parch']
answer_df['PassengerId']=mslacc['PassengerId']
"mslacc.drop(Columns_to_drop,axis=1,inplace=True)"
mslacc=mslacc.loc[mslacc['Survived']==0].shape[0]
mslacc=mslacc['b5']
"mslacc=mslacc.loc[(mslacc['Pclass']==1)&(mslacc['Survived']==1),'Age']"
mslacc=mslacc[mslacc['Age']>=0]
"mslacc=mslacc[mslacc['train_test_train']==1].drop(['train_test_test',
'train_test_train','Survived'],axis=1)"
"mslacc=mslacc[['Ticket_length','Title','NameLength','Pclass','Female',
'Age','withfamily','Ticket_group','Fare','Embarked',
'Cabin_first_ltr','spaces_in_name']]"
"mslacc.drop(['PassengerId','Survived','index'],inplace=True,axis=1)"
mslacc=mslacc[optimized_columns]
titanicANDtest_df['F']=mslacc['Female']
mslacc['Surname'].head()
"mslacc=mslacc.drop('CabinNum1',axis=1)"
"mslacc.drop(columns=['Name','Ticket','Cabin'],inplace=True)"
train2['Fare_Pclass']=mslacc['Fare']*mslacc['Pclass']
train_df.Cabin=[mslacc[0]forxinmslacc.Cabin]
"mslacc.drop(['Child'],axis=1,inplace=True)"
"mslacc=mslacc.loc[:,(features2)]"
all_df['family_members']=mslacc['Parch']+mslacc['SibSp']
mslacc=mslacc['Survived'].shape[0]
test['Embarked_1']=mslacc['Embarked']=='C'
dataset['Family']=mslacc['Parch']+mslacc['SibSp']
new_df['Age_Fare']=mslacc['Age']*mslacc['Fare']
"mslacc.drop(['train',target,'Pclass'],axis=1,inplace=True)"
"mslacc=mslacc[['PassengerId','Set','Survived']+feats]"
"mslacc.drop(['Name','Sex','Ticket','Embarked'],axis=1,inplace=True)"
"mslacc[['Ticket_code','Ticket_count','Group_code','Group_count']],"
"mslacc=mslacc.loc[:,(cols)]"
"mslacc=mslacc.drop(['PassengerId','Ticket','Fare','Cabin','Embarked'],
axis=1)"
"mslacc.drop(['Total'],axis=1,inplace=True)"
test_df['Age']=mslacc['Age']
"mslacc=mslacc.loc[:,(['PassengerId','Age','Fare','Pclass','Title',
'PassengerType','FamilySize','Embarked','Gender'])]"
"mslacc=mslacc.drop(full.index[891:],axis=0)"
mslacc[categorical_data].head(10)
df['TGS_norm']=mslacc['TicketGroupSurvivors']/mslacc['TicketGroupSize']
mslacc=mslacc.drop(columns='Cabin')
"mslacc.drop(['Fare_Range'],axis=1,inplace=True)"
"mslacc=mslacc.loc[(mslacc['Survived']==1),:]"
training_set['FamilySize']=mslacc['Parch']+mslacc['SibSp']
"mslacc=mslacc.loc[:,(Xrcol)]"
data_all['Female']=(mslacc['Sex']==1)+0
"mslacc.loc[(152),:]"
"mslacc=mslacc.drop(['data_label','Survived','Name','Ticket','Cabin']+
var_drop_list,axis=1)"
mslacc=mslacc[-1]
passengerIdValues['PassengerId']=mslacc['PassengerId']
mslacc=(mslacc['Family_Size']<5)&(mslacc['Family_Size']>1)
"mslacc.iloc[:,(2)],"
"X_valid,y_valid=mslacc.iloc[valid_idx],mslacc[valid_idx]"
"mslacc.drop(['PassengerId'],axis=1).describe()"
"mslacc=mslacc[['Age','SibSp','Parch','Fare','Pclass_1','Pclass_2',
'Pclass_3','Gender','Singleton','FamilySmall','FamilyLarge',
'Child','Embarked_C','Embarked_Q','Embarked_S','Embarked_nan']]"
train['Family']=mslacc['Parch']+mslacc['SibSp']
"mslacc=mslacc.drop(['Survived','Sex','Embarked','PassengerId','Name',
'Ticket','Cabin'],axis=1)"
mslacc=mslacc[null_series==True]
temp_train['Parch']=mslacc['Parch']
test.head()['Name']
"mslacc['Pclass']==j,"
"data['LargeFamily']=[(1iffamilysize>=5else0)forfamilysizein
mslacc['FamilySize']]"
"mslacc=mslacc[['Cabin','PassengerId']]"
dict_tick2fam[chk_key]=mslacc[key]
"name,values=mslacc[0]"
"mslacc=mslacc.drop(features_remove,axis=1)"
train_time[k]=mslacc[k]['train_time']
mslacc=mslacc[Pclass]
"train_df.loc[train_df['Ticket']==tick,'n_on_ticket']=mslacc[tick]"
train['SibSp']=mslacc['SibSp']
mslacc[mslacc.TicketButLast=='310129']
"mslacc.iloc[:10,:]"
"mslacc=mslacc.drop(['PassengerId','NumFamily','Name','Sex'],axis=1)"
sub['PassengerId']=mslacc['PassengerId']
mslacc=1ifmslacc['Embarked']=='C'else0
"mslacc.drop(columns=col_to_drop,axis=1,inplace=True)"
mslacc=mslacc.iloc[test_idx]
"mslacc.drop(['Survived'],inplace=True,axis=1)"
"(modelResults.loc[4]['Model_Name'],modelResults.loc[4]['Model']),"
mslacc[mslacc.Ticket=='3101295']
"mslacc={'Features':mslacc['Feature'],'Importance':mslacc['Average']}"
"mslacc.drop(['PassengerId','Name','Ticket'],axis=1,inplace=True)"
"temp.iloc[:,(j)]=mslacc.iloc[:,(j)]"
df_all['Age']=mslacc['Age']
mslacc=mslacc[sorted_idx][:32]
mslacc=mslacc[:tr]
"mslacc=mslacc.drop(['CategoricalAge','CategoricalFare','Ticket',
'Cabin','Survived'],axis=1)"
"mslacc['X_test'],"
"mslacc.shape,mslacc.shape,mslacc[0].shape,mslacc.shape,mslacc.T.shape"
"dead_first_class,alive_first_class=mslacc.loc[mslacc['Survived']==0
].shape[0],mslacc.loc[mslacc['Survived']==1].shape[0]"
"mslacc=pd.read_csv('../input/test.csv',header=0,dtype={'Age':np.float64})"
mslacc=mslacc.shape[0]/mslacc.shape[0]
"mslacc=mslacc[0,0]
mslacc=mslacc[0,1]
mslacc=mslacc[1,0]
mslacc=mslacc[1,1]"
"mslacc=mslacc.loc[891:,(cols)]"
"mslacc=mslacc.drop(['AgeRange'],axis=1)"
"y_train,y_test=mslacc.iloc[train_idx],mslacc.iloc[test_idx]"
"mslacc=mslacc[1,1]"
"test.loc[v[i],'Female_Friends_Survived']=mslacc[(mslacc.Sex=='female')&
(mslacc.Survived==1)].shape[0]"
results['PassengerId']=mslacc['PassengerId']
"mslacc=mslacc.drop('Age_imputed',axis=1)"
X['FamilySize']=1+mslacc['SibSp']+mslacc['Parch']
test_y['passenger_Id']=mslacc['PassengerId']
"X_prob0[:,(0)]=mslacc[mslacc[:,(0)]-1]"
mslacc.shape[0]
x_test['Family']=mslacc['SibSp']+mslacc['Parch']
mslacc=pd.read_csv(PATH+'test.csv')
mslacc=mslacc[:index]
mslacc=pd.read_csv('../input/test.csv')
"mslacc=mslacc[split_size:].drop(columns=['Survived','PassengerId'])"
titanic_df['Fem']=mslacc['Female']
mslacc[P_Ti_vs_Ti].head()
mslacc=mslacc[features1]
"mslacc.loc[0,['Name','Sex','Ticket']]"
mslacc=pd.read_csv(path+'test.csv')
"PointBiser.loc[var[0],'Feature']=mslacc[1]"
mslacc=mslacc.drop(columns='sex')
df_test['LastName']=mslacc[0]
"mslacc.Fare.describe(percentiles=[0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9])"
"mslacc=combined.drop(drop_col,axis=1)[:891]"
"mslacc=mslacc[['Title','MaleSurvived','FemaleSurvived','Total']]"
"mslacc.drop(['Name','Sex'],1,inplace=True)"
df_raw['Title']=mslacc['Title']
"mslacc[0]['best_score'],"
df_for_plotting['SurvivalRate']=mslacc['sum']/mslacc['count']
"mslacc=[mslacc.drop('Survived',axis=1),test_df]"
comb['NoAge']=mslacc['Age']==mslacc.NAN
test_ori['FamilySize']=mslacc['SibSp']+mslacc['Parch']
mslacc=mslacc[mslacc['top_cabin']=='A']
test['AddPsng']=mslacc['SibSp']+mslacc['Parch']
"mslacc=mslacc[['Age','Pclass','Sex','SibSp','Parch','Fare',
'Embarked','Salutation']]"
mslacc=mslacc['Pclass']
train_set['Family']=mslacc['SibSp']+mslacc['Parch']+1
titanic_df['Ms']=mslacc['MasterMiss']
test_df['Age']=mslacc['Age'][891:]
train['Age']=mslacc['Age'][:891]
"mslacc.drop(['Name','SibSp','Parch','Ticket','Cabin'],axis=1,inplace=True
)"
mslacc=mslacc[cols].loc[mslacc['Pclass']==2]
"mslacc.drop(labels=['Age'],axis=1,inplace=True)"
data['Family_Size']=mslacc['Parch']+mslacc['SibSp']
"ytr,yvl=mslacc.loc[train_index],mslacc.loc[test_index]"
dataset['Family_Size']=mslacc['Parch']+mslacc['SibSp']
mslacc['Cabin_type'].head()
x[x<0]=0.01*mslacc[x<0]
mslacc=mslacc[att]
"mslacc.drop(columns='Fare',inplace=True)"
"mslacc=mslacc.drop(drop_elements,axis=1)"
"mslacc=mslacc.drop('Sex',axis=1)"
test_df['AgeFill']=mslacc['Age']
Y_out['PassengerId']=mslacc['PassengerId']
"df.head(10)[['Fare','bin_fare','Age','bin_age']]"
mslacc.head(500)
"mslacc=mslacc.drop(['Embarked','PassengerId','Ticket'],axis=1)"
"mslacc=mslacc.drop(['Name','Ticket','Sex','Fare','Cabin','Embarked',
'PassengerId'],axis=1)"
mslacc=mslacc.iloc[:train_size]
"mslacc=mslacc.drop(['AgeBand','FareBin','Ticket','Cabin','Name',
'PassengerId','ticketPos'],axis=1)"
df_names['UniqueName']=mslacc['FamilyName']=='Unique'
"mslacc=mslacc.drop(['Pclass','SibSp','Parch','Cabin','Ticket','Name',
'title'],1)"
"mslacc=mslacc.drop(axis=1,columns=['PassengerId','Name','Ticket',
'Cabin','Family_Size'])"
mslacc=mslacc[n_step]
"mslacc=pd.read_csv('../input/train.csv',header=0)"
"mslacc=mslacc.loc[:,(['Pclass','Sex','Age','SibSp','Parch'])]"
mslacc=mslacc[mslacc['is_test']==1]
training['Family_Size']=mslacc['SibSp']+mslacc['Parch']+1
mslacc=mslacc[mslacc.digit_keys]
mslacc['age_quantile'].describe()
"mslacc=pd.read_csv('../input/train.csv',delimiter=',')"
"mslacc=mslacc[['PassengerId','Embarked','Pclass','Sex','Fare_Scaled',
'AgeCategory','FamilyCount','FamilyCategory','CabinLevel','Title',
'Pclass_Sex','Embarked_Sex','Emb_label_encoding','Survived']]"
mslacc[829:830]
"mslacc=mslacc[['Pclass','Sex','Age','SibSp','Parch','Fare',
'Embarked','Title','FsizeD']]"
"mslacc.drop(['Age_age'],axis=1,inplace=True)"
mslacc=mslacc[mslacc.Title=='Mrs']
mslacc[:]
"mslacc=mslacc[row,col]"
mslacc=mslacc[mslacc['Ticket']==tk]
"mslacc.loc[(mslacc['Age']==2.0)&(mslacc['Sex']=='female')&(mslacc[
'FamilySize']==1)&(mslacc['Pclass']==1)&(mslacc['CabinAssigned'
]==1)&(mslacc['Fare']>=75)&(mslacc['Fare']<=85)]"
"valid_features,valid_labels=mslacc[valid_indices],mslacc[valid_indices]"
group_counts['Pred_survived']=mslacc['Pred_survived']
test_df['EmbarkedFill']=mslacc['Embarked']
"mslacc=mslacc.drop('Age',1)"
train['Family_Size']=mslacc['Family_Size'][:891]
mslacc['Ticket'].describe()
X['is_child']=mslacc['Age']<=8
"mslacc=mslacc.iloc[0:890,([2,4,5])]"
"mslacc=mslacc['criterion'],"
"mslacc=mslacc.drop(['PassengerId','Name','Ticket','Cabin'],axis=1)"
train['Family_Size']=mslacc['SibSp']+mslacc['Parch']
mslacc=1ifmslacc['Sex']=='male'else0
mslacc=mslacc[0]-mslacc[1]
features['Parch']=mslacc['Parch']
titanic_train['Age']=mslacc['AgeBand']
"mslacc=mslacc.drop(columns=['Survived','Embarked','Cabin','Name',
'Ticket'],axis=1)"
mslacc=mslacc[nf]
mslacc=mslacc[idx>0]
"mslacc=mslacc.loc[index,'Ticket2']"
"mslacc.drop(['Pclass','Sex','Embarked'],axis=1,inplace=True)"
df['Fare_Per_Person']=mslacc['Fare']/mslacc['Family_Size']
mslacc[mslacc['Surname']=='Icard']
"mslacc.drop('SibSp',inplace=True,axis=1)"
mslacc=pd.read_csv(data_path+'/gender_submission.csv')
"mslacc.drop(delete_columns,axis=1,inplace=True)"
mslacc=mslacc.loc[mslacc['Embarked']=='Queenstown']
"mslacc=mslacc[(mslacc['Sex']=='child')&((mslacc['Class']==
'1stClass')|(mslacc['Class']=='2ndClass'))]"
"mslacc.iloc[(0),3:6]"
df_test[feature+'_bin']=mslacc[feature+'_bin'][train_size:]
mslacc=mslacc[:cutoff]
"mslacc[['Sex','Pclass','Age']]"
"mslacc=mslacc[['sex_code','Age']]"
"mslacc=mslacc.drop(['SibSp'],axis=1)"
"mslacc.drop(drop_column,axis=1,inplace=True)"
"mslacc=mslacc.drop(labels='Cabin',axis=1,errors='ignore')"
+0.25*mslacc['Survived']
mslacc=mslacc[i]+mslacc[i]+mslacc[i]
dftrain['Title']=mslacc['Name']
mslacc=mslacc[mslacc.Fare<300]
mslacc.title.head()
mslacc=mslacc['Ticket']
mslacc=mslacc[mslacc.columns[::-1]]
"mslacc=mslacc[['pclass','age','survived']]"
mslacc=mslacc[mslacc['cia']=='group']
data['AgeClass']=mslacc['Age']*mslacc['Pclass']
mslacc=mslacc[0][5]
mslacc[X_test]
titanic[column]=mslacc[column]
combined_data.iloc[:891]['Age']
X_test['Fare/person']=mslacc['Fare/person']
mslacc=pd.read_csv('test.csv')
"mslacc.drop(['SibSp','Parch'],axis=1,inplace=True)"
mslacc=mslacc[used]
mslacc=mslacc.query('istrain==1')
submission['Ticket_numerical']=mslacc['Ticket_numerical_temp']
mslacc=pd.read_csv(csv_file)
"mslacc=mslacc.female.loc[mslacc['Title'],mslacc['Pclass']]"
temp['SurviveRatio']=mslacc['Survived']/mslacc['Count']
"mslacc.drop(to_drop,axis=1,inplace=True)"
mslacc=pd.read_csv(test_file_path)
test_df_log_transformed['Family']=mslacc['SibSp']+mslacc['Parch']
age_train['Survived']=[xforxinmslacc['Survived']]
mslacc=mslacc[first_test_index:]
sub_knn['PassengerId']=mslacc['PassengerId']
"mslacc=mslacc.loc[(mslacc['Survived']==0),:]"
"mslacc.drop(columns=['PassengerId','Name','Ticket'],inplace=True)"
train.head()['Name']
mslacc=mslacc['Sex'][sel_age_fin]=='female'
"mslacc=mslacc.drop('PassengerId',axis=1)"
"mslacc=mslacc[['Pclass','Survived']]"
mslacc['Age'].head(20)
"mslacc.drop(axis=1,columns='ticket',inplace=True)"
"mslacc.drop(columns=col_drop,axis=1,inplace=True)"
"mslacc=mslacc.drop(['Parch','SibSp','FamilySize'],axis=1)"
mslacc=mslacc[real_cols]
mslacc=mslacc[(mslacc.Fid==mslacc.Fid)&(mslacc.Name!=mslacc.Name)]
"mslacc=mslacc.drop(columns_to_drop+['Survived'],axis=1)"
mslacc=mslacc.drop(columns=columns)
"mslacc.drop(['PassengerId','Cabin'],axis=1,inplace=True)"
"x,y=mslacc[:n_batches*batch_size],mslacc[:n_batches*batch_size]"
mslacc=pd.read_csv(input_test_path)
"mslacc=mslacc.drop(mycols,axis=1)"
"mslacc.drop(['parent_of_child'],axis=1,inplace=True)"
"mslacc.drop(['Age','Fare'],inplace=True,axis=1)"
"mslacc=mslacc.iloc[0,0]"
mslacc=mslacc[train_features]
"mslacc=mslacc.drop(['Cabin','Fare'],axis=1)"
mslacc=mslacc['b1']
mslacc[mslacc.Age<45]
"mslacc=mslacc.drop(missing_col_tt,axis=1)"
"mslacc.drop(['PassengerId','Name','Ticket','Fare','Cabin'],axis=1,
inplace=True)"
data['Fare_per_person']=mslacc['Fare']/mslacc['Family_Size']
mslacc=pd.read_csv(path_test)
train_df['family_member_no']=mslacc['SibSp']+mslacc['Parch']
mslacc=mslacc[1:15]
mslacc=mslacc['age_bin']
mslacc=mslacc['best_model']
"mslacc=mslacc[data_df['DataType']==1][mslacc[mslacc[
'FeatureImportances']>0.02].index]"
trainPCA2['2']=mslacc['Pclass2']
"mslacc=mslacc.drop(['PassengerId','Name','Ticket','Cabin','Age',
'Fare','SibSp','Parch','Embarked'],axis=1)"
df_test['TitleCat']=mslacc['TitleCat'][891:]
"mslacc.loc[:,(['Age*Class','Age','Pclass'])]"
train['FamilySize']=mslacc['Parch']+mslacc['SibSp']+1
mslacc[-4:]
"mslacc=mslacc[['Pclass','Survived','Sex']].iloc[0:3,:]"
"mslacc=mslacc.drop(['PassengerId','Name','Cabin','Ticket','Survived',
'Embarked','SibSp','Parch','Pclass','Age'],axis=1)"
"mslacc=mslacc.drop(['Ticket','Cabin','Fare','ticketcount'],axis=1)"
"mslacc=mslacc.drop('Pclass',axis=1)"
"mslacc=mslacc.loc[mslacc.index,'Age']"
"mslacc=pd.read_csv('../input/test.csv',sep=',',usecols=['PassengerId',
'Pclass','Sex','Age'])"
"mslacc=(mslacc['Group_size']-mslacc['adj_survived']-mslacc['adj_dead']
)/mslacc['Group_size']"
"mslacc.drop(['Ticket','Cabin','Name','Embarked'],axis=1,inplace=True)"
"mslacc=mslacc[['Pclass','Sex','ParchCat','Embarked','Fare',
'TitleCat','Age']]"
"mslacc=mslacc.drop(labels=[each],axis=1)"
mslacc=mslacc['PassengerId']
"mslacc=mslacc.drop(categoric_type,axis=1)"
"mslacc=mslacc[['survived','pclass','sex','embarked',
'family_size_category','age_category','fare_category','title']]"
titanic['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc=mslacc.loc[:,(['Fare','Pclass'])]"
"mslacc=mslacc.drop(df.columns[[8,10]],axis=1)"
test2['Age'][x]=mslacc[mslacc['Title'][x]]
"mslacc[-1],"
mslacc.describe(include='number')
train['embarked_T']=mslacc['embarked_T']
"X,y=mslacc.iloc[:,2:],mslacc.iloc[:,(1)]"
"mslacc.drop(['Cabin','Name','Fare'],axis=1,inplace=True)"
"mslacc.iloc[(759),:]"
"mslacc=mslacc[['Pclass','Sex','Age','SibSp','Fare']]"
mslacc[mslacc.Cabin=='T']
"mslacc.drop(['Sex','Embarked','Name','SibSp','Parch','FamilySize'],
axis=1,inplace=True)"
"mslacc[['Name','Sex']].head()"
mslacc=mslacc[classifier]['score']/10
mslacc[mslacc['title']=='notable']
"tempdf['sums_%s__%s'%(p1,p2)]=mslacc[p2]+mslacc[p1]"
"mslacc[['Name','Age']]"
cleaned_df['Family']=mslacc['Parch']+mslacc['SibSp']
mslacc=pd.read_csv('./input/test.csv')
test_csv['Survived']=mslacc['Predicted']
"mslacc=mslacc.loc[:,(['PassengerId','Survived'])]"
"mslacc=train.drop(['Survived','PassengerId'],axis=1)[columns]"
"mslacc=mslacc.drop(drop_elementsONSWAR,axis=1)"
"mslacc=mslacc.drop(['Pclass3'],axis=1)"
mslacc=mslacc[:train_id]
"mslacc.drop(['Name','Ticket','Cabin','SibSp','Parch','FirstName'],
axis=1,inplace=True)"
data_all['Cabin_E']=(mslacc['Cabin']=='E')+0
XEval['Pclass']=mslacc['Pclass']-1
"val_x,test_x=mslacc[:test_idx],mslacc[test_idx:]"
mslacc=mslacc[mslacc.Real!=mslacc.Predicted]
train['SmallFamily*Pclass']=mslacc['SmallFamily']*mslacc['Pclass']
"mslacc.drop(columns=featureName,inplace=True)"
mslacc=mslacc.drop(columns='Survived')
mslacc=mslacc.drop(columns='PassengerId')
test_d['FamilySize']=mslacc['Parch']+mslacc['SibSp']+1
mslacc=mslacc.loc[(mslacc.Sex=='female')&(mslacc.Pclass==1)]
"mslacc=mslacc.iloc[:,1:2]"
mslacc=mslacc[:SURV][cols]
mslacc=mslacc[:trn_sz]
"mslacc=mslacc[['Pclass','Sex','AgeRange']]"
"mslacc=mslacc.drop(columns=['PassengerId','Pclass','Name','Sex','Age',
'SibSp','Parch','Ticket','Fare','Cabin','Embarked',
'Age_Categories','SibSp_Categories','Parch_Categories'])"
mslacc=0if0notinmslacc.indexelsemslacc[0]
"mslacc=mslacc.drop('Cabin',1)"
"mslacc=mslacc.drop(['Survived','is_test'],axis=1)"
"mslacc.drop(['PassengerId','Name'],axis=1,inplace=True)"
mslacc[Titanic_Master.Fare<=53]['Fare'].describe()
test['FareBin_Code']=mslacc['FareBin_Code'][891:]
comb_data['FamSize']=mslacc['SibSp']+mslacc['Parch']+1
mslacc=mslacc['W4']
"mslacc=mslacc.drop(['Parch','SibSp','Ticket','Cabin','Name'],axis=1)"
"mslacc.drop('Deck',axis=1,inplace=True,errors='ignore')"
"mslacc.loc[indices,'pca-2'],"
mslacc['TravelingAlone'].describe()
"mslacc.drop(['PassengerId','Name','Ticket','Cabin','Age_bin',
'Fare_bin'],axis=1,inplace=True)"
"x_valid,y_valid=mslacc.loc[valid_indices],mslacc.loc[valid_indices]"
"mslacc=mslacc.iloc[:,([1,2,3,4,5,6,7,8,9,10])]"
processed_features['FamilySize']=mslacc['SibSp']+mslacc['Parch']
submission['PassengerId']=mslacc['PassengerId']
mslacc=pd.read_csv(submission_data_path)
"X_train_400,y_train_400=mslacc[:400],mslacc[:400]"
"mslacc.drop(labels=['PassengerId','Name','Names','Cabin','Ticket',
'Age','Fare'],axis=1,inplace=True)"
mslacc=mslacc['CrossValMeans']
"X,y=imputed_data,mslacc['Survived']"
"mslacc.drop(['Age_Cat'],axis=1,inplace=True)"
"mslacc=mslacc.drop(['Sex','Embarked','Pclass','Title','Name',
'TicketPrefix'],axis=1)"
mslacc=mslacc.iloc[train]
"mslacc.drop(['PassengerId','Survived'],axis=1,inplace=True)"
mslacc=mslacc.loc[misclassified_index]
x_test['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
"x_train,y_train=mslacc.loc[train_indices],mslacc.loc[train_indices]"
test_data['Family_Size']=mslacc['Parch']+mslacc['SibSp']+1
sub_logreg['PassengerId']=mslacc['PassengerId']
"mslacc=mslacc.drop(['PassengerId','Survived','Name','Age','Ticket',
'Cabin'],axis=1)"
mslacc=mslacc[columns_titles]
mslacc[categorical_columns].describe()
"mslacc=mslacc.drop('Parch',axis=1)"
"mslacc=mslacc.drop(['PassengerId','Survived','Name','Ticket','Cabin',
'SibSp','Parch'],axis=1)"
"mslacc.drop('TitleDon.',axis=1,inplace=True)"
mslacc['Cost']
X.Age[i]=mslacc[1][j]
family_data['FamScore']=mslacc['SibSp']+mslacc['Parch']
"f""""""FemaleSurvivalPercentage:{mslacc.iloc[0,3]}%
"""""""
train['Family_size']=mslacc['Parch']+mslacc['SibSp']
df_dums['Parch_2p']=[(1ifele>=2else0)foreleinmslacc['Parch']]
"mslacc=mslacc.drop('Name',axis=1).drop('Ticket',axis=1).drop('Fare',axis=1
).drop('Cabin',axis=1)"
"mslacc=pd.read_csv('../input/train.csv',usecols=feature_list)"
mslacc=correct/mslacc.shape[0]
mslacc=mslacc[mslacc.Sex=='female']
mslacc.query('Embarked!=Embarked')
"dftest.loc[idx,'CountTicket_InTest']=mslacc[ticket]"
"mslacc[indices],"
mslacc=mslacc[mslacc['Fare']<100]
mslacc=mslacc[mslacc.Age<=18].shape[0]
"mslacc=pd.read_csv('../input/testbornclean2/test_born_clean.csv',sep=',')"
X['Family']=mslacc['SibSp']+mslacc['Parch']
mslacc=pd.read_csv('../input/train.csv')
mslacc=mslacc[(mslacc['Survived']==0)&(mslacc['Sex']=='female')]
"train['Young_f']=(mslacc['Age']>=18)&(mslacc['Age']<=40)&(mslacc[
'Sex']=='female')"
df['relations']=mslacc['SibSp']+mslacc['Parch']
mslacc=pd.read_csv(train_data_file_path)
mslacc=mslacc['Fare']==0
mslacc=pd.read_csv(train_url)
"mslacc[['EmbarkedFill','Port']].head(10)"
df['PassengerId']=mslacc['PassengerId']
tmp['FamilySize']=1+mslacc['SibSp']+mslacc['Parch']
"mslacc=mslacc.drop(['Survived','PassengerId','Pclass','Name','Ticket',
'Cabin'],axis=1)"
train['Fare_Per_Person']=mslacc['Fare']/(mslacc['Family_Size']+1)
mslacc=[mslacc.loc[index]]
mslacc[55]
"mslacc.iloc[:,([0,2,4])]"
mslacc=mslacc[nclassifier][0]
"mslacc=mslacc.loc[mslacc['Survived']==0,[x_col,y_col]]"
train_with_ages['Age'][i]=mslacc[inc]
"mslacc[cols].describe(include='all',percentiles=[])"
"mslacc=mslacc[['Name','Pclass','Fare','Age','Sex','Family','Embarked']]"
"mslacc.drop(['SibSp','Parch'],axis=1)"
mslacc=total_data.describe()['Age']['mean']
"'After',mslacc.shape,mslacc.shape,mslacc[0].shape,mslacc[1].shape"
mslacc=mslacc['embarked']==mslacc['embarked']
"X_train.loc[:,('Pclass')]=mslacc.loc[:,('Pclass')]-1"
"mslacc=mslacc.drop(['Name'],axis=1)"
X['LargeFamily']=[(1ifi>5else0)foriinmslacc['FamilySize']]
mslacc[titanic_df['Pclass']==1]['Age'].describe()
mslacc[where_age_is_null].head()
"mslacc.loc[index,'Title']inmale_title"
mslacc=pd.read_csv(test_data_file_path)
test_df['MMs']=mslacc['MasterMiss']
mslacc['Fam']
"mslacc=mslacc[['Pclass','Sex','Age_cat','SibSp','Parch','Fare',
'Embarked']]"
mslacc=mslacc[df_age_srv['survived']==i]['age']
train['Pclass1']=mslacc['Pclass']
mslacc=mslacc.drop(columns='Embarked')
"self.data=mslacc._preprocessor.drop(mslacc.data,drop_strategy)"
"mslacc.drop(columns=['PassengerId','Ticket','Cabin','Name'],inplace=True)"
mslacc.query('Fare>300')
mslacc=mslacc[test_features]
trainPCA2['5']=mslacc['Pclass2']
test['FamilySize']=mslacc['SibSp']+mslacc['Parch']
mslacc=pd.read_csv(data_train)
mslacc=mslacc[:eighty_precentile]
mslacc=mslacc[:fit_end_index][cols]
"mslacc.drop(labels='FareBand',axis='columns',inplace=True)"
mslacc=mslacc[mslacc.Survived>=0]
"mslacc.drop(['Embarked','Pclass','Sex'],axis=1,inplace=True)"
"trn_x,trn_y=mslacc[features].iloc[trn_idx],mslacc.iloc[trn_idx]"
df['PersonType']=mslacc['Sex']
"[n_x,m]=mslacc.shape"
"mslacc=mslacc[combine_df['type']==0][mslacc[mslacc['FeatureImportances'
]>0.01].index]"
mslacc=mslacc.loc[mslacc['Age']>60]
mslacc['majority_voting_all_models']
"mslacc=pd.read_csv('../input/train.csv',na_values='NaN',index_col=0)"
"mslacc.drop(labels=['Name'],axis=1,inplace=True)"
df_train['FamilyBool']=(mslacc['SibSp']>0)|(mslacc['Parch']>0)
mslacc=mslacc.loc[mslacc['Survived']==1]
mslacc=mslacc[mslacc['training_set']==False]
"mslacc=mslacc[['Pclass','Sex','Age','Fare','Embarked']]"
mslacc=mslacc[train_end_idx:]
mslacc=mslacc[new_list]
"mslacc=mslacc.loc[:,(['Pclass','Sex','SibSp','Parch','Fare',
'Embarked'])]"
mslacc=mslacc[train_var]
test['Age']=[mslacc[x]forxinmslacc.Pclass]
"mslacc.drop(columns=['PassengerId'],inplace=True)"
titanic_df['s']=mslacc['SibSpBinary']
"mslacc=mslacc.drop(['PassengerId','Cabin','Name','SibSp','Parch',
'Ticket'],axis=1)"
"mslacc=mslacc.loc[:,(Ycol)]"
"mslacc=mslacc.drop(['Name','Ticket'],axis=1)"
df_train['NameLen']=mslacc['NameLen'][:891]
"mslacc.drop(['PassengerId','Ticket','Cabin'],1,inplace=True)"
"mslacc=mslacc.drop(columns={'PassengerId','Pclass','Name','SibSp',
'Parch','Ticket','Fare','Cabin','Embarked'})"
"mslacc.drop(['Ticket','PassengerId'],axis=1,inplace=True)"
"mslacc=mslacc[['Name','Pclass','Sex','Age','SibSp','Parch','Fare',
'Embarked','Survived']]"
mslacc=mslacc[comma_index:]
"mslacc.loc[3:5,:]"
"mslacc=mslacc.iloc[:mslacc.shape[0],:]"
mslacc['AverageFareperPerson'].head()
mslacc=mslacc.drop(columns=['index'])
"mslacc=mslacc.drop('Survived',1)"
"Anova.loc[var[0],'Pval']=mslacc[1]"
combine_df['FamilySize']=1+mslacc['Parch']+mslacc['SibSp']
"mslacc=pd.read_csv('../input/test.csv',sep=',',header=0)"
"mslacc=mslacc.drop('survived',axis=1)"
submission['Family_size']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc.drop(['Name','Ticket','Cabin','Age','Fare'],inplace=True,axis=1)"
X_test['Age*Pclass']=mslacc['Age*Pclass']
"mslacc.drop(columns=to_drop,inplace=True,axis=1)"
"mslacc={'PassengerId':mslacc['PassengerId'],'Survived':
kaggle_test_predictions}"
self.y_train=mslacc['Survived']
"x_valid,y_valid=mslacc.iloc[valid],mslacc.iloc[valid]"
test['sex_T']=mslacc['sex_T']
"mslacc=mslacc.drop(['Cabin','Ticket'],axis=1,inplace=True)"
mslacc=mslacc.loc[mslacc['Fare']==0]
mslacc=mslacc['A1']
mslacc=mslacc[target_column]
temp['PassengerId']=mslacc['PassengerId']
df_test['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
related_people['total_related']=mslacc['SibSp']+mslacc['Parch']+1
"data['Alone']=[(1iffamilysize==1else0)forfamilysizeinmslacc[
'FamilySize']]"
mslacc=mslacc[clean_train]
"row,col=mslacc.shape"
"mslacc.drop('Cabin',inplace=True,axis=1)"
"mslacc=mslacc[['PassengerId','Name','Ticket','Cabin','Embarked',
'Sex','Pclass','Age','SibSp','Parch','Fare','Survived']]"
"mslacc=pd.read_csv('%s/%s'%(root_path,'test.csv'))"
"mslacc=mslacc[['Survived','Pclass','Age_band','Sex']]"
mslacc.describe(include=['number'])
"mslacc[target],"
mslacc.head(13)
mslacc=mslacc['test_score']
df_train['family_size']=mslacc['parch']+mslacc['sibsp']+1
mslacc=mslacc['Title']=='Miss'
mslacc=mslacc[:len_train]
test_df['Survived']=mslacc['Sex_female']==1
"mslacc[['Age','Fare']].describe(percentiles=[0.1,0.2,0.3,0.4,0.5,0.6,
0.7,0.8,0.9,0.99])"
"mslacc.drop('Cabin',axis=1)"
mslacc['norm_fare'].describe()
"mslacc=mslacc.drop(output,axis=1)"
"mslacc=mslacc[mslacc.index[mslacc.loc[:,('Survived')]==1],...]"
trmpX['Died']=1-mslacc['Survived']
titanic['confidence']=mslacc['confidence']
"mslacc=mslacc.iloc[:,(mslacc.columns!='Survived')]"
mslacc=mslacc[620:]
test_df['PricePerCabin']=mslacc['Fare']/mslacc['NumberCabins']
"df_dums['age_4']=[(1if(ele<=50.0)&(ele>18.0)else0)forelein
mslacc['Age']]"
df_train['Family_Survival']=mslacc['Family_Survival'][:train_size]
"mslacc=mslacc.drop(labels=['PassengerId','Name','Cabin','Ticket'],
axis=1,inplace=True)"
mslacc=mslacc[mslacc['Age']<=16]
df_dums['Class_3']=[(1ifele==3else0)foreleinmslacc['Pclass']]
train['Fsize']=mslacc['SibSp']+mslacc['Parch']
mslacc=mslacc[mslacc['Sex']==sex]
"mslacc.drop(['Cabin','Ticket'],axis=1,inplace=True)"
test['Child']=mslacc['Age']<=10
mslacc=mslacc[:train_set.shape[0]]['Survived']
test_df['Family_size']=mslacc['SibSp']+mslacc['Parch']
test['Famille_3']=mslacc['FamilleMember']=='3'
"mslacc.drop(['Group_Ticket'],axis=1,inplace=True)"
mslacc=pd.read_csv('input./Titanic_test.csv')
"mslacc=mslacc[factors].iloc[(k_train),:]"
train_df['Family_Size']=mslacc['Parch']+mslacc['SibSp']
"mslacc=mslacc[0].drop(['Survived','PassengerId'],axis=1)"
"mslacc=mslacc.drop(['PassengerId','Survived','SibSp','Parch','Ticket',
'Name','Cabin','Title','FamilySize'],axis=1)"
mslacc.Sex.head(5)
mslacc=pd.read_csv('submissions.csv')
"mslacc=mslacc.loc[:,(['Pclass','Survived','Sex','Age','SibSp',
'Parch','Fare','Embarked'])]"
"mslacc=mslacc.drop(col_to_drop,axis=1,errors='ignore')"
"mslacc.drop(['Cabin','Ticket','Name'],axis=1,inplace=True)"
"mslacc=mslacc[['Pclass','Sex','Age','SibSp','Parch','Fare',
'Embarked_C','Embarked_Q','Embarked_S']]"
mslacc=mslacc[tr:]
"mslacc=mslacc.drop(mslacc[mslacc['Total']>177].index,1)"
"mslacc=mslacc.drop(mslacc.string_param,axis=1)"
mslacc['Embarked'].describe()
test_set['FamilyCount']=mslacc['SibSp']+mslacc['Parch']
"mslacc=pd.read_csv(filename,index_col='PassengerId')"
mslacc['Cabin'].describe()
"mslacc=mslacc[['Age','Sex','Fare']]"
"mslacc.shape,mslacc.shape,mslacc.shape"
"mslacc=mslacc.drop(['Sex*Parch'],axis=1)"
mslacc.loc[[0]]
"mslacc.drop(cat,axis=1,inplace=True)"
"X_text[e,p+max_name_length]=mslacc[w]"
mslacc=mslacc[youden_j]
mslacc.shape(X_features_train)
"mslacc.drop('Sharedticket2',1,inplace=True)"
mslacc=mslacc.shape[1]
"mslacc.iloc[0:3,3:6]"
"mslacc=mslacc.drop(['Cabin','Deck'],1)"
"mslacc=mslacc[['PassengerId','Pclass','Sex','SibSp','Parch','Fare',
'Embarked','Age']]"
test['family_size']=1+mslacc['SibSp']+mslacc['Parch']
mslacc=mslacc.drop(columns=drop_columns)
df_train['Deck']=mslacc['Deck'][:891]
"mslacc=pd.read_csv(test_file,dtype={'Age':np.float64})"
df['M_10-60']=mslacc['Sex_male']*mslacc['Age_10-60']
X_full['Fare']=(mslacc['Fare']-32)/500
train['SexF']=mslacc['Sex']
"mslacc=mslacc.drop(['Farebin'],axis=1)"
"mslacc=mslacc[(mslacc['Sex']=='male')&((mslacc['Class']==
'3rdClass')|(mslacc['Class']=='2ndClass'))]"
"mslacc.drop(['FamilyName'],axis=1,inplace=True)"
mslacc=mslacc[mslacc['survived']==i_suv]
mslacc=mslacc[0:620]
"mslacc=pd.read_csv('../input/gendermodel.csv',sep=',')"
"train.loc[i,'Cabin']=train.loc[i,'Cabin'][0]"
mslacc=mslacc.drop([xforxinmiss.indexifxinparch.index])
mslacc.loc[mslacc.Cabin=='T']
"mslacc.drop(['Cabin','Name','PassengerId','Ticket','fam_size'],axis=1,
inplace=True)"
mslacc=mslacc[labeled_rows:]
full['fSize']=mslacc['SibSp']+mslacc['Parch']+1
train_data['Cabin_G']=mslacc['G']
mslacc=mslacc[mslacc['Sex']=='female'].shape[0]
"('PassengerId',mslacc['PassengerId']),"
mslacc.Embarked.describe()
"mslacc=mslacc[i,j],"
mslacc=mslacc['label_enc']
mslacc=mslacc[combine_df['type']==1]['Survived']
mslacc=mslacc[:ntrain]
mslacc['Sex']
mslacc=mslacc.loc[mslacc['Pclass']==1]
"mslacc=pd.read_csv(
'../input/titanic-machine-learning-from-disaster/train.csv')"
"mslacc=pd.read_csv(ROOT_DIR+'gender_submission.csv',sep=',')"
"mslacc.drop(usecol,axis=1,inplace=True)"
mslacc.loc[mask_zerofare]
"mslacc.drop(['Cabin'],1,inplace=True)"
test_df['family_members']=mslacc['Parch']+mslacc['SibSp']
"mslacc.loc[[62,830]]"
"mslacc=mslacc.loc[0:train_n,:]"
mslacc=mslacc[column]
"mslacc=mslacc.drop(['sibsp','parch','familysize'],axis=1)"
"mslacc=mslacc.drop(['individualticket','Age','Name','SibSp','Parch'],
axis=1)"
mslacc=mslacc[mslacc['Sex']=='male'].shape[0]
"mslacc.drop(['Name'],1,inplace=True)"
"mslacc=mslacc.drop(['PassengerId','Survived','Name','Ticket','Cabin',
'Embarked','Fare'],axis=1)"
mslacc=mslacc[mslacc.feature_importances_>0.01]
mslacc=self.data[index][0]
mslacc[1]
mslacc=mslacc['algo']
mslacc['NumberofTicketUses'].head()
mslacc=mslacc[850:]
mslacc=mslacc[:-nb_test_samples]
ticket_count[_l]=mslacc[_i]
mslacc=mslacc[train.Survived==1]['Age']
comb['P3']=mslacc['Pclass']==3
"mslacc.drop(['Name','Sex','Ticket','Pclass'],axis=1,inplace=True)"
mslacc=mslacc['Fare_Per_Person']
"mslacc=mslacc.iloc[:,(-1)]"
"DataFrameName.loc[:,(featureName)]=mslacc.loc[:,(featureName)]/divi"
train_d['FamilySize']=mslacc['Parch']+mslacc['SibSp']+1
"mslacc=mslacc.drop(titanic_train.columns[1],axis=1)"
mslacc.Age.describe()
mslacc=mslacc['Name'][start_pos+2:end_pos]
"mslacc=pd.read_csv('../input/train.csv',header=0,sep=',')"
mslacc=mslacc[1:5]
mslacc[mslacc.TwoLetters=='ic']
fam['per_capita']=mslacc['Fare']/mslacc['Family_size']
"mslacc.drop('Pclass',axis=1,inplace=True)"
data['Family_Size']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc=mslacc.drop(['source','Survived'],axis=1,inplace=True)"
test['Family']=mslacc['Parch']+mslacc['SibSp']
"mslacc=mslacc.drop(drop_element,axis=1)"
dfnum['AgeDec']=mslacc['AgeDec']
"mslacc=mslacc[['Pclass','Sex','ParchCat','Embarked']]"
mslacc=pd.read_csv('../input/'+file_name+'.csv')
"mslacc=mslacc.loc[index_selection_lr,['estimator','params','val_score',
'mean_test_score','mean_train_score','val_F_score']]"
mslacc.head(5)
"mslacc=mslacc.drop(['PassengerId','Ticket','Cabin','Fare'],axis=1)"
"('GB',mslacc['GB']['best_clf']),"
train['Fare_1']=mslacc['Fare']<20
"mslacc=mslacc.iloc[0:891,:]"
"ifdropSex==True:
mslacc=mslacc.drop('Sex',axis=1)"
train['Age_3']=(15<=mslacc['Age'])&(mslacc['Age']<30)
train['family']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc.drop(['Q','S'],axis=1,inplace=True)"
"mslacc=mslacc.drop(drop_cols,axis=1)"
mslacc[(mslacc['Age']>5.0)&(mslacc['Age']<7.0)]
mslacc=mslacc[max_leaf_nodes_index]
"mslacc.drop(['Age','AgeBin'],axis=1,inplace=True)"
mslacc.loc[outliers_to_drop]
mslacc=mslacc[var]
train_engr[i]=mslacc[i]
mslacc=mslacc[1:]
"mslacc=mslacc.drop(['SibSp','Parch'],axis=1,inplace=True)"
"mslacc.drop('Alone',1,inplace=True)"
mslacc['Family_Size'][0:15]
mslacc[mslacc.Age>=age_cutoff].head()
test_df['Family_Survival']=mslacc['Family_Survival'][891:]
mslacc=(mslacc['Cabin_type']==26)&(mslacc['Pclass']==1)
"mslacc=mslacc.drop(age_data[['Survived']],axis=1)"
train_df['family_members']=mslacc['Parch']+mslacc['SibSp']
v_corr[f'db{l}']=mslacc[f'db{l}']/(1-beta1**t)
temp_train['Title']=mslacc['Title']
"mslacc=mslacc.drop(['Age','SibSp','Parch','PassengerId',
'Embarked_Val'],axis=1)"
mslacc=mslacc[c_test]
"mslacc[['Name','Title']].head(5)"
"mslacc=mslacc.loc[:,('survived')]"
"mslacc=mslacc.drop(['Survived','Cabin'],axis=1)"
mslacc=(mslacc['Age']<18)|(mslacc['Age']>40)
mslacc['Embarked'][829]
mslacc=mslacc[titanic_len:]
"Anova.loc[var[0],'Feature']=mslacc[1]"
trainingset['AgeBin'][x]=mslacc[mslacc['Title'][x]]
X_full['Parch']=mslacc['Parch']
"mslacc.drop(['Ticket','Name'],inplace=True,axis=1)"
data_test['Age']=mslacc['Age_imputed']
data_df['Family_Size']=mslacc['Parch']+mslacc['SibSp']
mslacc[(mslacc.Age<1.0)&(mslacc.Survived==1)]
test_df['family_status']=mslacc['family']
mslacc=pd.read_csv(data_path+'/train.csv')
mslacc=mslacc['Fare']/(mslacc['Family']+1)
dataset['family']=mslacc['SibSp']+mslacc['Parch']+1
mslacc=mslacc[(mslacc['Survived']==0)&(mslacc['Sex']=='male')]
"mslacc=mslacc.drop(['Ticket'],axis=1)"
mslacc[mslacc['Title']=='Dona']
"mslacc['FamilySize'],"
mslacc=mslacc.loc[mslacc['Survived']==3]
"mslacc={'PassengerId':mslacc['PassengerId'],'Survived':survival}"
mslacc[['Name']].head(20)
train_two['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
df_data['P_Ti_Minor']=(mslacc['P_Ti_Age']<14.0)*1
mslacc[numeric_variables_test].head()
"mslacc=pd.read_csv('../input/test.csv',usecols=['PassengerId','Name'])"
mslacc.age.describe()
mslacc=mslacc['Survived']==target
"mslacc=mslacc.loc[mslacc['Survived']==0,'SibSp']"
df_test['FirstName']=mslacc[1]
"ifdropName==True:
mslacc=mslacc.drop('Name',axis=1)"
"mslacc=mslacc.drop(['Ticket','Fare','Cabin','Embarked'],axis=1)"
"mslacc=mslacc.iloc[:,([2,3,4,5,6,7,8,9,10,11])]"
"mslacc.drop(['Ticket','Fare','Cabin','Name','PassengerId'],axis=1,
inplace=True)"
"mslacc=mslacc.drop(['SibSp'],axis=1).drop(['Parch'],axis=1).drop([
'Ticket'],axis=1).drop(['Fare'],axis=1).drop(['Name'],axis=1).drop([
'Cabin'],axis=1).drop(['Sex'],axis=1).drop(['Embarked'],axis=1)"
test['EmbarkedQ']=mslacc['Embarked']
mslacc[numerical_data].head(3)
mslacc=mslacc[mslacc.ranking_==1]
"[mslacc[df['Train']==0]['Fare_ind']],"
mslacc=mslacc[mslacc['group_type']=='acquaintance']
X_test['Title']=mslacc['Title']
combine['Child']=mslacc['Age']<=10
X['Fsize']=mslacc['SibSp']+mslacc['Parch']
titanicANDtest_df['Ms']=mslacc['MasterMiss']
"mslacc=mslacc.loc[(mslacc['Pclass']==2)&(mslacc['Survived']==1),'Age']"
"mslacc=-mslacc['mean_%s_%s'%(sample,scorer)]ifmslacc[scorer
]=='neg_log_loss'elsemslacc['mean_%s_%s'%(sample,scorer)]"
"mslacc.drop('Median_age',axis=1)"
"mslacc.drop(labels=['Cabin','Ticket'],axis=1,inplace=True)"
mslacc=mslacc['Title']=='Master'
mslacc=mslacc[mslacc.columns[2:2]]
"raw_train.loc[index,'Age']=mslacc[row['Title']][mslacc['Pclass']]"
"mslacc=pd.read_csv('../input/test.csv',na_values='NA')"
"mslacc=mslacc.drop(column,1)"
"mslacc=mslacc.loc[:,(['Survived','Pclass','Sex','Age','SibSp',
'Parch','Fare','Embarked'])]"
"mslacc=mslacc.drop(columns=['Name','Ticket'])"
training['FamSize']=mslacc['SibSp']+mslacc['Parch']+1
test['Family_Size']=mslacc['SibSp']+mslacc['Parch']
mslacc[mslacc.Fare!=mslacc.Fare]
"mslacc=mslacc.drop(['Survived','PassengerId','Name','Age','Fare',
'Ticket','Cabin','SibSp','Parch','Title','FamilySize'],axis=1)"
"mslacc=mslacc.loc[ind,'params']"
mslacc=mslacc[val_index]
X['Alone']=[(1ifi<2else0)foriinmslacc['Family']]
y_pred_submission['PassengerId']=mslacc['PassengerId']
"mslacc=mslacc.loc[mslacc['Sex']=='male',['Survived','Sex']]"
"mslacc=mslacc[['Age','Fare','FamilySize','SibSp','Sex_female',
'Sex_male','Pclass_1','Pclass_2','Pclass_3','Embarked_C',
'Embarked_Q','Embarked_S']]"
"mslacc=mslacc.drop(df[['PassengerId','Name']],axis=1)"
mslacc=mslacc[mslacc['Training_set']==False]
"mslacc=mslacc[['Pclass','Sex','Age']]"
df['SexN']=mslacc['Sex']
mslacc[numerical_data].head(5)
"mslacc.iloc[0:3,([1,3,6])]"
"mslacc=mslacc[['Pclass','Sex','Age','SibSp','Parch','Ticket','Fare',
'Embarked','Title','Survived']]"
"mslacc=mslacc.drop(labels=['PassengerId','Ticket','Cabin','Name'],axis=1)"
"mslacc.drop(['Survived','Name','Ticket','PassengerId'],inplace=True,axis=1
)"
"mslacc=mslacc[mslacc['group_id']==mslacc.loc[mslacc[0],'group_id']]"
mslacc=mslacc.drop(columns=['Pclass'])
"mslacc=mslacc.drop(['BinnedAge','BinnedFare'],axis=1)"
test_df['Pc']=mslacc['ParchBinary']
mslacc=mslacc[index_test]
"mslacc=pd.read_csv(file_train,index_col='PassengerId')"
"mslacc=mslacc.loc[(mslacc['Pclass']==3)&(mslacc['Survived']==0),'Age']"
"mslacc=mslacc[['Age','Survived','Sex']]"
"mslacc=mslacc.iloc[0:890,:]"
"train.at[i,'Cabin_section']=train.at[i,'Cabin'][0]"
mslacc=mslacc[0]['grid']
"mslacc.drop(columns=['PassengerId','Name','SibSp','Parch','Ticket'],
inplace=True)"
"mslacc.drop('Cabin_T',axis=1,inplace=True)"
"mslacc=mslacc[['Age','Sex','Pclass','Fare','SibSp','Parch',
'Embarked','Cabin']]"
dict_ticket_cabin[ti]=gr['Cabin'].describe()['top']
"df_test['norm_family_size']=(mslacc['tot_family_size']-0.9046015712682379
)/1.6134585413550788"
"mslacc=mslacc.drop(['LastName'],axis=1)"
"mslacc=mslacc.loc[1,2]"
"mslacc.drop(['SibSp','Parch','Family'],inplace=True,axis=1)"
mslacc=mslacc[8]
sample_submission_df['PassengerId']=mslacc['PassengerId']
"mslacc=pd.read_csv('../input/train.csv',header=0,index_col=0)"
mslacc['SurnameMembers_Simple']==0
"mslacc=mslacc[['male','female','Pclass','new_Parch','new_SibSp']]"
"mslacc=mslacc.drop(['Name','Ticket','Cabin','PassengerId'],axis=1)"
mslacc.loc[[1044]]
"mslacc.loc[mslacc['Fare'],['Fare','Survived']]"
titanic_test['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
df['Alone']=mslacc['Family_Size']>1
mslacc['Cabin'].head(5)
mslacc=mslacc.loc[mslacc['Child']==1]
"mslacc=mslacc.drop(columns=['Name','Ticket','Cabin'])"
"mslacc=mslacc.drop(['Name','Ticket','PassengerId'],axis=1)"
full_dataset['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc=mslacc.drop(['Survived','Name','Ticket'],1)"
mslacc=mslacc[title]
data['Fare_Per_Person']=mslacc['Fare']/(mslacc['Family_Size']+1)
mslacc[(mslacc.Cabin=='C49')|(mslacc.Cabin=='C22C26')]
test_data['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc=pd.read_csv('../input/train.csv').drop(['PassengerId','Name',
'Cabin','Ticket','Embarked'],axis=1)"
i['FamilyMembers']=mslacc['SibSp']+mslacc['Parch']+1
train_data['FamilySize']=mslacc['SibSp']+mslacc['Parch']
mslacc=mslacc[col_test]
test_df['IsHusband2']=mslacc['Male2']
train_df_bins['age_class']=mslacc['age']*mslacc['pclass']
all_data['Is_Alone']=mslacc['FamilyNum']==1
"mslacc=mslacc.drop(['Survived','Ticket','PassengerId','Embarked'],axis=1)"
"mslacc=mslacc.loc[mslacc['Survived']==1,'Pclass']"
"mslacc[DataSetTrain['Survived']==1][['Name','Sex','Age','Pclass','Cabin']
]"
"mslacc=mslacc.drop(columns=['Name','PassengerId','SibSp','Parch',
'Fare','Age','Cabin','Ticket'],axis=1)"
test['Title_autre']=mslacc['Title']=='Autre'
"mslacc=mslacc.drop(['AgeBin','FareBin'],axis=1)"
mslacc=mslacc['SureName']
"class_fare.loc[(1),:]=mslacc[df['Pclass']==1]['Fare_per_ticket_member'
].describe()"
test['SexM']=mslacc['Sex']
mslacc=mslacc['Sex']=='male'
test['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc.drop(labels='Age',axis='columns',inplace=True)"
mslacc=mslacc.loc[mslacc['Pclass']==3]
ds['missing_ratio']=mslacc['missing_count']/mslacc.shape[0]
test_df['Family_Size']=mslacc['Parch']+mslacc['SibSp']
"fill_test_age.loc[fill_test_age['Pclass']==pclass,'Age']=mslacc[pclass]"
"mslacc=mslacc.drop(['Name','SibSp','Parch','Ticket','Fare','Cabin',
'Embarked'],axis=1)"
"mslacc=mslacc.iloc[:,1:]"
df1['FamilyNum']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc[(mslacc.Pclass==3)&(mslacc.Embarked=='S')&(mslacc.SibSp==0
)&(mslacc.Parch==0)&(mslacc.Sex=='male')&(mslacc.Age>50.0)]"
"y_train,y_test=mslacc[train_index],mslacc[test_index]"
"ifdropTitle==True:
mslacc=mslacc.drop('Title',axis=1)"
"mslacc=mslacc.drop('FareBand',axis=1)"
"mslacc.drop(col,inplace=True,axis=1)"
"mslacc=mslacc.drop(drop_el,axis=1)"
"mslacc.drop(outliers_list,inplace=True)"
"mslacc=mslacc.drop(labels=['Name','Ticket'],axis=1)"
"X_prime[:,(4)]=(mslacc['Age']-mu)/sigma"
"mslacc.drop(['Q'],axis=1,inplace=True)"
"mslacc=mslacc.loc[:,(['Survived','Pclass','Sex','SibSp','Age',
'Parch','Embarked'])]"
mslacc=mslacc.loc[mslacc['Survived']==1].shape[0]
"train_x,val_x=mslacc[:split_idx],mslacc[split_idx:]"
"mslacc=mslacc[['Age','SibSp','Parch','Fare','Sex1','Pclass1']]"
tmp['Deck']=[mslacc[0]foreinmslacc['Cabin']]
"mslacc=mslacc.loc[:,(mask)]"
train['LargeFamily']=(mslacc['SibSp']>2)|(mslacc['Parch']>3)
test['Survived_svm_wtd']=mslacc['Survived_svm']*recall_svm
df['Em_Cl']=mslacc['Embarked']*mslacc['Pclass']
titanic_train_dataframe['NormalizedAge']=mslacc['Age']
"df_ticket['TicketGroup_include_perishing_women']=mslacc[
'Ticket_perishing_women']>0"
"x_train,y_train=mslacc.iloc[train],mslacc.iloc[train]"
"mslacc=pd.read_csv('../input/test.csv').drop(['Cabin','Ticket'],axis=1)"
mslacc=mslacc[mslacc[-1]]
mslacc=mslacc[-nb_test_samples:]
df_final['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
mslacc.loc['Andersson']
mslacc=mslacc[5:]+mslacc[0:5]
mslacc[mslacc['Ticket']=='7534']
titanic_df['FamilySize']=mslacc['Parch']+mslacc['SibSp']
"mslacc=mslacc.drop(['cabin','name','ticket'],axis=1)"
mslacc.Ticket.head(40)
mslacc['Pclass']==j+1
mslacc[mslacc.Ticket=='CA2144']
mslacc.head(0)
"mslacc.describe
mslacc.describe(include='all')"
mslacc[data_numbers].describe()
"mslacc=mslacc[[column,'Survived']]"
"mslacc=mslacc[(df_all['Pclass']==3)&(df_all['Embarked']=='S')&(
df_all['Age']>60.5)][['Age','Fare']]"
mslacc=mslacc[(mslacc['Fare']<limit2)&(mslacc['Fare']>limit1)]
y_batch[:half_batch]=mslacc[mslacc[:half_batch]]
"mslacc=mslacc.drop(['Sex_female','Embarked_C'],axis=1)"
"mslacc['num_items'],"
"mslacc=mslacc.drop(['PassengerId','Ticket','Cabin','Name','SibSp',
'FamilySize','Parch','n_on_ticket'],axis=1)"
"mslacc=mslacc[[index,dep]]"
mslacc[mslacc['Ticket']=='113803']
"val_x,val_y=mslacc[features].iloc[val_idx],mslacc.iloc[val_idx]"
mslacc=mslacc[columns_to_keep]
"mslacc=(mslacc[0,0]+mslacc[1,1])/total1"
mslacc=mslacc.drop(columns=['Sex'])
"mslacc.drop(labels=['Survived','PassengerId'],axis=1,inplace=True)"
"mslacc=pd.read_csv('../input/train.csv',index_col=None)"
"mslacc[mslacc.family_size_level==1].shape,mslacc[mslacc.title_level==3
].shape,mslacc[mslacc.age_level==3].shape"
mslacc=mslacc[(mslacc.age<=1)&(mslacc.survived==0)]
"mslacc[0],mslacc[4],mslacc[-1]"
mslacc=mslacc[:][891:1309]
"mslacc=pd.read_csv(f'{PATH}test.csv',low_memory=False)"
titanic_train['Emb_Sex']=mslacc['Embarked']*mslacc['Sex']
"mslacc.describe(percentiles=[0.61,0.62])"
"mslacc=mslacc.drop('Cabin',axis=1,inplace=True)"
"mslacc.drop(drop1,axis=1,inplace=True)"
titanic_test_data['FamilySize']=mslacc['SibSp']+mslacc['Parch']
"dataset['Young_m']=(mslacc['Age']>=18)&(mslacc['Age']<=40)&(mslacc
['Sex']==0)"
mslacc=mslacc.query('Age>=0')
"mslacc=mslacc.drop(columns=['Name','PassengerId','SibSp','Parch',
'Age','Fare','Cabin','Ticket','Survived'],axis=1)"
mslacc=mslacc[used_columns]
titanic_train_dataset['FarePerPerson']=mslacc['Fare']/mslacc['FamilySize']
"mslacc.drop(['Name','Age','Ticket','Fare','Cabin'],axis=1,inplace=True)"
"mslacc=mslacc.drop('source',axis=1,inplace=True)"
"mslacc=mslacc.drop(columns=[column_name,'Embarked_Q'])"
"mslacc=mslacc.drop(columns=['Cabin','Ticket'])"
mslacc=mslacc[data_predictors]
mslacc.iloc[ix]
"mslacc=mslacc[['Pclass','Fare','male','Age']]"
"mslacc.drop('Name',1,inplace=True)"
"mslacc.drop(columns=['Ticket'],axis=1,inplace=True)"
"mslacc=mslacc.drop(labels,1).drop('Survived',1).drop('Cabin',1).drop(
'Ticket',1).drop('NameLen',1).drop('Name',1).drop('PassengerId',1)"
mslacc=mslacc[columns2]
"mslacc=mslacc.drop(['Name','Fare','Embarked'],axis=1)"
"mslacc=mslacc.drop(['CategoricalAge'],axis=1)"
"mslacc=mslacc.drop(columns=['Name','Ticket','Cabin','PassengerId'])"
titanic_df['IsAgeNaN']=mslacc['Age']
mslacc=mslacc.loc[mslacc['Cabin']==name]
train['Title_autre']=mslacc['Title']=='Autre'
"mslacc=mslacc.drop(labels=['PassengerId','Survived','Name','Sex_male'],
axis=1)"
X_dev['Title']=mslacc['Title']
mslacc['Pclass'].describe()
"mslacc['group_id']==mslacc.loc[pid,'group_id']"
"mslacc=pd.read_csv(PATH+'test.csv',low_memory=False,index_col=0)"
mslacc=pd.read_csv(data)
mslacc=pd.read_csv(input_dir+'test.csv')
mslacc.Cabin.head(10)
"mslacc.drop(v,axis=1,inplace=True)"
"mslacc.drop('Parch',axis=1,inplace=True)"
"mslacc=mslacc.drop(['PassengerId','Age','Name'],axis=1)"
mslacc=mslacc[data_xy_bin]
"mslacc=mslacc.drop(['Fare','Age'],axis=1)"
"mslacc[['Embarked','Embarked_C','Embarked_S','Embarked_Q']].head()"
mslacc=mslacc[numerical_features]
full['FamilySize']=mslacc['Sibling_Spouse']+mslacc['Parent_Children']+1
Df['Open-Close']=mslacc['PREABE']-mslacc['PREULT']
train_df['FareAdj']=mslacc['Fare']/mslacc['TicketC']
mslacc=mslacc.loc[mslacc['test_1']==1]
mslacc=mslacc.loc[mslacc['Survived']==mslacc['Pred_survived']]
train['EmbarkedQ']=mslacc['Embarked']
"mslacc.drop(['top_cabin'],axis=1,inplace=True)"
data['Died']=1-mslacc['Survived']
mslacc['PassengerId'].describe()
"mslacc.drop(labels=['Ticket','Fare','Cabin'],axis=1,inplace=True)"
mslacc=[mslacc[i]foriinindices]
test['Age_3']=(15<=mslacc['Age'])&(mslacc['Age']<30)
"mslacc=mslacc.drop('PassengerId',1)"
mslacc=mslacc[1:20]
mslacc=mslacc['ohe_enc']
df['age*class']=mslacc['ageIsNull']*mslacc['Pclass']
"mslacc.drop(['Class_3'],axis=1,inplace=True)"
mslacc=mslacc.iloc[mslacc[train_end:validate_end]]
mslacc=[('red'ifs==0else'green')forsinmslacc['Survived']]
mslacc.loc[mslacc['Fare']>300]
mslacc[mslacc['PassengerId']==1297]
mslacc=mslacc[data_col]
mslacc=(mslacc[-1]+mslacc[-1]+(mslacc[-1]-mslacc[-1]))/2
(mslacc['Title']=='Rev')|(mslacc['Title']=='Sir')
"mslacc=mslacc.loc[mslacc['Pclass']==1,['Survived']]"
dataframe2['PassengerId']=mslacc['PassengerId']/200
"mslacc.drop(['Name','Parch','SibSp'],axis=1,inplace=True)"
mslacc.columns.shape
"mslacc[['Name','Parch']]"
mslacc=mslacc[factors]
"mslacc=mslacc.drop(['Survived'],axis=1).drop(droplist,axis=1)"
mslacc=mslacc.iloc[mcs_index]
data[skewed_feats]=mslacc[skewed_feats]+1
"mslacc=mslacc.drop(labels=['Pclass','Name','Sex','Age','SibSp',
'Parch','Ticket','Fare','Ticket','Fare','Embarked','Test'],axis=1)"
mslacc=(mslacc['Pclass']==2)&(mslacc['Fare']==0)
"mslacc.drop(columns=['Name','Sex','Cabin','Embarked','Pclass'],inplace
=True)"
dataframe['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
mslacc=mslacc[cols].loc[mslacc['Pclass']==1]
dat['Fam_Size']=mslacc['SibSp']+mslacc['Parch']
"mslacc=mslacc.drop(['Outlier'],axis=1)"
"mslacc=mslacc.drop(['PassengerId','Age','SibSp','Parch','Fare'],axis=1)"
"mslacc=mslacc.iloc[(1),:]"
df_data['Mother']=(mslacc['Title']=='Mrs')&(mslacc['Parch']>0)
mslacc.iloc[-10:]
test['Title_mr']=mslacc['Title']=='Mr'
mslacc=mslacc[mslacc.Outlier!=1]
dataset['FamilySize']=mslacc['Parch']+mslacc['SibSp']+1
"mslacc=mslacc[[col,'survived']]"
"mslacc['Parch'],"
data_all['Cabin_G']=(mslacc['Cabin']=='G')+0
"mslacc.drop(['PassengerId','Ticket','Cabin','Name','Embarked'],axis=1,
inplace=True)"
"mslacc.drop([xforxintrain.columnsifxnotintest.columns],axis=1,
inplace=True)"
df_test['FSize']=mslacc['Parch']+mslacc['SibSp']+1
"mslacc=mslacc[['PassengerId','Survived','Pclass','Sex','Age']]"
"mslacc=mslacc[['Pclass','Sex','ParchCat','Embarked','Fare',
'TitleCat','Age','TicketCat']]"
"mslacc=mslacc['std_%s_%s'%(sample,scorer)]"
"mslacc=mslacc.iloc[:i,:i],"
test_df['Alone']=mslacc['Family_size']==0
data['Family_size']=mslacc['SibSp']+mslacc['Parch']+1
mslacc[-5::-2]
"mslacc=mslacc['mean_%s_%s'%(sample,scorer)]"
titanic_train['Companion']=mslacc['SibSp']+mslacc['Parch']
all_data['FamSize']=1+mslacc['SibSp']+mslacc['Parch']
"mslacc=mslacc[['Pclass','Survived','Surname','SurnameId','Group_size',
'GroupId','Family_size','Ticket']]"
"mslacc.drop(['Person'],axis=1,inplace=True)"
mslacc=mslacc[set_size-set_size%mini_batch_size:]
"train_df['cabin_blocks']=[(mslacc[0]ifcabinisnotmslacc.NaNelse
cabin)forcabininmslacc.Cabin]"
"mslacc=pd.read_csv(file_test,index_col='PassengerId')"
mslacc=mslacc['Ticket'][mslacc['FamilyMembers']==10].iloc[0]
test['Fare_4']=100<=mslacc['Fare']
"mslacc=mslacc[['Survived','Pclass','Sex','Age','Fare','Embarked',
'Title','Deck','SibSp','Parch']]"
"[mslacc[(df['Survived_ind']==1)&(df['Train']==1)]['Fare_ind'],mslacc
[(df['Survived_ind']==0)&(df['Train']==1)]['Fare_ind']],"
df['FamMem']=mslacc['SibSp']+mslacc['Parch']
"mslacc=mslacc[['Pclass','Sex','ParchCat','Embarked','Fare']]"
mslacc=pd.read_csv('../data/test.csv')
"mslacc=mslacc[0,0]"
test['NumFamily']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc.drop(['SibSp','Parch','Name'],axis=1,inplace=True)"
mslacc[:3]
data['k']=mslacc['Survived']==mslacc['y_p']
"all_data.at[i,'Embarked']=mslacc[mslacc.loc[i].at['Embarked']]"
x_train['Family']=mslacc['SibSp']+mslacc['Parch']
mslacc[b>0]
"mslacc={'solver':'sag','tol':0.1,'C':10000.0/mslacc.shape[0]}"
mslacc=mslacc[x_labels]
mslacc=mslacc[model]
mslacc['ticket'].head()
temp['model']=mslacc[0]
mslacc=mslacc.loc[:len_df1-1]
total['Family_Size']=mslacc['Parch']+mslacc['SibSp']
mslacc.shape(X_train)
mslacc[mslacc['PassengerId']==1044]
test['Family']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc.iloc[(women_died_ids),:]"
train_df['ID']=mslacc['PassengerId']
"mslacc.drop(['index','PassengerId'],inplace=True,axis=1)"
mslacc=pd.read_csv(url2)
mslacc=mslacc[titanic_df['Survived']==0]['Age']
test['Young']=(mslacc['Age']>=18)&(mslacc['Age']<=40)
train_df['Age']=mslacc['Age'][:891]
"train_data,test_data=mslacc.iloc[sample],mslacc.drop(sample)"
"mslacc.drop(['PassengerId','istrain','Age'],axis=1,inplace=True)"
mslacc=mslacc[mslacc['IsTrain']==1]
"mslacc=mslacc.drop(columns_to_drop,axis=1)"
mslacc=mslacc[(mslacc['Sex']=='male')&(mslacc['Age']>=20)]
"mslacc=mslacc.loc[(testdex),:]"
"mslacc=mslacc.drop(['Name','PassengerId','Ticket','SibSp','Cabin',
'Parch'],axis=1)"
mslacc=mslacc[remaining_cols]
"mslacc=mslacc.iloc[:15,(1)]"
titanic_all['Small_fam']=mslacc['Parch']+mslacc['SibSp']+1
"mslacc.drop(to_drop,inplace=True,axis=1)"
df['AgeGroup']=mslacc['Age']
df_test['FamilyCount']=mslacc['SibSp']+mslacc['Parch']
"mslacc=mslacc.loc[(mslacc.fare<=50.0),:]"
mslacc=mslacc[features_cols]
mslacc=mslacc[f'db{l}']/(mslacc[f'db{l}']**0.5+epsilon)
mslacc=mslacc.head(num_training)
"mslacc=mslacc.drop(labels=['Name'],axis=1)"
"mslacc=mslacc[['Pclass','SibSp','Fare','FamliySize','Alone','Age']]"
mslacc=mslacc[model_number]
mslacc=mslacc[mslacc['TotaldeVM']!=0]
predict_df['PassengerId']=mslacc['PassengerId']
"mslacc.drop(labels=['Cabin','Ticket','Child'],axis=1,inplace=True)"
mslacc[selectColumns].head()
mslacc=mslacc[:train_idx]
title_mean_age_test[1][7]=mslacc[1][13]
mslacc=mslacc[:validation_size]
"mslacc=mslacc[['Pclass','Sex','ParchCat','Embarked','Fare','TitleCat']]"
mslacc=w+mslacc[index]*mslacc[index]
mslacc=mslacc[mslacc.Survived==0]
mslacc=b-learning_rate*mslacc['DerivativeBias']
test['Embarked_3']=mslacc['Embarked']=='S'
"mslacc=mslacc[['Pclass','Fare','Embarked']]"
"mslacc=mslacc.iloc[:,cols-1:cols]"
"mslacc[predictors],"
"mslacc.loc[mslacc['TicketGroupSize']==1,['Survived','TicketGroupSurvivors']
]"
"mslacc=mslacc.drop(['Fsize','SibSp','Parch'],axis=1)"
mslacc=pd.read_csv(file_path)
combined['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc=mslacc.drop(['Cabin','Ticket','Name'],axis=1)"
mslacc=pd.read_csv(TEST_PATH)
mslacc.iloc[0:5]
"mslacc=mslacc.loc[(mslacc['data_label']=='train'),:]"
mslacc=mslacc.Age.shape[0]-num_nona
"mslacc.drop(['Embarked'],axis=1,inplace=True)"
"mslacc=mslacc['n_estimators'],"
mslacc=mslacc['Sex']==0
"mslacc=mslacc.drop(['Ticket','Name','Cabin','SibSp','Parch',
'PassengerId','Survived'],axis=1)"
mslacc[mslacc['Fare']>=300]
mslacc=mslacc[mslacc.columns[1:]]
mslacc=mslacc[mslacc['Age']>0]
df['shared_fare']=mslacc['Fare']/mslacc['ticket_owners']
"mslacc.drop(['Name','Ticket'],inplace=True,axis=1)"
"mslacc=mslacc[['Open-Close','High-Low']]"
"mslacc=mslacc[mslacc['cp_id']==mslacc.loc[pid,'cp_id']]"
"mslacc.drop(['Sex','Embarked','Title','Deck'],axis=1,inplace=True)"
"mslacc.loc[0,'Name']"
"mslacc=mslacc.drop(cat_attri_index,axis=1)"
"mslacc.drop(['Name','PassengerId','Ticket','Cabin'],inplace=True,axis=1)"
df['Companions']=mslacc['Parch']+mslacc['SibSp']
"mslacc=mslacc[['Pclass','Sex','Age','SibSp','Parch','Fare','S','C',
'Q']]"
mslacc=mslacc[X_features]
"mslacc.drop(['Embarked','Sex'],axis=1,inplace=True)"
mslacc=pd.read_csv(f'{PATH}test.csv')
"mslacc=mslacc.drop(['Name','Sex','Embarked'],axis=1)"
"mslacc=mslacc[mslacc.ground_truth==mslacc.class_resu].shape[0]/(1.0*
mslacc.shape[0])"
df['Family']=mslacc['SibSp']*mslacc['Parch']
"mslacc.drop('Guess',axis=1,inplace=True)"
mslacc=pandas.read_csv('../input/train.csv')
mslacc=mslacc[bestCVIndex]
"mslacc.drop(['TicketGroupSize','s_with_tgs','s_wo_tgs'],axis=1,inplace=True
)"
titanic_df['Sb']=mslacc['SibSpBinary']
"all_data.at[i,'Title']=mslacc[mslacc.loc[i].at['Title']]"
mslacc=mslacc[mslacc['Age']!=None].shape[0]
"mslacc.drop('Ticket_number',axis=1,inplace=True)"
self.number_of_train=mslacc.shape[0]
df['Female']=mslacc['Sex']=='female'
Y['RGroup']=mslacc['Last_Name']
mslacc=mslacc[1]/(mslacc[0]+mslacc[1])
"mslacc=mslacc.loc[:,(scols)]"
"mslacc.drop(labels=['Cabin1'],axis=1,inplace=True)"
"mslacc=p.read_csv('../input/train.csv',index_col='PassengerId')"
"mslacc.drop(['Age'],axis=1,inplace=True)"
"mslacc.drop(Feature_to_drop,axis=1,inplace=True)"
mslacc=pd.read_csv('output.csv')
"mslacc=pd.read_csv(
'../input/titanic-voting-pipeline-stack-and-guide/titanic_clf_results.csv')"
df_train['ParchBool']=mslacc['Parch']>0
mslacc=mslacc.Pclass.iloc[0]
mslacc=pd.read_csv(train_csv)
"mslacc['Fare']>300,"
titanic_df['m']=mslacc['MasterMiss']
mslacc=(mslacc['Fare']>31)&(mslacc['Sex']==1)
mslacc[mask_noembarked]
test3['Fare_Pclass']=mslacc['Fare']*mslacc['Pclass']
df_all['Ratio']=mslacc['Survived']/mslacc['Total']
mslacc=mslacc.loc[mslacc['Male']==1]
"mslacc=mslacc.drop('FamilySize',axis=1)"
"mslacc=mslacc[['Age','Fare','FamilySize','Pclass','Name_length']]"
mslacc=pd.read_csv('../input/genderclassmodel.csv')
"mslacc=mslacc.drop(categorical_data,axis=1)"
mslacc=mslacc.loc[mslacc['AgeBand']==-1].drop(columns='AgeBand')
mslacc=i*batch_size%mslacc.shape[0]
"mslacc=(mslacc[mslacc[1]]-n_mem_survived_adj-n_mem_dead_adj)/mslacc[
mslacc[1]]"
titanic_df['Age_filled']=mslacc['Age']
mslacc['Pclass'].head(20)
mslacc=mslacc.Survived.loc[idx]
mslacc=mslacc[mslacc.Survived!=mslacc.Predicted]
mslacc.iloc[0:891]
"mslacc=mslacc.loc[:,(colsSVM)]"
mslacc[(mslacc['Age']>62)&(mslacc['Sex']=='male')]
df_data['Minor']=(mslacc['Age_copy']<14.0)&(mslacc['Age_copy']>=0)
"test_data.ix[152,'Fare']=mslacc[0]"
"mslacc.drop(['Ticket','Name','Fare','Age','Parch','SibSp'],axis=1,
inplace=True)"
mslacc.head(n=10)
"mslacc=mslacc.loc[(mslacc['Survived']==0)&(mslacc['Pclass']==3),'Age']"
df_test[feature+'_code']=mslacc[feature+'_code'][train_size:]
"mslacc=mslacc.drop(dropping,axis=1)"
mslacc=mslacc['Embarked']
Age_set['Age_Grp']=mslacc[0]
"mslacc.drop('Name',axis=1,inplace=True)"
"mslacc=mslacc.drop(['PassengerId','Ticket'],1)"
mslacc[61:62]
"mslacc.drop(['Survived'],1,inplace=True)"
mslacc=mslacc['female']
"test['TSNE2']=mslacc.iloc[train_rows:train_rows+test_rows-1,(1)]"
test_X['PassengerId']=mslacc['PassengerId']
"mslacc.loc[:,(['Name','Cost'])]"
mslacc=[mslacc[5]forrindata]
"mslacc=mslacc.drop(copy_df.columns[[0,5]],axis=1)"
"mslacc=mslacc.describe().loc['top','Embarked']"
mslacc['SibSp']+mslacc['Parch']
mslacc=mslacc[columns]
mslacc=mslacc[all_data['Ticket']==ticket_id]['Deck']
mslacc.Deck.head(10)
"mslacc=mslacc.drop(['Survived','CategoricalAge','CategoricalFare'],axis=1)"
test_df['IsHusband']=mslacc['Male']
df_train['Ticket']=mslacc['Ticket'][:891]
"mslacc=mslacc.drop(feature,axis=1)"
mslacc=mslacc['Survived']==pred
train_cp['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc=mslacc.drop([c],axis=1)"
comb['Minor']=(mslacc['Age']<14.0)&(mslacc['Age']>=0)
"mslacc.loc[index,'Fare']>8"
"mslacc=mslacc.drop(drop_columns+['Survived'],axis=1).iloc[train_size:]"
age['Pclass']=mslacc['Pclass']
"mslacc=mslacc.drop(UNUSED_COLUMNS,axis=1)"
mslacc=[xforxinmslacc[pid]]
mslacc.shape(y_train)
"mslacc=mslacc[['Pclass','Title','Sex','Age1','family_size','fare1',
'Embarked']]"
data['familysize']=mslacc['SibSp']+mslacc['Parch']
mslacc=pd.read_csv('../input/movie-test-with-dummies/movie_test.csv')
full_df['Family']=mslacc['Parch']+mslacc['SibSp']+1
test_df['SbS']=mslacc['SibSpBinary']
avg_std_age['Low']=mslacc['Age']-mslacc['Std']
"mslacc.iloc[0:10,:]"
dataset['Alone']=mslacc['SibSp']+mslacc['Parch']==0
mslacc=mslacc[features_names]
test.loc[test['Pclass']==3]['Deck'].describe()
"class_fare.loc[(2),:]=mslacc[df['Pclass']==2]['Fare_per_ticket_member'
].describe()"
families['FamilySize']=mslacc['Parch']+mslacc['SibSp']+1
"df_all.loc[:,(numerical_col)]=(mslacc.loc[:,(numerical_col)]-
numerical_col_means)/numerical_col_stds"
"mslacc=mslacc.loc[(mslacc['Pclass']==3)&(mslacc['Survived']==1),'Age']"
"mslacc.drop(labels=['PassengerId','Name','Cabin','Ticket'],inplace=True,
axis=1)"
"mslacc=mslacc.iloc[5,5]"
dt_test['Family']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc=mslacc.drop(drop_columns+['Survived'],axis=1).iloc[:train_size]"
"mslacc=mslacc.drop(labels='Embarked',axis=1)"
"train,test,train_survived=mslacc[features],mslacc[features],mslacc[
'Survived']"
mslacc=mslacc[mslacc.Pclass!=3]
"mslacc.drop('FamilyId_x',axis=1,inplace=True)"
"X,y=mslacc.iloc[:,1:],mslacc['Survived']"
mslacc=mslacc.drop('Store1')
"mslacc=mslacc.drop(['Name','SibSp','Parch','Relatives','PassengerId'],
axis=1)"
mslacc=pd.read_csv(default_path+'train.csv')
testdata['Party']=mslacc['SibSp']+mslacc['Parch']
"mslacc=mslacc[['Pclass','Sex','Age','SibSp','Parch','Fare',
'Embarked','Title','FamilySize','IsAlone']]"
"mslacc=mslacc.drop(['PassengerId','Age','Ticket','Fare','Cabin',
'FarePP'],axis=1)"
mslacc=pd.read_csv(directory+'train.csv')
mslacc=(out==y_tst)*100.0/mslacc.shape[0]
"mslacc=mslacc.drop(drop_columns,1)"
"mslacc.drop(['SibSp','Parch'],1,inplace=True)"
mslacc=mslacc[mslacc['Embarked']==1].shape[0]
test['Fare_2']=(20<=mslacc['Fare'])&(mslacc['Fare']<40)
train['Alone']=mslacc['SibSp']+mslacc['Parch']==0
"mslacc=mslacc.drop(['SibSp','Parch','Embarked','Age','Fare','family',
'Pclass'],axis=1)"
"mslacc=mslacc[['Age','Pclass_1','Pclass_2','Pclass_3','SibSp',
'Parch','Fare','Sex_female','Sex_male']]"
mslacc=mslacc[mslacc['Embarked']=='C']
"mslacc=mslacc[mslacc['MainName']==mslacc.loc[pid,'MainName']]"
"mslacc=mslacc.drop(['Cabin'],1)"
"X_train,X_test=mslacc.iloc[(train_idx),:],mslacc.iloc[(test_idx),:]"
mslacc=pd.read_csv(directory+'test.csv')
"mslacc.drop(['PassengerId'],inplace=True,axis=1)"
train['FamilySize']=mslacc['SibSp']+mslacc['Parch']
mslacc=mslacc[need_columns]
mslacc=mslacc[data_x_bin]
mslacc=mslacc[mslacc['Ticket']=='CA.2343']
mslacc=mslacc[mslacc.index[0]]
mslacc=mslacc[kl]
"mslacc.feature.drop(['Parch','SibSp'])"
"mslacc.drop(['Survived','Pclass','Name','Sex','SibSp','Parch',
'Ticket','Cabin','Embarked','PassengerId'],axis=1,inplace=True)"
"mslacc=mslacc[['Embarked','Sex','Survived']]"
mslacc=mslacc['Survived'][-120:]
"mslacc[['Age','Pclass']].head()"
mslacc=mslacc[Y_columns]
"mslacc.drop(['Age','Fare','Name_length','FamilySize'],axis=1,inplace=True)"
"mslacc=mslacc.loc[(mslacc.Sex=='female'),:]"
mslacc=mslacc[:num_rows_train_data]
"mslacc=mslacc.drop(['Family'],axis=1)"
mslacc=pd.read_csv('../input/titanic-vz-fe/test_new.csv')
mslacc=mslacc[cols_list]
"mslacc=pd.read_csv('../input/test.csv')[['PassengerId','Sex','Age']]"
"mslacc.drop(['Cabin','FamilyName','Name','Ticket','Title'],axis=1,
inplace=True)"
"data['Length']=mslacc['dot_list']+mslacc['dash_list']+mslacc[
'string_list']+mslacc['num_list']"
"mslacc.drop(['SibSp','Parch','PassengerId','Name','Ticket','Embarked'],
axis=1,inplace=True)"
"mslacc=pd.read_csv('../input/test.csv',header=0,sep=',')"
"mslacc[['sibsp','parch','familysize','isalone']].head()"
"y_train,y_test=mslacc.iloc[train_index],mslacc.iloc[test_index]"
test['AgeModified']=mslacc['Age']
mslacc=mslacc[(mslacc['Sizeintrain']>1)&(mslacc['Notfamily']>1)]
"mslacc[['CabinYN','Cabin_ord']].head(6)"
"mslacc.drop(labels=['Sex','Embarked'],axis='columns',inplace=True)"
test['family']=mslacc['SibSp']+mslacc['Parch']
"mslacc[(mslacc.SibSp==0)&(mslacc.Parch==0)&(mslacc.Sex=='female')
].head()"
mslacc=pd.read_csv('../input/titanic-step-by-step-groups/train.csv')
mslacc=mslacc[mslacc.Pclass==pclass]
"mslacc.drop(['SibSp','Embarked_Q','TitleMaster.','Parch'],axis=1,
inplace=True)"
test[feature]=(mslacc[feature]-mean)/std
mslacc.head(100)
"mslacc=mslacc['Survived'][(mslacc['Ticket']==ticketID)&(mslacc[
'PassengerId']!=passengerID)]"
"mslacc.drop(labels='Cabin',axis='columns',inplace=True)"
"mslacc[['Sex','Survived']]"
"mslacc=mslacc.loc[(mslacc['Age']>20)&(mslacc['Sex']=='female')|(
mslacc['Age']<19)]"
mslacc=mslacc.loc[mslacc['Age']>=2]
mslacc.head(10)
mslacc=guess_deck.iloc[0][0]
"mslacc.drop(['Age','SibSp','Parch'],axis=1,inplace=True)"
"mslacc=mslacc.loc[index_selection_rf,['estimator','params','val_score',
'mean_test_score','mean_train_score','val_F_score']]"
mslacc=mslacc['layers_dim']
"mslacc=mslacc[['Age','Pclass','SibSp','Parch','Fare']]"
mslacc=mslacc[mslacc.Type=='Train']
"mslacc=mslacc.drop(['PassengerId','Name','Cabin','Ticket','Embarked'],
axis=1)"
"mslacc.drop(['Fare'],1,inplace=True)"
mslacc.T.shape
mslacc=mslacc[mslacc.columns]
"mslacc.drop(['Ticket','Surname','FamCode'],axis=1,inplace=True)"
"mslacc=mslacc[['mean_test_score','std_test_score']]"
dout[fill_str]=mslacc[col]
review[i]=mslacc[i][j]
train['Fare_3']=(40<=mslacc['Fare'])&(mslacc['Fare']<100)
train['Famille_4']=mslacc['FamilleMember']=='>4'
"mslacc=mslacc['Embarked'],"
idxMap[idx]=mslacc[0]
mslacc=mslacc['db1']
"fold_Xtest,fold_ytest=mslacc[(test_index),:],mslacc[test_index]"
"mslacc.drop(columns=['Sex','Pclass','Embarked','Name','PassengerId',
'Ticket','Group_Size'],axis=1,inplace=True)"
mslacc=mslacc.loc[mslacc['Age']>8]
mslacc=pd.read_csv('./input/train.csv')
mslacc=mslacc.drop(mslacc.index)
"mslacc.drop('Embarked',1,inplace=True)"
"dftest.loc[idx,'CountTicket']=mslacc[ticket]+mslacc[ticket]"
"mslacc['target'],"
df_train['Family_Size']=mslacc['SibSp']+mslacc['Parch']
"mslacc=mslacc.drop(['PassengerId','Name','SibSp','Parch','Ticket',
'Cabin','Age','Fare','Family'],axis=1)"
titanic['Fare']=mslacc['Fare']/mslacc['Same_Ticket']
"mslacc=mslacc.drop(['PassengerId','Sex','Name','Ticket','Cabin',
'Embarked'],axis=1)"
mslacc=mslacc['Title']=='Mr'
combined['Pclass_Sex']=mslacc['Sex']+mslacc['Pclass']
mslacc=mslacc[mslacc['age_range']=='adults']
"mslacc=mslacc.loc[ind,'val_score']"
mslacc['Name_Len']
total['Fsize']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc=mslacc.drop(['Embarked','Cabin'],axis=1)"
"mslacc=mslacc.drop(droplist,axis=1)"
"mslacc=mslacc[['FamilySize','Survived']]"
data_all['Pclass_3']=(mslacc['Pclass']==3)+0
"mslacc=mslacc[['PassengerId','Pclass','Name','Sex','Age','SibSp',
'Parch','Ticket','Fare','Cabin','Embarked','Survived']]"
"mslacc.drop('PassengerId',axis=1)"
df['Fare_Per_Person']=mslacc['Fare']/(mslacc['Family_Size']+1)
mslacc=mslacc['Title']!='Ms'
"mslacc=mslacc.iloc[(i),0:nDataCol]"
"mslacc=mslacc[['Name','Sex','Age','Pclass','Fare','Embarked',
'SibSp','Parch','Cabin','Ticket']]"
mslacc=mslacc[target].iloc[train]
"mslacc=mslacc.drop(['Pclass','Pclass_3'],1)"
X_valid[var_a+'_'+var_b]=mslacc[var_a]*mslacc[var_b]
"X_val,target_val=mslacc.iloc[val_idx],mslacc.iloc[val_idx]"
"mslacc=mslacc.loc[891:].drop(['Age','Cabin','Ticket','index',
'PassengerId','Name'],axis=1)"
"mslacc=mslacc.iloc[:,:-2]"
"train['Title']=[(xifxin['Miss','Mr','Mrs','Master','Dr','Rev']else
'Vip')forxinmslacc['Title']]"
df['FarePP']=mslacc['Fare']/mslacc['NumFam']
df_test['Embarked']=mslacc['Embarked'][891:]
mslacc=mslacc.iloc[val_index]
df_train['Family']=mslacc['SibSp']+mslacc['Parch']+1
df['TotalParty']=mslacc['SibSp']+mslacc['Parch']
"mslacc=mslacc.drop('LoneChild',1)"
mslacc=mslacc[mslacc['Dataset']=='test']
df['Deck']=mslacc['Cabin']
"estimator,X,y,cv=cv,n_jobs=n_jobs,random_state=mslacc['random_state'
],"
mslacc=mslacc[mslacc['Title']=='special']
"titanicTest.iloc[i,6]=mslacc.iloc[i,3]+mslacc.iloc[i,4]"
"mslacc.drop(labels=['Ticket','Cabin'],axis=1,inplace=True)"
"mslacc=mslacc.loc[(mslacc.Parch==0),:]"
mslacc['Fare']
"mslacc.drop(['SibSp','Parch','Name','Ticket'],inplace=True,axis=1)"
"mslacc=mslacc.drop(['Fare_bin'],axis=1)"
"mslacc=mslacc['category'][i],"
"mslacc=mslacc.iloc[2,0]"
mslacc=mslacc[classCol]
new_test['Sex']=mslacc['male']
mslacc=mslacc[891:1309]
mslacc=mslacc['Parch']==df_titanic.iloc[age]['Parch']
test_test_age['AgeGroup'][i]=mslacc[p]
data.head()['SibSp']
"mslacc=mslacc.drop('Survived',axis='columns')"
"mslacc=mslacc.drop(['CategoricalAge','CategoricalFare'],axis=1)"
mslacc=missings/mslacc.shape[0]
"mslacc=mslacc.drop(train.columns[[0,2,3,4,5,6,7,8]],axis=1)"
mslacc['Survived'].shape
df['Familysize']=mslacc['SibSp']+mslacc['Parch']+1
test['Pclass_2']=mslacc['Pclass']==2
"mslacc=mslacc.drop(['FareBinCode'],axis=1)"
mslacc=mslacc.query('Survived==1')
"mslacc['Value(M)'],"
"mslacc=mslacc.drop(labels=useless_data,axis=1)"
"data.loc[data['Sex']==1,'SexByPclass']=mslacc.loc[mslacc['Sex']==1,
'Pclass']+3"
mslacc=mslacc[mslacc['survived']==i_fin]
mslacc=pd.read_csv(f'{INPUT_DIR}test.csv')
mslacc=pd.read_csv(fileName)
mslacc=[(1-mslacc[1])forxinresults]
mslacc.Ticket_Count.head()
mslacc=mslacc[0:-1]
dataset['Fare_Per_Person']=mslacc['Fare']/(mslacc['relatives']+1)
"mslacc.train[['Name','Title']].head()"
"mslacc=pd.read_csv('../input/gender_submission.csv',sep=',',header=0)"
mslacc.Pclass.head()
dataset['ageClass']=mslacc['Age']/15
mslacc[mslacc['Deck']=='F']
"mslacc.drop(['Sex','Embarked','Name','Ticket'],axis=1,inplace=True)"
mslacc=mslacc[where_age_is_null]
"mslacc.drop(labels=['Ticket_numerical_temp'],inplace=True,axis=1)"
mslacc[mslacc['Parch']==9].head()
"mslacc.drop(['Ticket','Cabin','Embarked','Name'],axis=1,inplace=True)"
df_test['TicketEncoded']=mslacc[0]
mslacc=pd.read_csv(DATA_PATH+'/test.csv')
"mslacc=mslacc[['Age','Sex','Pclass']]"
"mslacc=mslacc.loc[(mslacc.Parch>0),:]"
"mslacc.drop(['Name','Cabin','Ticket','Name','Parch','SibSp',
'Embarked','Pclass'],axis=1,inplace=True)"
mslacc=mslacc[-1]+1
"mslacc=mslacc.drop(['PassengerId','Name','Ticket','Cabin','SibSp',
'Parch'],axis=1)"
"mslacc=mslacc.drop(['Name','PassengerId','Ticket','Cabin','SibSp',
'Parch'],axis=1)"
test_data['FamSize']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc=mslacc.iloc[:,(valid)]"
mslacc=mslacc[:i]['Survived']
a.index=pd.read_csv('../input/test.csv')['PassengerId']
"mslacc=mslacc[['Age','Embarked','Fare','Pclass','Sex','Family_Size',
'Title2','Ticket_info','Cabin']]"
"mslacc.drop(['PassengerId','Name','SibSp','Parch','Ticket','Cabin',
'Embarked','Age','Fare'],axis=1,inplace=True)"
mslacc=mslacc['Age']<15&C1
train['Famille_2']=mslacc['FamilleMember']=='2'
mslacc=mslacc[:train_len]['Survived']
mslacc['Name'].head()
"mslacc=mslacc.drop([each],axis=1)"
"mslacc=mslacc.iloc[:,([0])]"
df_test['NameLen']=mslacc['NameLen'][891:]
"mslacc=mslacc.loc[mslacc['Age']<=10,'LastName']"
"mslacc.drop('Title_Royal',axis=1,inplace=True)"
"mslacc.drop(['Name','Sex','Age','SibSp','Parch','Ticket','Fare',
'Cabin','Embarked','Deck','FareBins'],inplace=True,axis=1)"
mslacc=mslacc[mslacc[:5]]
mslacc=mslacc[mslacc['Title']=='Royalty']
mslacc=pd.read_csv('../input/titanic-vz-fe/train_new.csv')
combine_df['familytot']=mslacc['SibSp']+mslacc['Parch']+1
all_data['Family']=mslacc['SibSp']+mslacc['Parch']
"mslacc.drop(titanic.columns[[3,8,10]],axis=1,inplace=True)"
"jsim_df.loc[j,i]=mslacc.loc[i,j]"
test_data.head()['Embarked']
"mslacc=mslacc.drop(['Pclass_1','Sex_female','TitleGroup_Master',
'AgeRange_15-','FareRange_10-','Family_alone'],axis=1)"
"mslacc.drop(columns=['Ticket'],inplace=True)"
"mslacc=mslacc.loc[(test_index),:]"
big['XCabin'].iloc[group]=mslacc[0]
"mslacc=mslacc[1][['Pclass','Agebin','Farebin','en_sex','SibSp',
'en_Embarked','Parch']]"
mslacc=mslacc['d_hidden']
"mslacc=mslacc.loc[index,'Ticket1']"
df_train['AgeFill']=mslacc['Age']
"train['InGroup']=mslacc.iloc[:train_len,(-1)]"
"mslacc=pd.read_csv(input_file[1],header=0)"
"mslacc=mslacc.drop(labels=['Cabin','PassengerId','Name','Ticket'],axis=1)"
"mslacc=mslacc[mslacc['Dataset']=='test'].drop(['Dataset','Survived'],
axis=1)"
mslacc=pd.read_csv(SUBMISSION_FILE)
self.testPassengerID=mslacc['PassengerId']
mslacc[(mslacc['Title']=='Lady')|(mslacc['Title']=='Countess')]
mslacc=mslacc[mslacc['Class']=='FirstClass']
mslacc['title'].head()
"mslacc=mslacc.drop(delete_train,axis=1)"
mslacc[mslacc['Survived']==1].shape[0]/mslacc.shape[0]*100
data['TravelingAlone']=(mslacc['SibSp']+mslacc['Parch']==0)*1
mslacc['Ticket'].head(n=10)
mslacc['Age_0'].head(10)
"mslacc=mslacc.iloc[891:,:-1]"
"mslacc.drop(columns=['Name'],inplace=True,axis=1)"
mslacc=mslacc.drop(mslacc[mslacc.Sex=='female'].index)
"mslacc=mslacc.drop('Parch',axis='columns')"
"mslacc=mslacc.drop(features_drop,axis=1)"
"mslacc.drop(['Embarked_S','title_rare'],inplace=True,axis=1)"
test['Fareperperson']=mslacc['Fare']/mslacc['FamilySize']
"mslacc=mslacc[['PassengerId','Survived','Pclass','Name','Sex','Age',
'SibSp','Parch','Ticket','Fare','Cabin','Embarked']]"
mslacc=mslacc[input_list]
mslacc=mslacc[data_df['DataType']==1]['Survived']
"mslacc=mslacc.drop(columns=['EmbarkedBin_Code','CabinBin_Code',
'Ticket_Count'])"
"mslacc=mslacc.iloc[7,5]"
mslacc=mslacc.loc[train_index]
"mslacc=mslacc['bootstrap'],"
"mslacc.drop(['Ticket'],axis=1,inplace=True)"
"mslacc=pd.read_csv('../input/train.csv',index_col=0)"
"mslacc.loc[index,'knn'],"
mslacc[df.Embarked=='Q'][mslacc.Survived==1].shape[0]
mslacc=mslacc[mslacc.Pclass==1]
"mslacc=mslacc.loc[:,(feature_cols)]"
age['Sex']=mslacc['Sex']
"mslacc=mslacc.drop(family_cols,axis=1)"
_df[f]=mslacc[f]
mslacc.shape
"mslacc=mslacc.drop(['Survived','PassengerId','Name','Ticket',
'Embarked','AgeGroup'],axis=1)"
mslacc=mslacc['Fare'].describe()
"mslacc=mslacc[['Age','Sex_female','Pclass','Fare']]"
mslacc=mslacc.drop(columns='name')
mslacc.loc[mslacc['Ticket']=='3701']
mslacc=step*batch_size%(mslacc.shape[0]-batch_size)
test_ds['FamilySize']=mslacc['Parch']+mslacc['SibSp']+1
"mslacc=mslacc[['PassengerId','Name','Pclass','Sex','Age','SibSp',
'Parch','Ticket','Fare','Embarked']]"
"input_test_data.loc[input_test_data['PassengerId']==row['PassengerId'],
'Survived']=mslacc['Survived']"
"mslacc.iloc[:,(0)]"
"mslacc.drop(columns=['PassengerId','Name','SibSp','Parch','Ticket',
'Cabin'])"
mslacc=[mslacc[1]forainvote_est]
titanic_df['IsHusband1']=mslacc['Male1']
mslacc=mslacc['Pclass'][152]
mslacc=[mslacc[ii]foriiinnon_zero_idx]
"mslacc=mslacc.iloc[:,([2,4,5,6,7,9,11])]"
"mslacc.drop(columns={'Ticket','Last_Name','Name','SibSp','Parch',
'total_related'})"
test_df['Farebins']=mslacc['Fare']
"mslacc.describe(percentiles=[0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0])"
"mslacc=mslacc['min_samples_leaf'],"
mslacc=df.iloc[event.ind[0]]['origin']
train['FamilySize*Pclass']=mslacc['FamilySize']*mslacc['Pclass']
mslacc=mslacc['featstd']
mslacc=mslacc[0:index_space]
new_data['Pclass']=mslacc['Pclass']-1
train['Famille_0']=mslacc['FamilleMember']=='0'
"mslacc.drop(['PassengerCount','PassengersSurvived','Ticket'],axis=1,
inplace=True)"
"mslacc=mslacc.drop(['Pclass','Name','Sex','SibSp','Parch','Ticket',
'Fare','Cabin','Embarked','Age'],axis=1)"
train_df['family_size']=mslacc['Parch']+mslacc['SibSp']
mslacc=mslacc[(mslacc['Survived']==1)&(mslacc['Sex']=='male')]
"mslacc=pd.read_csv(path,sep=',',index_col='PassengerId')"
mslacc[mslacc.SibSp==8]
mslacc=mslacc[mslacc['Class']=='SecondClass']
mslacc=mslacc[cat==0]
mslacc=mslacc.loc[mslacc['Title']=='Mr']
mslacc[(mslacc['Survived']==1)&(mslacc['Sex']=='male')]
mslacc=mslacc[types_train==float]
mslacc=pd.read_csv('/kaggle/input/train.csv')
titanic_df['ticket']=mslacc['ticket_prefix_v2']+mslacc['ticket_number']
"mslacc.drop(drop_elements,axis=1,inplace=True)"
"mslacc=[mslacc.shape[0],mslacc.shape[0]]"
mslacc=mslacc[mslacc['Embarked']=='C'].shape[0]
mslacc=mslacc[ind]
"mslacc.drop(['PassengerId','Ticket','Cabin','Name'],axis=1,inplace=True)"
"mslacc.loc[(mslacc['Fare']>500),:]"
X[self.column_name]=mslacc[mslacc.column_one]+mslacc[mslacc.column_two]
mslacc=pd.read_csv('../input/dataset/feature_engg_train.csv')
train['Fare_4']=100<=mslacc['Fare']
test['Title'][i]=mslacc['Survived'][j]
family_size['Survived']=mslacc['Survived']
"mslacc=mslacc.drop(['Parch_9'],axis=1)"
mslacc=feature_imp_sorted_rf.head(top_n_features)['feature']
df[3]=mslacc['Fare'].loc[mslacc.Pclass==3]
pclass['Samples']=mslacc['Survived']
"mslacc=mslacc[i],"
mslacc.query('Fare==0').head()
"mslacc=pd.read_csv('../input/gender_submission.csv').iloc[:,([1])]"
mslacc=mslacc[train_index]
mslacc[(mslacc['Survived']==0)&(mslacc['Sex']=='female')]
df_data['Ti_Age']=mslacc['Age']
mslacc=mslacc.drop
mslacc=mslacc[:10]
"mslacc=mslacc.drop(['Age'],axis=1)"
mslacc=mslacc.drop(columns=unnecessary_columns)
data_train['Fsize']=mslacc['SibSp']+mslacc['Parch']
"mslacc[['Age','Survived']][mslacc['Age']>65]"
mslacc['Ticket'].head(5)
"mslacc.iloc[(boys_survived_ids),:]"
"mslacc=mslacc[0].iloc[:,0:1]"
"mslacc.drop(['Cabin_numeric_range_NoCabin','Cabin_deck_No'],inplace=True,
axis=1)"
"mslacc.drop(ignore_flds,axis=1,inplace=True)"
mslacc=mslacc[best_features]
mslacc[categorical].describe()
"mslacc=mslacc.drop('Target',axis=1)"
"mslacc=mslacc.drop(full.index[:891],axis=0)"
"mslacc=mslacc[(combine['Embarked']=='Q')&(combine['Pclass']==1)]['Fare'
]"
sub_xgb['PassengerId']=mslacc['PassengerId']
mslacc=(mslacc['FareBand']==band)&(mslacc['Pclass']!=1)
"mslacc=mslacc.drop(['Name','PassengerId','Surname','Age','Fare',
'Ticket','Cabin','Embarked','Sex','FareGroup','AgeGroup','SibSp',
'Parch','TicketCount','Deck','FamilySize','Title'],axis=1)"
train['Family_size']=mslacc['Parch']+mslacc['SibSp']+1
"mslacc.drop(['Cabin','Name','Parch','SibSp','Ticket','Sex'],axis=1,
inplace=True)"
"mslacc=mslacc[['Pclass','Age','Sex','SibSp','Parch','Fare','Embarked']]"
mslacc[mslacc.TPP==4]
combo['FamilyCount']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc.drop(columns=['Name','Sex','Title'],inplace=True)"
"mslacc=mslacc[['Pclass','FareGroup','AgeGroup','SibSpBool',
'ParchBool','Sex','CabinBool']]"
"mslacc=0,mslacc[4],mslacc[5],mslacc[6],mslacc[7]"
"mslacc.drop(['PassengerId','Ticket','Cabin','Embarked','Name'],axis=1,
inplace=True)"
mslacc=mslacc.loc[valid_fold]
X_train['Family']=mslacc['SibSp']+mslacc['Parch']
mslacc=pd.read_csv('../input/gender_submission.csv')['Survived']
raw_df['Fare_Per_Person']=mslacc['Fare']/(mslacc['Family_Size']+1)
"x,y=mslacc.drop('Survived',1),mslacc['Survived']"
"mslacc.drop(['Name','SibSp','Parch','Age','Fare','Title'],axis=1,
inplace=True)"
"mslacc.drop(columns=['Name','Age','Fare'],axis=1,inplace=True)"
mslacc=mslacc[validation_size:]
mslacc[age_set['Mrs']==1]['Age'].describe()
mslacc=mslacc[group_type]
df_test['Age']=mslacc['Age'][891:]
"mslacc=mslacc.drop(['TicketLetter','Ticket'],axis=1)"
data_all['Title_Mr']=(mslacc['Title']==1)+0
"mslacc=mslacc.loc[:,(Xcol)]"
mslacc=mslacc[model_features]
mslacc=mslacc['Age'].describe()
"mslacc.drop('Fare',axis=1,inplace=True)"
"mslacc=mslacc[(mslacc['Sex']=='female')&(mslacc['PPT']==1)&(
mslacc['Pclass']==1)]"
mslacc.loc[mslacc['Age']>64]
comb['P1']=mslacc['Pclass']==1
mslacc=mslacc[x][-1]
mslacc=pd.read_csv('submissionFastAI2.csv')
"mslacc.drop(['Fare'],axis=1,inplace=True)"
combined['immediate_family']=mslacc['Parch']+mslacc['SibSp']
mslacc=mslacc[rand_index]
mslacc.shape()
"mslacc=mslacc.loc[mslacc['Survived']==1,'Age']"
test_data['WithFamily']=mslacc['SibSp']+mslacc['Parch']
data['Fare_Per_Person']=mslacc['Fare_Per_Person']*0.001
"mslacc=(mslacc['Family']==0)|(mslacc['Family']==1)|(mslacc[
'Family']==2)"
"mslacc=mslacc.drop(columns=['Embarked'],axis=1)"
X['Deck']=mslacc['Cabin']
"mslacc=mslacc[['mean_test_score','std_test_score','mean_train_score',
'std_train_score','params']]"
df['F_C3']=mslacc['Sex_female']*mslacc['Pclass_3']
mslacc[mslacc['Surname']=='Crosby']
"mslacc.drop(['Survived'],axis=1,inplace=True)"
mslacc=mslacc[mname]
"mslacc.drop(k,axis=1,inplace=True)"
"X_prob0[:,(4)]=mslacc[mslacc[:,(4)]]"
"mslacc[['FamilySize','Single','Nuclear','Big']].head(10)"
"mslacc=mslacc.drop(['Cabin','Ticket','PassengerId','Name'],axis=1)"
mslacc=mslacc[mslacc['training_set']==True]
train['Sex_Class']=mslacc['Sex']+'_'+mslacc['Pclass']
train['PaxclassB']=mslacc['Pclass']
mslacc=pd.read_csv('./data/train_split_final.csv')
mslacc=mslacc[['Survived']+final_features]
data['FarePP']=mslacc['Fare']/mslacc['FamilySize']
"tempdf['difference_%s__%s'%(p1,p2)]=mslacc[p2]-mslacc[p1]"
mslacc=mslacc[0]/(mslacc[0]+mslacc[1])
"m_test,n_test=mslacc.shape"
mslacc[1:5]
mslacc[col_num].describe()
"mslacc=[mslacc[feature],mslacc[feature]]"
x_train['CabinNUll']=mslacc['Cabin']==-999
mslacc[mslacc['Age']<2]
df_data['P_Ti_Age']=mslacc['Age']
mslacc.loc['2014-10']
"mslacc=mslacc.drop('Dona',axis=1)"
"mslacc=mslacc.iloc[:,11:12]"
"mslacc.drop(testset.columns[[0,2,7,9,10]],axis=1,inplace=True)"
"mslacc.drop('Age',1,inplace=True)"
"mslacc=mslacc.drop(['PassengerId','Cabin','Ticket','Survived','SibSp',
'Parch'],axis=1)"
"mslacc.drop(['PassengerId','Sex','Embarked','Name','Ticket','Cabin',
'Age','Fare'],axis=1,inplace=True)"
dataset['Age_Class']=mslacc['Age_bin']*mslacc['Pclass']
"mslacc=mslacc.drop(['PassengerId','Survived','Name','Cabin'],axis=1)"
mslacc['Name'].head(50)
"mslacc=mslacc.iloc[0:891,(-1)]"
"mslacc.drop('FareBand',axis=1,inplace=True)"
mslacc=mslacc['SibSp']+mslacc['Parch']
"mslacc.drop(['Name','SibSp','Parch','Ticket','Cabin','Fare'],axis=1,
inplace=True)"
test_df['Title']=mslacc['Title'][891:]
mslacc=mslacc.drop(columns='Position')
mslacc=mslacc.drop(columns={'Sex'})
"mslacc=mslacc.drop(columns=['PassengerId','Name','Ticket','Cabin'])"
mslacc=mslacc['W2']
"mslacc=mslacc.drop('Age*Class',axis=1)"
"mslacc=mslacc.drop(['Survived','Name','Ticket','Cabin'],axis=1)"
full_data['PclassXAge']=mslacc['Pclass']*mslacc['Age']
test_set['FamilySize']=mslacc['Parch']+mslacc['SibSp']
df_data['Minor']=mslacc['Minor']*1
"mslacc=mslacc.drop(['Ticket','Name','Cabin'],axis=1)"
mslacc=mslacc[targetted_predictor_cols]
"mslacc=mslacc[['Pclass','Fare','Family','Sex_d']]"
mslacc=mslacc[features_col]
mslacc=mslacc['fare_med']
"mslacc=pd.read_csv(train_file,usecols=['Survived','Pclass','Sex',
'Age','Fare'])"
mslacc=(mslacc['FamilySize']==1)&(mslacc['TkDup']==False)
test_data['familysize']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc['Fare'][mslacc['Survived']==1],"
"mslacc.drop(['Name','Embarked'],axis=1,inplace=True)"
"mslacc=mslacc[['Pclass','SibSp','Parch','Fare','Age']]"
mslacc=mslacc[mslacc['Age']>14]
"mslacc[columns].describe(include='all',percentiles=[])"
"mslacc.drop(drop_column_,axis=1,inplace=True)"
"mslacc.drop(['Ticket','Name','family_size','Fare','name_length'],axis=
1,inplace=True)"
mslacc=pd.read_csv(input_dir+'train.csv')
assertmslacc.shape==mslacc.shape
mslacc=mslacc[cutoff:]
"mslacc=(mslacc[1,1]+mslacc[0,0])/(mslacc[0,1]+mslacc[1,1]+
mslacc[0,0]+mslacc[1,0])"
"mslacc.drop(['Name','Ticket','Cabin','PassengerId','Embarked'],axis=1,
inplace=True)"
train['family_size']=mslacc['SibSp']+mslacc['Parch']
mslacc['age'].describe()
mslacc=mslacc['std_test_score']
mslacc=mslacc[mslacc['survived']==i_s]
"mslacc=mslacc.drop(['Survived','Ticket_No','Fare','Age'],axis=1)"
test_df['isAlone']=mslacc['family_size'][mslacc['family_size']==1]
mslacc.loc[out2]
"mslacc=mslacc.drop(columns='PassengerId',axis='columns')"
"mslacc['X_train'],"
mslacc=pd.read_csv(DATA_DIR+'train.csv')
train.Cabin=[mslacc[0]foriinmslacc.Cabin]
mslacc['FareBin']
mslacc=pd.read_csv('..\\input\\train.csv')
"mslacc=mslacc.drop(['PassengerId','Survived','Sex','Name','Ticket',
'Cabin','Embarked'],axis=1)"
df['Fsize']=mslacc['Parch']+mslacc['SibSp']+1
test_df['GenderPclass']=mslacc['Pclass']-mslacc['Gender']+1
"mslacc.drop(columns=['Name','Ticket','PassengerId','Cabin'],inplace=True)"
mslacc['Age'].describe()
"mslacc.loc[5:10,]"
"mslacc=mslacc.loc[1,'male']"
mslacc=mslacc['sibsp']+mslacc['parch']+1
mslacc=mslacc[0][6]
"mslacc.drop(categorical_columns,axis=1).describe(include=[np.number])"
"mslacc=df.iloc[891:,:][['PassengerId','Survived']]"
"train_features,train_labels=mslacc[train_indices],mslacc[train_indices]"
mslacc.Name.head(5)
"valid_x,valid_y=mslacc.iloc[valid_idx],mslacc.iloc[valid_idx]"
"mslacc=(mslacc['Family']==3)|(mslacc['Family']==4)|(mslacc[
'Family']==5)"
mslacc=mslacc[0][2]
mslacc=[mslacc[0]foriteminst_pred_items]
mslacc=mslacc['Age'][mslacc['Survived']==0]
mslacc[df_results.Survived==0]['PredProba']
"mslacc=mslacc.drop(['SibSp','Parch','Embarked','Cabin','Name',
'Ticket','PassengerId'],axis=1)"
train['PaxclassA']=mslacc['Pclass']
mslacc=pd.read_csv(f'{datadir}test.csv')
"mslacc=mslacc.drop(['Pclass','Age','Sex','Name','Ticket','Cabin',
'Embarked','Fare','Parch','SibSp','Pclass'],axis=1)"
mslacc[(mslacc.Cabin=='B28')|(mslacc.Ticket=='113572')]
titanicANDtest_df['Pc']=mslacc['ParchBinary']
R['percentage']=mslacc['sum']/mslacc['count']
df_train['Mother']=mslacc['Mother'][:891]
"mslacc=pd.read_csv(test_data_path,index_col=None)"
mslacc=[mslacc['class_ids'][0]forpredictioninpredictions]
mslacc=mslacc[(mslacc['group_type']=='alone')&(mslacc['Sex']=='male')]
full_data['FareDivPclass']=mslacc['Fare']/mslacc['Pclass']
mslacc=mslacc[df[column]!=category1][measure]
test2_df['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc=mslacc[features].iloc[(train),:]"
mslacc=mslacc[['PassengerId']]
mslacc.loc[0].loc[3]
mslacc=mslacc[mslacc['Title']=='Mr']
test_df.Cabin=[mslacc[0]forxinmslacc.Cabin]
df['FamilySize']=mslacc['SibSp']+mslacc['Parch']
mslacc=mslacc['Fare'].loc[mslacc['Pclass']==2]
mslacc.loc[mslacc['Cabin_letter']=='T']
mslacc=mslacc[(mslacc.Ticket==k)&(mslacc.Age<19)]
"mslacc=mslacc.drop(['Survived'],axis=1).iloc[:891]"
mslacc=mslacc[indices]
"mslacc.drop(labels=['PassengerId','Ticket','Cabin'],axis=1,inplace=True)"
mslacc[-1]
data['Family_Size']=mslacc['Family_Size']*0.02
"mslacc=pd.read_csv('../input/'+file,sep=',',header=0)"
mslacc['Name'].head(5)
"mslacc.drop(['Embarked','Ticket','Name','Sex'],axis=1,inplace=True)"
"mslacc=mslacc.drop(['PassengerId','Name','Ticket','Age','SibSp',
'Parch','Cabin'],axis=1)"
mslacc=pd.read_csv('../input/names/names.csv')
"ifdropTicket==True:
mslacc=mslacc.drop('Ticket',axis=1)"
"mslacc=mslacc.drop(labels=['PassengerId','Name','Ticket','Cabin',
'Parch','SibSp'],axis=1)"
"mslacc.drop(['PassengerId','Name','Cabin','Ticket'],axis=1,inplace=True)"
mslacc=mslacc['PassengerId'][891:]
"mslacc=mslacc['hyperparameters'],"
test['Fare_Per_Person']=mslacc['Fare']/(mslacc['Family_Size']+1)
mslacc=mslacc[train_nan>0]
test['Fammems']=mslacc['Parch']+mslacc['SibSp']
mslacc=mslacc.query('Modelnotin@not_proba_list&Modelnotin@ignore')
"mslacc=mslacc[['Survived','Pclass','Sex','Age','SibSp','Parch','Fare']]"
mslacc=mslacc.drop(columns=['Ticket'])
mslacc=mslacc[(mslacc.Name==hisname)*(mslacc.FamSize==hisfam)]
"X_tr,y_tr=mslacc.drop(columns='Survived'),mslacc.loc[:,('Survived')]"
"X_train,X_test=mslacc[:891],mslacc[891:]"
mslacc=mslacc[mslacc['Age']<=10]
"mslacc.loc[index,'random_for'],"
"mslacc=mslacc.drop(columns=['PassengerId','Name','Ticket'])"
mslacc['Title'].head()
"mslacc=mslacc.drop(labels=['Survived','Name','Ticket','Age_Group'],axis=1
)"
mslacc=mslacc[mslacc['Sex']=='male']
"mslacc=mslacc.iloc[:,(6)]"
"mslacc[df['Age']>60][['Sex','Pclass','Age','Survived']]"
mslacc=mslacc['Age']
"mslacc=pd.read_csv(TEST_PATH,header=0,names=CSV_COLUMNS_TEST)"
mslacc=pd.read_csv(csvfile)
train['fare_T']=mslacc['fare_T']
mslacc=mslacc[i][1]
mslacc=mslacc[features_continuous+features_categorical]
"n_samples,n_features=mslacc.shape"
df['LargeFamily']=mslacc['FamilySize']>=5
"mslacc.drop(['PersonClass'],axis=1,inplace=True)"
mslacc['Gender']
"mslacc.drop(['Sex','Person'],inplace=True,axis=1)"
"mslacc=pd.read_csv('../input/test.csv',index_col=False)"
XX['ParchBin']=mslacc['Parch']>0
"mslacc=mslacc.drop(['Name','PassengerId','Survived','Ticket','Cabin'],
axis=1)"
"mslacc=mslacc.drop(columnsToBeDropped,axis=1)"
"X_text_submit[e,p+max_name_length+max_ticket_length]=mslacc[w]"
merged_df['family']=mslacc['Parch']+mslacc['SibSp']
test['Fare_fillin']=mslacc['Fare_fillin']/10.0
"mslacc=mslacc[['SibSp','Survived']]"
"mslacc.iloc[[0,1,3,9]]"
"mslacc.drop('family_size',inplace=True,axis=1)"
mslacc=mslacc.query('PassengerId>=892')
mslacc=mslacc[mslacc['Age']<10].shape[0]
mslacc=pd.read_csv(FileLocation)
mslacc=mslacc[i]-mslacc[-1]
mslacc=mslacc[target_params]
temp_train['Pclass']=mslacc['Pclass']
"mslacc=mslacc.iloc[:,([0,1])]"
titanic_test['Companion']=mslacc['SibSp']+mslacc['Parch']
"mslacc.drop(['Cabin_T','family_size','Ticket','Name','Fare',
'name_length'],axis=1,inplace=True)"
mslacc[['FamilySize']].head()
"mslacc=mslacc.drop(['Name','Age','PassengerId','Survived','Sex',
'Ticket','Cabin','Embarked'],axis=1)"
"mslacc.drop(['Others'],axis=1,inplace=True)"
"mslacc=mslacc.drop(['Cabin','PassengerId'],axis=1)"
mslacc=mslacc[split:]
mslacc.Title.head(10)
"mslacc=pd.read_csv('../input/test.csv',header=0,sep=',',index_col=0,
parse_dates=True,encoding=None,infer_datetime_format=False)"
mslacc=mslacc.loc[mslacc['Parch']==0]
"mslacc['TicketPrefix'],"
test['Age*Class']=mslacc['Age']*mslacc['Pclass']
test['Parch']=mslacc['Parch']
"mslacc.drop(['Sex','Embarked','Pclass','Name','Ticket','Cabin'],axis=
1,inplace=True)"
"mslacc.loc[(mslacc['Age']>80)&(mslacc['Fare']>513),'Age']"
mslacc=mslacc.loc[mslacc['Survived']==0]
"mslacc['Fare']>100,"
dataframe2['Parch']=mslacc['Parch']
"mslacc=mslacc[mslacc['Age']<10],"
"mslacc['CabinCount'],"
mslacc=mslacc.loc[mslacc['Sex']=='male']
"mslacc=mslacc.drop(labels=['Sex','SibSp','FareGroup','AgeCat',
'AgeData'],axis=1)"
mslacc=mslacc[_]
"all_data.at[index,'Age']=mslacc[mslacc.loc[index].at['Title']]"
"mslacc=mslacc[['Age','Survived','Fare','Parch','SibSp','Pclass']]"
mslacc=mslacc['val']
"mslacc=mslacc[['Survived','ParentsChildren']]"
"mslacc=mslacc.drop(columns=['Fare','Age'])"
mslacc=mslacc[['Pclass']]
titanic['Family']=mslacc['SibSp']+mslacc['Parch']
"mslacc=mslacc.drop('Embarked_Q',axis=1)"
"mslacc.drop(['Name','Ticket','Cabin','Survived'],axis=1,inplace=True)"
mslacc[(mslacc.Survived==1)&mslacc.Cabin]
"mslacc=mslacc.loc[1,3]"
"mslacc=mslacc['FamilySize'],"
"mslacc.loc[:,(['pclass','age','age*class'])].head(10)"
mslacc=mslacc[dtf]
mslacc=mslacc[['Alone']]
"mslacc=pd.read_csv('../input/train.csv',dtype={'Age':np.float16})"
mslacc=mslacc[mslacc.PassengerId>891]
"mslacc.drop(columns=['PassengerId','Ticket','Cabin'],axis=1,inplace=True)"
"mslacc=mslacc.drop(labels=['Sex_female'],axis=1)"
"mslacc=(mslacc['Family']==6)|(mslacc['Family']==7)|(mslacc[
'Family']==10)"
mslacc.Age.head()
"mslacc=mslacc[['master','mr','miss','mrs']]"
mslacc['Parch'].describe()
"mslacc=mslacc.drop(['Deck'],axis=1)"
mslacc.head(40)
mslacc.loc[Outliers_to_drop]
test_set['Familysize']=mslacc['Parch']+mslacc['SibSp']
mslacc=mslacc.iloc[train_index]
mslacc[mslacc['isOutlier']==-1]
df['FarePerPerson']=mslacc['Fare']/mslacc['FamilySize']
X_train[var_a+'_'+var_b]=mslacc[var_a]*mslacc[var_b]
"mslacc=mslacc[['Sex','Pclass','Age','SibSp','Fare','Survived']]"
"mslacc=mslacc.drop(['Name','SibSp','Parch','Ticket','Cabin',
'CategoricalFare','CategoricalAge'],axis=1)"
"mslacc=mslacc[['Pclass','Fare','Age','Sex','Family','Embarked']]"
"mslacc=mslacc[['Sex','SibSp','Parch','Fare','Age','Embarked']]"
mslacc=mslacc[~msk]
data_all['Title_Mrs']=(mslacc['Title']==3)+0
"mslacc.drop(mslacc[mslacc.PassengerId==767].index,inplace=True)"
mslacc=mslacc[0:l]
mslacc=mslacc[all_data['Survived']==0]['Age']
mslacc[(mslacc.Age>75.0)&(mslacc.Survived==1)]
"mslacc=pd.read_csv('../input/test.csv',header=0,index_col=0)"
"mslacc=mslacc.loc[cv_fold,'Survived']"
train['Pclass_2']=mslacc['Pclass']==2
mslacc=mslacc[pos+1:]
"mslacc=mslacc.loc[(mslacc.pclass==_pclass),:]"
test_df['Fare']=mslacc['Fare']/mslacc['FamilySize']
valid_X['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
df['group_size']=mslacc['SibSp']+mslacc['Parch']+1
df_test['Family']=mslacc['SibSp']+mslacc['Parch']
"mslacc.iloc[:,(1)],"
df_train['TicketEncoded']=mslacc[0]
"mslacc=mslacc.loc[mslacc['Age']<18,['Survived','Sex']]"
"mslacc=mslacc['Survived'][(mslacc['Pclass']==pclass)&(mslacc['Child']==
1)]"
training['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc=mslacc[['Age','Pclass','Sex','Fare','FamilySize','Embarked']]"
train['Title_master']=mslacc['Title']=='Master'
"mslacc.drop(columns=['PassengerId','Cabin','Name','Ticket'],inplace=True)"
"mslacc=mslacc.drop(['Name','Ticket','Title'],axis=1)"
train4['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
mslacc=mslacc['AgeGroup']
mslacc=mslacc[mslacc['cia']=='double']
"mslacc.drop(['SibSp','Parch','Family'],axis=1,inplace=True)"
mslacc=mslacc.loc[len_df1:]
train_data['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc=mslacc[['Survived','SiblingsSpouses']]"
mslacc=mslacc[feature_names]
mslacc=mslacc[mslacc['PassengerCount']>2]
mslacc=mslacc[mslacc['SibSp']+mslacc['Parch']<1]
"mslacc=mslacc.drop('Survived',inplace=False,axis=1)"
output['Fare']=mslacc['Fare']/512
"mslacc=mslacc[(mslacc['Pclass']==1)&(mslacc['Fare']<=200)],"
mslacc.loc['Store1']
trainPCA2['9']=mslacc['Pclass2']
mslacc=mslacc[feature]
"mslacc=pd.read_csv('../input/train.csv',na_values='NA')"
"mslacc[0]['best_model'],"
"mslacc.drop(['Male'],axis=1,inplace=True)"
mslacc=mslacc[data['train_test_train']==1][['Survived']]
"mslacc=pd.read_csv(file_url,header=0)"
mslacc=[zforzinprefix_dictifmslacc[z]==x_inp]
"mslacc.drop(['PassengerId','Cabin','SibSp','Parch','Name','Ticket'],
axis=1,inplace=True)"
test['AgeBin_Code']=mslacc['AgeBin_Code'][891:]
"combined.loc[tm,'real_fare']=mslacc.loc[tm,'Fare']/n_t"
mslacc.iloc[0:11]
mslacc=mslacc[mslacc['pclass']==1]
"mslacc.drop(['PassengerId','Name','Age','SibSp','Parch','Ticket',
'Fare','Cabin','FamilyCount'],axis=1,inplace=True)"
df['AgeFill']=mslacc['Age']
"mslacc=mslacc.drop(['Survived','PassengerId','Name','SibSp','Parch',
'Ticket','Fare','Cabin'],axis=1)"
mslacc[0].head()
mslacc=mslacc[t_n[0]:f_n[0]]['Survived']
"mslacc.drop(['Mr'],inplace=True,axis=1)"
mslacc.probability.describe()
mslacc=mslacc[data_set]
mslacc=pd.read_csv('../input/'+train+'.csv')
"mslacc.drop(['SibSp','Parch','title','FamilySize'],axis=1,inplace=True)"
"mslacc=pd.read_csv('test.csv',header=0)"
"mslacc=mslacc[['Age','Fare','Parch','SibSp','Pclass']]"
"mslacc=mslacc.drop(['Fare','young'],axis=1)"
summary_df['%null']=mslacc['%']
"mslacc=mslacc.drop(output.columns[a],axis=1)"
mslacc=1ifmslacc['Embarked']=='S'else0
"mslacc.drop(['C','Embarked','MasterMiss','Parch','ParchBinary'],axis=1,
inplace=True)"
df['Fare_per_ticket_member']=mslacc['Fare']/mslacc['TicketMembers']
"mslacc.drop(['Name','Ticket','PassengerId'],axis=1,inplace=True)"
train['CategoricalFare']=mslacc[:891]
mslacc=mslacc['param_max_depth']
df['Fsize']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc=pd.read_csv('../input/train.csv',usecols=['Survived',
'PassengerId']+predictors)"
group_counts['Survived']=mslacc['Survived']
mslacc=[mslacc[i]]
mslacc=mslacc.drop(columns='Title')
"mslacc=mslacc.drop(['data_label','Name','Ticket','Cabin']+
var_drop_list,axis=1)"
data_df['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
app_test['Family_size']=mslacc['SibSp']+mslacc['Parch']
"mslacc=mslacc[['PassengerId','Survived','Pclass','Sex','Age','SibSp',
'Parch','Fare','Embarked']]"
mslacc=mslacc['test_y']
mslacc=mslacc[ml_model:]
"mslacc=mslacc.drop(['PassengerId','Name','Sex','Ticket','Cabin',
'Embarked','gender','embarked_fill','Age','age*class'],axis=1,
inplace=False)"
mslacc={y:xforxinlanguage_groupsforyinmslacc[x]}
df_test['Mother']=mslacc['Mother'][891:]
"mslacc=mslacc.drop(['FareRange','AgeRange','Name','Parch','SibSp',
'FamilySize'],axis=1)"
"mslacc=mslacc.drop({'Survived'},axis=1)"
"mslacc=mslacc.loc[(mslacc['TicketClass'],mslacc['Sibling_Spouse']),(
'Age','mean')]"
test_df['FamilySize']=mslacc['Parch']+mslacc['SibSp']
Train_Master['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
combined_One_Hot_Cat['Male']=mslacc['Sex']
df['F_0-10']=mslacc['Sex_female']*mslacc['Age_0-10']
mslacc=mslacc.iloc[:891]
"mslacc.describe(percentiles=[0.01,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,
0.9,0.99])"
mslacc['majority_voting_selected_cols']
mslacc.loc[(mslacc.Pclass==3)&(mslacc['Fare']>30)]
"mslacc=mslacc.drop(['PassengerId','Name','Ticket','Cabin','Embarked',
'Fare','Survived'],axis=1)"
"mslacc.drop('Ticket',inplace=True,axis=1)"
"mslacc.drop(['Name','Age','SibSp','Parch','Ticket','Fare','Cabin'],
axis=1,inplace=True)"
"m,s=mslacc[mslacc[column1][missing]]"
dset['FamSize']=mslacc['SibSp']+mslacc['Parch']+1
dataset_df['FamilySize']=mslacc['Parch']+mslacc['SibSp']
mslacc[mslacc.FamilyName=='Peacock']
"mslacc=mslacc.drop(['Name','Sex','Ticket','Embarked','PassengerId',
'Pclass','Survived'],axis=1)"
"mslacc=mslacc.drop(labels=[column],axis=strategy)"
dataset['Child']=mslacc['Age']<=10
"mslacc.drop(labels=['Sex','Embarked','Pclass'],axis=1,inplace=True)"
dataset['PerPersonFare']=mslacc['Fare']
mslacc.train.describe()
"mslacc=mslacc.drop(['Cabin','Name','Survived','Ticket','Parch',
'PassengerId'],axis=1)"
age_fare['Age']=mslacc['Age']
"mslacc.drop(columns=['PassengerId','Ticket','Cabin'],inplace=True)"
mslacc['PassengerId']
"mslacc[row,col]"
mslacc['Age'].describe(include=all)
"mslacc=pd.read_csv(
'../input/titanicdivethrough-featurecave/feature_cave_test.csv',
index_col=0)"
"mslacc=mslacc.drop(['Name','Sex','Ticket','Cabin','PassengerId',
'SibSp','Parch'],axis=1)"
data['DatingRank']=mslacc['DatingRank']*0.15
prediction_df[clf_name]=[-1]*mslacc.shape[0]
mslacc=mslacc[Class]
"mslacc['Train_acc_'+mslacc[i]],"
"mslacc.drop(['PassengerId','Ticket','Cabin','Name'],inplace=True,axis=1)"
"X_tr,X_val=mslacc.iloc[train_index],mslacc.iloc[test_index]"
"mslacc=mslacc.drop(exclude_features,axis=1)"
train_1['PPT']=mslacc['SibSp']+mslacc['Parch']+1
testing['Family_Size']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc=mslacc[['Survived','PassengerId']]"
mslacc=mslacc[0:890]
"mslacc=mslacc.drop(['Parch'],axis=1)"
train_dataset['Family']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc=mslacc.drop(['Survived','PassengerId','Ticket','Name'],axis=1)"
full_df['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc.drop('AgeGroup',axis=1,inplace=True)"
"mslacc=mslacc.drop(labels='Survived',axis=1)"
train['Young']=(mslacc['Age']>=18)&(mslacc['Age']<=40)
"mslacc=[lforlinmslacc.leavesifmslacc.prev_leaf==leafandmslacc.
condition==mslacc[mslacc.feature]]"
"mslacc=mslacc.drop(['Sex_S'],axis=1)"
"mslacc.drop(labels=['Name','Ticket'],axis=1,inplace=True)"
"mslacc=mslacc.drop(missing_col_tr,axis=1)"
mslacc[1043:1044]
"mslacc.drop('Survived',1,inplace=True)"
"mslacc.iloc[5:10,3:8]"
X_train['PassengerId']=mslacc.iloc[:mslacc.shape[0]]
mslacc=mslacc.loc[mslacc['Age']<18]
"mslacc=mslacc.drop(titanic_train.columns[8],axis=1)"
"mslacc=mslacc[['Survived','FamilySize','Age','Fare','Pclass']]"
"mslacc=pd.read_csv(f'{INPUT_DIR}train.csv',low_memory=False)"
test_df['New_Age']=mslacc['Age']
mslacc=mslacc['Survived'][~idxs_mask]
data['FamSize']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc.drop(column,axis=1,inplace=True)"
mslacc=mslacc[mslacc.Pclass==3]
mslacc=mslacc[(mslacc['Survived']==0)|(mslacc['Survived']==1)]
"mslacc.drop('Ageband',axis=1,inplace=True)"
"mslacc=mslacc.drop('SibSp',axis='columns')"
mslacc.FamilySize.head(10)
X_test['SibSp']=mslacc['SibSp']
mslacc=mslacc.loc[idx]
"mslacc=mslacc.drop(['PassengerId','Name','Ticket'],1)"
mslacc=mslacc[index_train]
dataset['PassengerFare']=mslacc['Fare']/mslacc['TicketFreq']
"X[self.column_name+'Bucket']=mslacc[mslacc.column_name
]//mslacc.bucket_size*mslacc.bucket_size"
"mslacc.drop('Age_x',axis=1,inplace=True)"
mslacc['passengerid'].shape
df_test['norm_fare']=(mslacc['Fare']-fare_mean)/fare_std
"mslacc=mslacc.iloc[891:1309,:]"
mslacc=mslacc[i][1:]
mslacc=mslacc['Survived'].loc[mslacc['Pclass']==1]
mslacc=mslacc.loc[mslacc['Embarked']=='Q']
mslacc=mslacc['Title']==title
"mslacc=mslacc.drop(['Mr'],axis=1)"
"mslacc.drop(titanic_test.columns[[2,7,9]],axis=1,inplace=True)"
"mslacc=mslacc.drop(['Name','Sex','Ticket','Cabin','PassengerId'],axis=1)"
mslacc[mslacc['Fare']>500]
"age,title=mslacc.loc[f_member,'Age'],mslacc.loc[f_member,'Title']"
df_train['Fare']=mslacc['Fare'][:891]
mslacc=mslacc['mean_test_%s'%scorer][best_index]
"mslacc.drop(columns=['Survived'],axis=1),"
mslacc=pd.read_csv(filename)
mslacc=mslacc[f][1]
mslacc=mslacc[mslacc['Count']>0]
mslacc=mslacc[var1]
mslacc=mslacc[4]
"tit_df_test.loc[i,'Age']=mslacc.loc[mslacc.loc[i,'Sex']].loc[mslacc.loc
[i,'Pclass']]"
merged['Group']=mslacc['Sex']
mslacc=mslacc[0:ntrain]
"mslacc=mslacc.drop(multiple_outliers,axis=0)"
"combined.loc[f_group.index,'group_id']=mslacc[ln]"
"mslacc=mslacc[1,1]/(mslacc[1,0]+mslacc[1,1])"
"mslacc=mslacc.loc[:,(selCols+['Survived'])]"
mslacc=pd.read_csv(path3)
mslacc[3:]
"train['TSNE2']=mslacc.iloc[0:train_rows-1,(1)]"
"mslacc=mslacc.iloc[:,:]"
mslacc=pd.read_csv(DATA_DIR+'test.csv')
test_one['Cluster']=mslacc['cluster']
mslacc=mslacc[target_col]
"df['AverageFareperPerson']=mslacc['Fare']/mslacc['NumberofTicketUses'
]"
mslacc=[mslacc[numeric_feature_cols]]
mslacc=mslacc[estim]
train['Family']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc=mslacc.loc[:,(['Pclass','Sex'])]"
train_data['Cabin_D']=mslacc['D']
df['F_C2']=mslacc['Sex_female']*mslacc['Pclass_2']
"mslacc.drop(['Name','Sex','Ticket','Cabin','Embarked','Cabin_I'],axis
=1,inplace=True)"
data_df['Family_Size']=mslacc['Parch']+mslacc['SibSp']+1
"mslacc=mslacc.drop(['Name','Ticket','PassengerId','Cabin','Fare'],axis=1
)"
"df.loc[i,'Age']=mslacc[mslacc.loc[i,'Title']]"
X_test['Age']=mslacc['Age']
mslacc=pd.read_csv('../input/datacamptraining/my_solution.csv')
test['Family']=mslacc['Parch']+mslacc['SibSp']+1
"mslacc=mslacc.drop(['PassengerId','Name','SibSp','Parch','Ticket',
'Fare','Cabin','Title','Age'],axis=1)"
"mslacc=mslacc.drop(['not_alone','Male_P3','Parch'],axis=1)"
"mslacc.drop('Family',axis=1,inplace=True)"
test_df['Family']=mslacc['Parch']+mslacc['SibSp']+1
"mslacc=mslacc.drop('scoresBinned',1).drop('categories',1)"
"rows,cols=mslacc.shape"
mslacc=(mslacc['Alone']==0)&(mslacc['Sex']=='female')
mslacc=mslacc.iloc[mslacc[:train_end]]
data['FamilySize']=mslacc['SibSp']+mslacc['Parch']
mslacc=mslacc[selected_features]
"mslacc=mslacc.drop(['Cabin','Name','PassengerId','Ticket'],axis=1)"
"mslacc=mslacc.drop(columns=['Survived'],axis=1,inplace=False)"
mslacc=pd.read_csv(titanic_train_path)
df['Family_Size']=mslacc['Parch']+mslacc['SibSp']+1
mslacc=mslacc[-20:]
df_train['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
mslacc.describe(include='O')
"mslacc=mslacc.drop(col_del,1)"
new_df['Fare_qd']=mslacc['Fare']**4
mslacc=[mslacc[idx]foridxinpassngr_idx]
mslacc=mslacc[response]
"mslacc=mslacc.drop(['Ticket','PassengerId'],axis=1)"
"mslacc=mslacc[0].iloc[:,1:]"
X_test['Fare']=mslacc['Fare']
mslacc=mslacc[:][0:891]
train['FamilyMembers']=mslacc['SibSp']+mslacc['Parch']
mslacc=mslacc.shape[0]-live_total
"mslacc=mslacc.loc[:,'Pclass_1':'Cabin_Z']"
mslacc[mask]
df_train['SibSpBool']=mslacc['SibSp']>0
mslacc=pd.read_csv(titanic_file_path)
mslacc=mslacc['train']
"mslacc=summary_sex/mslacc.iloc[(-1),:]"
x_batch[:half_batch]=mslacc[mslacc[:half_batch]]
mslacc=mslacc[sort_idx]
"mslacc=mslacc.drop(['FareRange'],axis=1)"
df['U18']=mslacc['Age']<18
mslacc=mslacc[feature_names_test]
"mslacc.drop(['Name','Title'],axis=1,inplace=True)"
"mslacc=mslacc.drop(['Survived','Embarked'],axis=1)"
"mslacc.shape,mslacc.shape"
testing['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc.drop(labels=label_drop,inplace=True,axis=1)"
titanic_train['Fare']=mslacc['FareBand']
mslacc[mslacc.Title=='Dr']
"mslacc=mslacc.drop(['Class_3'],axis=1)"
titanic_df['SbS']=mslacc['SibSpBinary']
df['Elder']=mslacc['Age']>65
mslacc=mslacc[5:9]
mslacc[mslacc['Title']==15]
"mslacc[[mslacc.Pclass,'Pclass_1','Pclass_2','Pclass_3']].head()"
mslacc[features_to_model].head()
"mslacc=mslacc.iloc[:,([1,3,4,5,6,8,10])]"
mslacc=mslacc[classifier_name]
"mslacc=mslacc.drop(['Sex'],axis=1)"
"test.loc[v[i],'ChildNotSurvived']=mslacc[(mslacc.Age<19)&(mslacc.
Survived==0)].shape[0]"
"mslacc=mslacc.drop(['TicketBucket'],axis=1)"
titanic_df['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc.drop(labels=['Name','Title'],axis=1,inplace=True)"
mslacc=mslacc[mslacc['cia']=='alone']
"mslacc.drop(['PassengerId','Name','Sex','Ticket','Embarked'],axis=1,
inplace=True)"
"mslacc.drop(['Name','Ticket'],axis=1)"
mslacc=mslacc[:891]['Survived']
"mslacc.drop(labels=['Name','PassengerId'],axis=1,inplace=True)"
mslacc[(mslacc.Title=='Dr')&(mslacc.Sex=='female')]
mslacc=mslacc[mslacc['pclass']==i]
test_data['Family']=mslacc['SibSp']+mslacc['Parch']
mslacc.loc[1043]
mslacc=mslacc[data_train['Survived']==1]['Fare']
mslacc=pd.read_csv(DATA_PATH+'/train.csv')
mslacc=mslacc[0][0]+mslacc[1][1]
"mslacc=pd.read_csv('../input/test.csv',sep=',')"
mslacc=mslacc.loc[mslacc[y_attribute]==1]
mslacc.shape(X_scale_test)
mslacc=mslacc[['Age']]
test_data['Family']=mslacc['Parch']+mslacc['SibSp']
"mslacc=mslacc.drop(['Name','Ticket','Cabin'],1)"
"mslacc=mslacc.drop(['Survived','young'],axis=1)"
mslacc=mslacc['Title']
"mslacc=mslacc.drop(['Cabin','PassengerId','Ticket','Name','Embarked',
'Fare'],axis=1)"
"mslacc=mslacc[['Pclass','Sex','ParchCat','SibSpCat','Embarked',
'Fare','TitleCat','Age','TicketCat','CabinCat']]"
"mslacc.drop(['PassengerId','Ticket','Name','Cabin','SibSp','Parch'],
axis=1,inplace=True)"
mslacc=mslacc[0][1]+mslacc[1][0]
"mslacc=mslacc.drop(['PassengerId','Name','Age','Ticket','Fare',
'Cabin'],axis=1)"
"mslacc={'PassengerId':mslacc['PassengerId'],'Survived':pred}"
mslacc=mslacc[i]-X_train
"mslacc=mslacc.drop(['CatAge','CatFare'],axis=1)"
mslacc=model.best_score_['valid']['auc']
data_train['Age']=mslacc['Age']
"mslacc.loc[[0,2]]"
mslacc=mslacc[mslacc.DataType=='test']
"mslacc.drop(['PassengerId','Name','Sex','SibSp','Parch','Ticket',
'Embarked'],axis=1,inplace=True)"
"train['Young_m']=(mslacc['Age']>=18)&(mslacc['Age']<=40)&(mslacc[
'Sex']=='male')"
"mslacc=mslacc.drop(['TicketFirst'],axis=1)"
"mslacc=mslacc.loc[mslacc['Sex'],mslacc['Pclass'],mslacc['type']]"
data['IsMale']=(mslacc['Sex']=='male')*1
train_df['FamMembers']=mslacc['SibSp']+mslacc['Parch']+1
titanic['Survived']=mslacc['Survived']
mslacc=mslacc[mslacc['Family']<7]
train['Singleton*Pclass']=mslacc['Singleton']*mslacc['Pclass']
mslacc.train.head()
mslacc=mslacc[my_cols]
"mslacc=mslacc.loc[:,(colsRF)]"
"mslacc=mslacc.drop(features_extra,axis=1)"
train_df['Pclass']=mslacc['Pclass']/3
traindf.describe()['Age']
trainingdata['Related']=mslacc['SibSp']+mslacc['Parch']
"mslacc=mslacc.drop(Y_columns,axis=1)"
df['embarked_T']=mslacc['Embarked']
"mslacc=mslacc.drop(['Name','Ticket','Embarked'],axis=1)"
"mslacc=pd.read_csv(file_test,sep=',')"
"mslacc.drop(labels=['PassengerId'],axis=1,inplace=True)"
df['AgeXClass']=mslacc['Age']*mslacc['Pclass']
combined_num_cat['Child']=mslacc['Child']
mslacc=mslacc[1]*100
mslacc=mslacc['Name']
mslacc=mslacc[nclassifier][1]
mslacc['Ticket'].head(100)
mslacc[mslacc.Survived==0].Age.head()
mslacc=pd.read_csv(titanic_test_path)
mslacc[mslacc['Ticket']=='3701']
combined_data.iloc[891:]['Age'].describe()
mslacc=titanic_train.Cabin.values[i][0]
mslacc=mslacc[mslacc.Fare==0]
"mslacc=mslacc.drop(columns=['Fare','CategoricalFare'])"
"mslacc=mslacc.iloc[train_rows:,:]"
test['Fare_3']=(40<=mslacc['Fare'])&(mslacc['Fare']<100)
mslacc=mslacc.describe(include='all')
"results['wrong_prediction_percetage']=100*mslacc['wrong_label_count'
]/mslacc['label_count']"
test['Pclass1']=mslacc['Pclass']
mslacc=(mslacc['Embarked']=='C')&(mslacc['Survived']==1)
test['family']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc=mslacc.drop(['Name','Ticket','Cabin'],axis=1)"
mslacc=mslacc[feature_list2]
mslacc=mslacc['dW2']
mslacc['Alone']
"mslacc=mslacc.drop(labels=['Cabin','Fare'],axis=1)"
"mslacc=mslacc['Fare'].loc[(mslacc['Pclass']==3)&(mslacc['Embarked']==
'S')]"
"mslacc=mslacc[['Title','Name','Age','Sex','sex_female','sex_male',
'SibSp','Parch','Fare','Pclass','class_1','class_2','class_3',
'Cabin','Embarked','TicketPrefix','TicketNumber','title_Col',
'title_Dr','title_Master','title_Miss','title_Mr','title_Mrs',
'title_Ms','title_Rev','embarked_C','embarked_Q','embarked_S']]"
mslacc=mslacc['FamilyName']
"mslacc[i],"
"[mslacc.drop(columns=['Name'],inplace=True)fordfin[titanic_df,test_df]]"
mslacc=mslacc.drop(columns='Sex')
"mslacc['Age'][mslacc['Survived']==0],"
mslacc=mslacc[mslacc['SibSp']<8]
"mslacc=mslacc[['Survived_x','Sex_x','Age_x','Survived_y','Sex_y',
'Age_y','Ticket']]"
test4['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc=mslacc.drop(labels=['Survived'],axis=1)"
mslacc=train_history.history[validation_acc][epoch_num-1]
x['FamilySize']=mslacc['Parch']+mslacc['SibSp']
test[feature]=(mslacc[feature]-min_)/(max_-min_)
"mslacc.drop(['Cabin','Name','Parch','SibSp','Ticket'],axis=1,inplace=True
)"
train['Fsize']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc=mslacc[['Age','is_female','Survived']]"
mslacc[mslacc['Title']=='Ms']
mslacc=mslacc[index_comma:]
"mslacc.drop(['Embarked','PassengerId','CabinCode','Survived'],axis=1,
inplace=True)"
"mslacc.drop(['FareBand'],axis=1,inplace=True)"
train_df['Old_Female']=(mslacc['Age']>50)&(mslacc['Sex']=='female')
mslacc=pd.read_csv(input_io_dir+'/test.csv')
dataset['Age_Class']=mslacc['Age']*mslacc['Pclass']
test_df['Fare/personbins']=mslacc['Fare/person']
"mslacc=mslacc[(mslacc.Survived==0.25)|(mslacc.Survived==0.5)|(
mslacc.Survived==0.75)]"
"mslacc.drop(['Parch','SibSp','Name','Ticket'],inplace=True,axis=1)"
"best_classifier[classifiers[i].__class__.__name__]=[mslacc[i],mslacc[i],
mslacc[i]]"
mslacc=mslacc.drop(index=idx)
mslacc=mslacc[:titanic_len]
"mslacc.drop('Fareband',axis=1,inplace=True)"
"mslacc.drop(['PassengerId','Name','Ticket','Cabin','Fare'],axis=1,
inplace=True)"
mslacc=mslacc[(mslacc['Parch']>0)&(mslacc['Survived']==0)]
"mslacc=mslacc.drop(cols,axis=1)"
mslacc=mslacc.query('train==0')
mslacc=mslacc[mslacc['PassengerId']<=891]
"mslacc.drop(['Cabin','Age'],inplace=True,axis=1)"
"mslacc.drop(['PassengerId','Cabin','Cabin','Embarked','Name','Ticket'],
axis=1,inplace=True)"
mslacc.values.shape
"train,test=pd.read_csv('../input/train.csv'),pd.read_csv(
'../input/test.csv')"
mslacc=mslacc[mslacc['DS']=='test']
"df['third_perc']=mslacc[mslacc.columns[2]]/(mslacc[mslacc.columns[0]]+
mslacc[mslacc.columns[1]]+mslacc[mslacc.columns[2]])"
mslacc.Ticket.head()
"mslacc=mslacc[:,(0)][y_iris==i]"
mslacc=mslacc[feature_cols]
"df['nomiss_perc']=mslacc[mslacc.columns[0]]/(mslacc[mslacc.columns[0]]+
mslacc[mslacc.columns[1]])"
"mslacc=mslacc[['passenger_Id','survived']]"
df_train['tot_family_size']=mslacc['Parch']+mslacc['SibSp']
"titanicTrain.iloc[i,3]=mslacc[x]"
"mslacc=mslacc.loc[mslacc['Survived']==0,'Fare']"
"X_text[e,p]=mslacc[w]"
"mslacc.drop(['AgeBin'],axis=1,inplace=True)"
mslacc=mslacc['SVC']
entire['Fare_category']=mslacc[0]
mslacc=mslacc[:size]
mslacc.shape(X_predict_scale)
mslacc=mslacc[minimal_features]
"mslacc=mslacc.drop(['LargeFamily','FamilyClass'],axis=1)"
"mslacc=mslacc.drop(labels=['Embarked_-999'],axis=1)"
"mslacc[mslacc[f]],"
mslacc=mslacc.iloc[train_idx]
full['FamilySize']=mslacc['Parch']+mslacc['SibSp']+1
"mslacc['X_train'],y_train"
"mslacc=mslacc.drop(['Name','Age','SibSp','Parch','Fare','FamilySize'
],axis=1)"
"mslacc=mslacc[['Embarked','Survived']]"
"mslacc.iloc[[5,17]]"
"mslacc=mslacc[['Pclass','Sex','ParchCat','SibSpCat']]"
mslacc=mslacc.iloc[:1]
mslacc=mslacc['n_estimators']
dt['Familysize']=mslacc['SibSp']+mslacc['Parch']+1
train['Age_6']=60<=mslacc['Age']
"mslacc['Survived'],"
train['Age'][i]=mslacc[mslacc['Title'][i]]
"mslacc.drop(['Age','Age_cat_2'],axis=1,inplace=True)"
"mslacc=mslacc.drop(['Sex','Name','Pclass','Embarked','Ticket'],axis=
1,inplace=True)"
mslacc=mslacc[predictor_columns]
mslacc.head(11)
mslacc['Pclass']==mslacc['Pclass']
"mslacc=mslacc[0,0]/(mslacc[0,0]+mslacc[0,1])*100"
test['Pclass_1']=mslacc['Pclass']==1
"mslacc=mslacc.drop(['Name','Ticket','Survived','PassengerId'],axis=1)"
"mslacc=mslacc.drop(['Ticket'],1)"
mslacc=mslacc[6]
mslacc=mslacc[curr_ticket]
family['Surname_adj']=mslacc['Surname']
"mslacc=mslacc.drop(['PassengerId','Survived','Pclass','Name','Sex',
'Age','Ticket','Fare','Cabin','Embarked','cabin_na','age_range'],
axis=1)"
"mslacc.drop(columns=DROP_COLUMNS,inplace=True)"
"mslacc=pd.read_csv(f'{PATH_INPUT}test.csv',low_memory=False)"
mslacc['logistic_regression_second_level']
"mslacc=mslacc.drop(['PassengerId','Name','SibSp','Parch','Cabin',
'Ticket','Cabin','family','Title'],axis=1)"
mslacc['Alone']==X.iloc[i]['Alone']
titanicANDtest_df['p']=mslacc['ParchBinary']
"mslacc=mslacc.drop(['Name','Sex','Ticket','Cabin','Embarked','Fare',
'Age'],axis=1)"
"mslacc.loc[mslacc['Age']>65,'Age']"
"mslacc=mslacc.loc[:,(['Sex','Pclass','Embarked','Title',
'Family_size','Parch','SibSp','Cabin','Ticket'])]"
train['Fsize']=mslacc['Parch']+mslacc['SibSp']
"mslacc=pd.read_csv('../input/train.csv',index_col=False)"
testingset['AgeBin'][x]=mslacc[mslacc['Title'][x]]
"mslacc.drop(columns=['Ticket','Name','Cabin','PassengerId'],inplace=True)"
test['Pclass2']=mslacc['Pclass']
mslacc=mslacc[mslacc[1:]]
mslacc['Cabin_num'].head()
mslacc[numeric_features].head()
test['Family_Size']=mslacc['Family_Size'][891:]
mslacc=pd.read_csv(url_train)
mslacc=mslacc[label]
"mslacc=mslacc.drop(['source','Survived'],axis=1)"
"mslacc=mslacc.drop(['Name','Cabin'],axis=1)"
"mslacc=mslacc.drop(['Survived','PassengerId','Name','Ticket'],axis=1)"
mslacc.head(80)
trainPCA2['7']=mslacc['Pclass2']
"df_temp.loc[df_temp['Sex']=='male','Count']=mslacc[df_temp['Sex']==
'male']['Count']/M_count"
mslacc=mslacc[IDCol]
test6['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
train_dat['Fmsize']=mslacc['SibSp']+mslacc['Parch']+1
mslacc.head(50)
mslacc=mslacc.shape
mslacc[mslacc['Ticket']=='CA.2343']
"mslacc=mslacc.drop(columns=['Name'],axis=1)"
mslacc=mslacc[ind:ind+10]
"mslacc=mslacc.drop(labels,1).drop('Cabin',1).drop('Ticket',1).drop(
'NameLen',1).drop('Name',1).drop('PassengerId',1)"
"mslacc.drop(['Name','Ticket','PassengerId'],axis=1,inplace=True,errors
=False)"
mslacc=mslacc['Survived']
"mslacc=pd.read_csv(f'{PATH_INPUT}train.csv',low_memory=False)"
"mslacc=mslacc.loc[:,([mslacc.column_to_impute,mslacc.column_ref])]"
mslacc=mslacc.loc[ntr+ncv:ntr+ncv+ntt-1]
"mslacc.drop(['Name','SibSp','Parch','Ageband','Family','Fareband'],
axis=1,inplace=True)"
mslacc=mslacc[i]
"yieldmslacc[ii:ii+batch_size],mslacc[ii:ii+batch_size]"
"mslacc=mslacc[['Sex','Age','Pclass','Family','Embarked','Title','Fare']
]"
train['Fammems']=mslacc['Parch']+mslacc['SibSp']
"mslacc=mslacc.drop(['Ticket','Cabin'],axis=1,inplace=True)"
mslacc=mslacc[skewed_feats>0.75]
res[row['PassengerId']]=mslacc['Nationality']
mslacc=modelResults.loc[2]['Model']
mslacc=mslacc[100:]
"mslacc=mslacc.iloc[:,:13]"
df_test['Age']=(mslacc['Age']-age_mean)/age_std
test_data.head()['Cabin']
mslacc=mslacc['mean_test_score']
mslacc[mslacc['Age']>7.2]
mslacc=mslacc[mslacc['Overall']<85]
"mslacc=pd.read_csv(ROOT_DIR+'train.csv',sep=',')"
mslacc=mslacc[boy]
mslacc=pd.read_csv('./../input/test.csv')
mslacc=mslacc[strTarget]
mslacc.loc['Cricket']
mslacc=[nforninmslacc.iloc[i]]
"mslacc=mslacc.loc[mslacc['Pclass']==2,['Survived','Sex','Age']]"
mslacc.head(9)
test['Age_6']=60<=mslacc['Age']
"mslacc.loc[:,(['Age*Class','Age','Pclass'])].head()"
df['income']=mslacc['apts']*2+mslacc['apts2']*1.5+mslacc['bonus']
"mslacc.drop(['PassengerId','Ticket','Fare','Cabin'],axis=1,inplace=True)"
combined_features['FamilySize']=mslacc['Parch']+mslacc['SibSp']+1
"mslacc.drop(['CategoricalAge'],inplace=True,axis=1)"
"mslacc=mslacc.iloc[:,([1])]"
"mslacc=mslacc.drop(['Name','Cabin','Fare','Age','Ticket'],1)"
"mslacc.drop(['Survived','ages'],axis=1,inplace=True)"
"mslacc=mslacc.drop(['Cabin','Ticket','PassengerId'],axis=1)"
chart['Accuracy']=mslacc['Accuracy']*1000
mslacc=mslacc['survived']
mslacc=mslacc[:last_train_index]
mslacc=mslacc[train_rows:]
mslacc[test_nan_pct>0]
Submission['PassengerId']=mslacc['PassengerId']
test['Pclass']=mslacc['Pclass']
"mslacc=mslacc.drop(['Sex','Embarked','Ticket','Name'],axis=1)"
"mslacc=mslacc.loc[mslacc['Survived']==1,[x_col,y_col]]"
"mslacc=[mslacc[1]/total,mslacc[2]/total,mslacc[3]/total]"
"mslacc=mslacc[mslacc.is_train==1].drop(['PassengerId','is_train'],axis=1)"
"mslacc.drop(columns=['Name','Sex','Ticket','Fare','Cabin','Embarked',
'Title','Age'],inplace=True)"
"test.loc[v[i],'Male_Friends_Survived']=mslacc[(mslacc.Sex=='male')&(
mslacc.Survived==1)].shape[0]"
"mslacc.drop(['Age_2'],axis=1,inplace=True)"
mslacc=mslacc[start_idx:start_idx+batch_size]
allfeat['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
test_dataset['Family']=mslacc['SibSp']+mslacc['Parch']+1
"train_set,train_label,test_set,test_label=mslacc.loc[train_index
],mslacc.loc[train_index],mslacc.loc[test_index],mslacc.loc[test_index]"
data['RelationsOnBoard']=mslacc['RelationsOnBoard']*0.02
"mslacc=mslacc.drop(['PassengerId','Survived','Family','SibSp','Parch'
],axis=1)"
mslacc=mslacc.drop('Survived')
"mslacc=mslacc.loc[:,(['Pclass','Ticket','Cabin2'])]"
"mslacc['train-error'][0],"
mslacc=mslacc[slice_i:]
mslacc=pd.read_csv('/kaggle/input/gender_submission.csv')
pd.read_csv('titanic-test-results.csv')
data['Family_size']=mslacc['SibSp']+mslacc['Parch']
mslacc=mslacc['Count']-1
"mslacc=mslacc.drop(columns=['Age','SibSp','Parch','Fare','EmbarkedC',
'EmbarkedS','EmbarkedQ','SexM','SexF','Pclass1','Pclass2','Pclass3'])"
"mslacc=mslacc[['Features','Importance']]"
"mslacc=mslacc.loc[ind,'mean_train_score']"
"mslacc=mslacc[1].drop(['PassengerId'],axis=1)"
mslacc=title_base_string+mslacc[field]
mslacc[numeric_variables].head()
mslacc=mslacc[mslacc['Mark']=='test']
df_all['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
the_df['FareFill']=mslacc['Fare']
df_train['FareAvg']=mslacc['Fare']/mslacc['FamilySize']
"mslacc=mslacc.loc[(i),:]"
"mslacc=mslacc.drop({'Cabin'},axis=1)"
"mslacc=pd.read_csv('../input/train.csv',index_col='PassengerId',nrows=n_row
)"
"mslacc=mslacc[['Child','YA','Adult','Male','Female','Class1',
'Class2','Class3','famsurrate','nofam','smlfam','bigfam']]"
"mslacc.drop(['PassengerId'],1,inplace=True)"
df['IsChild']=mslacc['Age']<16
test_df['age_class']=mslacc['Age']*mslacc['Pclass']
mslacc=pd.read_csv(path_train)
mslacc.iloc[outlier_indices]
"mslacc=mslacc.drop(['PassengerId','Name','Sex','Ticket','Cabin',
'HasCabin','SibSp','Parch'],axis=1)"
"mslacc=mslacc[['PassengerId','Name','Survived','Pclass','Sex','Age',
'SibSp','Parch','Ticket','Fare','Embarked']]"
"mslacc=mslacc.loc[mslacc['Survived']==0,['Fare']]"
mslacc=mslacc[mslacc.Cabin!='T']
"mslacc=mslacc.drop(['PassengerId','Family','Name','Age','Sex',
'Ticket','Cabin','Embarked','NameTitle'],axis=1)"
"mslacc=mslacc.drop(columns=['Cabin','Ticket','Name'],axis=1)"
features['SibSp']=mslacc['SibSp']
"mslacc.drop('Class3',axis=1,inplace=True)"
"mslacc=mslacc.drop(['Parch','SibSp'],axis=1)"
mslacc[mslacc['Sex']=='male']
testdataframe2['SibSp']=mslacc['SibSp']
mslacc=mslacc['Survived'].loc[mslacc['Pclass']==2]
"tit_df_san.loc[i,'Age']=mslacc.loc[mslacc.loc[i,'Sex']].loc[mslacc.loc[
i,'Pclass']]"
mslacc=mslacc[mslacc['age_range']=='elder']
mslacc=mslacc[reducedFeatures]
"mslacc=mslacc.iloc[4,5]"
"mslacc=mslacc.drop(['Cabin','Name','Ticket','Survived'],axis=1)"
titanic_test['FamilySize']=mslacc['SibSp']+mslacc['Parch']
col[mask_col]=mslacc[mask_col]
mslacc=mslacc['AgeBand'].loc[mslacc['AgeBand']!=-1]
"mslacc=mslacc[['PassengerId','Survived']]"
mslacc=mslacc[:100]
"mslacc=pd.read_csv('../input/train.csv',header=0,sep=',',index_col=0,
parse_dates=True,encoding=None,infer_datetime_format=False)"
df_test['Family']=mslacc['SibSp']+mslacc['Parch']+1
"(mslacc['SharedTicket']==0)&(mslacc['SharedName']==1)&(mslacc[
'FamilySize']==1),"
"mslacc=mslacc.drop(['PassengerId','AgeBand','FareBand'],axis=1)"
data['FamSize']=mslacc['SibSp']+mslacc['Parch']
"mslacc.drop([i],axis=1)"
mslacc=mslacc['Z1']
df_dums['Class_2']=[(1ifele==2else0)foreleinmslacc['Pclass']]
"mslacc.iloc[[0,2,4],[1,3,6]]"
"mslacc.drop(['Name','Cabin','Ticket','Embarked'],axis=1,inplace=True)"
mslacc=pd.read_csv('/kaggle/working/submission.csv')
Y['RGroup']=mslacc['Ticket']+'_R'
mslacc[0:10]
"mslacc=mslacc.drop('CabinType4',axis=1)"
"mslacc=mslacc.iloc[:,2:]"
"mslacc=mslacc[['Pclass','Sex','Age','SibSp','Parch','Fare','CabinBool']
]"
"mslacc.drop(labels=['PassengerId','Cabin','Name','Ticket'],axis=1,
inplace=True)"
"mslacc=mslacc.loc[0:890].drop(['Age','Cabin','Ticket','index',
'PassengerId','Name'],axis=1)"
idxMap[idx]=mslacc[1]
"mslacc.drop(['Age','calculated_fare'],axis=1,inplace=True)"
mslacc=self.data[index][1:]
mslacc=[mslacc[2]forrindata]
mslacc=mslacc[useful]
"mslacc.drop(drop,axis=1,inplace=True)"
mslacc=mslacc[age_features]
"mslacc=mslacc[['Pclass','Name','Sex','Age','Cabin','Embarked']]"
"mslacc.drop('Survived',axis=1,inplace=True,errors='ignore')"
data_all['Embarked_S']=(mslacc['Embarked']==1)+0
"mslacc=mslacc[['Fare','Pclass','male','Parch','SibSp','Age']]"
f_test[k]=mslacc[k]['f_test']
"mslacc=mslacc.male.loc[mslacc['Title'],mslacc['Pclass']]"
mslacc.Cabin.head(5)
mslacc=mslacc[key][1]
"mslacc=mslacc[['Survived','Parch','Age']]"
mslacc=mslacc[~trainIndex]
"mslacc=mslacc.drop(columns=['Sex'],axis=1)"
mslacc=mslacc[classifier]['classifier']
df_data['Ti_Minor']=(mslacc['Ti_Age']<14.0)*1
"mslacc=mslacc.drop(['Survived','PassengerId','Name'],axis=1)"
"fold_Xtrain,fold_ytrain=mslacc[(train_index),:],mslacc[train_index]"
test['Age'][i]=mslacc[mslacc['Title'][i]]
"mslacc=pd.read_csv('../input/test.csv',na_values=['NaN'])"
mslacc=mslacc['total']/mslacc.shape[0]
"mslacc=mslacc.loc[ind,'mean_test_score']"
"mslacc.drop(['Fare','Q','Class2','Class1','C','S','Class3','Parch'],
axis=1,inplace=True)"
df['Women']=mslacc['Fare'].loc[mslacc.Woman==1]
"mslacc=[mslacc['FamilySize']],"
test['age_T']=mslacc['age_T']
"mslacc=mslacc.drop(['Survived','AgeGroup'],axis=1)"
"data.loc[data['Sex']==0,'SexByPclass']=mslacc.loc[mslacc['Sex']==0,
'Pclass']"
mslacc=mslacc.loc[~(mslacc['Survived']==mslacc['Pred_survived'])]
X[4]=mslacc[0]+mslacc[1]==1
mslacc=mslacc[mslacc['Age']>=15]
train['family_size']=1+mslacc['SibSp']+mslacc['Parch']
mslacc=pd.read_csv('./output.csv')
mslacc='../input'ifmslacc[0]=='root'else'../../data'
"mslacc=mslacc.drop(labels=['PassengerId','Survived'],axis=1)"
mslacc[null_count>0]
train_df['Age*Pclass']=mslacc['Age']*mslacc['Pclass']
"mslacc.drop(['PassengerId','Name','Ticket','Cabin','Embarked'],axis=1,
inplace=True)"
dataset['family_size']=mslacc['Parch']+mslacc['SibSp']+1
"mslacc.drop(['Survived','PassengerId'],axis=1,inplace=True)"
mslacc.PassengerId.describe()
mslacc=mslacc.iloc[891:]
"mslacc=mslacc.drop(['Ticket','Fare'],axis=1)"
mslacc=mslacc.head(train_num)
"mslacc=mslacc.drop(category_column,axis=1)"
"mslacc.drop(labels=['Ticket_Cat'],axis=1,inplace=True)"
mslacc=mslacc['FamilySize']
mslacc=pandas.read_csv(TEST_PATH)
"mslacc=mslacc[['Sex','Pclass','Title','Age']]"
"mslacc=summary_class/mslacc.iloc[(-1),:]"
mslacc=mslacc.drop(columns='Sex_female')
"test['TSNE3']=mslacc.iloc[train_rows:train_rows+test_rows-1,(2)]"
train['Family_Size']=mslacc['Parch']+mslacc['SibSp']
mslacc=mslacc['Title']=='Mrs'
mslacc.describe(include=['0'])
"mslacc.drop(categorical_cols,axis=1,inplace=True,errors=False)"
combined_One_Hot_Cat['Child']=mslacc['Child']
mslacc[0:20]
"mslacc.loc[(mslacc.Name=='Storey,Mr.Thomas'),:]"
"mslacc=mslacc.drop(to_be_dropped,axis=1)"
mslacc[one_hot_columns].head(5)
"mslacc.drop(col,axis=1,inplace=True)"
mslacc[top]
mslacc['Title1'].head(3)
mslacc['FamilySize'].describe()
mslacc=mslacc[mslacc['Fare']<400]
data['Travelling_alone']=mslacc['SibSp']+mslacc['Parch']
train.loc[train['Pclass']==3]['Deck'].describe()
mslacc=mslacc[cols+['Survived']]
mslacc['len_name'].describe()
"mslacc.drop(labels=['Name','Names','Cabin','Ticket','Age','Fare'],
axis=1,inplace=True)"
"ifmslacc.loc[pid,'Age_cat']!='NA':
continue"
combined['Age']=mslacc['Age']
"mslacc=mslacc[mslacc.loc[:,(mslacc.columns!='Survived')].columns]"
"mslacc=mslacc.loc[:,(['Sex','Age','Fare','Pclass','Embarked'])]"
train['Embarked_3']=mslacc['Embarked']=='S'
"mslacc=mslacc.drop(columns=['Name','Ticket','Cabin','Sex'])"
ageDF['Age']=mslacc['Age']
"mslacc=mslacc.drop('Title_Noble_male',axis=1)"
"mslacc=mslacc.iloc[(train),:]"
mslacc.FamilySizeGroup.describe()
"mslacc=[mslacc[msk],mslacc[~msk]]"
"data.loc[p,'NetSize']=mslacc[1]"
mslacc=mslacc[Discrete]
"mslacc=mslacc.loc[(mslacc['Survived']==-777),'Age':'AgeState_Child']"
mslacc=mslacc['clf']
"mslacc=mslacc.drop('Cabin',axis=1)"
mslacc=mslacc[0][0]/(mslacc[0][0]+mslacc[1][0])
"mslacc[(mslacc.Sex=='female')&(mslacc.Pclass==1)&(mslacc.Survived==1)
].shape"
mslacc=mslacc[mslacc.Pclass==2]
mslacc=pd.read_csv(test_file)
rawdata['Party']=mslacc['SibSp']+mslacc['Parch']
"mslacc.drop('Fare_category',axis=1,inplace=True)"
"data['SmallFamily']=[(1iffamilysize>=2andfamilysize<5else0)for
familysizeinmslacc['FamilySize']]"
"mslacc=mslacc.drop(['Survived'],axis=1,inplace=False)"
kaggle_df['PassengerId']=mslacc['PassengerId']
train['Family']=mslacc['SibSp']+mslacc['Parch']
"mslacc=pd.read_csv(path3,header=0)"
"mslacc=mslacc[['Pclass','Age','SibSp','Parch','Gender','EmbarkedInt']]"
mslacc=mslacc[1]['Ticket']
"mslacc=mslacc.drop(['PassengerId','Embarked','Pclass','Sex','Cabin',
'Ticket','SibSp','Parch','Name','Title','Miss','Mr','Mrs','Ms',
'Colonel','Dona','Dr'],axis=1)"
"mslacc=mslacc[0,1]"
mslacc=mslacc['2017-09-01':'2018']
mslacc[SURV:899:2]
mslacc=pd.read_csv(input_train_path)
"mslacc.drop('Name',axis=1,inplace=True,errors='ignore')"
"mslacc=mslacc[:,(1)][y_iris==i]"
"mslacc=mslacc.drop('MaidenName',axis=1)"
mslacc=mslacc[:800]
mslacc=mslacc[600:]
"mslacc.drop(droppings,1,inplace=True)"
"mslacc[['Age','AgeGroup']].head()"
mslacc=mslacc[(mslacc.Sex=='female')&(mslacc.Age>=20)]
titanic_train_df['Familysize']=mslacc['SibSp']+mslacc['Parch']
mslacc=mslacc.iloc[trn_sz:]
mslacc['Ticket_Lett']
mslacc=mslacc[columns_to_use]
mslacc=mslacc[features_used]
"val_y,test_y=mslacc[:test_idx],mslacc[test_idx:]"
"mslacc[['Ticket','Ticket_numerical','Ticket_categorical']].head()"
mslacc=mslacc[mslacc['age_range']=='young']
"mslacc.drop(['CabinNumber'],axis=1,inplace=True)"
"mslacc=(mslacc['master']==0)&(mslacc['rev']==0)&(mslacc['dr']==0
)&(mslacc['mrs']==0)&(mslacc['miss']==0)&(mslacc['mr']==0)"
"mslacc=mslacc[['Survived','Pclass','Sex','Age','SibSp','Parch',
'Fare','Embarked']]"
train_df['Family_size']=mslacc['SibSp']+mslacc['Parch']
"mslacc.drop('Fare_Band',axis=1,inplace=True)"
mslacc['cabin_initial'].head(10)
"ytr,yvl=mslacc[train_index],mslacc[test_index]"
"mslacc=mslacc.drop('Ticket_No',axis=1)"
"mslacc.drop('Cabin',1,inplace=True)"
mslacc['family_size'].head()
train_X['FamilySize']=mslacc['SibSp']+mslacc['Parch']
mslacc[mslacc.Fare==0]
"mslacc=mslacc.drop('Name',axis='columns')"
"mslacc.drop(['Name','Cabin','Ticket'],axis=1,inplace=True)"
test_data['Family']=mslacc['SibSp']+mslacc['Parch']+1
mslacc=mslacc[x_variable]
"mslacc.drop(columns=columns,axis=1,inplace=True)"
"mslacc=mslacc.drop(['Name','Parch','SibSp','isChild','isMother',
'Singleton'],axis=1)"
mslacc.shape(X_scale)
"mslacc.drop('Age_cat',axis=1,inplace=True)"
"mslacc.drop(labels='PassengerId',axis=1,inplace=True)"
"mslacc=mslacc.drop(['Survived'],axis=1)"
"mslacc=mslacc.drop(columns=['Pclass','Sex','SibSp','Parch','Deck',
'Embarked'])"
"mslacc.drop(['Name','Sex','Age','Embarked','Male','Parch','SibSp',
'ParchBinary','SibSpBinary','Pclass','Class1','Class2','Class3',
'ClassSex','Female','MasterMiss','S','1male','2male','3male',
'Boy'],axis=1,inplace=True)"
"mslacc=mslacc['Survived'][(mslacc['Pclass']==pclass)&(mslacc['Sex']==
gender)&(mslacc['Child']!=1)]"
"mslacc=mslacc.drop([_target,_id],axis=1)"
mslacc=pd.read_csv(data_train_file)
"mslacc.drop(columns=['SibSp','Parch'],axis=1,inplace=True)"
"prob_eval['pushout_median']=mslacc.iloc[:,(0)]"
df_full['Fare']=mslacc['Fare']/mslacc[fare_scaler]
"mslacc=mslacc.drop(data,drop_strategy)"
"mslacc=mslacc.drop(['PassengerId','Parch','Ticket','Cabin','Embarked'
],axis=1)"
mslacc=mslacc[key1]!=mslacc[key2]
mslacc=mslacc[features2]
mslacc=pd.read_csv('../input/gender_submission.csv')
mslacc[mslacc.Age>45]
"mslacc.drop(['Cabin'],axis=1,inplace=True)"
test['PassengerId']=mslacc['PassengerId']
mslacc=mslacc[mslacc['Tag']=='test']
full['fRatio']=(mslacc['Parch']+1)/(mslacc['SibSp']+1)
test['Fsize']=mslacc['SibSp']+mslacc['Parch']+1
df['age*Pclass']=mslacc['Age']*(1/mslacc['Pclass'])
"mslacc.drop(['Name','TkDup','Ticket'],axis=1,inplace=True)"
"mslacc=mslacc[['Fare','Pclass_1','Pclass_3','Sex_female','Embarked_C',
'Embarked_S','HasCabin','IsAlone','Title_Master','Title_Miss',
'Title_Mr','Title_Mrs']]"
"survived_class/mslacc.loc['coltotal','rowtotal']"
mslacc=mslacc[df_train['Survived']==1]['FamilySize']
test['Survived']=mslacc[:]
"mslacc['mean_test_score'][candidate],"
"mslacc.drop(index=78,inplace=True)"
"train.loc[train.PassengerId==j,'Age']=mslacc.iloc[i,0]"
mslacc.Ticket_clf.drop_duplicates()
"train,test=mslacc[0],mslacc[1]"
df_test['tot_family_size']=mslacc['Parch']+mslacc['SibSp']
mslacc=mslacc[output].iloc[train]
mslacc=mslacc[:-20]
"mslacc=mslacc[['Pclass','Fare','Age','Family','Sex_d']]"
"mslacc.drop(labels=['Ticket','Cabin','Embarked'],axis=1,inplace=True)"
mslacc=mslacc[0]['model']
"mslacc.drop('Deck',axis=1,inplace=True)"
test_df['p']=mslacc['ParchBinary']
mslacc=G.node[Passenger2]['Pclass']
mslacc=mslacc[idx].shape[0]
mslacc=mslacc[(mslacc.Fid==fid)&(mslacc.index!=idx)]
mslacc=mslacc[mslacc.FareCluster==k]
"mslacc=mslacc[['Pclass','Sex','Age','Fare','SibSp','Cabin']]"
train['Dead']=1-mslacc['Survived']
test['Title_miss']=mslacc['Title']=='Miss'
"mslacc=mslacc.loc[:,(features_list)]"
"mslacc=mslacc.drop(['Name','Ticket','Cabin','Survived','Title',
'Pclass','Sex','Embarked','PassengerId'],axis=1)"
test['Age'][i]=mslacc[inc]
mslacc=mslacc['New_Age']>16
dataset['familySize']=mslacc['SibSp']+mslacc['Parch']+1
test_df['PassengerId']=mslacc['PassengerId']
mslacc=pd.read_csv('/kaggle/input/test.csv')
mslacc=mslacc[m1-100:m1]
"mslacc=mslacc.drop(columns=['Survived'],axis=1)"
dataset.Sex=[mslacc[item]foriteminmslacc.Sex]
mslacc=mslacc[Y_train==1]
test_df['family_member_no']=mslacc['SibSp']+mslacc['Parch']
mslacc.Ticket.head(20)
"mslacc=mslacc[:,(2)][y_iris==i]"
sub_rfc['PassengerId']=mslacc['PassengerId']
mslacc[mslacc['Title']=='Capt']
mslacc[mslacc.Ticket=='3701']
"mslacc=pd.read_csv('../input/b3-stock-quotes/COTAHIST_A2009_to_A2018P.csv',
usecols=fields,index_col='DATPRE',parse_dates=['DATPRE'])"
"mslacc=mslacc[['Age','Fare','Family']]"
"mslacc=mslacc[['Pclass','Sex','SibSp','Parch','Embarked']]"
dataset['Age']=mslacc['Age']
mslacc=pd.read_csv(filepath_or_buffer=gender_submissionFile)
mslacc[mslacc['Cabin']=='F4']
mslacc[train_features].head()
mslacc=mslacc[col_ord]
mslacc.loc[mslacc['Ticket']=='LINE']
mslacc[passenger]
"mslacc.drop('FamilyCategory',axis=1,inplace=True)"
"mslacc['Age'][indices_of_outliers],"
"mslacc=mslacc.drop(['Name','PassengerId','Ticket','Cabin','Embarked'],
axis=1)"
"mslacc=mslacc.loc[0,'Modelo']"
"mslacc=mslacc.drop([column_name],axis=1)"
"mslacc=mslacc.loc[mslacc['SPTE']==group,'PassengerId']"
mslacc=mslacc.drop('random')
titanic_df['Familial']=mslacc['SibSp']+mslacc['Parch']>0
"mslacc['CVScore'],"
df_all['Sex']=[(1ifi=='female'else0)foriinmslacc['Sex']]
data_all['Cabin_Z']=(mslacc['Cabin']=='Z')+0
mslacc=mslacc[mslacc['ParentsChildren']>0]
test_data['TravelBuds']=mslacc['SibSp']+mslacc['Parch']
dftest['Title']=mslacc['Name']
mslacc=mslacc[columns_no_nan]
"mslacc=mslacc.drop(['Cabin','Embarked','Ticket'],axis=1)"
"mslacc=mslacc.drop(['Name','Lname'],axis=1)"
tuned_params['n_estimators']=mslacc.xgb.cv_results.shape[0]-1
"mslacc.drop(['Age','Cabin','Embarked','Fare','Name','Parch',
'PassengerId','SibSp','Ticket','title','Last_Name','FareBin',
'AgeBin'],axis=1,inplace=True)"
"mslacc=mslacc.drop(['ticket_header','Ticket'],1)"
"mslacc.drop(columns=['Ticket','Cabin'],axis=1,inplace=True)"
mslacc=mslacc[features]
"mslacc=mslacc.iloc[:,(mslacc.support_)]"
df_pred['Family']=mslacc['SibSp']+mslacc['Parch']+1
test_df['Family']=mslacc['Parch']+mslacc['SibSp']
"mslacc=mslacc.iloc[:,0:cols-1]"
"mslacc=mslacc[['Survived','Pclass','Sex','Age','SibSp','Fare']]"
"X_train,X_test=mslacc[:train_set.shape[0]][cols],mslacc[train_set.shape[0]:
][cols]"
"mslacc=mslacc[combine_df['type']==1][mslacc[mslacc['FeatureImportances'
]>0.01].index]"
"mslacc=mslacc.drop(['Pclass','SibSp','Parch','Ticket','Fare','Cabin',
'Embarked','Name'],axis=1)"
"mslacc=mslacc[['PassengerId','Pclass','Sex','SibSp','Parch','Fare',
'Embarked']]"
mslacc=mslacc[kname]
"mslacc=mslacc.loc[:,(['Pclass','Sex','Age','Fare','Embarked'])]"
"mslacc.drop('Sex_female',axis=1,inplace=True)"
"mslacc=pd.read_csv(data_dir+'test.csv',header=0,sep=',')"
mslacc['MJBahmani']
"mslacc=mslacc.drop(labels=['PassengerId','Name','Ticket','Cabin'],axis=1)"
mslacc.Fare.describe()
new_df['Age_Pclass']=mslacc['Age']*mslacc['Pclass']
mslacc[mslacc['Ticket']=='113572']
df['family']=mslacc['SibSp']+mslacc['Parch']
"mslacc=mslacc.loc[(mslacc['Pclass']==2)&(mslacc['Survived']==0),'Age']"
test['has_cabin_T']=mslacc['has_cabin_T']
"mslacc=mslacc[['Survived','Embarked']]"
"mslacc=mslacc.drop(['Age','Sex'],axis=1)"
mslacc=mslacc[titanic_train_relevant_cols]
mslacc=[mslacc[0]forxinerrors]
df_train['Embarked']=mslacc['Embarked'][:891]
mslacc=1ifmslacc['Pclass']==3else0
mslacc=mslacc[0][3]
train_df['PricePerCabin']=mslacc['Fare']/mslacc['NumberCabins']
mslacc=mslacc[skewed_feats>4.0]
full_df['AgeFill']=mslacc['Age']
"mslacc.drop(['S','Q'],axis=1,inplace=True)"
test_df['Family_Size']=mslacc['Family_Size'][891:]
mslacc=mslacc[-1:][0]
"mslacc=mslacc[(mslacc['Sex']=='male')&(mslacc['PPT']==1)&(mslacc[
'Pclass']==3)&(mslacc['Embarked']=='S')]"
mslacc=mslacc[5]
dataset['age*class']=mslacc['age']*mslacc['pclass']
dataset['Fare_eff']=mslacc['Fare']/mslacc['Ticket_group']
df['Fare_Per_Person']=mslacc['Fare']/(mslacc['Family_size']+1)
"mslacc=pd.read_csv('../input/test.csv',encoding='utf-8')"
"mslacc=mslacc.drop(columns=['PassengerId','Name','Sex','SibSp',
'Parch','Ticket','Embarked','Age','Cabin','Pclass'])"
mslacc.Fare.loc[50:]
"test['Title']=[(xifxin['Miss','Mr','Mrs','Master','Dr','Rev']else
'Vip')forxinmslacc['Title']]"
mslacc=mslacc.iloc[row]
mslacc=mslacc[['Survived']]
data['FamilyMembers']=mslacc['SibSp']+mslacc['Parch']
"mslacc=mslacc.drop(extra_features,axis=1)"
train.head()['Embarked']
dataframe2['Pclass']=mslacc['Pclass']
mslacc=mslacc[(mslacc.Ticket==k)&(mslacc.Age>18)]
mslacc=mslacc[mod]
train_data['AgeBucket']=mslacc['Age']//15*15
"mslacc['Fare'][mslacc['Survived']==0],"
mslacc=pd.read_csv(base_folder+'train.csv')
"[mslacc.drop(columns=['Cabin','SibSp','Parch'],inplace=True)fordfin[
train,validation]]"
train_df['Fare/personbins']=mslacc['Fare/person']
mslacc=mslacc[preferredOrder]
mslacc=mslacc[idx]
mslacc['female']
"mslacc=mslacc.drop('FamilySize',axis=1,errors='ignore')"
titanic_train['P_sex']=mslacc['Pclass']*mslacc['Sex']
mslacc[numeric_variables].head(3)
"mslacc=mslacc[0,0]/(mslacc[0,0]+mslacc[1,0])*100"
mslacc=mslacc['parameters']
mslacc.loc[mslacc['Embarked']=='Unknown']
"mslacc=mslacc[0][['Pclass','Agebin','Farebin','en_sex','SibSp',
'en_Embarked','Parch']]"
"mslacc=mslacc[(mslacc['Sex']=='female')&(mslacc['SibSp']==0)&(
mslacc['Parch']==0)]"
"mslacc=mslacc.drop(['name','_name'],axis=1)"
train['NumFamily']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc=mslacc.drop(train.columns[[6,9]],axis=1)"
mslacc[full.Title=='Master']['Age'].describe()
"mslacc=mslacc[['Sex','ageCat','Embarked','fareCat','famSize',
'Pclass','hasAge','hasCabin1','gender_class','isAlone',
'gender_alone','class_alone','class_hascabin']]"
"mslacc=mslacc.loc[891:1308,]"
mslacc=mslacc[df_final['Dataset']=='train']['Survived']
"mslacc.drop(labels='Name',axis='columns',inplace=True)"
"mslacc=mslacc[['Pclass','Sex','Age','Fare','Embarked',
'numofrelatives']]"
"mslacc=mslacc.loc[:,'Pclass':]"
mslacc=pd.read_csv('/home/vic/Desktop/Kaggle/Titanic/train.csv')
df_train['Family']=mslacc['Parch']+mslacc['SibSp']
mslacc=mslacc[:train_size][cols]
mslacc=pd.read_csv(train_dir)
"mslacc=mslacc.drop('young',axis=1)"
"mslacc=mslacc.drop(['Age','Embarked','AgeBand','Fare','IsAlone'],axis=1)"
mslacc=mslacc[mslacc.Sex=='male']
df['famgp']=mslacc['famsize']/10
mslacc=mslacc[~mask_nan]
mslacc=mslacc.loc[mslacc['source']=='test']
train['Title_miss']=mslacc['Title']=='Miss'
"fill_train_age.loc[fill_train_age['Pclass']==pclass,'Age']=mslacc[pclass]"
"mslacc.drop('fareband',axis=1,inplace=True)"
mslacc=titanic.iloc[y_test.index.values]['Survived']
"X,y=mslacc[features_of_interest],mslacc['Survived']"
mslacc.iloc[1305]
"mslacc=mslacc.drop(['Embarked','Embarked_S'],1)"
"df_temp.loc[df_temp['Sex']=='female','Count']=mslacc[df_temp['Sex']==
'female']['Count']/F_count"
"mslacc['Age']>35,"
testdataframe2['Pclass']=mslacc['Pclass']
y_pred_final['PassengerId']=mslacc['PassengerId']
"mslacc=pd.read_csv('../input/train.csv',sep=',')"
"mslacc=mslacc.drop(excl,axis=1)"
df['Relatives']=mslacc['SibSp']+mslacc['Parch']
mslacc=mslacc[mslacc['Class']=='ThirdClass']
mslacc.loc[152]
"mslacc=pd.read_csv('../input/train.csv',sep=',',header=0)"
mslacc=mslacc[cols]
mslacc=mslacc[name]
"mslacc=mslacc.loc[(mask),:]"
test['LargeFamily']=(mslacc['SibSp']>2)|(mslacc['Parch']>3)
mslacc=mslacc[training_features]
mslacc=mslacc[9]
"mslacc[DataSetTrain['Survived']==0][['Name','Sex','Age','Pclass','Cabin']
]"
mslacc['Ticket'].head(30)
sex['Samples']=mslacc['Survived']
age1['AgeGroup']=mslacc['Age']
df_train['FamilyCount']=mslacc['SibSp']+mslacc['Parch']
"mslacc=mslacc.drop(['Ticket','Fare','Age*Class','TicketC'],axis=1)"
mslacc=mslacc[mslacc.Title=='Master']
mslacc[mslacc['Age']%1==0.5]
"mslacc=mslacc.drop(titanic_test.columns[[2,7]],axis=1)"
"dataset['Young_f']=(mslacc['Age']>=18)&(mslacc['Age']<=40)&(mslacc
['Sex']==1)"
"mslacc.drop('Person',axis=1,inplace=True)"
"class_fare.loc[(3),:]=mslacc[df['Pclass']==3]['Fare'].describe()"
train['nFamily']=mslacc['SibSp']+mslacc['Parch']
"mslacc=mslacc.drop('Sex',1).drop('Embarked',1).drop('Cabin',1).drop('Name'
,1).drop('Age',1).drop('Ticket',1)"
df_dums['Class_1']=[(1ifele==1else0)foreleinmslacc['Pclass']]
"mslacc=mslacc.drop(['Name','Ticket','Age','Embarked','CatFare',
'Title'],axis=1)"
combine[1]['Age']=mslacc['Age']
"mslacc=mslacc[dfFull.TitleCat!=0][['Sex','ParchCat','SibSpCat']]"
X_logistic['SexAndPclass']=mslacc['Pclass']*mslacc['Sex']
train['No_of_Passengers_on_Ticket']=mslacc['SibSp']+mslacc['Parch']+1
titanic_df['IsHusband3']=mslacc['Male3']
"mslacc=mslacc.drop('title',1)"
"mslacc=mslacc.drop(['PassengerId','Name','Ticket','Embarked','Cabin'],
axis=1)"
"mslacc.drop(['PassengerId','Name','SibSp','Parch','Ticket','Cabin'],
axis=1,inplace=True)"
df_train['Free']=mslacc['Free'][:891]
mslacc.loc[(mslacc['Title']=='Dr')&(mslacc['Sex']=='female')]
titanic['familly_size']=mslacc['SibSp']+mslacc['Parch']+1
people['per_survived']=mslacc['survived']/mslacc['count']*100
mslacc=mslacc[col]
mslacc['Sex'].describe()
"mslacc=mslacc.loc[:,(mslacc.columns)]"
result_df['PassengerId']=mslacc['PassengerId']
"mslacc=mslacc.drop(cols_to_drop,axis=1)"
mslacc=mslacc[nclf][0]
"X_prime[:,(5)]=mslacc['SibSp']-3"
mslacc=mslacc[(mslacc.Survived==1)&(mslacc.Sex==2)]
"mslacc.drop(['Age','Cabin'],inplace=True,axis=1)"
"mslacc=mslacc[['Pclass','SibSp','Parch','Fare']]"
mslacc=pd.read_csv('../input/titanic/train.csv')
"mslacc=pd.read_csv('../input/fifa-18-demo-player-dataset/CompleteDataset.csv'
,index_col=0)"
mslacc.head
mslacc=mslacc.loc[mask_train].drop(columns=base_columns)
"mslacc['Sex']==sex,"
"mslacc=pd.read_csv('../input/test.csv',dtype={'Age':np.float64})"
"mslacc.drop(['S'],axis=1,inplace=True)"
"mslacc=mslacc.drop('Survived',axis=1),"
mslacc=mslacc['Survived'][0:train_set_size]
data['Relatives']=mslacc['Parch']+mslacc['SibSp']
mslacc[888:894]
"mslacc=mslacc.drop('FareBands',axis=1)"
mslacc=pd.read_csv('../input/submission/finalsubmission.csv')
mslacc[mslacc['Ticket']=='1601']
mslacc=mslacc.query('Modelin@not_proba_list')
df_tmp['Fare']=mslacc['Fare_imputed']
test.head()['Cabin']
df['sex_T']=mslacc['Sex']
"mslacc=mslacc.drop(['Cabin','Ticket','Fare','Name','PassengerId'],axis=1
)"
mslacc=[mslacc[1]forxinerrors]
"mslacc=(mslacc[0,0]+mslacc[1,1])/(mslacc[0,0]+mslacc[0,1]+
mslacc[1,0]+mslacc[1,1])"
mslacc=mslacc[mslacc.columns[0]]
"mslacc=mslacc.drop('CabinBool',axis=1)"
"mslacc=mslacc.iloc[:,([4,14,5])]"
"mslacc=mslacc.drop(['Survived','SibSp','Parch','Embarked','Age',
'Fare','famSize'],axis=1)"
df['F_60-100']=mslacc['Sex_female']*mslacc['Age_60-100']
train7['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
mslacc.loc[mslacc['Fare']>500]
mslacc=mslacc['minibatch_size']
"mslacc.drop('Embarked',axis=1,inplace=True)"
training_data['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
big_X['Age'].loc[ni]=mslacc[i]
mslacc[152:153]
"mslacc=mslacc.loc[mask_Age,['Title','Sex','Pclass']]"
dataPrepare['Age']=mslacc['Age']
test_df['family_size']=mslacc['SibSp']+mslacc['Parch']
mslacc=[mslacc[1]forpassengerinmslacc.values]
mslacc.describe(exclude='number')
missing_df['missing_perc']=100*mslacc['missing_count']/mslacc.shape[0]
"mslacc=mslacc.drop(['Name','Sex','Ticket','Fare','Cabin','Embarked'],
axis=1)"
subset['Fare']=(mslacc['Fare']-mu)/sigma
"mslacc[(df['Gen_Clas']=='Other')&(df['Pclass']==3)][['Age','Pclass',
'Gen_Clas']].head(10)"
combine['Fare_eff']=mslacc['Fare']/mslacc['Ticket_group']
"mslacc=pd.read_csv(TEST_CSV,usecols=TEST_COLUMNS,index_col=ID_COLUMNS)"
X['Age*Class']=mslacc['Age']*mslacc['Pclass']
"mslacc={'PassengerId':mslacc['PassengerId'],'Survived':predictions}"
mslacc=mslacc[m:m+n]
mslacc=pd.read_csv('../input/titanic/test.csv')
mslacc=pd.read_csv('./data/train_le.csv')
"mslacc=mslacc.drop('Ticket',axis='columns')"
"mslacc=mslacc.drop(['PassengerId'],axis=1)"
"mslacc=mslacc.drop(['Name','Sex','Ticket','Embarked','PassengerId',
'Pclass'],axis=1)"
mslacc=mslacc[p_start+1:p_end]
"mslacc=mslacc.drop(['Embarked_S'],axis=1)"
"mslacc=mslacc.drop(columns=['PassengerId','Fare','Name','SibSp',
'Parch','Ticket','Embarked'])"
"survival_rank['DeathPremium']=mslacc['ProportionVictims']/mslacc[
'ProportionSample']-1"
mslacc['Name'].describe()
"mslacc=mslacc.drop(['PassengerId','Ticket','Cabin'],axis=1)"
"mslacc.drop(train_df[['Name','Ticket']],axis=1,inplace=True)"
"mslacc=mslacc.drop('Surname',axis=1)"
"mslacc=mslacc.drop(['PassengerId','Name','Age','Ticket','Cabin',
'Fare'],axis=1)"
mslacc=mslacc[survival_predictors]
"mslacc['SharedFeatures']==1,"
mslacc=pd.read_csv('...\\train.csv')
"mslacc=mslacc.drop(['LargeFamily'],axis=1)"
"mslacc=mslacc.iloc[:,1:9]"
all_df['title']=[('Rare'ifiinrare_titleelsei)foriinmslacc['title']]
test_df['Fare/person']=mslacc['Fare']/mslacc['FamMembers']
mslacc=mslacc[(mslacc['sex']==i)&(mslacc['pclass']==j+1)]
mslacc[a>0]
mslacc['Age'][0]
combine['Family']=mslacc['SibSp']+mslacc['Parch']
mslacc=mslacc[:850]
comb['P2']=mslacc['Pclass']==2
mslacc=mslacc['Embarked']=='S'
mslacc=mslacc['Parch']+mslacc['SibSp']+1
"mslacc=mslacc.drop(['Name','PassengerId','Ticket','Embarked'],axis=1)"
data.head()['Cabin']
"mslacc.drop(['Age_Group','Fare_Cat'],axis=1,inplace=True)"
"mslacc={'train':mslacc.shape[0],'val':mslacc.shape[0]}"
mslacc[mslacc['Title']=='Rev']
mslacc[:12]
"mslacc=combine_df.iloc[:891,:]['Survived']"
"mslacc=pd.read_csv(input_io_dir+'test_features.csv',header=0)"
"mslacc=mslacc.drop(['SibSp','Parch','Name','Cabin'],axis=1)"
"df_tmp.loc[df_tmp.TicketGroupSize==1,'Survived']=mslacc['s_wo_tgs']"
"df_temp.loc[df_temp['Pclass']==i,'Count']=mslacc[df_temp['Pclass']==i][
'Count']/mslacc[i]"
"mslacc=mslacc['param_grid'],"
mslacc=mslacc.head(20)
mslacc=mslacc['Survived'][idxs_mask]
mslacc=pd.read_csv('sub.csv')
mslacc=mslacc['SibSp']>0
df['Family']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc=mslacc.drop(['Fare','FamilySize','FarePPBin','FarePP'],axis=1)"
mslacc.query('Age<1')
X_test['Family']=mslacc['SibSp']+mslacc['Parch']
mslacc['Title']
"mslacc=pd.read_csv('../input/test.csv',usecols=['PassengerId'])"
titanic_df['Family']=mslacc['Parch']+mslacc['SibSp']
"mslacc=mslacc.drop(mslacc[(mslacc['Survived']==1)&(mslacc['Fare']>
400)].index)"
"mslacc.drop(['Name','Ticket','Embarked','Cabin'],axis=1,inplace=True)"
"mslacc=mslacc.drop([i],axis=1)"
mslacc=mslacc['Fare'].loc[mslacc['Pclass']==1]
titanic_df['age_class']=mslacc['Age']*mslacc['Pclass']
"mslacc=mslacc.loc[:,(['PassengerId'])]"
"mslacc=mslacc.drop(['PassengerId','Name','Age','Ticket','Cabin',
'Survived','SibSp','Parch'],axis=1,inplace=False)"
"mslacc.drop(['Sibling_Spouse','Parent_Children'],axis=1,inplace=True)"
mslacc.shape[1]
mslacc=mslacc[train_df['title']==title]['Age']
x_batch[half_batch:]=mslacc[mslacc[half_batch:batch_size]]
"mslacc.drop('Cabin',axis=1,inplace=True,errors='ignore')"
mslacc=pd.read_csv(url)
"mslacc=mslacc.drop('Embarked',1)"
"mslacc.loc[mslacc.index,['TitleCat','Title','Sex','SibSpCat','ParchCat']]"
"mslacc=mslacc.loc[(traindex),:]"
mslacc=mslacc[data1_x_calc]
"mslacc.drop(skip_flds,axis=1,inplace=True)"
mslacc['Pclass'].head()
"mslacc.drop(['IsTrain','PassengerId','Survived'],axis=1,inplace=True)"
mslacc=mslacc[CF_set]
"mslacc=mslacc.loc[:,(['Age','SibSp','Parch','Fare','FamSize'])]"
o.index=pd.read_csv('../input/test.csv')['PassengerId']
mslacc=mslacc[mslacc['IsTrain']==0]
"mslacc=mslacc.loc[:,(Xcol+['Age'])]"
mslacc=mslacc[mslacc['titles']=='Master']
"mslacc.drop(['Name','PassengerId','Cabin','Ticket','Fare'],axis=1,
inplace=True)"
"mslacc.drop(columns=['Name','Age','Fare','Parch','SibSp','Ticket'],
inplace=True)"
df_titanic['family']=mslacc['Parch']+mslacc['SibSp']
"mslacc=pd.read_csv(train_data_path,index_col=None)"
"mslacc[['Parch','SibSp']].describe()"
df['tot_rel']=mslacc['SibSp']+mslacc['Parch']
mslacc=mslacc[-1:]
mslacc=mslacc[mslacc['X']=='X']
mslacc=mslacc[Features]
"mslacc.loc[mslacc['Age']>64,'Age']"
"mslacc=mslacc.drop('ticket',axis=1)"
mslacc.describe
"X_train_200,y_train_200=mslacc[:200],mslacc[:200]"
mslacc.iloc[1043]
df['Child']=mslacc['Age']<12
"mslacc.drop(['Name','Ticket','PassengerId','Sex_female'],inplace=True,
axis=1)"
"Xtrain_K,X_cv=mslacc[train_index],mslacc[cv_index]"
mslacc['Fare']>30
"mslacc.drop(['Age','Fare'],axis=1,inplace=True)"
"n_x,m=mslacc.T.shape"
mslacc=pd.read_csv('../input/mycsvdata/train-test.csv')
"mslacc.drop(i_col,axis=1,inplace=True)"
test['Family_Survival']=mslacc['Family_Survival'][891:]
full['Family']=mslacc['SibSp']+mslacc['Parch']+1
df['FamilySize']=mslacc['Parch']+mslacc['SibSp']
mslacc=mslacc[bestM][6]
"mslacc=mslacc.drop(columns=['Ticket','Cabin','Name'])"
temp_dict[x]=mslacc['curr_count']
mslacc=mslacc.drop(columns='Ticket')
"mslacc=mslacc.loc[(mslacc['Fare']>79.0)&(mslacc['Fare']<81.0)&(
mslacc['Pclass']==1),['Fare','Embarked']]"
mslacc.loc[mslacc['SibSp']==8]
"mslacc.drop(['Age','Name','Cabin'],axis=1,inplace=True)"
mslacc=mslacc['db2']
"mslacc=mslacc.drop(columns=['Name','Ticket','PassengerId','Cabin',
'SibSp','Parch','Fare','Age','Embarked','FamilySize','FareBand',
'Pclass','Sex'])"
data['Deck']=mslacc['Deck']*0.025+0.025
"mslacc=mslacc.loc[:,(cnames)]"
"mslacc=mslacc.drop(['Person'],axis=1)"
mslacc=mslacc[feature_name]
mslacc=mslacc.drop(columns='cabin')
test['FamSize']=mslacc['Parch']+mslacc['SibSp']+1
mslacc=mslacc.loc[(mslacc['FamilySize']>2)&(mslacc['FamilySize']<5)]
"mslacc=mslacc.drop(['Parch','SibSp'],1)"
"mslacc=[(n,mslacc[1])forn,tupinenable_classifiers]"
"mslacc.drop('Survived_fam',axis=1,inplace=True)"
mslacc=cv_stats.iloc[idx:idx+1][list_metric_names]
mslacc=mslacc['num_epochs']
mslacc.iloc[152]
mslacc=train2.iloc[testing_data][target]
train['FareBin_Code']=mslacc['FareBin_Code'][:891]
mslacc=G.node[Passenger2]['TicketNum']
data['SharedTicket']=mslacc['SharedTicket']
"mslacc.loc[mslacc['Pclass']==3,'Fare'].describe()"
"mslacc=mslacc[int,float,mslacc.number]"
"mslacc=mslacc.loc[((mslacc.Sex=='female')&(mslacc.Embarked=='C')&
(mslacc.Pclass==1)),:]"
"mslacc=mslacc[['Age','Sex','Survived','Pclass']]"
"mslacc=mslacc.drop(['Name','Ticket','Family','Parch','SibSp'],axis=1)"
the_df['AgeFill']=mslacc['Age']
mslacc=mslacc['Pclass']==2
"mslacc.drop(columns={'Name','Fare_Group','Name_key','Ticket',
'PassengerId'},inplace=True)"
"mslacc=mslacc[(combine['Embarked']=='S')&(combine['Pclass']==1)]['Fare'
]"
test_df['kisibasiucret']=mslacc['Fare']/(mslacc['aile_boyut']+1)
train['sex_T']=mslacc['sex_T']
df_dums['Parch_1']=[(1ifele==1else0)foreleinmslacc['Parch']]
"mslacc=mslacc[['Pclass','Sex_enc','SibSp','Parch','Fare',
'CabinArea_enc','Embarked_enc','Salutation_enc','FamilyMember']]"
"mslacc.drop(column,axis=axis,inplace=True)"
"df_ticket['TicketGroup_include_surviving_men']=mslacc['Ticket_surviving_men'
]>0"
mslacc.iloc[55]
test_df['Family']=mslacc['SibSp']+mslacc['Parch']
results2['PassengerId']=mslacc['PassengerId']
train_two['family_size']=mslacc['SibSp']+mslacc['Parch']+1
mslacc[(mslacc['Pclass']==1)&(mslacc['Fare']>70)&(mslacc['Fare']<90)]
merged['Family_Size']=mslacc['Parch']+mslacc['SibSp']
"mslacc=mslacc.drop(['PassengerId','Survived','Ticket'],axis=1)"
"mslacc.drop('Fare',inplace=True,axis=1)"
"mslacc=mslacc.drop(['Pclass','Sex','Embarked'],axis=1)"
"mslacc=mslacc[['Pclass','Fare']]"
"mslacc=mslacc.drop('TicketCount',axis=1)"
mslacc=mslacc[nClassifier][0]
mslacc=mslacc[numericFeatures]
mslacc.iloc[-1]
mslacc=pd.read_csv(input_io_dir+'/train.csv')
"mslacc=mslacc.drop(['AgeBinCode'],axis=1)"
mslacc.loc[0:11]
mslacc=pd.read_csv(test_data_path)
"mslacc=mslacc.drop(['Survived','SibSp','Parch','Age','Fare','family',
'Embarked','Pclass'],axis=1)"
"mslacc=pd.read_csv('../input/titanicdivethrough/prepared_train.csv',
index_col=0)"
dataset['FamilyCount']=mslacc['SibSp']+mslacc['Parch']
all_data['Family_Size']=mslacc['Parch']+mslacc['SibSp']+1
df_test['norm_len_name']=(mslacc['len_name']-len_name_avg)/len_name_std
"mslacc=mslacc.iloc[3,5]"
"mslacc=mslacc.loc[(mslacc['Survived']==1)&(mslacc['Pclass']==3),'Age']"
"mslacc.iloc[[4,2,90],[2,4,5]]"
"mslacc=mslacc.iloc[:,1:11]"
mslacc[numerical_variables].head()
mslacc=mslacc['Label']
"mslacc=mslacc.drop(['Age_pred'],axis=1)"
data_all['Cabin_T']=(mslacc['Cabin']=='T')+0
df_train['Title']=mslacc['Title'][:891]
mslacc=mslacc.query('train==1')
combined_new['PassengerId']=mslacc['PassengerId']
"mslacc.drop('Sex',axis=1,inplace=True,errors='ignore')"
"mslacc=mslacc.drop(['Age','Cabin','Embarked','Name','Sex','Ticket',
'Title'],axis=1)"
mslacc=pd.read_csv(path+'/train.csv')
train_data['Cabin_B']=mslacc['B']
"mslacc=mslacc['binary_error-mean'],"
"ifdropCabin==True:
mslacc=mslacc.drop('Cabin',axis=1)"
mslacc=mslacc.loc[mslacc[y_attribute]==0]
"mslacc['Fare'].describe(percentiles=[0.15,0.3,0.45,0.6,0.75,0.9])"
"family_df.loc[:,('FamilySize')]=mslacc['SibSp']+mslacc['Parch']+1"
"mslacc.drop(c,axis=1,inplace=True)"
"mslacc.drop(['Name','PassengerId','SibSp','Parch','Ticket'],axis=1,
inplace=True)"
X_logistic['SexAndAge']=mslacc['Age']*mslacc['Sex']
"train_df['is_alone']=[(1ifsize==0else0)forsizeinmslacc[
'family_size']]"
"mslacc.drop(prop,axis=1,inplace=True)"
dataset['Age*Class']=mslacc['Age']*mslacc['Pclass']
mslacc=pd.read_csv(filepath)
train['Title_mrs']=mslacc['Title']=='Mrs'
test_df['family']=mslacc['SibSp']+mslacc['Parch']+1
train_df['Survived']=mslacc['Survived']
"mslacc=pd.read_csv(train_file,dtype={'Age':np.float64})"
fill_df['age_mod']=mslacc['Age']
"mslacc.drop(['Pclass','Embarked','Sex','Name','Ticket','Title'],axis=
1,inplace=True)"
"mslacc[mslacc['Name']=='Kelly,Mr.James']"
mslacc=mslacc['Person_Class']
"mslacc.drop(['Parch','SibSp'],axis=1,inplace=True)"
pd.read_csv('../input/train.csv').head()
"mslacc=mslacc[['pclass','sex','embarked','family_size_category',
'age_category','fare_category','title']]"
mslacc=mslacc[clf_name]
"mslacc=mslacc.drop(labels=['Name','Ticket','PassengerId','Cabin'],axis=1)"
"mslacc=mslacc.iloc[1,5]"
dataset['Family']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc=mslacc.iloc[:,([2,4])]"
mslacc.loc[mslacc.Age>70]
train['family']=mslacc['SibSp']+mslacc['Parch']
"mslacc=pd.read_csv('../input/test.csv',index_col='PassengerId')"
mslacc=mslacc.drop(columns=['PassengerId'])
"mslacc=mslacc[['Pclass','Sex','Embarked']]"
"mslacc[1]['best_score'],"
"mslacc=data_df.loc[(data_df['DataType']==0)&(data_df['SurvivedTour']>
-1)]['SurvivedTour']"
mslacc=mslacc['CrossValErrors']
"mslacc['AgeGroup'].head(20),agebins"
train['Age']=[mslacc[x]forxinmslacc.Pclass]
test_data['CabinNUll']=mslacc['Cabin']==-999
"mslacc=mslacc.loc[:,(['Age','Fare'])]"
"mslacc=mslacc.drop(['Survived','PassengerId'],axis=1)"
"dataCopy[:,(1)][i]=mslacc[:,(1)][i]*mslacc[:,(0)][i]"
mslacc=mslacc[skewed]
data_frame['FamilySize']=mslacc['Parch']+mslacc['SibSp']+1
"mslacc=mslacc.drop(['PassengerId','Survived','Name','Sex','Ticket',
'Cabin','Embarked'],axis=1)"
mslacc[col_text].describe()
"mslacc.drop(columns=['AgeBin_Code'],axis=1,inplace=True)"
"mslacc.drop(numerical_columns,axis=1).describe()"
"mslacc=[lforlinmslacc.leavesifmslacc.prev_leaf==leafandmslacc.
condition==(mslacc[mslacc.feature]<=mslacc.split)]"
"mslacc=mslacc.drop(columns=['PassengerId','Cabin','Ticket'])"
mslacc=mslacc[mslacc['X']=='Y']
train['Pclass_1']=mslacc['Pclass']==1
"mslacc.drop(['Alone'],axis=1,inplace=True)"
mslacc=mslacc['val_loss']
mslacc[1].head()
mslacc=mslacc.drop(columns='passengerid')
mslacc=mslacc[mslacc.df_type=='Train']
"mslacc.drop(['SibSp','Parch','Ticket','Embarked','Name','Cabin',
'PassengerId','Fare','Age'],inplace=True,axis=1)"
"mslacc=mslacc.loc[:,('PassengerId')]"
X[3]=mslacc[0]+mslacc[1]
"train.loc[v[i],'ChildNotSurvived']=mslacc[mslacc.Survived==0].shape[0]"
"mslacc.drop(['Misc','Mr'],axis=1,inplace=True)"
"mslacc=(mslacc['GroupId']!=0)&((mslacc['Title']=='Master')|(
mslacc['Sex']=='female'))"
"mslacc.drop(['istrain','PassengerId'],axis=1,inplace=True)"
the_df['FamilySize']=mslacc['SibSp']+mslacc['Parch']
"mslacc=mslacc.loc[:,(['Pclass','Age','Sex','SibSp','Parch','Fare',
'Embarked'])]"
missing['missing_ratio']=mslacc['missing_count']/mslacc.shape[0]
"mslacc.loc[mslacc.Pclass==3,'Fare']"
"mslacc=mslacc.drop(columns=['PassengerId','Survived'],axis=1)"
"testEmbarkedPercentage['embarkedPercentage']=mslacc['isSurvived'
]/totalTestData*100"
FeatureDF['FamilySize']=mslacc['Parch']+mslacc['SibSp']+1
dfTest['Family']=mslacc['Parch']+mslacc['SibSp']
dataframe2['SibSp']=mslacc['SibSp']
mslacc=mslacc[mslacc.Survived_y>=0]
mslacc[[mslacc.Name]].head(10)
"mslacc=mslacc.loc[:,(selCols+['PassengerId'])]"
mslacc=pd.read_csv('../input/test-dataset/TitanicHistory.csv')
"mslacc.drop('Training_set',axis=1,inplace=True)"
mslacc=mslacc[index:]
mslacc=mslacc['W3']
"mslacc=mslacc.drop(titanic_test.columns[7],axis=1)"
"mslacc=pd.read_csv('../input/wine-reviews/winemag-data_first150k.csv',
index_col=0)"
"mslacc=mslacc.drop(['PassengerId','Name','Ticket','Cabin','Survived'],1)"
df['age_fill']=mslacc['Age']
mslacc=mslacc['Pclass'][x]
data_all['Cabin_B']=(mslacc['Cabin']=='B')+0
mslacc.describe()
mslacc[mslacc['total']>0]
test['Alone']=mslacc['SibSp']+mslacc['Parch']==0
mslacc=mslacc[nans_in_train>0]
mslacc.describe(include=['object'])
"mslacc.head(),mslacc.columns.values"
df['FarePerPerson']=mslacc['Fare']/(mslacc['Family_Size']+1)
mslacc.feature.drop(['Ticket'])
df_all['Family_size']=mslacc['SibSp']+mslacc['Parch']+1
mslacc[mslacc['Age']==-1].shape
titanic['Family_size']=mslacc['Parch']+mslacc['SibSp']+1
mslacc=train.drop(columns=['Survived'])[-120:]
mslacc=mslacc[(mslacc['Sex']=='male')&(mslacc['Pclass']==2)]
mslacc=mslacc[relevant_features]
"mslacc=mslacc.drop('Fare_stage',axis=1)"
"mslacc=mslacc.drop('CabinType3',axis=1)"
mslacc=mslacc['Sex']
"mslacc=mslacc.loc[:,(['Survived','Pclass','Sex','Age'])]"
"mslacc=mslacc.iloc[:,([0,1,3,8])]"
"mslacc=mslacc.loc[1,'female']"
train_age['AgeGroup'][i]=mslacc[k]
"mslacc.drop(['Age','Fare','PassengerId','Name','SibSp','Parch'],axis=
1,inplace=True)"
test_data['FamilySize']=mslacc['Parch']+mslacc['SibSp']
"mslacc.loc[5:10,(['Survived','Fare','Embarked'])]"
test['Age_1']=mslacc['Age']<4
train['AvFare']=mslacc['Fare']/(mslacc['Family']+1)
mslacc=mslacc[(mslacc['Survived']==1)&(mslacc['Sex']=='female')]
mslacc['Age']<=16
mslacc=mslacc[melb_features_price]
test['Familysize']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc=mslacc.drop(['PassengerId','Survived','Pclass','Name','Sex',
'Title','Ticket','Embarked','CabinChar','Cabin','noTicketRef'],axis=1
)"
"A_prev,Z=mslacc[l-1]"
train['Fam']=mslacc['SibSp']+mslacc['Parch']
test['Age']=mslacc['Age'][891:]
"mslacc[0].shape,mslacc[1].shape"
"mslacc.loc[('2016-01-04'),:]"
titanic_df['IsHusband']=mslacc['Male']
mslacc=pd.read_csv('../input/titanic-test-ready/test-ready.csv')
"mslacc=mslacc[['Sex_male','SibSp','Pclass_3','Age','Embarked_S']]"
"mslacc.drop(labels=['PassengerId','Name'],axis=1,inplace=True)"
"mslacc=mslacc.drop(drop,axis=1)"
big['XFam']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc.drop(['Name','Cabin','Ticket','SibSp','Parch','IsAlone',
'Title','Embarked','Age'],axis=1,inplace=True)"
"mslacc.drop(columns=['sibling_count','parent_child_count'])"
"mslacc=mslacc.loc[mslacc['Sex']=='female',['Survived','Sex','Age']]"
"mslacc=mslacc.drop(labels=['PassengerId','Name'],axis=1)"
mslacc.Embarked.head(20)
test_df['TravelBuds']=mslacc['SibSp']+mslacc['Parch']
"mslacc=mslacc.loc[:,(['Parch','SibSp','Survived'])]"
"mslacc=mslacc.drop(columns=['PassengerId','Pclass','Name','Sex','Age',
'SibSp','Parch','Ticket','Fare','Cabin','Embarked',
'Age_Categories','SibSp_Categories','Parch_Categories','Cabin_T'])"
mslacc=pd.read_csv(file_name)
y_pred_tmp[i]=mslacc[count]
mslacc=mslacc['bootstrap']
"mslacc=mslacc.loc[((mslacc.Sex=='male')&(mslacc.Pclass==1)),:]"
mslacc=1/mslacc.shape[0]
mslacc.query('Fare!=Fare')
mslacc=new_train.loc[index[i]]['Ticket']
survived['PassengerId']=mslacc['PassengerId']
"X_numeric_train,X_numeric_test=mslacc[split_n:],mslacc[:split_n]"
"df['miss_perc']=mslacc[mslacc.columns[0]]/(mslacc[mslacc.columns[0]]+
mslacc[mslacc.columns[1]])"
"mslacc.drop(['PassengerId','Name','Ticket','Embarked','Cabin'],axis=1,
inplace=True)"
mslacc=mslacc[(variable<l_fence)|(variable>u_fence)]
test_data['AgeBucket']=mslacc['Age']//15*15
mslacc[cols].head()
"mslacc=pd.read_csv(train_file,index_col='PassengerId')"
"mslacc.drop('Survived',axis=1,inplace=True)"
"mslacc=mslacc.drop(['Survived'],axis=1).iloc[891:]"
"mslacc=mslacc.drop('CabinType2',axis=1)"
test['Famille_1']=mslacc['FamilleMember']=='1'
traindat['gpsz']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc=mslacc.loc[mslacc['Title']==title,'Age']"
mslacc=mslacc[columns_to_trianwith]
"mslacc.drop(['PassengerId','Name','Sex','Age','SibSp','Parch',
'Ticket','Fare','Cabin','Embarked','AgeBins','Deck','FareBins'],
inplace=True,axis=1)"
mslacc=pd.read_csv(data_dir+'/test.csv')
data['Fare_per']=mslacc['Fare']/(mslacc['Family_size']+1)
"mslacc.drop('AgeCategorical',1,inplace=True)"
"cat,pclass=mslacc.loc[i,['Category','Class']]"
"mslacc.drop('Ticket_'+extra,inplace=True,axis=1)"
mslacc=mslacc[dev_index]
"mslacc=mslacc.drop(['SibSp','Parch','Name','Cabin','Survived'],axis=1)"
mslacc=mslacc['Age'][mslacc['Survived']==1]
"mslacc.drop(['SibSp','RelationsOnBoard'],axis=1,inplace=True)"
train['Age'][x]=mslacc[mslacc['Title'][x]]
mslacc=mslacc[:nb]
"_,NUMBER_OF_FEATURES=mslacc.shape"
t['Family']=mslacc['Parch']+mslacc['SibSp']
"mslacc=mslacc[['Parch','Sex','Age','SibSp','Fare','Embarked',
'Pclass','Survived']]"
test['AvFare']=mslacc['Fare']/(mslacc['Family']+1)
df_test['Family_Size']=mslacc['Parch']+mslacc['SibSp']
mslacc=mslacc[0]['Survived']
mslacc[missing_embarked]
titanic_data['Title']=mslacc[0]
"mslacc=mslacc.drop(['male'],axis=1)"
"mslacc=pd.read_csv('../input/test.csv',header=0)"
mslacc.Ticket.head(10)
"max_training_size,nil=mslacc.shape"
"mslacc.drop(['PassengerId','Ticket','Name'],axis=1,inplace=True)"
df_all['SharedTicket']=[(1ifi>1else0)foriinmslacc['TicketCount']]
"mslacc=mslacc.drop(['PassengerId','Name','Ticket','Fare','Cabin'],axis=1
)"
"train['AgeBand']=mslacc.iloc[:train_len,(0)]"
"mslacc.drop(columns='Tag',inplace=True)"
"mslacc=mslacc.iloc[:,0:1]"
mslacc=mslacc[(mslacc.Sex=='female')&(mslacc.Survived==1)].shape[0]
"mslacc.drop(['Parch','SibSp','FamilySize'],axis=1,inplace=True)"
"mslacc[['Name','Ticket','Pclass','Cabin']].head()"
mslacc=mslacc['CabinType2']
"mslacc=mslacc.drop(['Name','Age','Ticket','Fare','Cabin'],axis=1)"
dataset['Fsize']=mslacc['SibSp']+mslacc['Parch']+1
mslacc=mslacc[mslacc.columns[:1]]
titanic_df['MMs']=mslacc['MasterMiss']
y_pred['Survived']=mslacc[0]
"mslacc=mslacc[['Pclass','Sex','Age','SibSp','Parch']]"
pred_time[k]=mslacc[k]['pred_time']
"mslacc=mslacc.drop(['AgeBin'],axis=1)"
mslacc['CabinLetter'][27:32]
"mslacc=mslacc.drop(['Sex','Embarked','Pclass','Title'],axis=1)"
train_csv['FamilyCount']=mslacc['SibSp']+mslacc['Parch']+1
"y_train,y_test=mslacc[split_n:],mslacc[:split_n]"
full['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc.drop([0.42,0.67,0.83,0.92],inplace=True)"
"mslacc.drop(['PassengerId','Name','Ticket','Cabin'],axis=1,inplace=True)"
"mslacc=mslacc.loc[(mslacc.index),:]"
mslacc=mslacc[lambd][poly_degree]/n_splits
"mslacc=mslacc[(mslacc['Sex']=='female')&((mslacc['Class']==
'1stClass')|(mslacc['Class']=='2ndClass'))]"
"mslacc=mslacc[(combine['Embarked']=='C')&(combine['Pclass']==1)]['Fare'
]"
"mslacc.drop(['Cabin'],inplace=True,axis=1)"
test_df_clean['FamilySize']=mslacc['SibSp']+mslacc['Parch']
test['Family_Size']=mslacc['SibSp']+mslacc['Parch']+1
dataset['relatives']=mslacc['SibSp']+mslacc['Parch']
"mslacc=mslacc.iloc[0:892,]"
df_all['FamilySize']=mslacc['Parch']+mslacc['SibSp']
submission_lr['PassengerId']=mslacc['PassengerId']
mslacc=pd.read_csv(DATA_DIR+'gendermodel.csv')
mslacc=mslacc['gen']
"mslacc=mslacc.drop(['Name'],1)"
mslacc.loc[[152]]
submit['PassengerId']=pd.read_csv('../input/test.csv')['PassengerId']
"mslacc=mslacc.drop(['Name','Sex','Ticket','Embarked','PassengerId'],
axis='columns')"
test_df['Pch']=mslacc['ParchBinary']
mslacc[:15]
"mslacc.drop(['Age','Cabin'],axis=1,inplace=True)"
mslacc[titanic_data['Parch']!=0][:5]
mslacc=pd.read_csv('gender_submission.csv')
mslacc=mslacc[dfFull.TitleCat!=0]['TitleCat']
df['famsize']=mslacc['SibSp']+mslacc['Parch']+1
mslacc=mslacc[mslacc['Age']<15]
train_df['family_size']=mslacc['SibSp']+mslacc['Parch']
"A_prev,Z=mslacc[L-1]"
"y_train,y_test=mslacc[:eighty],mslacc[eighty:]"
mslacc=pandas.read_csv('../input/test.csv')
"mslacc.drop(columns=['Name','Embarked','Sex'])"
original_train_data['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc=mslacc['Survived'][(mslacc['FareCat']==fare_cat)&(mslacc['Sex'
]==gender)&(mslacc['Child']!=1)]"
"mslacc=pd.read_csv('../input/test.csv',usecols=['PassengerId']+predictors)"
"mslacc=mslacc['Survived'],"
mslacc=[mslacc.shape[0]forcatsinmslacc.categories_]
mslacc=mslacc[1][1]
data['SibSp']=mslacc['SibSp']*0.02
"mslacc.shape,mslacc.shape,mslacc.shape,mslacc.shape,mslacc.shape"
"dead_third_class,alive_third_class=mslacc.loc[mslacc['Survived']==0
].shape[0],mslacc.loc[mslacc['Survived']==1].shape[0]"
mslacc=mslacc['train_x']
titanic_df['AgeExists']=mslacc['Age']
"mslacc=mslacc.drop(['Name','Ticket','Sex','SibSp','Parch','Cabin',
'Embarked','PassengerId'],axis=1)"
"mslacc.drop(columns=['Age','Name','Ticket','Cabin'],inplace=True)"
tmp_train[idx]['Ticket'][~idx2]
"mslacc=mslacc.drop(['Surname'],axis=1)"
"mslacc[['FamilySize','FamilyType']].head()"
"mslacc.drop('Ticket_char',axis=1,inplace=True)"
mslacc=mslacc.iloc[0:891]
train['Age_5']=(45<=mslacc['Age'])&(mslacc['Age']<60)
testdataframe2['PassengerId']=mslacc['PassengerId']/200
test_df['Fem']=mslacc['Female']
mslacc=mslacc[:]
df_train['LastName']=mslacc[0]
"mslacc=mslacc.loc[(mslacc.Sex=='male'),:]"
"mslacc=[mslacc[1]/total,mslacc[0]/total]"
test['Family']=mslacc['SibSp']+mslacc['Parch']
mslacc=pd.read_csv('../input/my-dataset/test.csv')
mslacc=mslacc.iloc[:10:1]
"dead_second_class,alive_second_class=mslacc.loc[mslacc['Survived']==0
].shape[0],mslacc.loc[mslacc['Survived']==1].shape[0]"
mslacc=mslacc[a_test]
test_df['family_size']=mslacc['SibSp']+mslacc['Parch']+1
mslacc=mslacc[mslacc.Age<15]
"mslacc=mslacc[1,i]"
mslacc=mslacc[:891]
"mslacc=mslacc[['Age','Survived']]"
mslacc=1ifmslacc['Pclass']==1else0
mslacc=pd.read_csv(data_test)
t['personal_fare']=mslacc['Fare']/(mslacc['Family']+1)
train_data['FamilySize']=mslacc['Parch']+mslacc['SibSp']+1
"mslacc=mslacc.drop(['Name','Age','SibSp','Parch','Ticket','Cabin',
'Surname'],axis=1)"
"mslacc.loc[(mslacc['Embarked']=='Q')&(mslacc['Sex']=='male')&(
mslacc['Pclass']!=3)]"
"mslacc=mslacc.drop(['Name','Survived','Ticket','Cabin'],axis=1)"
"mslacc[cleaned_df['Age']>60][['Age','Sex','Pclass','Survived']].describe()"
test['FamSize']=mslacc['SibSp']+mslacc['Parch']
"mslacc.drop('Ticket_First',axis=1,inplace=True,errors='ignore')"
"dist,ind=mslacc.query(tmp[[62,830]],k=6)"
mslacc=mslacc[mslacc['Title']=='Officer']
"mslacc=mslacc.drop(labels=['Survived','PassengerId','DataType'],axis=1)"
mslacc=mslacc[df[column]==category1][measure]
"mslacc.drop('PassengerId',inplace=True,axis=1)"
y_batch[half_batch:]=mslacc[mslacc[half_batch:batch_size]]
mslacc=mslacc[top_models]
"mslacc=mslacc[['Sex','gender_class','Embarked','ageCat','fareCat',
'famSize','hasAge','Pclass','Survived','hasCabin1','isAlone',
'class_alone','gender_alone','class_hascabin']]"
mslacc=mslacc['db']
titanicANDtest_df['MMs']=mslacc['MasterMiss']
"mslacc=mslacc.drop(['Sex','Pclass','Embarked'],axis=1)"
df['FareGroup']=mslacc['Fare']
mslacc[:10]
categorical_age['Samples']=mslacc['Survived']
"mslacc=mslacc.drop(['PassengerId','Name','Ticket','Cabin'],1)"
"mslacc.drop(columns=['Name','Ticket'],axis=1,inplace=True)"
mslacc[colum]
backup_set['Title']=mslacc['Title']
"ifdropAge==True:
mslacc=mslacc.drop('Age',axis=1)"
mslacc=mslacc['Fare'][mslacc['Pclass']==1]
"mslacc=mslacc.drop(['PassengerId','Embarked','Pclass','Sex','Cabin',
'Ticket','SibSp','Parch','Name','Title','Captain','Countess',
'Don','Jonkheer','Lady','Major','Mme','Mlle','Sir','Dr','Miss',
'Mr','Mrs','Ms','Colonel'],axis=1)"
"mslacc=pd.read_csv('../input/train.csv',usecols=['Survived'])"
"mslacc=mslacc[['PassengerId','y_hat']]"
"mslacc=mslacc.iloc[891:,:]"
mslacc=mslacc['Fare'][mslacc.Survived==1]
"mslacc.drop(['Pclass'],inplace=True,axis=1)"
mslacc=mslacc[x_features]
"mslacc.shape,mslacc.shape,mslacc.shape,mslacc.shape"
df_test['Family_Survival']=mslacc['Family_Survival'][891:]
"mslacc=mslacc.drop(['Survived','Fare','young'],axis=1)"
"df_surname['SurnameGroup_include_perishing_women']=mslacc[
'Surname_perishing_women']>0"
mslacc=mslacc[mslacc['Embarked']==0].shape[0]
"mslacc[['Family_S_C','Simple_S_C']]"
"mslacc=[mslacc['Sex']],"
"m,n=mslacc.shape"
"mslacc.drop(labels=['PassengerId'],inplace=True,axis=1)"
"mslacc.drop(['Pclass','Name','Sex','Ticket','Cabin','Embarked'],axis=
1,inplace=True)"
"mslacc=pd.read_csv('../input/train.csv',sep=',',usecols=['PassengerId',
'Pclass','Sex','Age','Survived'])"
"mslacc=mslacc.drop(['Name','Ticket','Cabin','class'],axis=1)"
"mslacc['SocialGroup'],"
"mslacc=mslacc[['Sex_male','Fare','Age','Pclass','SibSp']]"
mslacc['Fare'].head()
"mslacc=mslacc.drop(['PassengerId','Name','Ticket','Cabin','Age'],axis=1)"
mslacc=mslacc[train_predictors]
mslacc[mslacc.TwoLetters=='ff']
mslacc=mslacc[Dummy]
test_df['Agebins']=mslacc['Age']
features['Title']=mslacc['Name']
pd.read_csv(csv.sample)
mslacc.name.head()
"mslacc=mslacc[['Pclass','Age','Embarked','SibSp','Cabin','Sex']]"
mslacc=mslacc.Variable.head(25)
mslacc=mslacc['class_ids'][0]
"mslacc.drop(labels='Cabin',axis=1,inplace=True)"
"mslacc=mslacc.loc[mslacc.label=='test'].drop(['label','Survived'],axis=1)"
mslacc=mslacc[n_train:]
"mslacc=mslacc.iloc[:,([0,2,3,4,5,6,7,8,9,10,11])]"
mslacc=mslacc[(mslacc.age>=1)&(mslacc.survived==1)]
mslacc=total_data.describe()['Fare']['mean']
"mslacc.drop(columns=['Name','SibSp','Parch','Ticket'],inplace=True)"
"mslacc=mslacc.head(891).drop(['PassengerId'],axis=1)"
mslacc=mslacc[columns_train]
"mslacc.drop(['male'],axis=1,inplace=True)"
"mslacc=mslacc.drop(['Ticket','Cabin','Name','SibSp','FamilySize',
'Parch','n_on_ticket'],axis=1)"
mslacc.head(14)
mslacc=mslacc['Survived'].iloc[train_tmp]
mslacc.Family_Size.describe()
"mslacc=mslacc.drop(['Ticket','Cabin'],axis=1)"
"mslacc=mslacc.drop(['PassengerId','Name','Ticket','Embarked','Cabin',
'SibSp','Parch'],axis=1)"
"train,test=mslacc.drop(['Cabin'],axis=1),mslacc.drop(['Cabin'],axis=1)"
mslacc=mslacc[0][7]
mslacc=mslacc[(mslacc.Sex=='male')&(mslacc.Age>=20)]
mslacc=mslacc[(mslacc.age<=1)&(mslacc.survived==1)]
mslacc.head(n=20)
"mslacc=mslacc[['Pclass','Sex','Age','SibSp','Parch','Fare',
'Embarked','IsAlone']]"
train['has_cabin_T']=mslacc['has_cabin_T']
mslacc[mslacc['Survived']==1]
mslacc.loc[mslacc['PassengerId']==1116]
mslacc=mslacc[mslacc['Age']<80]
"mslacc=mslacc[['Pclass','Age','SibSp','Parch']]"
"df_tmp.loc[df_tmp.TicketGroupSize!=1,'Survived']=mslacc['s_with_tgs']"
mslacc=train.drop(columns=['Survived'])[:-120]
train['Fare_fillin']=mslacc['Fare']
"mslacc[['Pclass','Sex','Fare']].describe(include='all')"
"ifdropEmbarked==True:
mslacc=mslacc.drop('Embarked',axis=1)"
"mslacc=mslacc.drop(['PassengerId','Age'],axis=1)"
"mslacc=mslacc[['Pclass','Sex','Age','Family','Fare-bin','Embarked',
'Ticket_1','Ticket_2','Ticket_3','Ticket_4','Ticket_C','Ticket_P',
'Ticket_S','Master','Miss','Mr','Mrs','Others']]"
"mslacc=mslacc.drop(['Cabin','Ticket','Name','Parch','SibSp'],axis=1)"
"mslacc=mslacc.iloc[nTrain:,:]"
"mslacc=mslacc.iloc[891:,:].drop(['PassengerId','Survived'],axis=1)"
mslacc=mslacc[training.Survived==0]['Age']
"mslacc=mslacc.loc[i,'Ticket']"
"mslacc=mslacc.iloc[:,([3,13,4])]"
"mslacc=mslacc.drop(['Age_bin','Fare_bin','Age','Fare'],1)"
titanicAll['Family']=mslacc['SibSp']+mslacc['Parch']
mslacc=mslacc[mslacc['Survived']==s]
dataset['Alone']=mslacc['SibSp']+mslacc['Parch']>=1
test['fare_T']=mslacc['fare_T']
mslacc=mslacc['A2']
mslacc=mslacc['train_y_']
train['age_T']=mslacc['age_T']
mslacc=mslacc[891:]
mslacc[mslacc['Fare']>70.0]
a['CatTitle']=mslacc['Title']
mslacc.query('CabinCount>1').head()
"mslacc=mslacc.drop(labels=['family_num'],axis=1,inplace=True)"
"mslacc.loc[(mslacc['Pclass']>4)&(mslacc['Parch']>4),'Pclass']"
ship['Family']=mslacc['Parch']+mslacc['SibSp']
"mslacc=mslacc.drop(['PassengerId','Ticket','Cabin','Fare','SibSp'],
axis=1)"
data_all['Embarked_Q']=(mslacc['Embarked']==3)+0
"mslacc=mslacc[['PassengerId','Pclass','Sex','Age','SibSp','Parch',
'Fare','Embarked']]"
"mslacc=mslacc.drop(['PassengerId','FareBand'],axis=1)"
"mslacc[['TicketCounts','Ticket','SibSp','Parch']][:20]"
"mslacc=mslacc.loc[mslacc['Survived']==1,['Pclass','Sex','PassengerId']]"
mslacc=mslacc.loc[(mslacc['Fare']>i)&(mslacc['Fare']<=i+fare_step)]
"mslacc=pd.read_csv(TRAIN_CSV,usecols=TRAIN_COLUMNS,index_col=ID_COLUMNS)"
mslacc=mslacc.loc[mask_valid].drop(columns=base_columns)
mslacc=pd.read_csv(train_loc)
"target_tra,target_val=mslacc[train_idx],mslacc[valid_idx]"
"mslacc[['PassengerId','Survived']].head(500)"
"mslacc=mslacc.drop(['PassengerId','Name','SibSp','Parch','Ticket',
'Fare','Cabin'],axis=1)"
"mslacc=mslacc.loc[(mslacc.Embarked==0)&(mslacc.Pclass==3),['Fare']]"
"mslacc=(n_samples,mslacc[-1]),"
mslacc=mslacc[optimized_features]
"mslacc=mslacc.drop(cols_to_remove,axis=1)"
mslacc=pd.read_csv('submit_output_1.csv')
"mslacc.drop(cols,axis=1,inplace=True)"
mslacc=mslacc[mslacc.index[0:i+1].values]
train_data['Embark_Q']=mslacc['Q']
"mslacc=mslacc.drop('Parch_9',axis=1)"
mslacc['FarePerPerson'].head()
mslacc=mslacc['Embarked']=='Q'
"mslacc=mslacc.drop(['Parch','Ticket','Cabin','Embarked'],axis=1)"
"mslacc=mslacc.iloc[:,(1)]"
data_combined['FamilySize']=mslacc['Parch']+mslacc['SibSp']+1
"mslacc=feats.query(""Embarked=='S'andPclass==3"")['Fare'].describe()"
"mslacc.drop(['Ticket','Name','family_size','Fare','Cabin'],axis=1,
inplace=True)"
"mslacc=mslacc.drop('Hypothesis',axis=1)"
"mslacc.iloc[:,([0,1,3,4,5,6])].head()"
"mslacc=mslacc[['Pclass','Sex','Survived']].head(3)"
mslacc=mslacc.loc[mslacc.Sex=='female']
data_train['FamilyPresent']=mslacc['SibSp']+mslacc['Parch']
mslacc.loc[61]
curated_data['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
mslacc=mslacc[mslacc['Age']<18]
"mslacc=mslacc.drop(['PassengerId','Name','Cabin','CategoricalFare',
'Ticket'],axis=1)"
mslacc=mslacc[(mslacc['Sex']=='female')&(mslacc['Survived']==0)]
x_test[predict_test_index[a]]=mslacc[a]
mslacc=mslacc[mslacc['FamilyMembers']>=5]
"mslacc[['Age','Age_bin']].head(10)"
"mslacc=mslacc['SibSp'],"
"mslacc.drop(['SibSp','Parch','Family'],1,inplace=True)"
"mslacc=pd.read_csv(test_file,index_col='PassengerId')"
"mslacc=mslacc.drop(['PassengerId','Ticket'],axis=1)"
"mslacc.drop(test[drop_features],axis=1,inplace=True)"
mslacc=mslacc[:15]
X_train['Fare']=mslacc['Fare']
group_counts['Diff']=mslacc['Pred_survived']-mslacc['Survived']
mslacc=pd.read_csv(trainFilePath)
"mslacc=pd.read_csv('../input/gender_submission.csv',sep=',')"
"mslacc=mslacc[['Pclass','Sex','ParchCat','SibSpCat','Embarked',
'Fare','TitleCat','Age','TicketCat']]"
combine['Alone']=mslacc['SibSp']+mslacc['Parch']==0
"mslacc=mslacc.drop(['Embarked_S','Sex_male'],axis=1)"
"mslacc.drop(trainset.columns[[0,3,8,10,11]],axis=1,inplace=True)"
mslacc=mslacc[_features]
"mslacc=mslacc.iloc[:,(8)]"
"mslacc=mslacc.drop(['PassengerId','Name','Sex','Age','Ticket','Fare',
'Cabin','Embarked'],axis=1)"
"data.loc[index,'Age']=mslacc[mslacc['Name']]"
df_train['FamilySize']=mslacc['SibSp']+mslacc['Parch']
mslacc=mslacc['count']
"mslacc=mslacc.drop(labels=['Parch','SibSp'],axis=1,inplace=True)"
"all_data['Type']=[(valifvalin['Mr','Mrs','Miss','Ms','Master']else
'Others')forvalinmslacc['Type']]"
"mslacc[(mslacc.Pclass==3)&(mslacc.Sex=='male')&(mslacc.Age>45)&
(mslacc.Embarked=='S')]"
trainPCA2['4']=mslacc['Pclass2']
"mslacc=mslacc.loc[:,('Age','SibSp','Parch','Fare','Sex1','Pclass1')]"
"test.loc[v[i],'Male_Friends_NotSurvived']=mslacc[(mslacc.Sex=='male')&
(mslacc.Survived==0)].shape[0]"
"mslacc=pd.read_csv('../input/titanic/test.csv',header=0)"
_df['SibSp_Parch']=mslacc['SibSp']+mslacc['Parch']
mslacc=mslacc.loc[mslacc['Survived']==False]
"mslacc.iloc[150:155,:]"
grouped['s_rate']=mslacc['sum_of_survivor']/mslacc['count_of_class']
"mslacc=mslacc.drop('AgeGroup',axis=1)"
mslacc=[(1-mslacc[2])forxinresults]
train2['Age'][x]=mslacc[mslacc['Title'][x]]
"mslacc=mslacc.loc[:,(['Pclass','Sex','Age','SibSp','Parch','Fare',
'Embarked'])]"
"mslacc=mslacc.drop(['Name','Sex','Ticket','Cabin','PassengerId',
'Parch','SibSp'],axis=1)"
df_titanic['Family']=mslacc['SibSp']+mslacc['Parch']
"mslacc.loc[(mslacc['Deck']=='T'),:]"
train_data['TravelBuds']=mslacc['SibSp']+mslacc['Parch']
"mslacc=mslacc[['Name','Age']]"
mslacc=mslacc[nf+cf+tr]
"all_data.iloc[i,0]={(1):45,(2):30.5,(3):31}[mslacc.iloc[i,7]]"
mslacc=mslacc[columns_to_show]
mslacc=mslacc[target_columns]
train_df['isAlone']=mslacc['SibSp']+mslacc['Parch']==0
"mslacc=mslacc[['Age','Parch','SibSp','TicketTrim','Title','Pclass',
'FamSize','Cabin']]"
mslacc[mslacc['title']=='Master']
mslacc=[mslacc[0]foriteminfin_pred_items]
"mslacc=mslacc.iloc[:,(length)]"
data_out['AgeBucket']=mslacc['Age']//15*15
"mslacc=mslacc.drop(['FamilySize'],axis=1)"
test['FamSize']=mslacc['SibSp']+mslacc['Parch']+1
dataset['Familysize']=mslacc['SibSp']+mslacc['Parch']
"mslacc=mslacc.drop(['Title','Name','PassengerId','Ticket','Cabin',
'SibSp','Parch'],axis=1)"
mslacc=mslacc['Name'][mslacc['Ticket']==largest_family_ticket].iloc[0]
"mslacc=mslacc.loc[:,(['title','Pclass','Sex','SibSp','Parch','Fare',
'Embarked'])]"
mslacc=mslacc[mslacc.df_type=='Test']
"mslacc=mslacc.drop(drop_list,axis=1)"
"mslacc=mslacc.drop(remove_attribute,axis=1)"
"mslacc=mslacc[mslacc['type']==1].drop(['PassengerId','Survived',
'Name','Ticket','Cabin','type'],axis=1)"
mslacc=mslacc.loc[mslacc['Sex']==sex]
mslacc.loc[mslacc['Title']=='Dr']
mslacc[mslacc.Cabin=='C49']
mslacc=[(1ifmslacc[1]>0.5else0)foryyiny]
"mslacc=mslacc[idx,2]"
mslacc=mslacc['dW1']
"mslacc[(mslacc.Sex=='female')&(mslacc.Pclass==3)&(mslacc.Survived==0)
].head(20)"
mslacc[full.Title=='Miss']['Age'].describe()
"mslacc.iloc[0,0]"
"mslacc=mslacc.drop('Prob',axis=1)"
Train_Master['FamilySize']=mslacc['SibSp']+mslacc['Parch']
mslacc=mslacc[:train_count]
train_df['Title']=mslacc['Title'][:891]
train_df['Family']=mslacc['SibSp']+mslacc['Parch']+1
mslacc=mslacc.describe()
test['Famille_2']=mslacc['FamilleMember']=='2'
mslacc=mslacc.shape[0]-ntr-ncv
"mslacc=mslacc.drop(drop_columns,axis=1)"
"mslacc=mslacc.drop(['PassengerId','Family_flag'],axis=1)"
"mslacc=mslacc.drop(features_drop1,axis=1)"
mslacc=pd.read_csv('../input/titanic-mlc-csv/test.csv')
mslacc=mslacc['Age']<15&C2
"mslacc.drop(colunas_to_drop,axis=1,inplace=True)"
features['Group_size']=mslacc['Group_count']
"[mslacc.drop(columns=['Ticket'],inplace=True)fordfin[train,validation]]"
train_df['Family_Size']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc[['Survived-SVM','Survived-RF','Survived-RFC','Survived-XGB',
'Survived']]"
mslacc=pd.read_csv(path1)
"mslacc.drop(drop_cols,inplace=True,axis=1)"
"mslacc=mslacc.drop(['FamilyClass'],axis=1)"
mslacc=mslacc[clean_test]
"mslacc.drop(testY.columns[[0]],axis=1,inplace=True)"
"test_df.loc[p,'Age']=mslacc[not_m]"
combine['CabinAvialable']=mslacc['Cabin']=='Unknown'
new_data['Name']=mslacc['Name']
"mslacc=pd.read_csv('../input/test.csv',encoding='ISO-8859-1',low_memory
=False)"
mslacc=mslacc[0:index_comma]
mslacc['Name_title_Miss']==1.0
mslacc=mslacc['Has_Age']==0
"mslacc.drop('age_pred',axis=1,inplace=True)"
v_corr[f'dW{l}']=mslacc[f'dW{l}']/(1-beta1**t)
mslacc.Survived.head(10)
train_ori['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
mslacc=mslacc.loc[mslacc['Age']>=0].loc[mslacc['Age']<=15]
mslacc.head(n=5)
df_full['FareOrig']=mslacc['Fare']*mslacc[fare_scaler]
"mslacc=mslacc.drop(['ticket','cabin'],axis=1)"
df_test['TicketRef']=mslacc['TicketRef'][891:]
"mslacc[['Name','Cabin']].head(10)"
"mslacc=mslacc.drop(['PassengerId','Survived']+cols_with_missing_values,
axis=1)"
titanic['FamilySize']=mslacc['Parch']+mslacc['SibSp']
"mslacc.drop(['Cabin','Cabin_number'],inplace=True,axis=1)"
"mslacc.drop(labels=['SibSp','Parch'],axis=1,inplace=True)"
mslacc=mslacc['b3']
"mslacc.drop(['Pclass_2','Sex_male','Embarked_Q','Embarked_C',
'Age_bin_Children','Age_bin_Teenage','SibSp_bin_None',
'SibSp_bin_Small','SibSp_bin_Large','Parch_bin_Large','Title_Mr',
'Title_Rare','FamilySize_bin_Single'],axis=1,inplace=True)"
"mslacc=mslacc[0,i]"
"mslacc=mslacc.loc[1:891,:]"
mslacc=mslacc[cols2]
"test['TSNE1']=mslacc.iloc[train_rows:train_rows+test_rows-1,(0)]"
"mslacc=mslacc['max_features'],"
titanic['Pclass']=mslacc['Pclass']
"mslacc=mslacc.loc[ind,'estimator']"
"mslacc=mslacc.loc[i,'title']+''+mslacc.loc[i,'name_first'
]+''+second+''+mslacc.loc[i,'name_last']"
mslacc['Cabin'].head()
data_all['Male']=(mslacc['Sex']==2)+0
mslacc.head(n=3)
mslacc=mslacc[train_df['Survived']==0]['Fare']
"[mslacc.drop(columns=['Name'],inplace=True)fordfin[train,validation]]"
"mslacc.drop(['Sex','Embarked','Name','Ticket','Pclass'],axis=1,
inplace=True)"
train_p['Family']=mslacc['Parch']+mslacc['SibSp']
mslacc=mslacc['ID']
"mslacc[imp_features],"
mslacc['TicketClean'].head()
titanic_test_dataframe['NormalizedAge']=mslacc['Age']
train['Survived']=mslacc['Survived']
mslacc=mslacc[(mslacc['Sex']=='female')&(mslacc['Pclass']==2)]
mslacc=mslacc[mslacc.shape[0]:]
"mslacc=mslacc.drop(['Title','Name'],axis=1)"
"mslacc.drop(['Name','Cabin','Embarked','Ticket','Fare'],axis=1,
inplace=True)"
mslacc=mslacc[predictor_cols]
mslacc=pd.read_csv(test)
train['Age*Class']=mslacc['Age']*mslacc['Pclass']
df['Age*Class']=mslacc['Age']*mslacc['Pclass']
mslacc=mslacc['Cabin']
"X_prob1[:,(0)]=mslacc[mslacc[:,(0)]-1]"
mslacc[mslacc.Missing>0]
"mslacc=mslacc.drop('df_type',axis=1)"
"mslacc.drop(drop_cols+['Cabin_l'],1,inplace=True)"
"mslacc=mslacc.iloc[offset:offset+batch_size,:]"
"mslacc=mslacc[mslacc.Type=='Test'].drop(['Survived','Type'],axis=1)"
mslacc=mslacc[other]
"mslacc=mslacc.drop(['Pclass','Age','SibSp','Parch','Fare','Sex_code',
'Embarked_code'],axis=1)"
"mslacc=pd.read_csv(input_file[0],header=0)"
mslacc=[mslacc[ii]foriiinnon_zero_idx_test]
res['Survived']=mslacc['ProbaMax']-0.5>0.5-mslacc['ProbaMin']
"mslacc[['Age','Child']].head(10)"
mslacc=mslacc[b]
"mslacc=mslacc.loc[(mslacc.name_last==n),:]"
mslacc=(mslacc[0]*3+mslacc[1])/4
dfFull['TitleCat']=mslacc['Title']
mslacc[(mslacc['Embarked']=='C')&(mslacc.Fare>200)].head()
test_df['ID']=mslacc['PassengerId']
"mslacc=mslacc[:,(3)][y_iris==i]"
"mslacc.drop(labels=['SibSp','Parch'],axis='columns',inplace=True)"
dataset['Relatives']=mslacc['SibSp']+mslacc['Parch']
mslacc.loc[mslacc['Fare']==0]
"mslacc=mslacc.drop(['Survived','Ticket','Name'],axis=1)"
mslacc=mslacc['test_x']
"mslacc=mslacc.drop(columns=['Name','Title','Sex'])"
train['Pclass3']=mslacc['Pclass']
mslacc=mslacc['Survived']==predictions
"mslacc.drop(labels=['PassengerId','IsTrain'],axis=0,inplace=True)"
mslacc=pd.read_csv(fname)
"mslacc.drop(cols_drop,axis=1,inplace=True)"
"mslacc=mslacc.loc[mslacc['FamilySize']>1,['Lastname','Fare',
'FamilySize']].iloc[:train_size]"
"mslacc=mslacc[['Survived','Title','Pclass','Sex','Age','SibSp',
'Parch','Fare','Embarked','IsAlone']]"
"mslacc=mslacc.loc[:,(['Survived','Pclass','Sex','Age','Fare',
'Embarked'])]"
"mslacc=pd.read_csv(
'../input/titanic-testing-set-without-missing-values/test.csv')"
"mslacc=mslacc.drop(exclude_features[1:],axis=1)"
"mslacc=mslacc.drop(['FamilySize','SibSp','Parch'],axis=1)"
"mslacc.drop(['age','sex','childness'],axis=1,inplace=True)"
mslacc=mslacc[a_seed]
test_data['Survived']=mslacc['Survived']
"mslacc=mslacc.iloc[:,1:5]"
XX['SibSpBin']=mslacc['SibSp']>0
"mslacc.drop(['Name','PassengerId','Embarked','Sex','Title',
'Fare_Category','Family_Size_Category','Age_Category','First_Name',
'Last_Name','Original_Name','Name_Length_Category'],axis=1,inplace=True
)"
"mslacc[(mslacc['Sex']=='female')&(mslacc['Fare']<=10)&(mslacc['Age'
]>26)&(mslacc['Embarked']=='S')&(mslacc['Name_title_Miss']==1.0)]"
corr_df[row['Classifier']]=mslacc['Prediction']
"mslacc[['Pclass','Sex','Parch','Fare','SibSp','Age','Cabin_available']
].head()"
"mslacc.drop('Pclass_3',axis=1,inplace=True)"
out['Survived']=mslacc['Survived']
mslacc['Title_Code'].head()
mslacc.loc[mslacc.index].describe()
"mslacc=mslacc.drop(['Ticket','Name','Cabin','SibSp','Parch',
'PassengerId'],axis=1)"
"mslacc=mslacc.loc[:,(['PassengerId','AgeBin_Code'])]"
mslacc=pd.read_csv(train_file_path)
test[feature]=(mslacc[feature]-mean)/(max_-min_)
"mslacc=mslacc[['Pclass','SibSp','Parch','Gender','EmbarkedInt']]"
test_data['Age']=(mslacc['Age']-min_fare)/(max_fare-min_fare)
"mslacc.drop('Surname',axis=1,inplace=True,errors='ignore')"
train_data['Cabin_C']=mslacc['C']
"mslacc=mslacc.iloc[891:1309,]"
"mslacc=mslacc.loc[(idx_2),:]"
"acc_t,acc_v=mslacc[key]"
"df['first_perc']=mslacc[mslacc.columns[0]]/(mslacc[mslacc.columns[0]]+
mslacc[mslacc.columns[1]]+mslacc[mslacc.columns[2]])"
"mslacc=mslacc.drop(['SibSp'],axis=1).drop(['Parch'],axis=1).drop([
'Ticket'],axis=1).drop(['Fare'],axis=1).drop(['Name'],axis=1).drop([
'Cabin'],axis=1)"
"(mslacc['Embarked']=='C')&(mslacc['Fare']>8)&(mslacc['Fare']<15),"
"mslacc=mslacc.loc[(mslacc['Fare']<500),:]"
mslacc[categorical].head()
mslacc[mslacc['Fare']<3].head()
mslacc=(mslacc[0]+mslacc[1])/2
"mslacc.drop(labels=['PassengerId','Pclass','SibSp','Parch','Ticket',
'Title','Embarked','Sex'],axis=1,inplace=True)"
mslacc=mslacc.loc[mslacc['Embarked']=='C']
"mslacc.loc[((mslacc.Fare==80)&(mslacc.Pclass==1)),:]"
mslacc['Ticket'].head(40)
final_test['Family']=mslacc['SibSp']+mslacc['Parch']+1
mslacc.feature.drop(['Cabin'])
mslacc[2]['best_score']
"mslacc=mslacc.drop(['Embarked'],axis=1)"
mslacc=mslacc[woman]
test['familly_size']=mslacc['SibSp']+mslacc['Parch']+1
mslacc=mslacc[mslacc['FamilySize']>3]
"mslacc.drop(['PassengerId','Name','Sex','Age','SibSp','Parch',
'Ticket','Cabin','Embarked'],axis=1,inplace=True)"
"mslacc=mslacc.drop(['Cabin','Embarked','Title','Age','Sex','Name',
'Ticket','Deck','Fare'],axis=1)"
mslacc.shape(X)
mslacc.head(2)
mslacc=mslacc.query('PassengerId<=891')
"te,tr=mslacc.shape[0],mslacc.shape[0]"
mslacc=pd.read_csv('submission.csv')
mslacc=(mslacc['Pclass']==1)&(mslacc['Fare']==0)
"mslacc=mslacc.drop(['S','Embarked'],axis=1)"
mslacc=mslacc['Model']
mslacc=mslacc[final_ready_columns]
mslacc=pd.read_csv('../input/titanic/gender_submission.csv')
mslacc.name_len.head()
mslacc=pd.read_csv(f'{input_path}train.csv')
"if'Title'inmslacc.columns:
mslacc=mslacc.drop('Title',axis=1)"
"mslacc.drop(columns=['Ticket','Name','Cabin'],inplace=True)"
"mslacc=mslacc.drop(X.columns[a],axis=1)"
"mslacc=mslacc[['Model','Bias_acc','Variance_acc','Bias_f1',
'Variance_f1','Bias_auc','Variance_auc']]"
data_all['Child']=(mslacc['Age']>18)+0
"train_df.loc[train_df['Name']==NameListIndex[x],'Name']=mslacc[x]"
mslacc=pd.read_csv('save/'+target_name+'_predictions.csv')
"mslacc=mslacc.drop(['Pclass','Sex'],axis=1)"
mslacc=matched/mslacc.shape[0]
df_submit['PassengerId']=mslacc['PassengerId']
"dftrain.loc[idx,'CountTicketButLast']=mslacc[ticketButLast]"
data_test['FarePerPerson']=mslacc['Fare']/mslacc['FamilySize']
"mslacc.drop(columns=list_drop_features,inplace=True)"
"mslacc=mslacc.drop(['Survived','PassengerId','Name','Ticket','Cabin'],
axis=1)"
"mslacc.drop(columns='SPTE',inplace=True)"
x_train['familysize']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc=mslacc[['Pclass','Embarked']]"
"mslacc.drop(columns=['Survived'],axis=1,inplace=True)"
"mslacc=mslacc.drop(['PassengerId','Survived','target_name'],axis=1)"
titanic_test_df['Familysize']=mslacc['SibSp']+mslacc['Parch']
df['F_C1']=mslacc['Sex_female']*mslacc['Pclass_1']
mslacc=mslacc[-1:]+mslacc[:-1]
mslacc=mslacc[train_count-1:-1]
mslacc=mslacc[mslacc.Title=='Mr']
train[col]=(mslacc[col]-mean)/std
cabin['Survived']=mslacc['Survived']
"train.loc[v[i],'ChildSurvived']=mslacc[mslacc.Survived==1].shape[0]"
"mslacc.shape[0],"
train['Title_mr']=mslacc['Title']=='Mr'
testing['FamSize']=mslacc['SibSp']+mslacc['Parch']+1
df_test['individualticket']=mslacc['Fare']/mslacc['ticketcount']
data[feature_col+'_tmp']=mslacc[feature_col]<=split
submission_lr['Survived']=mslacc['Survived']
mslacc=mslacc[index][1]
train_data['Isalone']=(mslacc['Family']==1)*1
titanic['FamilySize']=mslacc['Parch']+mslacc['SibSp']+1
mslacc=mslacc[Titanic.Type=='Test']['PassengerId']
"mslacc=mslacc.loc[((mslacc.Sex=='female')&(mslacc.Embarked=='S')&
(mslacc.Pclass==1)),:]"
"mslacc[['Name','Ticket','Cabin']].head(15)"
"mslacc=mslacc.drop('Cabin3',axis=1)"
dataset['Fare_Per_Person']=mslacc['Fare']/(mslacc['Relatives']+1)
"mslacc.loc[(mslacc.fare==0),:]"
mslacc=mslacc[Continuous]
full_data['Fsize']=mslacc['SibSp']+mslacc['Parch']+1
"dftest.loc[idx,'CountTicketButLast_InTest']=mslacc[ticketButLast]"
mslacc=pd.read_csv(path2)
mslacc=mslacc[val_idx]
"mslacc=mslacc.drop('target',axis=1)"
"mslacc=mslacc.drop(['Name_Rare','Name_Mr.','Embarked_S','Sex_female',
'Pclass_1'],axis=1)"
tt['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
all_data['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc=mslacc[['Age','SibSp','Parch','Fare','Pclass']]"
"class_fare.loc[(1),:]=mslacc[df['Pclass']==1]['Fare'].describe()"
"X_prob1[:,(4)]=mslacc[mslacc[:,(4)]]"
mslacc=mslacc[mslacc[feat]==f]
mslacc=mslacc[mslacc['Fare']!=0]
train_data['Family_Size']=mslacc['SibSp']+mslacc['Parch']+1
train_data['Sex']=mslacc['male']
mslacc=mslacc.drop(columns='embarked')
mslacc=mslacc.iloc[mslacc[validate_end:]]
"mslacc=mslacc.loc[mslacc['Survived']==0,'Age']"
"mslacc.drop(['person'],axis=1,inplace=True)"
"mslacc=mslacc[:,(1)][y_train==i]"
"mslacc=mslacc.drop(['PassengerId','Survived','Name','Ticket'],axis=1)"
mslacc=mslacc[i*num_val_samples:(i+1)*num_val_samples]
"mslacc=mslacc.drop(labels=['Name','Ticket','Cabin'],axis=1)"
train['Familysize']=mslacc['SibSp']+mslacc['Parch']+1
df_train['Age']=(mslacc['Age']-age_mean)/age_std
s_corr[f'dW{l}']=mslacc[f'dW{l}']/(1-beta2**t)
mslacc=mslacc['title']
df_test['Sex']=mslacc['Sex'][891:]
"mslacc=mslacc.drop([f],axis=1)"
test_df['FamilySize']=mslacc['SibSp']+mslacc['Parch']
"mslacc=mslacc.drop(['CategoricalFare','CategoricalAge'],axis=1)"
df_test[feature+'_bin_code']=mslacc[feature+'_bin_code'][train_size:]
"mslacc.drop(mslacc[mslacc['Fare']>100].index,inplace=True)"
"mslacc=pd.read_csv('../input/train.csv',index_col='PassengerId')"
mslacc=mslacc[0]*0.7+mslacc[1]*0.3
"mslacc.drop(['PassengerId','Name','Ticket','Embarked'],axis=1,inplace=True
)"
withPeer['peer']=mslacc['PassengerId']>1
mslacc=pandas.read_csv(filepath)
"mslacc=pd.read_csv(titanic_unlabeled,quotechar='""')"
mslacc=mslacc[mslacc['DS']=='train']
temp[1]=mslacc[mslacc[1]]
"mslacc=mslacc[(mslacc['Sex']=='male')&(mslacc['SibSp']==0)&(
mslacc['Parch']==0)]"
"mslacc=mslacc.drop(['PassengerId','Name','Ticket'],axis=1)"
mslacc=mslacc['Survived'].loc[mslacc['Pclass']==3]
"mslacc=pd.read_csv(input_io_dir+'train_labels.csv',header=None)"
"mslacc=mslacc[predictors].iloc[(train),:]"
"mslacc=mslacc.drop('Embarked',axis=1)"
mslacc=mslacc[predictors+['Survived']]
mslacc=mslacc[mslacc['ParentsChildren']==0]
mslacc=mslacc[mslacc['Surname']==s]
"X_train,X_test=mslacc[:eighty],mslacc[eighty:]"
X['Pclass']=mslacc['Pclass']-1
new_df['PassengerId']=mslacc['PassengerId']
"mslacc=mslacc[['Sex','Age','SibSp','Parch','Fare','class1','class2',
'Q','S']]"
"train_df,test_df=mslacc.iloc[:len_train,:],mslacc.iloc[len_train:,:]"
"mslacc=mslacc.shape[0],"
"mslacc=mslacc.loc[mslacc['SibSp']!=0,['Age']]"
"mslacc.drop(labels=['Parch','SibSp','Fsize'],axis=1,inplace=True)"
mslacc=pd.read_csv('Titanic_train.csv')
df['HighLow']=mslacc['Pclass']
mslacc=mslacc[:TRAINING_LENGTH]
"x_train,x_test=mslacc[train_index],mslacc[test_index]"
mslacc=train_history.history[train_acc][epoch_num-1]
"mslacc=mslacc.drop(['PassengerId','Survived','Name','Ticket','Cabin',
'Embarked','title'],axis=1)"
"mslacc=mslacc.loc[892:,:]"
"mslacc=mslacc.drop('C',axis=1)"
test_df['SharedCabin']=mslacc['Cabin']
"mslacc=mslacc.drop(['IsAlone'],axis=1)"
mslacc=mslacc[mslacc['Training_set']==True]
"mslacc.drop(['Ticket','Cabin','Embarked','PassengerId'],axis=1,inplace
=True)"
mslacc=mslacc[mslacc.support_]
mslacc=mslacc['status']==-1
mslacc=mslacc['Title']!='Master'
X_train['SibSp']=mslacc['SibSp']
"mslacc=mslacc.drop(columns=['Survived','Embarked','Cabin','Name',
'Ticket','PassengerId'],axis=1)"
"mslacc=mslacc.iloc[:,([2,4,5,6,7,9,10])]"
mslacc=pd.read_csv(folder+'test.csv')
mslacc[roc_values<=0.5]
"mslacc.drop(['Ticket','FamilySize','TicketSize','PassengerId'],axis=1,
inplace=True)"
"mslacc=mslacc.drop(['Name_length_Band'],axis=1)"
X1[i]=(mslacc[i]-m1)/(max1-min1)
output_targets['Survived']=mslacc['Survived']
mslacc['Golf']
test_p['Family']=mslacc['Parch']+mslacc['SibSp']
test_df['isAlone']=mslacc['SibSp']+mslacc['Parch']==0
testdat['gpsz']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc.drop(['PassengerId','Name','Ticket','Cabin','title','title_age'
],axis=1,inplace=True)"
"mslacc=mslacc.drop(['Ticket','Cabin','Name'],axis=1)"
"df_dums['age_3']=[(1if(ele<=18.0)&(ele>10.0)else0)forelein
mslacc['Age']]"
"mslacc=mslacc.drop(['Fare'],1)"
df['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc=mslacc.drop(['PassengerId','Cabin','Ticket','Name'],axis=1)"
"mslacc.drop(['Name'],axis=1,inplace=True)"
combined_df['Related']=mslacc['SibSp']+mslacc['Parch']
"mslacc.drop(columns=['Name','Cabin','Ticket'],inplace=True)"
mslacc=mslacc[mslacc.Parch>0]
"b[l]=mslacc[l],1"
mslacc=mslacc['Cost']
"mslacc.iloc[:,0:3]"
"mslacc=mslacc.drop(['Survived','Age'],axis=1)"
"mslacc=mslacc[dfFull.TitleCat==0][['Sex','ParchCat','SibSpCat']]"
"mslacc.drop(['CategoricalFare'],axis=1,inplace=True)"
"mslacc=mslacc.iloc[881:,:]"
titanic_train_data['Id']=mslacc['PassengerId']
mslacc=mslacc[feature_columns]
"mslacc.drop(['Age','SibSp','Parch','Deck_Missing'],axis=1,inplace=True)"
"mslacc=mslacc.drop(['Survived','Name','PassengerId','Cabin','Ticket'],
axis=1)"
features['Pclass']=mslacc['Pclass']
"mslacc=mslacc.iloc[891:,([0,2,3,4,5,6,7,8])]"
combine[0].iloc[0]['Name']
mslacc=mslacc['Fare'].loc[mslacc['Pclass']==3]
"mslacc=(mslacc['Sex']=='female')&(mslacc['Survived']==1)&(mslacc[
'Pclass']==1)"
df['IsAlone']=mslacc['FamilySize']==1
"mslacc.drop(var_to_drop,axis=1,inplace=True)"
"mslacc=mslacc[['Survived','Sex']]"
mslacc.loc[3]
"mslacc=mslacc.drop(['Name','Ticket','Cabin','Embarked','Survived'],
axis=1)"
"mslacc.drop(labels=columns_to_drop,axis=1,inplace=True)"
"mslacc=mslacc.drop(['Fare'],axis=1)"
mslacc['Survived']
mslacc=mslacc[(mslacc['Sex']=='female')|(mslacc['Age']<10)]
mslacc[-5:]
mslacc=mslacc[3]
"mslacc=pd.read_csv(input_io_dir+'passengerId.csv',header=None)"
mslacc=mslacc['Data']=='V'
v[f'dW{l}']=beta1*mslacc[f'dW{l}']+(1-beta1)*mslacc[f'dW{l}']
"mslacc=mslacc[['Class1','Class2','Class3']]"
"mslacc=mslacc.drop(['Cabin','Name','Ticket'],axis=1)"
test['FamilySize']=mslacc['Parch']+mslacc['SibSp']+1
train_Predict['Age']=mslacc['Partition']
test['Famille_4']=mslacc['FamilleMember']=='>4'
mslacc=mslacc[mslacc['Dataset']=='train']
"mslacc=mslacc[['Survived','Title','Name','Age','Sex','sex_female',
'sex_male','SibSp','Parch','Fare','Pclass','class_1','class_2',
'class_3','Cabin','Embarked','TicketPrefix','TicketNumber',
'title_Capt','title_Col','title_Don','title_Dr','title_Jonkheer',
'title_Lady','title_Major','title_Master','title_Miss','title_Mlle',
'title_Mme','title_Mr','title_Mrs','title_Ms','title_Rev',
'title_Sir','title_theCountess','embarked_C','embarked_Q',
'embarked_S','Age-Below10','Age-10-18','Age-18-30',
'Age-30-55','Age-Above55']]"
"mslacc[['Pclass','Sex','Cabin','Embarked']]"
"mslacc=mslacc[(mslacc['Sex']=='female')&(mslacc['Survived']==1)].shape[
0]"
mslacc=mslacc[mslacc.PassengerId<892]
mslacc[numerical_data].describe()
"mslacc=pd.read_csv('../input/test.csv',na_values='')"
pd.read_csv('predicted_survived.csv').head()
"mslacc=mslacc.drop(['Title'],axis=1)"
"mslacc=mslacc.drop(['Sex','Sex_male'],1)"
"mslacc={mslacc['X']:minibatch_X,mslacc['Y']:minibatch_Y}"
"assertmslacc.shape[1]==mslacc.shape[1],'NotEqual'"
"mslacc=mslacc.loc[(idx_1),:]"
"mslacc.loc[:,(['Age*Class','Age','Pclass'])].head(5)"
trainPCA2['12']=mslacc['Pclass2']
"mslacc=mslacc.loc[:,(ignore_flds)]"
df_test['HadCabin']=mslacc['HadCabin'][891:]
dataset['MedianAge']=(mslacc['Age']>=18)&(mslacc['Age']<=40)
"mslacc=mslacc.loc[:,(['Age','Fare','SibSp','Parch'])]"
"group_survival['confidence']=confidence*(1/mslacc['Group_size']*(
mslacc['adj_survived']-mslacc['adj_dead']))"
"mslacc.iloc[:,12:17]"
"mslacc=mslacc.drop(df2.columns[[2,7,9]],axis=1)"
mslacc.Title.head()
"mslacc=mslacc.drop(['Name','Ticket','Sex','SibSp','Parch','Fare',
'Cabin','Embarked','PassengerId'],axis=1)"
"mslacc=mslacc[['age','survived']]"
mslacc=mslacc['Data']=='T'
"mslacc=mslacc[['Pclass','Familynumber','Sex_male','Embarked_Q',
'Embarked_S','Agebins_dummies']]"
mslacc=mslacc[test_columns_titles]
mslacc['Age_bin'].head()
mslacc[mslacc['Cabin_Data']]
"mslacc[(mslacc['Parch']>=1)&(mslacc['Age']<=18)&(mslacc['Sex']==
'female')]"
submission.PassengerId=mslacc['PassengerId']
titanic_tobepredicted['Pclass']=mslacc['Pclass']
"mslacc=mslacc[['Survived','Pclass','female','Age','Family','Embarked']]"
"mslacc=pd.read_csv('../input/titanic-machine-learning-from-disaster/test.csv'
)"
mslacc=dfTest.loc[i]['PassengerId']
mslacc['ticket_number'].head(10)
"mslacc=mslacc.drop('index',axis=1)"
"mslacc=mslacc.drop('SibSp',1).drop('Parch',1)"
test['Family_size']=mslacc['Parch']+mslacc['SibSp']
a.index=mslacc['PassengerId']
mslacc=mslacc[mslacc['Sex']==1]
"mslacc.drop(['FamilySize'],axis=1,inplace=True)"
"xmin,xmax=mslacc[mslacc.name],mslacc[mslacc.name]"
mslacc=mslacc[vTitle]
"mslacc=pd.read_csv('../input/test.csv',usecols=feature_list)"
"mslacc=mslacc.drop(['PassengerId','Survived','Alone'],axis=1)"
mslacc=mslacc[rnd_indices]
mslacc=mslacc['SibSp']==0
mslacc=mslacc['Embarked']=='C'
mslacc=mslacc[mslacc['Tag']=='train']
"mslacc.drop(['FareBin'],axis=1,inplace=True)"
"data.loc[(data.Fare==0)&(data.Pclass==f+1),'Fare']=mslacc[f]"
"mslacc=mslacc.iloc[0:890,(1)]"
features['Fare']=mslacc['Fare']
"mslacc.drop(['PassengerId','Name','Ticket','Cabin','SibSp','Parch'],
axis=1,inplace=True)"
"tra,val=mslacc[train_idx],mslacc[valid_idx]"
data_cabin_pd['Pclass']=mslacc['Pclass'][cabin_index_ST]
"mslacc=mslacc.drop(copyTest_df.columns[[0,5]],axis=1)"
mslacc=mslacc[random_indices]
mslacc=pd.read_csv(trainpath)
mslacc=mslacc['Fare'][(mslacc.Pclass==3)&(mslacc.Embarked=='S')]
"mslacc=pd.read_csv('../input/train.csv',usecols=['Survived',
'PassengerId','Name'])"
df_age['NotSurvived']=mslacc[mslacc.Survived==0].Age.describe()
"mslacc=mslacc.drop('Name',axis=1)"
"mslacc.drop(labels='Survived',axis=1,inplace=True)"
"mslacc.describe(include=[np.object,'category'])"
mslacc=mslacc['metric'][0]
"mslacc=mslacc.drop('not_alone',axis=1)"
"mslacc[(mslacc.Sex=='female')&(mslacc.Pclass==2)&(mslacc.Survived==0)
]"
mslacc=mslacc[nclf][1]
"mslacc=mslacc.drop(columns=['Cabin','Ticket','Embarked','Name'],axis=1)"
mslacc=[mslacc[1]]+mslacc[0:1]+mslacc[2:]
"mslacc['test-logloss'][0],"
full['FamilySize']=mslacc['FamilySize']
mslacc[:2]
"mslacc=mslacc.iloc[:,13:14]"
data_train['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc.drop(drop_columns_train,axis=1,inplace=True)"
mslacc=mslacc.loc[mslacc['Embarked']=='S']
mslacc=mslacc.head(ntr)
"mslacc=mslacc[data_df['DataType']==0][mslacc[mslacc[
'FeatureImportances']>0.02].index]"
df_train['Family_members']=mslacc['SibSp']+mslacc['Parch']
"mslacc.drop(columns='PassengerId',inplace=True)"
mslacc.shape[0]+mslacc.shape[0]
"mslacc.drop(['Sex_female','Embarked_C','Title_Dr','Deck_X'],axis=1,
inplace=True)"
train_data['Cabin_A']=mslacc['A']
"mslacc=mslacc.drop(['Sex','Embarked','Name','Ticket','Fare'],axis=1)"
"mslacc=mslacc.drop(['Survived','Name'],axis=1)"
train['Family_Size']=mslacc['SibSp']+mslacc['Parch']+1
mslacc=model.best_score_['train']['auc']
"mslacc=mslacc.drop('leftRight',1)"
ds['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
train['EmbarkedModified']=mslacc['Embarked']
mslacc[features].head(3)
mslacc=pd.read_csv(testpath)
df_dums['age_5']=[(1ifele>50.0else0)foreleinmslacc['Age']]
"mslacc=mslacc.drop(['PassengerId','Pclass','Name','Title','Sex',
'Ticket','Embarked','CabinChar','Cabin','noTicketRef'],axis=1)"
"mslacc[['Age','Age_bin']].head(20)"
"mslacc=pd.read_csv('../input/train.csv').drop('Ticket',axis=1)"
train5['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
mslacc.drop_duplicates()
raw_test['FamilyMembers']=mslacc['SibSp']+mslacc['Parch']
titanic['Name']=mslacc['Name']
mslacc=pd.read_csv('Titanic_test.csv')
"mslacc=mslacc[['Age_range','Sex','Pclass','SibSp','Parch','Embarked']]"
mslacc=mslacc['predict']
df['prob_surv']=mslacc[1]/(mslacc[1]+mslacc[0])
"mslacc.loc[:,(features2)],"
mslacc['Isalone'].loc[mslacc['FamilyMembers']>1]
train_data['Family']=mslacc['SibSp']+mslacc['Parch']+1
mslacc['Embarked']
data_train['FarePerPerson']=mslacc['Fare']/mslacc['FamilySize']
"mslacc=mslacc.drop(['PassengerId','Name','Age','Cabin'],axis=1)"
mslacc=mslacc.loc['train']
"mslacc[(mslacc.Fare==1)&(mslacc.Pclass==2)].shape[0]/(1.0*mslacc[
mslacc.Fare==1].shape[0]),"
"mslacc=pd.read_csv(titanic_path,quotechar='""')"
data_all['Cabin_D']=(mslacc['Cabin']=='D')+0
mslacc[numerical_columns].describe()
mslacc[obj_to_cat].head()
testdata['Related']=mslacc['SibSp']+mslacc['Parch']
mslacc=mslacc.loc[mslacc.Age>10]
mslacc['Fare'].describe()
mslacc=mslacc[df.Survived==-888][columns]
mslacc.head(8)
"mslacc.drop(['Parch','SibSp','Cabin','Name'],axis=1)"
"mslacc=mslacc[['Survived','Pclass','Sex','Age','Fare','Embarked',
'SibSp','Parch']]"
"mslacc=mslacc.drop('FamilyNum',axis=1)"
Test_Master['FamilySize']=mslacc['SibSp']+mslacc['Parch']
"mslacc=mslacc['penalty'],"
"mslacc=mslacc[(mslacc['Sex']=='female')&(mslacc['SibSp']==1)&(
mslacc['Parch']>0)]"
"mslacc.drop('Title',axis=1,inplace=True,errors='ignore')"
mslacc=mslacc[df_train['Survived']==0]['FamilySize']
"mslacc=mslacc.iloc[:891,:].drop(['PassengerId','Survived'],axis=1)"
mslacc=mslacc[(mslacc.Survived==1)&(mslacc.Sex==1)]
"df_dums['age_1']=[(1if(ele<=5.0)&(ele>0)else0)forelein
mslacc['Age']]"
"mslacc.drop(['PassengerId'],axis=1,inplace=True)"
"mslacc=mslacc.loc[(mslacc['TicketClass'],mslacc['Sibling_Spouse']),(
'Age','std')]"
mslacc=mslacc[0:t_n[0]]['PassengerId']
mslacc=mslacc['Survived'].iloc[k_train]
df_train['Parch_0_1_2_3over']=[(iifi<=2else3)foriinmslacc['Parch']]
"mslacc=mslacc.drop(['SibSp','Parch','Title_Mr'],axis=1)"
"mslacc.drop(['Sex','Person'],axis=1,inplace=True)"
mslacc=mslacc.loc[(mslacc.Age>0)&(mslacc.Age<=10)]
data_train['Is_Alone']=mslacc['SibSp']+mslacc['Parch']==0
train_test['FamilySize']=mslacc['Parch']+mslacc['SibSp']
"mslacc=mslacc.iloc[1,0]"
train_df['family_status']=mslacc['family']
mslacc=pd.read_csv(TEST_FILE)
comb['EQ']=mslacc['Embarked']=='Q'
X_train['Parch']=mslacc['Parch']
mslacc=mslacc[train_df['Survived']==1]['Fare']
"df['fem_perc']=mslacc[mslacc.columns[1]]/(mslacc[mslacc.columns[0]]+
mslacc[mslacc.columns[1]])"
"temp_df.loc[i,'Deck']=mslacc.fill_vals.loc[mslacc.loc[i,'Pclass']]"
titanic_train['Family']=mslacc['Parch']+mslacc['SibSp']
"mslacc.drop(['PassengerId','Ticket'],inplace=True,axis=1)"
"ship_numeric.loc[(lambdadf:df.Age_was_missing==1),:][:5]"
"train_data_splitted,test_data_splitted=mslacc.iloc[train_data_index
],mslacc.iloc[train_result_index]"
df_train['FilledAge'][i]=mslacc['Age'][i]
"mslacc=mslacc.drop(['Name','Ticket','Salutation'],axis=1)"
test_data['Family_Size']=mslacc['SibSp']+mslacc['Parch']+1
mslacc=mslacc[(x<=mslacc.Age)&(mslacc.Age<=x+5)]
mslacc[features_rfe].head()
"mslacc.drop(['SibSp','ParchBinary','Parch','MasterMiss','FamilySize',
'SmallFamily','S','C','Fc','Alone'],axis=1,inplace=True)"
"mslacc=mslacc[['Survived','Pclass-Person','Pclass','AgeGroup',
'FareGroup','Person','IsAlone','Embarked','Title']]"
"mslacc[features['Age']==22][['Title.SUM(combine.Age)','Age','Title']].head(
)"
"mslacc.drop(train[drop_features],axis=1,inplace=True)"
mslacc=mslacc.loc[mslacc['PassengerId']<=train_len]
"df['miss_perc']=mslacc[mslacc.columns[1]]/(mslacc[mslacc.columns[0]]+
mslacc[mslacc.columns[1]])"
"_df.loc[idxs,'fare']=mslacc.loc[idxs,'fare']/mslacc.loc[idxs,
'group_count']"
"mslacc=mslacc.drop(['PassengerId'],1)"
"mslacc.drop(['Cabin','Name','Ticket','Parch','SibSp','Sex'],axis=1,
inplace=True)"
"x,y=mslacc[i]"
"mslacc.drop(['PassengerId','Ticket','Survived'],inplace=True,axis=1)"
mslacc=mslacc[featuresOnly]
mslacc=mslacc[(mslacc.age>=1)&(mslacc.survived==0)]
"mslacc=mslacc.drop(drop_elementsNMD,axis=1)"
"mslacc=pd.read_csv(base_path_data+'/train.csv',sep=',',header=0,
encoding='utf-8')"
train['Sex*Parch']=mslacc['Sex']*mslacc['Parch']
mslacc=mslacc[mslacc['Overall']>=80]
"mslacc=mslacc.drop(['Sex','Cabin','Embarked'],axis=1)"
"mslacc=mslacc.drop(['Survived','Cabin','PassengerId'],axis=1)"
"mslacc.drop(labels='AgeBand',axis='columns',inplace=True)"
mslacc.drop
df['Age']=mslacc['Age']
mslacc=mslacc.drop(columns=['T'])
mslacc=mslacc[KMF]
mslacc=[mslacc['loss']forevinevaluations]
mslacc=pd.read_csv('../input/dataset2/train_temp.csv')
mslacc=mslacc[merged_df['Pclass']==p_class_type]['Fare']
"train_x,train_y=mslacc.iloc[train_idx],mslacc.iloc[train_idx]"
"mslacc=pd.read_csv(file_train,sep=',')"
mslacc=mslacc[trn_sz:]
"data.loc[data['Sex']==0,'SexByAge']=mslacc.loc[mslacc['Sex']==0,'Age']"
"titanicTrain.iloc[i,7]=mslacc.iloc[i,4]+mslacc.iloc[i,5]"
mslacc=pd.read_csv(train_data_path)
mslacc=mslacc[c]
"mslacc.loc[(row_null_age),:].head(10)"
"df['second_perc']=mslacc[mslacc.columns[1]]/(mslacc[mslacc.columns[0]]+
mslacc[mslacc.columns[1]]+mslacc[mslacc.columns[2]])"
"mslacc['Title']==title,"
"mslacc=res.query(""param_criterion=='gini'"")['param_max_depth']"
"mslacc=[mslacc['Survived']==0,mslacc['Survived']==1]"
mslacc=mslacc[train_size:]
"mslacc.loc[(0),:]"
mslacc=mslacc[outcome].iloc[train]
mslacc=mslacc[1]['PassengerId']
"mslacc=mslacc.loc[idx,'Ticket']"
"mslacc=mslacc.drop(columns=['Age','CategoricalAge'])"
age['s_rate']=mslacc['sum_of_survivor']/mslacc['count_of_age']
"mslacc=mslacc.drop('surname',axis=1)"
mslacc=1ifmslacc['Embarked']=='Q'else0
"mslacc=mslacc.loc[top_corr_cols,top_corr_cols]"
mslacc=mslacc['Pclass']==1&(mslacc['Sex']==1)
data['Title']=mslacc['Name']
test['AgeGroup'][x]=mslacc[mslacc['Title'][x]]
"mslacc['Age'][mslacc['Survived']==1],"
features_log_transformed['Family']=mslacc['SibSp']+mslacc['Parch']
"df_temp.loc[df_temp['FamCat']==i,'Count']=mslacc[df_temp['FamCat']==i][
'Count']/mslacc[i]"
mslacc=[mslacc['global_step']forevinevaluations]
"mslacc.drop(['Pclass','Title','Cabin','Deck','Name','Ticket','Parch',
'SibSp','Embarked','Age_Cat'],axis=1,inplace=True)"
mslacc.loc[0]
"mslacc=mslacc.loc[idx,'TicketButLast']"
mslacc=mslacc[cols_to_use]
"mslacc[(mslacc['Sex']=='female')&(mslacc['SibSp']==0)&(mslacc[
'Parch']==0)].describe()"
"mslacc=pd.read_csv('../input/test.csv',dtype={'Age':np.float32,'Fare':
np.float32})"
df['Family_Size']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc=pd.read_csv(input_file[2],header=0)"
big['XWho']=mslacc['TName']
"mslacc=mslacc.drop(['PassengerId','Name','Age','Cabin','Embarked',
'Ticket','Cabin','AgeCohort'],axis=1)"
"mslacc='%d.feature%s(%f)'%(f+1,mslacc.columns[mslacc[f]],mslacc[
mslacc[f]])"
mslacc=mslacc[mslacc['age_T']!=-1]
"mslacc.shape,mslacc.shape,mslacc.columns.values"
"Anova.loc[var[0],'AnovaFvalue']=mslacc[0]"
train['FamSize']=mslacc['SibSp']+mslacc['Parch']+1
mslacc=pd.read_csv(zs_train_csv_input)
titanic['Parch']=mslacc['Parch']
mslacc[:5]
train_df['AgeFill']=mslacc['Age']
f['Position']=mslacc['Position']
"mslacc=mslacc.drop('Cabin2',axis=1)"
train['Fare_2']=(20<=mslacc['Fare'])&(mslacc['Fare']<40)
combine['Family']=mslacc['Parch']+mslacc['SibSp']
mslacc['Name'].head(100)
"mslacc[~((mslacc.Embarked=='S')|(mslacc.Embarked=='C')|(mslacc.
Embarked=='Q'))]"
"mslacc=mslacc.drop(to_drop,axis=1)"
"mslacc=mslacc.drop(['PassengerId','Cabin','Ticket','Fare','Parch',
'SibSp'],axis=1)"
test_df['Pclass']=mslacc['Pclass']-1
"mslacc.drop('Sex_nan',axis=1,inplace=True)"
"mslacc=mslacc.drop(columns=['Survived','PassengerId'])"
"mslacc=mslacc.loc[:,(['Group_Category','Person_Class','Age_Missing',
'Survived'])]"
mslacc.loc[(mslacc.Age<16)&(mslacc.Parch==0)]
mslacc=mslacc[feature].loc[mslacc[0][1:]]
"mslacc.loc[:,(['Age*Class','Age','Pclass'])].head(10)"
"mslacc=mslacc.iloc[:891,([0,2,3,4,5,6,7,8])]"
mslacc=mslacc.loc[mslacc['Age']>=18]
"mslacc=mslacc.drop(['Name','PassengerId','Ticket','Cabin','Fare',
'SibSp'],axis=1)"
"mslacc=mslacc.drop('CabinNum4',axis=1)"
df_all['Family_size']=mslacc['Parch']+mslacc['SibSp']
output['SibSp']=mslacc['SibSp']/8
N_g[j].alpha=mslacc[j]
"mslacc=mslacc[:,(3)][y_train4==j]"
"x_train,x_test=mslacc.iloc[train_index],mslacc.iloc[test_index]"
"mslacc=mslacc.drop(['FareBand'],axis=1)"
"test.loc[j,'Cabin']=test.loc[j,'Cabin'][0]"
mslacc=mslacc[mslacc.include]
"mslacc=mslacc.drop(['LG_predictions'],axis=1)"
mslacc=mslacc.head(10)
mslacc.loc['a']
X['FareGroup']=mslacc['Fare']
"mslacc.drop(['Sex','Embarked'],axis=1,inplace=True)"
mslacc=mslacc[mslacc['Title']==title]
"mslacc=mslacc.drop('Deck_T',axis=1)"
titanic_df['SharedCabin']=mslacc['Cabin']
df['Fare']=mslacc['Fare']*108*1.3
temp[6]=mslacc[mslacc[6]]
"mslacc.drop(labels=['Ticket_group'],inplace=True,axis=1)"
mslacc[:7]
sub_rf['PassengerId']=mslacc['PassengerId']
"mslacc=mslacc.iloc[:nTrain,:]"
"mslacc=mslacc.iloc[:,([1,3,4,5,6,8])]"
mslacc=pd.read_csv('solution_final_v1.csv')
"mslacc=mslacc.drop(labels=['Cabin'],axis=1)"
mslacc=mslacc.loc[mslacc['Survived']<3]
mslacc[(mslacc['SibSp']==5)|(mslacc['SibSp']==8)]
data_train['FarePP']=mslacc['Fare']/mslacc['famsz']
mslacc=mslacc[['UselessColumn']]
mslacc=mslacc[mslacc['Mark']=='train']
mslacc[mslacc['Pclass']==1]
mslacc=pd.read_csv('../input/gendermodel.csv')
train['Parch']=mslacc['Parch']
mslacc=mslacc[mslacc['PassengerId']>=892]
"mslacc=mslacc[['FamilySize','Age','Fare','Pclass','PassengerId']]"
mslacc=mslacc[max_ind]
mslacc=mslacc['b2']
mslacc[-4:-2]
"mslacc=mslacc[1][1]
mslacc=mslacc[0][0]
mslacc=mslacc[0][1]
mslacc=mslacc[1][0]"
w_next[d]=mslacc.w[d]-eta*mslacc[d]
mslacc=mslacc[columns_series==True]
"mslacc=mslacc.drop(columns=['PassengerId','SibSp','Name','Ticket',
'Cabin','Embarked'])"
"mslacc=mslacc.drop(['PassengerId','Name','Sex','Ticket','Cabin',
'Embarked','Age'],axis=1)"
trainPCA2['1']=mslacc['Pclass2']
mslacc=mslacc[(mslacc.Survived==0)|(mslacc.Survived==1)]
mslacc=mslacc.drop_duplicates()
mslacc=feature_imp_sorted_et.head(top_n_features)['feature']
mslacc=mslacc[target]
"mslacc.drop(['Sex'],axis=1,inplace=True)"
mslacc=mslacc[test_cols]
mslacc=pd.read_csv(train)
mslacc[mslacc['age']!=mslacc['age']]
"r,k=mslacc.shape"
"mslacc.drop(['Survived','PassengerId','Ticket'],axis=1,inplace=True)"
mslacc[mslacc['Age']>60]
mslacc=mslacc['NumberCabins']==0
"mslacc.drop(columns=cat_vars,inplace=True)"
mslacc=mslacc[mslacc['Embarked']=='S'].shape[0]
"df['fem_perc']=mslacc[mslacc.columns[0]]/(mslacc[mslacc.columns[0]]+
mslacc[mslacc.columns[1]])"
"mslacc.drop(['SibSp','Parch'],axis=1,inplace=1)"
"mslacc=mslacc[:,(0)][y_train==j]"
mslacc=mslacc[0][['Survived']]
test['Sex*Parch']=mslacc['Sex']*mslacc['Parch']
train['Famsize']=mslacc['Parch']+mslacc['SibSp']+1
mslacc=mslacc[mslacc.Title==title]
mslacc.Cabin.describe()
mslacc['test_score']
mslacc=pd.read_csv(TRAIN_FILE)
mslacc=mslacc.loc[mslacc['source']=='train']
mslacc=mslacc[num_rows_train_data:]
"mslacc=pd.read_csv('../input/train.csv',dtype={'Age':np.float64})"
mslacc=mslacc.iloc[:trn_sz]
"mslacc=mslacc.drop(['PassengerId','Cabin','Ticket'],axis=1)"
Y['RGroup']=mslacc['Last_Name']+'_'+mslacc['Ticket']
mslacc=mslacc[mslacc['Parch']>0]
mslacc.shape(y_predict_test)
df['_NumRelatives']=mslacc['Parch']+mslacc['SibSp']
"mslacc=mslacc[1,0]"
mslacc=mslacc[mslacc['Embarked']==2].shape[0]
df['Family']=mslacc['Parch']+mslacc['SibSp']
"mslacc.drop(['Name','Age','Ticket','Fare','Cabin','Fare_Range',
'PassengerId'],axis=1,inplace=True)"
mslacc['ticket_owners'].describe()
X_test['Family']=mslacc['Parch']+mslacc['SibSp']
title_set[title]=mslacc[title]+1
mslacc[mslacc['surname']=='Sage']
mslacc=mslacc[mslacc.Fid==mslacc.Fid]
mslacc=0if1notinmslacc.indexelsemslacc[1]
mslacc=mslacc[middle]
"mslacc.drop(labels=['Ticket'],axis=1,inplace=True)"
"mslacc.drop(labels='Ticket',axis='columns',inplace=True)"
mslacc.loc['Golf']
Data['Family_Size']=mslacc['Parch']+mslacc['SibSp']
mslacc=mslacc['loss']
mslacc=mslacc[0:mslacc.shape[0]]
"mslacc=mslacc.loc[mslacc['Survived']==1,'SibSp']"
mslacc=mslacc['Parch']>0
mslacc=mslacc[mslacc['embarked']=='Southampton']
features['Cf_mem_survived']=mslacc['Confidence_member_survived_Group_code']
"mslacc=mslacc.drop(['SibSp','Parch','Fare','Family_members'],axis=1)"
"mslacc.drop(['PassengerId','Cabin','Name','Ticket'],axis=1,inplace=True)"
df['fare_pp']=mslacc['Fare']/mslacc['ticket_count']
mslacc=mslacc['age_med']
train_df['FareBin_Code']=mslacc['FareBin_Code'][:891]
mslacc=pd.read_csv('titanic_prediction.csv')
"bs_x,bs_y=mslacc[bs_inds],mslacc[bs_inds]"
mslacc=pd.read_csv(PATH+'gender_submission.csv')
"total,survivors=mslacc.shape[0],mslacc[mslacc.Survived==1].shape[0]"
mslacc=mslacc.drop(columns='Name')
mslacc=mslacc[0][4]
"mslacc=mslacc['Survived','sem'],"
mslacc=mslacc[target_cols]
titanicANDtest_df['SbS']=mslacc['SibSpBinary']
mslacc=pd.read_csv(data_dir+'train.csv')
"mslacc=mslacc.iloc[891:1310,:]"
mslacc=mslacc['best_params']
mslacc['Family']
"X,y=mslacc.drop(['Survived'],axis=1),mslacc['Survived']"
v[f'db{l}']=beta1*mslacc[f'db{l}']+(1-beta1)*mslacc[f'db{l}']
age_fare['Fare']=mslacc['Fare']
train['EmbarkedS']=mslacc['Embarked']
mslacc.shape(X_NumPy_Mat_NM)
"mslacc=mslacc.drop(['Cabin','SibSp','Parch','Name','Ticket',
'FamilySize'],axis=1)"
"mslacc.loc[mslacc['Age']>58,'Age']"
"mslacc=mslacc.drop(unused_col,axis=1)"
"mslacc.iloc[:5,],mslacc.iloc[:5,]"
"mslacc.drop('Age',inplace=True,axis=1)"
"mslacc=pd.read_csv('../input/gender_submission.csv',index_col=False)"
"mslacc.loc[nullFares,'Fare']"
"X[:,(i)][~valid_mask]=self.categories_[i][0]"
train['Pclass']=mslacc['Pclass']
dataset['Family_size']=mslacc['SibSp']+mslacc['Parch']+1
data['Pclass']=mslacc['Pclass']-1
"mslacc=mslacc[['Title','Survived']]"
"mslacc=mslacc.drop(['Cabin','Embarked','Title','Age','Sex','Name',
'Ticket','AgeGroup','Deck','Pclass','Fare','FareBand','SibSp',
'Parch','Parch_7','Parch_8','Parch_9'],axis=1)"
mslacc=mslacc[(mslacc['Parch']>0)&(mslacc['Survived']==1)]
train['AddPsng']=mslacc['SibSp']+mslacc['Parch']
"assertmslacc.shape==(1,mslacc.shape[1])"
dat['Fsize']=mslacc['SibSp']+mslacc['Parch']+1
mslacc.Ticket.head(5)
mslacc=pd.read_csv(train_file)
combine['Large_Family']=(mslacc['SibSp']>2)|(mslacc['Parch']>3)
mslacc=pd.read_csv('linden_Titanic_submission.csv')
"mslacc=mslacc.drop(mslacc.index,axis=0)"
"mslacc=mslacc.iloc[0:891,:-1]"
mslacc=res[j]['class_ids'][0]
data['Infant_No_Parents']=mslacc['Infant']&mslacc['No_Parents']
mslacc=mslacc[mslacc['Fare']<200]
X_train['Age*Pclass']=mslacc['Age*Pclass']
df['FamSize']=mslacc['SibSp']+mslacc['Parch']+1
mslacc=mslacc[mslacc['embarked']=='Cherbourg']
mslacc.Sex.describe()
trainPCA2['8']=mslacc['Pclass2']
train['Child']=mslacc['Age']<=10
mslacc.head(n=7)
titanic['Embarked_Sex']=mslacc['Embarked']*mslacc['Sex']
"mslacc.iloc[1:5,2:6]"
test['PaxclassA']=mslacc['Pclass']
mslacc=mslacc[TARGET_COLUMNS]
mslacc=Train_pred==mslacc[['Survived']]
train['SexM']=mslacc['Sex']
mslacc=mslacc.drop(columns=['title'])
mslacc=mslacc.head(891)
"mslacc=mslacc.iloc[:,1:6]"
mslacc=mslacc[mslacc[mslacc[j]].loc[i]]
"mslacc.drop('Fare',1,inplace=True)"
X['Fam']=mslacc['SibSp']+mslacc['Parch']
"mslacc=mslacc.drop(labels=['Name','Ticket','PassCountTicket'],axis=1)"
"train['InWcg']=mslacc.iloc[:train_len,(-1)]"
"mslacc=mslacc.loc[(mslacc.SibSp==0),:]"
mslacc=mslacc['Score']
mslacc=train_num.drop(columns='Survived')[idxs_mask]
"mslacc=mslacc.drop(corln_col,axis=1)"
mslacc[1042:1044]
mslacc=mslacc['Survived'].iloc[train]
test_data['RelativesOnboard']=mslacc['SibSp']+mslacc['Parch']
"all_data.iloc[i,0]={(1):42,(2):29.5,(3):25}[mslacc.iloc[i,7]]"
mslacc[df.Sex=='female'][mslacc.Survived==1].shape[0]
mslacc=mslacc[cat==1]
"mslacc.drop('Sex_male',axis=1,inplace=True)"
test['famSize']=mslacc['SibSp']+mslacc['Parch']
x_train['AgeNull']=mslacc['Age']==-999
"X_train,X_test=mslacc.iloc[train_index],mslacc.iloc[test_index]"
"mslacc=p.read_csv('../input/test.csv',index_col='PassengerId')"
"mslacc.drop(['Title_Rev','age_group_old','age_group_teenager',
'age_group_senior_citizen','Embarked_Q'],axis=1,inplace=True)"
"mslacc.drop('Ticket',axis=1,inplace=True,errors='ignore')"
"acc,Y_pred=mslacc[key_max]"
"mslacc=summary_family/mslacc.iloc[(-1),:]"
"test.loc[v[i],'ChildSurvived']=mslacc[(mslacc.Age<19)&(mslacc.
Survived==1)].shape[0]"
mslacc[k:k+mini_batch_size]
"mslacc=mslacc.loc[:,(['source','Survived','Age','Fare','Embarked',
'Cabin','Family','Family_Single','Family_Small','Family_Large',
'Pclass','Sex','Title','Ticket'])]"
"X_train,y_train=mslacc.iloc[train_idx],mslacc[train_idx]"
"mslacc.drop(['PassengerId','SibSp','Name','Ticket','Survived','Parch',
'Cabin','Embarked'],axis=1,inplace=True)"
"mslacc=mslacc.drop(['group_id','ticket_nb','ticket_let','name_last',
'title','name_first','name_second','cabin_nb','cabin_let'],axis=1)"
"mslacc=mslacc[0].drop('kmeans_labels',axis=1)"
"mslacc=pd.read_csv('../input/train.csv',low_memory=False)"
mslacc=mslacc[mslacc['Fare']!=None].shape[0]
"mslacc=mslacc[['Age','Fare','TraveledAlone','Pclass_1','Pclass_2',
'Sex_male','Embarked_C']]"
data.head()['Embarked']
X_train['Fare/person']=mslacc['Fare/person']
"dftrain.loc[idx,'CountTicket']=mslacc[ticket]"
mslacc=mslacc.head(9)
titanic_df['F']=mslacc['Female']
"mslacc=mslacc.drop(['PassengerId','Name','Parch','Ticket','Cabin'],
axis=1)"
"mslacc=pd.read_csv('../input/gender_submission.csv',header=0)"
"mslacc.drop('AgeBand',axis=1,inplace=True)"
"mslacc=mslacc.drop(['Age','Name','Cabin','Ticket'],axis=1)"
mslacc.head(200)
mslacc=(mslacc['Pclass']==3)&(mslacc['Fare']==0)
"mslacc=mslacc.drop(['Sex','SibSp','Parch','Pclass','Embarked','Age',
'Survived'],axis=1)"
"mslacc[['Family','SibSp','Parch']].head()"
"mslacc=mslacc.drop(['PassengerId','Name','SibSp','Parch','Ticket',
'Embarked','Cabin'],axis=1)"
"tit_df.loc[p,'Age']=mslacc[is_m]"
"combined.loc[tag.index,'family_has_couple']=mslacc.loc[mslacc[0],'cp_id']"
mslacc=mslacc[:3]+auc_scores_noprob+mslacc[3:]
mslacc=mslacc[mslacc['Age']>=60].shape[0]
sub.iloc[idx]['Survived']=mslacc[idx]
mslacc.loc[829]
"mslacc.drop('Fare',axis=1)"
mslacc=mslacc[mslacc['Survived']==1]
mslacc=mslacc[tr_index]
mslacc=pd.read_csv('train.csv')
"mslacc.drop(columns=['Cabin'],axis=1,inplace=True)"
test['Fare_fillin']=mslacc['Fare']
"df_pred['FamilySize']=mslacc['Singleton']+mslacc['FamilySmall'
]*2+mslacc['FamilyLarge']*3"
mslacc[mslacc.Man==0].loc[mslacc.Woman==0].loc[mslacc.Child==0]
mslacc=mslacc['sum_sq'][0]/(mslacc['sum_sq'][0]+mslacc['sum_sq'][1])
mslacc=pd.read_csv('../input/melbourne-housing-snapshot/melb_data.csv')
df_tmp['AgeAdj']=mslacc['Age']
"y_train_v,y_test_v=mslacc[train_index],mslacc[test_index]"
mslacc=mslacc[(mslacc.Fare>100)&(mslacc.Fare<181)]
"mslacc.drop('Ticket',axis=1,inplace=True)"
"mslacc.loc[[28,76,89,129]]"
"mslacc.drop(['PassengerId','Name','Sex','SibSp','Parch','Ticket',
'Cabin','Embarked','Alone','person','Pclass','WithoutFamily',
'male','class_3'],axis=1,inplace=True)"
"mslacc=pd.read_csv('../input/trainbornclean1/train_born_clean.csv',sep=',')"
"mslacc.drop(labels=['source'],axis=1,inplace=True)"
titanic_test['Age']=mslacc['AgeBand']
mslacc.Embarked.describe(include=['O'])
mslacc=pandas.read_csv('titanic_train.csv')
"mslacc.drop(['PassengerId','Name','SibSp','Parch','Ticket','Cabin',
'Title'],axis=1,inplace=True)"
mslacc=mslacc.drop(columns='survived')
mslacc[mslacc['Fare']==0]
mslacc=mslacc[features_continuous+mslacc[1:]]
test_encode['Cluster']=mslacc['cluster']
mslacc=pd.read_csv(main_file_path)
"mslacc=mslacc.drop(['Pclass','Age','SibSp','Parch','FareRange',
'Cabin','AgeGroup'],axis=1)"
"mslacc.drop(['Parch'],axis=1,inplace=True)"
mslacc=mslacc['age_level']
"mslacc=mslacc.drop(['Cabin','Ticket','Family_size','Ticket_info',
'Ticket_count','Cabin_info','Name','Sex','Embarked','Family_name',
'Family_name_count','withFamily'],1)"
mslacc=pd.read_csv(test_path)
"mslacc=mslacc.iloc[:891,:]"
mslacc=pd.read_csv(base_folder+'test.csv')
tr['Family']=mslacc['Parch']+mslacc['SibSp']
"mslacc=mslacc.drop(columns=['Title'],axis=1)"
df_train[feature+'_code']=mslacc[feature+'_code'][:train_size]
"mslacc=mslacc.drop(['Name','Sex','Age','SibSp','Parch','Fare',
'Embarked','Title','FareBin','AgeBin'],axis=1)"
"mslacc[['Age','Fare']]"
"mslacc[['SibSp','Parch','isalone','Age','ischild']].head(10)"
"mslacc['filled_ages'],mslacc['Age']"
"mslacc.drop(columns=c,inplace=True)"
"mslacc=mslacc.drop(['Name','Surname'],axis=1)"
"mslacc=mslacc.drop(['name'],axis=1)"
X_Test.Age[i]=mslacc[1][j]
trainPCA2['10']=mslacc['Pclass2']
submission_df['PassengerId']=mslacc['PassengerId']
data_df['Family']=mslacc['SibSp']+mslacc['Parch']+1
mslacc.query('CabinCount>1')
mslacc[mslacc['PassengerId']==62]
mslacc=pd.read_csv(folder+'train.csv')
mslacc=mslacc[mslacc['Fare']==0]
"mslacc=mslacc.drop(['Survived','Family','Class_1','Class_2'],axis=1)"
"mslacc[['Name','Title']].head()"
df['FamilyGroup']=mslacc['LastName']+mslacc['TicketP']+'XX'
dfTrain['FamilySize']=mslacc['SibSp']+mslacc['Parch']
mslacc=mslacc[mslacc.DataType=='train']
"mslacc.drop(columns='Age',inplace=True)"
"mslacc.drop(['Name','Ticket'],axis=1,inplace=True)"
"mslacc=mslacc[['Name','Sex','Survived']]"
"mslacc.drop(columns=['Title_Rev','FamilySize_3','Cabin_U','Age_0'],
inplace=True)"
train['EmbarkedC']=mslacc['Embarked']
"mslacc=mslacc[['PassengerId','Survival']]"
train3['Fare_Pclass']=mslacc['Fare']*mslacc['Pclass']
"mslacc=mslacc.drop(['Name','Ticket','Age','Sex','Fare','Cabin',
'Embarked','PassengerId'],axis=1)"
combined['Number_of_relatives']=mslacc['SibSp']+mslacc['Parch']
"mslacc[['Sex','Sex_encode']].head()"
mslacc=mslacc[(mslacc['Age']<3)|(mslacc['Sex']==1)]
"mslacc=mslacc.drop(mslacc.columns,axis=1)"
test['Famsize']=mslacc['Parch']+mslacc['SibSp']+1
mslacc[9:12]['Name']
mslacc=mslacc[ISnullCabin==True]
"[mslacc.drop(columns=['Cabin','SibSp','Parch'],inplace=True)fordfin[
titanic_df,test_df]]"
"mslacc=mslacc.drop(['passengerid'],axis=1,errors='ignore')"
X_test['FamilyS']=mslacc['SibSp']+mslacc['Parch']+1
mslacc=mslacc[mslacc['Survived']>0]
"all_data.at[i,'Sex']=mslacc[mslacc.loc[i].at['Sex']]"
mslacc=mslacc[mslacc.missing_count>0]
mslacc[mslacc.Sex=='female']
mslacc['Survived'].head(15)
all_data['Fare']=mslacc['Fare']/mslacc['TicketCount']
data['FamliySize']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc=mslacc.drop(['Pclass','Sex','Age','SibSp','Parch','Fare',
'Embarked'],axis=1)"
"mslacc.loc[0:5,(['PassengerId','Name'])]"
"mslacc=pd.read_csv('../input/test.csv',header='infer',index_col=
'PassengerId')"
"X_text_submit[e,p]=mslacc[w]"
"mslacc=pd.read_csv(path2,header=0)"
mslacc=mslacc.loc[(mslacc.Sex==sex)&(mslacc.Survived==surv)]
"mslacc=mslacc.drop(columns=['Name','SibSp','Ticket','Cabin'])"
test['Survived_rf_wtd']=mslacc['Survived_nn']*recall_rf
"mslacc=mslacc.drop(drop_features,axis=1)"
mslacc['Fare'][152]
"data['MilitaryTitle']=[(1iftitleinmilitaryTitleselse0)fortitlein
mslacc['Title']]"
mslacc=mslacc[mslacc.Ticket==k]
all_data['Title']=mslacc['Name']
df['AgeCat']=mslacc['AgeFill']
"mslacc=mslacc.iloc[:,(mslacc[:10])]"
mslacc=mslacc[mslacc.is_train==1]
train_df['family']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc=mslacc.drop(['Sex','Embarked','PassengerId','Name','Ticket',
'Cabin'],axis=1)"
"mslacc['Sex'],"
test['EmbarkedModified']=mslacc['Embarked']
"mslacc=mslacc.drop(['Name','Ticket','Cabin','Embarked'],axis=1)"
submission_rfc['PassengerId']=mslacc['PassengerId']
TicketList[tick3]=mslacc[0]
"tit_df.loc[p,'Age']=mslacc[not_m]"
"mslacc=mslacc.drop(target,axis=1)"
"mslacc.drop('Male',axis=1,inplace=True)"
data_full['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
train['AgeBin_Code']=mslacc['AgeBin_Code'][:891]
"mslacc=mslacc.drop(['PassengerId','Name','Ticket','Fare'],axis=1)"
mslacc=mslacc[mslacc['pclass']==2]
mslacc=mslacc[data_train['Survived']==0]['Age']
"mslacc.drop(['Name','Age','Ticket','Fare','Cabin','Fare_range',
'PassengerId'],axis=1,inplace=True)"
"mslacc=mslacc.drop(['FareBins'],axis=1)"
"mslacc.drop(columns={'count','sum'},inplace=True)"
mslacc=pd.read_csv(in_file)
mslacc=mslacc[TRAINING_LENGTH:]
mslacc=mslacc[train_len:]
self.indices_=mslacc[best]
df_test['SibSpBool']=mslacc['SibSp']>0
mslacc=mslacc[selection]
mslacc[mslacc['surname']=='Panula']
"mslacc=mslacc.drop(493,axis=0)"
mslacc=mslacc['acc']
"mslacc=mslacc.iloc[:,([0,1,2,6])]"
mslacc=mslacc[wcg_groups>1]
"mslacc=mslacc.drop(Variables,axis=1)"
"mslacc=mslacc.loc[:,(['PassengerId','Pclass','sex_female','age_jnr',
'known_age'])]"
combined_num_cat['Pclass']=mslacc['Pclass']
mslacc=mslacc[dummy_features]
"mslacc=mslacc.drop(['PassengerId','Survived'])"
X['Alone']=[(1ifi<2else0)foriinmslacc['FamilySize']]
mslacc=mslacc[mslacc.AgeCluster==k]
df['nFamily']=mslacc['SibSp']+mslacc['Parch']
"mslacc=mslacc[['Sex','Age','SibSp','Parch','Fare','Mr','Mrs',
'other','Q','S',2,3]]"
mslacc=pd.read_csv(test_dir)
"mslacc[(mslacc.Fare==0)&(mslacc.Pclass==2)].shape[0]/(1.0*mslacc[
mslacc.Fare==0].shape[0]),"
"mslacc=mslacc['Survived'][(mslacc['FareCat']==fare_cat)&(mslacc[
'Child']==1)]"
"mslacc=mslacc.iloc[:,1:8]"
df['FamilySize']=mslacc['Parch']+mslacc['SibSp']+1
"X_prob1[:,(1)]=mslacc[mslacc[:,(1)]]"
"mslacc=mslacc[['Age','Master','Miss','Mr','Mrs','Others','Fare-bin',
'SibSp']]"
mslacc=G.node[Passenger1]['Pclass']
mslacc['Fare']>=275
mslacc[s].describe(include='all')
"mslacc.drop(['PassengerId','Embarked','Sex','Ticket','Name'],axis=1,
inplace=True)"
"mslacc=mslacc[(mslacc.SibSp==mslacc.SibSp)&(mslacc.Parch==mslacc.Parch)
]"
"mslacc=mslacc.loc[:,(['SibSp','Parch'])]"
df_test['Family']=mslacc['Parch']+mslacc['SibSp']
"mslacc=mslacc.drop(['Name','Ticket','Cabin','PassengerId','Age',
'Pclass'],axis=1)"
mslacc=pd.read_csv('../input/titanic-cleaned-data/test_clean.csv')
mslacc=mslacc.query('istrain==0')
mslacc=mslacc[(mslacc['Pclass']==1)|(mslacc['Pclass']==2)]
"mslacc=mslacc[['Age','Fare']]"
mslacc=mslacc[:data_raw_len]
family_size['Samples']=mslacc['Survived']
"mslacc=pd.read_csv(data_dir+'train.csv',header=0,sep=',')"
"X_prime[:,(3)]=1*(mslacc['Sex']=='male')"
"mslacc.drop('Cabin_T',inplace=True,axis=1)"
mslacc.head(25)
mslacc=mslacc.drop(columns=[3])
"mslacc=mslacc.drop(['PassengerId','Name','Cabin','Ticket','Embarked',
'SibSp','Parch','Pclass','Age'],axis=1)"
"train['WcgAllSurvived']=mslacc.iloc[:train_len,(-1)]"
mslacc=[xforxinprefix_dictifmslacc[x]==pre]
fare_peoples[0][index]=mslacc.loc[mslacc['Survived']==0].shape[0]
mslacc=mslacc['Name'].iloc[10]
all_data['FamSz']=mslacc['SibSp']+mslacc['Parch']
"mslacc=mslacc.drop(['PassengerId','Name','Ticket','Cabin','Title'],
axis=1)"
mslacc=G.node[Passenger1]['TicketNum']
"mslacc=mslacc.drop(['Title','Title_Mr'],1)"
"mslacc.loc[[69,184]]"
"mslacc=mslacc.loc[1,1]"
titanic['Group_size']=mslacc['Family_size']
mslacc.drop('Store1')
"mslacc.drop(columns='Cabin',inplace=True)"
"mslacc=mslacc.drop(['Survived','C'],axis=1)"
"mslacc=pd.read_csv('../input/test.csv',low_memory=False)"
mslacc=pd.read_csv('..\\input\\test.csv')
data_train_all['Family']=mslacc['SibSp']+mslacc['Parch']
data['Family_Size']=mslacc['Parch']+mslacc['SibSp']+1
"mslacc.loc[:,(['Sex','Embarked'])].head()"
combined_train_test['Fare']=mslacc['Fare']/mslacc['Group_Ticket']
"mslacc=pd.read_csv(PATH+'train.csv',low_memory=False,index_col=0)"
mslacc=pd.read_csv(data_test_file)
"mslacc.drop(['PassengerId','Survived','Pclass'],axis=1).describe()"
mslacc=mslacc.loc[mslacc['Parch']!=0]
"mslacc=mslacc.iloc[:,2:12]"
"mslacc.drop(['Age','Fare','Name','SibSp','Parch'],axis=1,inplace=True)"
mslacc=mslacc[selected]
"mslacc.drop(['Sex','SibSp','Parch'],axis=1,inplace=True)"
mslacc=mslacc[(mslacc['Pclass']==1)&(mslacc['Survived']==1)]
train['Famille_1']=mslacc['FamilleMember']=='1'
mslacc=mslacc['Parch']
"mslacc=pd.read_csv('../input/test.csv',index_col=0).drop(['Name',
'Ticket'],1)"
mslacc=pd.read_csv('../input/titanic-step-by-step-groups/test.csv')
"mslacc=pd.read_csv(path1,header=0)"
df_data['Family_size']=mslacc['SibSp']+mslacc['Parch']+1
mslacc=pd.read_csv(url1)
"mslacc=mslacc.drop(['Cabin','Deck','Deck_T'],axis=1)"
"mslacc.drop('Survived',axis=1).head()"
"mslacc['SharedFeatures']==0,"
"mslacc['KNCSFMRS,ETCN,GBCSFMN,RFCSFMRS'][scoring_refit]"
"mslacc['importance_normalized'].head(15),"
train_df['EmbarkedFill']=mslacc['Embarked']
mslacc.shape(test)
titanicANDtest_df['Fem']=mslacc['Female']
mslacc=mslacc[col_sel]
"mslacc=mslacc.drop(['PassengerId','Name','Age','SibSp','Parch',
'Fare','Fare_range','FamilySize'],axis=1)"
mslacc['Name']
"mslacc=mslacc.loc[mslacc['Pclass']==3,'Fare']"
"mslacc=mslacc[['Sex','Pclass','Fare','Age','TraveledAlone']]"
mslacc=pd.read_csv(path+'/test.csv')
"mslacc=mslacc.drop(['Age','SibSp','Parch'],axis=1)"
raw_train['FamilyMembers']=mslacc['SibSp']+mslacc['Parch']
train_data['Cabin_E']=mslacc['E']
train_X['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
mslacc=mslacc[7]
"mslacc=mslacc.drop(['Ticket','PassengerId','Cabin'],axis=1)"
"mslacc.drop(['PassengerId','is_train','Initial'],axis=1,inplace=True)"
"train.loc[x,'Cabin']=train.loc[x,'Cabin'][0]"
"mslacc=mslacc.drop(['Name','Ticket','Embarked','Cabin'],axis=1)"
"mslacc.drop('Sex_Class',axis=1,inplace=True)"
train_df['Alone']=mslacc['Family_size']==0
"mslacc=mslacc.loc[train_n+1:891,:]"
"mslacc=mslacc[['Survived','Pclass']]"
"mslacc=mslacc.drop(drop_data,axis=1)"
data['Age']=mslacc['Age']*0.01
"mslacc.drop(['PassengerId','Pclass','Name','Sex','Ticket','Cabin',
'Embarked'],axis=1,inplace=True)"
"X_prime[:,(2)]=1*(mslacc['Sex']=='female')"
mslacc=pd.read_csv(data_path+'/test.csv')
"mslacc=mslacc.loc[0:890,]"
mslacc[mslacc['Foreign']].head(10)
mslacc['Fare_log'].describe()
"mslacc.drop(['Last_Name','Fare','Age'],axis=1,inplace=True)"
dataframe[column_name]=mslacc['SibSp']+mslacc['Parch']
test_data['AgeNull']=mslacc['Age']==-999
test['embarked_T']=mslacc['embarked_T']
"mslacc=mslacc.drop(['Age','AgeBin'],axis=1)"
test['Famille_0']=mslacc['FamilleMember']=='0'
mslacc=pd.read_csv('test_predictions.csv')
"mslacc=mslacc.drop(['Name','Cabin','Ticket','PassengerId'],axis=1)"
mslacc=mslacc[data_raw_len:]
"mslacc.drop(axis=1,inplace=True,columns='cabin')"
mslacc=14<=mslacc['Age'][sel_age_fin]
dataframe2['Fare']=mslacc['Fare']/10
"mslacc=mslacc['%survived'][i],"
mslacc=pd.read_csv('../input/titanic-cleaned-data/train_clean.csv')
"mslacc=mslacc.drop({'Embarked.nan'},axis=1)"
"mslacc=mslacc.loc[891:,('PassengerId')]"
"mslacc=mslacc.drop(['PassengerId','Name','Age','Fare','Ticket',
'Cabin','SibSp','Parch','Title','FamilySize'],axis=1)"
"mslacc=mslacc[mslacc['Dataset']=='train'].drop(['Dataset','Survived'],
axis=1)"
mslacc=mslacc[model_name]
"mslacc=mslacc.drop(['TrainingScore','TestScore'],axis=1)"
"mslacc=mslacc.drop('Name',1)"
mslacc=mslacc['W1']
"mslacc=mslacc[['Survived','Pclass','Sex','Embarked','IsAlone',
'Title','FareBin','AgeBin']]"
"mslacc=mslacc[['Pclass','Sex','SibSp','Parch','Fare','Age','Embarked']]"
"mslacc=mslacc[prediction_input].iloc[(test),:]"
"mslacc=mslacc.drop(columns=['Titles_mapped','Cabin_Letter',
'Fare_adjusted','Age','Embarked','AgeBin','FareBin'])"
test['Pclass3']=mslacc['Pclass']
"mslacc=mslacc.drop([col+'_missing_data'],axis=1)"
mslacc=mslacc.loc[mslacc['AgeBand']!=-1].drop(columns='AgeBand')
df_train['FirstName']=mslacc[1]
"df.loc[k,'age*fare']=1/mslacc.loc[k,'Age_sec']*mslacc.loc[k,
'fare/ticket']"
"mslacc=mslacc.drop(['Age','Fare','Name'],axis=1)"
test['SibSp']=mslacc['SibSp']
mslacc=mslacc[(mslacc['Sex']=='male')&(mslacc['Pclass']==3)]
"mslacc.drop(['Cabin','Cabin_Data'],axis=1,inplace=True,errors='ignore')"
"mslacc=mslacc.iloc[mslacc.shape[0]:,:]"
"mslacc=mslacc.drop('Deck',axis=1)"
"mslacc.drop(labels=['SibSp','Parch','Ticket','Fare','Age',
'PassengerId','Cabin'],axis=1,inplace=True)"
"mslacc=(mslacc.shape[1],),"
"mslacc=mslacc.loc[(train_index),:]"
"mslacc=mslacc.drop(columns=['Embarked','Cabin','Name','Ticket',
'PassengerId'],axis=1)"
mslacc[['Fare']].describe()
"mslacc=mslacc.drop(['Name','Sex','Ticket','Cabin','SibSp','Parch',
'Survived'],axis=1)"
mslacc=pandas.read_csv(root_path+'/test.csv')
"mslacc=mslacc.drop(['Ticket','Name'],axis=1)"
train['FamilleMember']=mslacc['SibSp']+mslacc['Parch']
mslacc=mslacc['Ticket'][rowIndex]
"mslacc=mslacc.loc[mslacc.support==True,['feature']]"
data_all['Adult']=(mslacc['Age']<=18)+0
test_df['Pclass']=mslacc['Pclass']/3
"mslacc.drop(['AdultF','AdultM','Girl','ChildSex'],axis=1,inplace=True)"
mslacc.drop_duplicates(inplace=True)
"mslacc.drop(['Name','Cabin','Ticket','Fare'],axis=1,inplace=True)"
mslacc=mslacc.drop(columns=['Name'])
train_data['Family']=mslacc['Parch']+mslacc['SibSp']
trainfinal.Sex=[mslacc[item]foriteminmslacc.Sex]
"mslacc.loc[5:8,('Fare')]"
"mslacc=mslacc.loc[:,(features)]"
mslacc[mslacc.Sex=='male']
train_df['AgeBin_Code']=mslacc['AgeBin_Code'][:891]
mslacc=mslacc.shape[0]-(child+unknown)
train_df['FamilySize']=mslacc['SibSp']+mslacc['Parch']
mslacc['Name'][0:5]
mslacc=mslacc[mslacc['LastName']==ln]
"mslacc=mslacc.drop(['Sex','SibSp','Parch','Pclass','Embarked','Age',
'PassengerId'],axis=1)"
updated_test_data['Title']=mslacc['Name']
"mslacc=mslacc.drop(['Ticket','CabinLetter'],axis=1)"
new_df['Age_qd']=mslacc['Age']**4
mslacc=mslacc[mslacc['pclass']==3]
mslacc=mslacc[Feature_Group2]
mslacc=mslacc[y_columns]
"mslacc[['Name','Survived']].head()"
mslacc[mslacc['Ticket']=='113505']
features['Sex']=mslacc['Sex']
train[feature]=(mslacc[feature]-mean)/std
member['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc=mslacc.drop(['encodedTitle'],axis=1)"
mslacc.drop(columns=test_bfe.columns[index_deleted]).head(3)
mslacc=mslacc.loc[mask_noage]
mslacc['SibSp'].describe()
mslacc.Survived.describe()
"mslacc=mslacc[['Female','Children','Parch','SibSp','Class1_Premium',
'Class1','Class2']]"
"mslacc.drop(['Sex_male','SibSp','Parch','Em_Q','Em_S','Fare'],axis=1,
inplace=True)"
test_df['Deck']=mslacc[891:]['Deck']
titanic_test['Emb_Sex']=mslacc['Embarked']*mslacc['Sex']
dataset['Sex']=[(0ifr=='male'else1)forrinmslacc['Sex']]
"mslacc=mslacc.loc[mslacc['Survived']==1,'Fare']"
mslacc=mslacc[0:891]
mslacc=mslacc[df_i['survived']==i_s][col]
mslacc=mslacc[mslacc.Age!=0]
train_df['Family']=mslacc['Parch']+mslacc['SibSp']
mslacc[cols]
"mslacc=mslacc['n_iter'],"
"mslacc=mslacc.drop(columns=['PassengerId','Pclass','Name','Sex',
'Ticket','Cabin','Embarked','Cabin2'])"
mslacc=pd.read_csv('./../input/train.csv')
mslacc=mslacc[(mslacc['Sex']=='male')&(mslacc['Survived']==0)]
data_test_all['Family']=mslacc['SibSp']+mslacc['Parch']
"mslacc=mslacc.loc[mask_Age,['Age','Title','Sex','Pclass']]"
"trainx,testx=mslacc.iloc[x],mslacc.iloc[y]"
df['Group_Size']=mslacc['Parch']+mslacc['SibSp']+1
mslacc=mslacc['pclass']==mslacc['pclass']
original_test['Male']=(mslacc['Sex']=='male')+0
"mslacc=mslacc.drop(['Name','Sex','Ticket','Cabin','Embarked'],axis=1)"
"mslacc=mslacc[['Survived','Pclass','Sex','Fare','Embarked',
'FamilySize','Initial','Age_cat']]"
mslacc.describe(include=['O'])
"mslacc.drop(['Pclass'],axis=1,inplace=True)"
train['AgeGroup'][x]=mslacc[mslacc['Title'][x]]
"mslacc.drop(['C3'],axis=1,inplace=True)"
"mslacc=mslacc.drop(['Name','Age','Fare'],axis=1)"
"train_y_cv,test_y_cv=mslacc[train_index],mslacc[test_index]"
"mslacc=mslacc.drop('Result',axis=1)"
mslacc=mslacc.drop(columns=['ID'])
"mslacc=mslacc.drop('CabinCount',axis=1)"
mslacc=mslacc[columns+['Survived']]
mslacc[vd['PassengerId']==1284]['Survived']
"mslacc=mslacc.drop(['Name','Ticket','Cabin','Sex','Fare','Age'],axis=1)"
mslacc=mslacc['sex']==mslacc['sex']
df_titanic['Name']=mslacc['Name']
family['FamilySize']=mslacc['Parch']+mslacc['SibSp']+1
mslacc=pd.read_csv(path+'train.csv')
"mslacc={'train':mslacc['Survived'],'test':ens_pred}"
"mslacc.drop(labels=['PassengerId','IsTrain'],axis=1,inplace=True)"
"train_vw_cv,valid_vw_cv=mslacc[train_idx],mslacc[valid_idx]"
mslacc=mslacc[mslacc['pclass']==cls]
"mslacc=mslacc.drop(['Cabin','Cabin_Letter','Cabin_Letter_num','Name',
'Ticket'],axis=1)"
"mslacc.drop(['Age_was_missing'],axis=1,inplace=True)"
y_pred['PassengerId']=mslacc['PassengerId']
x_train[predict_train_index[i]]=mslacc[i]
"mslacc=mslacc.drop(labels=['PassengerId','Name','Ticket','Cabin',
'Fare','FareRange','Age'],axis=1)"
"mslacc=mslacc[['Pclass','Fare','Embarked','Deck']]"
titanic_df['Family']=mslacc['Parch']+mslacc['SibSp']+1
subdf.loc[subdf['pred_1']>=0.5][:5]
mslacc=mslacc[['Fare']]
"mslacc.loc[22:29,(['PassengerId','Name','Age'])]"
mslacc=mslacc[categorical_features]
mslacc=mslacc[select_features_kbest]
"mslacc=mslacc.drop(['Pclass','Sex','Age_categories','Age','SibSp',
'Parch','Embarked'],axis=1)"
"mslacc=mslacc.drop(['Survived','Family_flag'],axis=1)"
mslacc=mslacc[sub_columns]
mslacc[mslacc[i]]
"mslacc.drop(['Embarked','Age','Sex','Name','Fare'],axis=1,inplace=True)"
"mslacc.drop(columns=['Pclass','Sex'],axis=1,inplace=True)"
mslacc[mslacc.Fare>280]
mslacc=mslacc[useful_cols]
data_set['Familymem']=mslacc['SibSp']+mslacc['Parch']
mslacc=mslacc.loc[mslacc['Age']<13]
mslacc=mslacc[a]
"mslacc=mslacc.drop(['Name','Ticket'],1)"
"mslacc.drop('Survived',axis=1)"
"mslacc=mslacc[['Pclass','SibSp','Fare','Cabin','Title','FamliySize',
'Alone','Age']]"
"mslacc.drop(['surname_Exclude'],axis=1,inplace=True)"
df_train['age_norm']=(mslacc['Age']-age_mean)/age_std
"mslacc=mslacc.drop(col,axis=1)"
mslacc['PassengerId'].head(20)
tit['Fam']=mslacc['SibSp']+mslacc['Parch']
mslacc=pd.read_csv(TRAIN_PATH)
mslacc=pd.read_csv(train_path)
"mslacc=mslacc.drop(['fare_bin'],axis=1)"
df_train['FSize']=mslacc['Parch']+mslacc['SibSp']+1
mslacc=mslacc[(mslacc['Sex_Val']==0)&(mslacc['Survived']==1)]
mslacc=mslacc['SibSp']+mslacc['Parch']+1
mslacc=mslacc.drop(columns=['male'])
"mslacc=mslacc.drop(['PassengerId','Name','Ticket','Family','Parch',
'SibSp'],axis=1)"
"mslacc=mslacc.iloc[:,([0,1,2,4,5,6,7,9,11])]"
genderData['Survived']=mslacc['isSurvived']
mslacc['Name'].head(10)
mslacc=mslacc[mslacc['SibSp']==0]
"mslacc.drop(['Title','Title_Code'],axis=1,inplace=True)"
"mslacc[mslacc['type']=='aggregation'].head(primitives[primitives['type']==
'aggregation'].shape[0])"
mslacc=mslacc['Survived'][700:]
"mslacc=[(mslacc[training_vars],y_test)]"
mslacc=mslacc[mslacc.Feature!='Survived']
"mslacc.drop(['Sex','Embarked','Name','Ticket','PassengerId'],axis=1,
inplace=True)"
"mslacc=male_mar=mslacc[(mslacc['Sex']=='male')&(mslacc['SibSp']==
1)&(mslacc['Parch']==0)]"
test_df['FamilyMembers']=mslacc['SibSp']+mslacc['Parch']+1
mslacc[(mslacc['Age']<=16)&(mslacc['Title']=='Mrs')]
"mslacc=mslacc.drop(['Ticket','Ticket_Lett'],axis=1)"
"mslacc=mslacc[mslacc.is_train==0].drop(['PassengerId','is_train'],axis=1)"
"mslacc=mslacc.loc[mslacc['Survived']==0,'Pclass']"
"mslacc.iloc[:n],mslacc[:n],mslacc[:n],mslacc[:n]"
data['IsChild']=mslacc['Age']<14
mslacc=pd.read_csv(titanic_test_file_path)
mslacc=mslacc['Surv']
mslacc[titanic_df['Pclass']==3]['Age'].describe()
"mslacc=mslacc.iloc[:,([0,1,2,5])]"
"mslacc=mslacc[prediction_input].iloc[(train),:]"
"mslacc=mslacc.drop(columns=['Title','Name','Sex','Cabin','Embarked',
'TicketPrefix','TicketNumber'])"
mslacc=1/mslacc[mslacc[1]]*(n_mem_survived_adj-n_mem_dead_adj)
"mslacc=mslacc.drop(['Ticket','Cabin','PassengerId','Name'],axis=1)"
train_test['SibSp_Parch']=mslacc['SibSp']+mslacc['Parch']
"mslacc=pd.read_csv('../input/train.csv')[['Survived','Age','Fare']]"
"mslacc=mslacc[['Pclass','Sex','Age','Fare','Embarked','SibSp','Parch']]"
mslacc['Family'].describe()
"mslacc.drop(['Name','Ticket','Embarked','Cabin'],inplace=True,axis=1)"
mslacc=mslacc[df_pred]
"mslacc=mslacc.drop(['Ticket','Cabin','Name','Sex','SibSp','Parch',
'Embarked','Fare'],axis=1)"
test_df['IsHusband3']=mslacc['Male3']
"mslacc.drop(['Family'],inplace=True,axis=1)"
"mslacc=mslacc[['Sex','Pclass','Fare','Age','SibSp','Parch',
'Embarked_C','Embarked_Q','Embarked_S']]"
"ifmslacc['Deck']==mslacc['Deck']:
continue"
mslacc=mslacc['Cabin']=='M'
"mslacc=mslacc.iloc[i,1]"
mslacc[mslacc.Title=='Capt']
mslacc=pd.read_csv(self.filepath+self.test_fn)
test['Fsize']=mslacc['SibSp']+mslacc['Parch']
N_22[j].alpha=mslacc[j]
"mslacc=mslacc[(mslacc['Sex']=='female')&(mslacc['Pclass']==1)&(
mslacc['Group_Size']=='Solo')]"
test7['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc.loc[((mslacc.Pclass==3)&(mslacc.Sex_male==1)&(mslacc.Age>
60)),:]"
"mslacc[['Fare','Age']].describe()"
mslacc=pd.read_csv('/home/vic/Desktop/Kaggle/Titanic/test.csv')
"mslacc.drop('PassengerId',axis=1,inplace=True)"
ticSur['TicSurvProb']=mslacc['Survived']*100/mslacc['Sex']
mslacc=mslacc[mslacc.Coef!=0]
df_tsne['Survived']=mslacc['Survived']
mslacc=mslacc[(mslacc['Sex']=='male')&(mslacc['Survived']==1)]
test['AgeGroups'][x]=mslacc[mslacc['Title'][x]]
mslacc=mslacc.loc[550]
"mslacc.drop(['Cabin','Name','PassengerId','Ticket'],axis=1,inplace=True)"
test_df['m']=mslacc['MasterMiss']
mslacc=mslacc[output]
mslacc=mslacc[tr]
"mslacc.drop(['Survived_C','Cabin'],axis=1,inplace=True)"
acc_dict[clf]=mslacc[clf]/10.0
df_train['Age']=mslacc['Age'][:891]
mslacc=mslacc[mslacc['Survived']!=1]
"mslacc=train_df.drop('Survived',axis=1)[801:]"
mslacc=mslacc['Age']<15
df['F_10-60']=mslacc['Sex_female']*mslacc['Age_10-60']
output_targets['target']=mslacc['Survived']
"test['Young_m']=(mslacc['Age']>=18)&(mslacc['Age']<=40)&(mslacc[
'Sex']=='male')"
"mslacc=mslacc.drop(['PassengerId','Name','Ticket','Cabin','Embarked',
'Parch','SibSp'],axis=1)"
"mslacc=mslacc.drop(['Cabin','Age'],axis=1)"
train_df['Family_Survival']=mslacc['Family_Survival'][:891]
"mslacc=Xy_train_df.drop('Survived',axis=1)[select_vars]"
final_csv['FamilyCount']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc.drop(col_delete,axis=1,inplace=True)"
mslacc=mslacc[2]
mslacc.head(12)
"df['Class_Age']=mslacc.loc[:,('Age')]*mslacc.loc[:,('Pclass')]"
mslacc[(mslacc.Age>75.0)&(mslacc.Survived==0)]
"mslacc[['Title','TitleBand']].head(10)"
titanic_df['p']=mslacc['ParchBinary']
"mslacc=mslacc.drop(columns=['Age','SibSp','Parch','Fare','EmbarkedC',
'EmbarkedS','EmbarkedC','EmbarkedQ','SexM','SexF','Pclass1',
'Pclass2','Pclass3'])"
"mslacc=mslacc[['Pclass','Sex','Age','SibSp','Parch','Fare','Embarked']]"
"mslacc.drop(labels='Fare',axis='columns',inplace=True)"
"mslacc[cond_notnull&cond_f]['Age'],"
mslacc[mslacc['Age']<1]
mslacc.loc['2014']
mslacc=mslacc[df[column]==category2][measure]
"mslacc=mslacc[[('param_%s'%column)forcolumnincolumns]+[
'mean_test_accuracy','std_test_accuracy','mean_train_accuracy',
'std_train_accuracy','mean_test_precision','std_test_precision',
'mean_test_recall','std_test_recall']]"
df['M_60-100']=mslacc['Sex_male']*mslacc['Age_60-100']
mslacc=pd.read_csv(f'{PATH}train.csv')
"mslacc=mslacc.drop(['Ticket','Cabin','Embarked'],axis=1)"
mslacc['Fare'].describe(include=all)
app_train['Family_size']=mslacc['SibSp']+mslacc['Parch']
data['Family']=mslacc['Parch']+mslacc['SibSp']
dataset['GroupSize']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc[2,2]"
"mslacc=mslacc.drop('Sex_male',axis=1)"
"mslacc.drop(['Sex','Age'],axis=1,inplace=True)"
mslacc=[mslacc[0]for_iinsame_g]
X_train['Title']=mslacc['Title']
test['Title_master']=mslacc['Title']=='Master'
"train['WcgAllDied']=mslacc.iloc[:train_len,(-1)]"
"mslacc=mslacc[:,(0)][y_train==i]"
mslacc=mslacc['SibSp']
"mslacc=mslacc.drop(['Embarked','Sex','Name','Ticket','Cabin'],axis=1)"
"mslacc=mslacc.drop(columns=['Ticket','TNumeric','Pclass'])"
X_train['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
full_data['FamilySize']=mslacc['SibSp']+mslacc['Parch']
"model_data.loc[:,('Family_count')]=mslacc['SibSp']+mslacc['Parch']"
mslacc=mslacc[remove_some_cabins]
"mslacc=mslacc[['Fare','Pclass','Embarked']]"
df['Survived']=mslacc['Survived']
data_one['Cluster']=mslacc['cluster']
"mslacc=train_df.drop('Survived',axis=1)[0:train_set_size]"
"mslacc.drop(['Age'],1,inplace=True)"
"mslacc.loc[Outliers_to_drop,num_features]"
"mslacc=mslacc[['PassengerId','out']]"
"mslacc=mslacc[['Pclass','Sex','Age','SibSp','Parch','Fare',
'Embarked','Survived']]"
mslacc=(mslacc['Embarked']=='S')&(mslacc['Survived']==1)
"dftrain.loc[idx,'CountTicket']=mslacc[ticket]+mslacc[ticket]"
"mslacc=mslacc.drop(['PassengerId','Survived'],axis=1)"
"mslacc=mslacc['n_jobs'],"
"submission_df[['PassengerId','Survived']]=mslacc[['PassengerId','Survived']
]"
"mslacc.drop(['Sex'],inplace=True,axis=1)"
train_data['Family']=mslacc['SibSp']+mslacc['Parch']
mslacc=mslacc['Sex']==1
output['Sex_Fare']=mslacc['Fare']*mslacc['Sex']
"mslacc.drop(['Name','family_or_alone','family_type','age_type'],axis=1,
inplace=True)"
"mslacc.loc[(mslacc['Parch']>4)&(mslacc['Parch']>4),'Parch']"
"mslacc=pd.read_csv('../input/test.csv',index_col=0)"
df['FamSize']=mslacc['Parch']+mslacc['SibSp']+1
"mslacc=mslacc.drop(columns=['Survived','PassengerId','Name','Ticket',
'Cabin','SibSp','Parch'])"
"mslacc=mslacc.drop(['SibSp','Parch','familySize'],axis=1)"
mslacc=mslacc[mslacc['Age']<=18]
mslacc[mslacc.Cabin=='C'].head()
"mslacc=mslacc[['Age','Fare','Survived']]"
mslacc=mslacc[-418:]
"mslacc=mslacc.iloc[:881,:]"
"dftest.loc[idx,'CountTicketButLast_InTrain']=mslacc[ticketButLast]"
"mslacc=mslacc[['Parch','Survived']]"
"trainEmbarkedPercentage['embarkedPercentage']=mslacc['Survived'
]/totalTrainData*100"
"imputedTest[:,(1)][i]=mslacc[:,(1)][i]*mslacc[:,(0)][i]"
"mslacc=mslacc.drop(['Cabin','Ticket'],axis=1)"
mslacc.T.loc['Cost']
(mslacc['SharedTicket']==1)&(mslacc['SharedName']==0)
"mslacc=mslacc.drop(['CategoricalFare'],axis=1)"
"mslacc=mslacc[['PassengerId','Age','Survived','Pclass','Sex','Fare',
'FamilySize','Embarked']]"
mslacc=mslacc['n_hidden']
mslacc=mslacc['Survived'].iloc[:891]
"mslacc.drop(['Ticket','Cabin'],axis=1,inplace=True)"
"df['male_perc']=mslacc[mslacc.columns[0]]/(mslacc[mslacc.columns[0]]+
mslacc[mslacc.columns[1]])"
"mslacc=mslacc.drop(['PassengerId']+cols_with_missing_values,axis=1)"
"mslacc=mslacc.loc[mslacc['Survived']==0,['Pclass','Sex','PassengerId']]"
"mslacc[(mslacc.Sex=='female')&(mslacc.Pclass==1)&(mslacc.Survived==1)
].head(20)"
"mslacc[(mslacc['Cabin']=='T')|(mslacc['Cabin']=='B51B53B55')|(
mslacc['Cabin']=='FE69')|(mslacc['Cabin']=='FG73')]"
"test['AgeBand']=mslacc.iloc[train_len:,(0)]"
"mslacc=mslacc.drop(labels=category_labels,axis=1)"
entire['Age_category']=mslacc[0]
"df_temp.loc[df_temp['AgeCat']==i,'Count']=mslacc[df_temp['AgeCat']==i][
'Count']/mslacc[i]"
mslacc=mslacc['dw']
dataset.Embarked=[mslacc[item]foriteminmslacc.Embarked]
mslacc=mslacc[:train_end_idx]
"mslacc=mslacc['Survived']
mslacc=mslacc.drop('Survived',axis=1)"
mslacc=mslacc['Group_Category']
df_age['Survived']=mslacc[mslacc.Survived==1].Age.describe()
"mslacc=mslacc.loc[index_selection_svc,['estimator','params',
'val_score','mean_test_score','mean_train_score','val_F_score']]"
"mslacc['Build_time_'+mslacc[i]],"
mslacc=pd.read_csv(in_loc)
mslacc=mslacc[pclass-1]
df_test['Ticket']=mslacc['Ticket'][891:]
"mslacc=pd.read_csv('../input/test.csv',na_values='NaN',index_col=0)"
df_train[feature+'_bin']=mslacc[feature+'_bin'][:train_size]
"mslacc[['ticket','ticket_prefix','ticket_nr']].head()"
train_df['Farebins']=mslacc['Fare']
test_df['Ms']=mslacc['MasterMiss']
"mslacc=mslacc.drop(columns=['Pclass','Embarked','Age'])"
"mslacc.drop('Embarked',inplace=True,axis=1)"
"mslacc=mslacc.drop(['Cabin','Ticket','Embarked'],1)"
mslacc=mslacc[index]
df[1]=mslacc['Fare'].loc[mslacc.Pclass==1]
train['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
mslacc=pd.read_csv(input_io_dir+'train.csv')
"mslacc=mslacc[mslacc['DataType']==1].drop(['PassengerId','Survived',
'Name','Ticket','Cabin','DataType','Tour','SurvivedTour'],axis=1)"
"mslacc=mslacc.drop('Ticket_Sign2',axis=1)"
"mslacc=mslacc[mslacc['Set']=='train'].drop('Set',1)"
"df2['%s_%s'%(name,field_name)]=mslacc[i]"
mslacc=mslacc[TRAIN_COUNT:]
mslacc[mslacc['Age']>=60]
mslacc=mslacc[cols].loc[mslacc['Pclass']==3]
mslacc[['Age']]
"mslacc=mslacc.drop(['Sex','Embarked','Pclass','Name_title'],axis=1)"
"mslacc=mslacc.drop(['PassengerId','Name','Age','SibSp','Parch',
'Ticket','Fare','Cabin'],axis=1)"
"mslacc=[mslacc['Pclass']],"
train['Family_Survival']=mslacc['Family_Survival'][:891]
df['FareAdjusted']=mslacc['Fare']/10.0
X_full['SibSp']=mslacc['SibSp']
df_test['Fare']=(mslacc['Fare']-fare_mean)/fare_std
"mslacc=mslacc.drop(['Cabin','Embarked','Name','CabinArea','Title',
'PassengerId','Ticket'],axis=1)"
"mslacc=mslacc[['Age','Pclass','Fare','Parch','SibSp','Sex',
'Embarked_C','Embarked_Q','Embarked_S']]"
"mslacc=((mslacc['FareBand']==band1)|(mslacc['FareBand']==band2))&(
mslacc['Pclass']==3)"
"train,test=mslacc[:train_len],mslacc[train_len:]"
df['total']=mslacc[0]+mslacc[1]
"mslacc=mslacc.drop(['SibSp','Parch','Fare','Name','Cabin','Ticket'],
axis=1)"
mslacc=mslacc[mslacc['Embarked']=='Q'].shape[0]
"mslacc=mslacc.drop(columns=['ID','Survived'])"
"mslacc=mslacc.loc[index,'Embarked']"
farecalcul[row[0]]=mslacc[1]['Fare']/mslacc['Count'].values[0]
mslacc=mslacc['Survived'][train_set_size:train_set_size+valid_set_size]
"dftrain.loc[idx,'FareCorrect']=mslacc.loc[idx,'Fare']/mslacc[ticket]"
train_df['Fare/person']=mslacc['Fare']/mslacc['FamMembers']
"mslacc.drop(['Name','Ticket','PassengerId'],inplace=True,axis=1)"
test['Age_4']=(30<=mslacc['Age'])&(mslacc['Age']<45)
df['FamSize']=mslacc['SibSp']+mslacc['Parch']
df['age_T']=mslacc['Age']
"mslacc=pd.read_csv(path+file,index_col=0)"
"mslacc.loc[(mslacc['PassengerId']==1044),:]"
data['Alone']=data['Alone']=(mslacc['SibSp']==0)&(mslacc['Parch']==0)
mslacc=mslacc['Title']=='Dr'
"mslacc=mslacc.drop(['Embarked','Embarked_S'],axis=1)"
df_test['FamilySize']=mslacc['SibSp']+mslacc['Parch']
mslacc=mslacc[optimized_predictors]
"mslacc=mslacc[mslacc.index[mslacc.loc[:,('Survived')]==0],...]"
mslacc[(mslacc.Age<1.0)&(mslacc.Survived==0)]
"mslacc=mslacc[['Pclass','Sex','ParchCat','Embarked','Fare',
'TitleCat','Age','TicketCat','NameLen']]"
"mslacc=mslacc.iloc[0:nTrain,:]"
data['Title_Dr']=[(1iftitlein['Dr']else0)fortitleinmslacc['Title']]
mslacc=[mslacc[0]]+v+[mslacc[-1]]
combined_df['is_alone']=mslacc['family_size']==0
"mslacc=mslacc[['Pclass','Miss','Mr','Mrs','Sex','Age','SibSp','Parch']
]"
test['Age_5']=(45<=mslacc['Age'])&(mslacc['Age']<60)
mslacc[mslacc.Embarked!=mslacc.Embarked]
test_df['Age*Pclass']=mslacc['Age']*mslacc['Pclass']
"mslacc.drop(['Title','Embarked'],axis=1,inplace=True)"
data_all['Title_Rare']=(mslacc['Title']==5)+0
mslacc=mslacc[(mslacc['Age']>18)&(mslacc['Parch']>0)]
"mslacc['Val_acc_'+mslacc[i]],"
mslacc=mslacc[train]
"mslacc=pandas.read_csv('../input/train.csv',low_memory=False)"
mslacc=mslacc[titanic_features]
"mslacc['Fare'],"
Df['High-Low']=mslacc['PREMAX']-mslacc['PREMIN']
mslacc[0]
df_train['SibSp_0_1_2over']=[(iifi<=1else2)foriinmslacc['SibSp']]
"mslacc.drop('Sex',inplace=True,axis=1)"
"class_fare.loc[(2),:]=mslacc[df['Pclass']==2]['Fare'].describe()"
Answer['PassengerID']=mslacc['PassengerId']
mslacc=mslacc['Pclass']==df_titanic.iloc[age]['Pclass']
"mslacc[['Age','Fare']].describe()"
"(mslacc['Age'][sel_age_fin],train['Age'][sel_age_fin][sel_age_male],train
['Age'][sel_age_fin][sel_age_female]),"
mslacc=mslacc[fldname]
mslacc=mslacc[r][c]
df_test['Group_Size']=mslacc['Parch']+mslacc['SibSp']+1
mslacc[mslacc['Embarked']=='S'].shape[1]
df['family_size']=mslacc['Parch']+mslacc['SibSp']+1
"mslacc=mslacc.drop(features,axis=1)"
df_analysis['family_size']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc=mslacc.loc[(mslacc['Sex']=='female'),:]"
test_df['FamMembers']=mslacc['SibSp']+mslacc['Parch']+1
mslacc=mslacc[features_to_keep]
"mslacc=mslacc.drop(columns=['PassengerId','Name','Ticket'],inplace=False)"
data['FamMem']=mslacc['SibSp']+mslacc['Parch']
mslacc=mslacc['Survived']==1
mslacc=mslacc[mslacc['Pclass']==pclass]
mslacc[mslacc.Ticket=='113781']
data_all['Pclass_1']=(mslacc['Pclass']==1)+0
train_df['Title']=mslacc['Name']
s_corr[f'db{l}']=mslacc[f'db{l}']/(1-beta2**t)
test_df['Sex']=mslacc['Sex']=='male'
"mslacc.drop(columns=bad_title,inplace=True)"
mslacc=mslacc['Survived'].iloc[:train_size]
d['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
mslacc=mslacc[_target]
"mslacc=mslacc[features].drop(dropped_features,axis=1)"
mslacc=mslacc[maskGroupTrain]
mslacc=mslacc[index][0]
"df['male_perc']=mslacc[mslacc.columns[1]]/(mslacc[mslacc.columns[0]]+
mslacc[mslacc.columns[1]])"
"data['NobleTitle']=[(1iftitleinnobleTitleselse0)fortitlein
mslacc['Title']]"
"mslacc=mslacc.drop(['PassengerId','Ticket','Survived'],axis=1)"
mslacc=mslacc[0][0]
"mslacc.drop(['Name','PassengerId','Ticket'],axis=1)"
"mslacc=mslacc['Parch'],"
mslacc=pd.read_csv(filepath_or_buffer=testFile)
"mslacc=mslacc.drop(['SibSp','Parch','FamilySize'],axis=1)"
mslacc=title_base_string_2+mslacc[field]
mslacc[data['Survived']==0]['Title_Officer']
"mslacc.drop(['Name','Fare','Ticket','Cabin'],axis=1).head()"
"mslacc=mslacc.drop(labels=['PassengerId'],axis=1)"
"mslacc=mslacc.iloc[:,([1,3])]"
data_train['Family']=mslacc['Parch']+mslacc['SibSp']
test['Age_2']=(4<=mslacc['Age'])&(mslacc['Age']<15)
"mslacc=mslacc.drop(['PassengerId','Name','SibSp','Parch','Fare',
'Ticket','Cabin'],axis=1)"
"mslacc=mslacc.drop('Type_Others',axis=1)"
"X_prime[:,(6)]=mslacc['Parch']-2"
"mslacc=mslacc.drop(unwanted,axis=1)"
"mslacc=mslacc.drop(['Pclass','Name','Sex','Age','SibSp','Parch',
'Ticket','Fare','Cabin','Embarked'],axis=1)"
combined['Family']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc=mslacc.drop(columns=['Embarked_Q','Embarked_S'])"
data_train['Age']=mslacc['Age_imputed']
mslacc[mslacc.surname=='Hoyt']
mslacc=mslacc.loc[mslacc.index]
"mslacc=mslacc.drop(['Age','Cabin','Ticket','Fare','Embarked'],axis=1)"
"mslacc=mslacc.loc[:,(column_list)]"
p_data['FamilySize']=mslacc['Parch']+mslacc['SibSp']+1
mslacc[mslacc['pclass']==3]
mslacc=mslacc['b4']
"mslacc=mslacc[['Age','Sex','Pclass','Fare','Survived','SibSp',
'Parch','Ticket','Embarked','Cabin','Name']]"
f_train[k]=mslacc[k]['f_train']
mslacc.loc[mslacc['Survived']==1]
"mslacc.drop(['Ticket','Survived','PassengerId'],axis=1,inplace=True)"
mslacc['Cabin'].head(10)
titanic_df['Pch']=mslacc['ParchBinary']
"mslacc.drop(['Pclass','Name','Sex','SibSp','Parch','Ticket','Cabin',
'Embarked','PassengerId','Parch_9'],axis=1,inplace=True)"
"mslacc.drop(labels=['Cabin'],axis=1,inplace=True)"
"mslacc=mslacc[['Sex','Survived']]"
mslacc=mslacc['Survived_Model']
df['M_C1']=mslacc['Sex_male']*mslacc['Pclass_1']
mslacc[predictor_columns_hot].head()
mslacc=mslacc[~target]
"mslacc=pd.read_csv('../input/test.csv',usecols=['PassengerId']+
feature_names)"
"mslacc=mslacc.drop([column],axis=1)"
mslacc=mslacc[titanic_df['Survived']==1]['Age']
"mslacc.drop(['FareBin'],1,inplace=True)"
"dfFull.loc[indEmb,'Embarked']=mslacc[0]"
"mslacc=mslacc.drop(['Cabin','PassengerId','Name','Ticket','SibSp',
'Parch'],axis=1)"
mslacc=pd.read_csv(test_url)
"mslacc=mslacc.iloc[6,5]"
mslacc=mslacc.loc[mslacc.Survived!=-888]
mslacc=[mslacc[v]forvinbin_s_label]
mslacc=mslacc[C_O_I]
mslacc['Survived'].describe()
mslacc=mslacc.shape[0]
"mslacc=pd.read_csv(
'../input/titanic-voting-pipeline-stack-and-guide/test_soft_pred_matrix.csv'
,index_col='PassengerId')"
mslacc[640:645]
"mslacc.loc[index,'linear_reg'],"
train_set['Score']=mslacc['Survived']==mslacc['Predict']
data_all['Title_Master']=(mslacc['Title']==4)+0
mslacc=mslacc['Parch']+mslacc['SibSp']
mslacc=mslacc['Age']<15&C3
mslacc=mslacc[mslacc.Survived!=-888]
mslacc=mslacc[1][0]
"data_all['Mother']=((mslacc['Female']==1)&(mslacc['Parch']>0)&(
mslacc['Age']>18)&(mslacc['Title_Miss']==0))+0"
train_df['family_size']=mslacc['SibSp']+mslacc['Parch']+1
df_test['U18']=mslacc['Age']<18
mslacc.FamilySize.describe()
"mslacc.drop(columns=['PassengerId'],axis=1,inplace=True)"
mslacc[:1000]
"mslacc=mslacc.drop('Title',axis=1)"
mslacc=mslacc[ticket]
mslacc['Embarked'].head()
tit_df_san['numofrelatives']=mslacc['SibSp']+mslacc['Parch']
mslacc=[(Trueifmslacc[1]=='1'elseFalse)forrindata]
"mslacc=mslacc[['Pclass','Sex','Age','Parch','Fare']]"
correl_train['Sex01']=mslacc['Sex']=='male'
mslacc['Age']
"mslacc=mslacc.loc[:,(['Age'])]"
"mslacc=mslacc.iloc[0:418,([1,3,4])]"
df_train['Sex']=mslacc['Sex'][:891]
data1['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
mslacc=mslacc[(mslacc['Sex']=='female')&(mslacc['Pclass']==1)]
iset['FamilySize']=mslacc['SibSp']+mslacc['Parch']
dataset['Fare']=mslacc['Fare']
"mslacc=combined.drop(drop_col,axis=1)[891:]"
mslacc=pd.read_csv('predictions.csv')
"mslacc.drop('Name',inplace=True,axis=1)"
"mslacc=mslacc.drop(['Pclass','Sex','female'],axis=1)"
"mslacc.drop(labels='Name',inplace=True,axis=1)"
"mslacc=mslacc.drop(['PassengerId','Name','Ticket','Cabin','Fare'],axis=1
)"
"mslacc=pd.read_csv('../input/gender_submission.csv',index_col=0)"
"mslacc.drop(drops,axis=1,inplace=True)"
"mslacc=mslacc.drop(['Cabin','Ticket','SibSp','Parch','Name',
'Family_name','Family_name_count','withFamily'],1)"
df_full['FamilySize']=mslacc['SibSp']+mslacc['Parch']
"mslacc=mslacc.drop(['Embarked','Sex','Age','SibSp','Parch','Fare'],
axis=1)"
combine[0]['Age']=mslacc['Age']
mslacc=mslacc[mslacc['Fare']>=32].shape[0]
"df.loc[accompanied_females,'Accompanied_female_age_band']=mslacc.loc[
accompanied_females,'Ageband']"
mslacc=mslacc[mslacc.SibSp>0]
"mslacc=mslacc.loc[:,(columns)]"
dftrain['Fsize']=mslacc['Fsize']
"mslacc.drop('New_Age',axis=1,inplace=True)"
"mslacc.drop('SibSp',axis=1,inplace=True)"
"mslacc=mslacc.drop(['AgeGroup'],axis=1)"
categorical_fare['Samples']=mslacc['Survived']
mslacc.Name.head()
"mslacc=mslacc.iloc[:,0:8]"
mslacc=mslacc[cabin_df!='T']
X['Age2']=mslacc['Age']**2
train[feature]=(mslacc[feature]-mean)/(max_-min_)
"mslacc[mslacc['type']=='transform'].head(primitives[primitives['type']==
'transform'].shape[0])"
"mslacc=mslacc.drop(X.columns[j],axis=1)"
dataset['Family']=mslacc['SibSp']+mslacc['Parch']
train_df['Family_Size']=mslacc['Family_Size'][:891]
res['PassengerId']=mslacc['PassengerId']
df_comb['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
titanic['FamilyCount']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc=mslacc.drop(labels=['PassengerId','Survived','Name'],axis=1)"
dataset['FamliySize']=mslacc['SibSp']+mslacc['Parch']+1
mslacc=mslacc[mslacc['embarked']=='Queenstown']
allset['TotalFamily']=mslacc['SibSp']+mslacc['Parch']
"mslacc=mslacc.drop({'Pclass','Name','Sex','SibSp','Parch','Ticket',
'Embarked','Age'},axis=1)"
"mslacc=mslacc[['PassengerId','Name','Ticket','Cabin','Embarked',
'Sex','Pclass','Age','SibSp','Parch','Fare']]"
"mslacc[data.Ticket=='364498'][['Ticket','Name','Age','Parch','SibSp']]"
test5['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc[['Survived','Sex']]"
"mslacc=mslacc.drop(['Name','Ticket','Fare_Range','Cabin'],axis=1)"
mslacc=mslacc[df[column]!=category2][measure]
mslacc=mslacc.iloc[mslacc.shape[0]:]
mslacc=mslacc[k*mini_batch_size:(k+1)*mini_batch_size]
mslacc=title_base+mslacc[port]+'(Male)'
"mslacc.drop(columns='Embarked',inplace=True)"
"mslacc=mslacc[['Age','Fare','Parch','SibSp','Pclass','family']]"
"mslacc=mslacc[(mslacc['Sex']=='female')&(mslacc['Pclass']==3)|(
mslacc['Sex']=='male')&(mslacc['Pclass']==1)]"
mslacc=mslacc.loc[validation_index]
"Ytrain_K,Y_cv=mslacc[train_index],mslacc[cv_index]"
"mslacc=pd.read_csv('../input/train.csv',index_col=None,sep=',')"
sub_svc['PassengerId']=mslacc['PassengerId']
traindf['ratioFareClass']=mslacc['Fare']/mslacc['Pclass']
test['FamilySize']=1+mslacc['SibSp']+mslacc['Parch']
"mslacc=mslacc.drop(labels=drop_columns,axis=1)"
test['Survived']=mslacc['Survived']
"mslacc=mslacc.drop(['Fare_bin','Cabin'],axis=1)"
"mslacc.drop('index',inplace=True,axis=1)"
X_test[var_a+'_'+var_b]=mslacc[var_a]*mslacc[var_b]
"mslacc=mslacc[['male','Pclass','Age','Fsize']]"
df_1['survival']=mslacc['Survived']
"mslacc=[mslacc[index],mslacc[index],mslacc[index],mslacc[index],
mslacc[index],mslacc[index]]"
"mslacc=mslacc.drop(['Lastname'],axis=1)"
"data['Title_Rev']=[(1iftitlein['Rev']else0)fortitleinmslacc[
'Title']]"
test_set['Family']=mslacc['SibSp']+mslacc['Parch']+1
mslacc=mslacc[mslacc.columns[:3]]
mslacc[mslacc.Fare!=512.3292]
"mslacc.loc[:,(['Acceleration','Aggression','Agility','Balance',
'Ballcontrol'])]"
mslacc=mslacc[numeric_atrib]
"mslacc=mslacc[['Survived','Sex','Pclass']]"
mslacc=mslacc[mslacc['Pclass']==3]
"mslacc.drop(['PassengerId','Name','Ticket','Cabin','Embarked','SibSp',
'Parch'],axis=1,inplace=True)"
mslacc=mslacc[new_col]
"mslacc=mslacc[['Pclass','Mr','Mrs','Miss','Sex','Age','SibSp',
'Parch','Fare']]"
"mslacc.drop(['index','PassengerId'],axis=1,inplace=True)"
"mslacc.loc[index,'svm'],"
data_all['Cabin_C']=(mslacc['Cabin']=='C')+0
"mslacc=mslacc[(mslacc['Sex']=='male')&(mslacc['SibSp']==1)&(
mslacc['Parch']>0)]"
mslacc=mslacc[categorical_fea]
mslacc.iloc[0:418]
"mslacc.train[['Ticket','Ticket_density']].head()"
"mslacc=mslacc.loc[(mslacc.SibSp>0),:]"
"mslacc[['Age*Class','Age','Pclass']].head(10)"
"mslacc=mslacc.drop(['name_count','name_first','name_second',
'name_last'],axis=1)"
"mslacc=mslacc.drop(labels=['Survived','PassengerId'],axis=1)"
"mslacc.loc[[61,829]]"
train_data['Age']=(mslacc['Age']-min_fare)/(max_fare-min_fare)
"mslacc.drop(['Name','Ticket','PassengerId','Embarked','Cabin'],inplace
=True,axis=1)"
dataset['FamilySize']=mslacc['SibSp']+mslacc['Parch']
"mslacc=pd.read_csv(
'../input/house-prices-advanced-regression-techniques/train.csv')"
"mslacc=pd.read_csv('../input/train.csv',encoding='ISO-8859-1',
low_memory=False)"
N_21[j].alpha=mslacc[j]
train['family_size']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc=mslacc.drop(columns=['Parch','SibSp'])"
mslacc=mslacc.loc['test']
"mslacc.train[['Age','Age_density']].head()"
"mslacc.drop('male',axis=1,inplace=True)"
data_df['FarePerPerson']=mslacc['Fare']/mslacc['FamilySize']
processed['PassengerId']=mslacc['PassengerId']
"mslacc.drop(['SibSp','Parch','Familysize'],axis=1,inplace=True)"
"mslacc['price'],"
mslacc[:training_data_length].head(2)
correlation_dataframe['target']=mslacc['Survived']
mslacc['Name'].iloc[0]
"mslacc=mslacc.drop('Ticket',axis=1)"
"X_train,y_train,X_test,y_test=mslacc[train],mslacc[train],mslacc[test
],mslacc[test]"
titanic['FamSize']=mslacc['SibSp']+mslacc['Parch']
mslacc=mslacc[1:9]
"mslacc[['Age','TicketFare']].describe()"
"mslacc.drop(['IsTrain','PassengerId'],axis=1,inplace=True)"
"mslacc.drop(labels=['Parch','SibSp'],axis=1,inplace=True)"
df_test['FareAvg']=mslacc['Fare']/mslacc['FamilySize']
"mslacc.drop(['male'],axis=1)"
"mslacc=mslacc.drop(columns=['PassengerId','Name','SibSp','Ticket',
'Cabin'])"
data['relatives']=mslacc['SibSp']+mslacc['Parch']
"mslacc=mslacc.drop(['SibSp','Parch','Sex','Name','Cabin','Embarked',
'Ticket'],axis=1)"
titanic_test['P_sex']=mslacc['Pclass']*mslacc['Sex']
"mslacc=mslacc.drop(['Cabin'],axis=1)"
self.models=mslacc[:]
"mslacc.drop(drop_cols,1,inplace=True)"
mslacc=mslacc[size:]
"mslacc.drop(labels='Cabin',inplace=True,axis=1)"
"mslacc=mslacc.drop(['Cabin','Ticket','Name','PassengerId','SibSp',
'Parch','Age','Fare'],axis=1)"
"mslacc=mslacc[['Age','Fare','Family','Child','Female','Male',
'Class_1','Class_2','Class_3']]"
df[feat+'_norm']=(mslacc[feat]-mean)/stdv
mslacc=mslacc[:mslacc.shape[0]]
"mslacc=mslacc.drop(['Pclass','Sex','Cabin','Embarked'],axis=1)"
"mslacc=mslacc.drop([c.Survived],axis=1)"
mslacc=mslacc[Y_train==0]
"dW[l]=mslacc[l],mslacc[l-1]"
"mslacc[['Pclass','Sex','Cabin']][0:3]"
"train_X_cv,test_X_cv=mslacc[train_index],mslacc[test_index]"
acc_table[name]=mslacc[name]/10.0
"mslacc=mslacc.drop('PassengerId',axis='columns')"
"mslacc=mslacc.drop(['PassengerId','Name','Ticket','Embarked',
'AgeGroup'],axis=1)"
df_train['HadCabin']=mslacc['HadCabin'][:891]
mslacc=pandas.read_csv(TRAIN_PATH)
"mslacc=mslacc[['PassengerId','Embarked','Pclass','Sex','Fare_Scaled',
'AgeCategory','FamilyCount','FamilyCategory','CabinLevel','Title',
'Pclass_Sex','Survived']]"
mslacc=mslacc['learning_rate']
test_df['AgeBin_Code']=mslacc['AgeBin_Code'][891:]
"mslacc.loc[(mslacc.Sex=='female')&((mslacc.Pclass==1)|(mslacc.
Pclass==2)|(mslacc.Age>=50)&(mslacc.Age<70))]"
combine['Fare_eff']=mslacc['Fare']/mslacc['NoPerTicket']
"mslacc.drop(['Title','DatingRank','SureName'],axis=1,inplace=True)"
"mslacc=mslacc[['Classifier','Prediction']].head(5)"
"mslacc=mslacc[:,(1)][y_train==j]"
mslacc=mslacc[t_n[0]:full.size][mslacc.columns[0:mslacc[1]]]
feats['family_size']=mslacc['Parch']+mslacc['SibSp']+1
mslacc['Name_Title'].head()
"mslacc=mslacc[['SURVIVED','PCLASS','AGE','SIBSP','PARCH','EMBARKED',
'SEX']]"
"mslacc=mslacc.drop(['Age','PassengerId'],axis=1)"
"mslacc=mslacc.drop(columns,axis=1)"
"mslacc=mslacc.drop(Columns_to_drop,axis=1)"
mslacc['Survived']>0
mslacc.head(15)
mslacc=mslacc[Keep]
"ifdrop:
mslacc.drop(fldname,axis=1,inplace=True)"
"df_surname['SurnameGroup_include_surviving_men']=mslacc[
'Surname_surviving_men']>0"
"mslacc.drop('Title',inplace=True,axis=1)"
combined_num_cat['Male']=mslacc['Sex']
"mslacc=mslacc.drop(['Name','SibSp','Parch'],axis=1)"
"mslacc.drop(columns=['SibSp','Parch'])"
mslacc=pd.read_csv('../input/dataset/feature_engg_test.csv')
train_df['family_size']=mslacc['sibsp']+mslacc['parch']
temp_train['SibSp']=mslacc['SibSp']
mslacc=mslacc['Pclass']==1
"mslacc=mslacc.drop(drop_cols+['Survived'],axis=1)"
mslacc=mslacc[mslacc.Title=='Miss']
mslacc=mslacc['x']
dict_sal[sal]=mslacc[c]
mslacc=mslacc[i*batch_size:(i+1)*batch_size]
mslacc=mslacc.head(572)
"mslacc.drop(feature,axis=1,inplace=True)"
"mslacc=mslacc.drop(['Ticket','Cabin','PassengerId'],axis=1)"
test2['Fare_Pclass']=mslacc['Fare']*mslacc['Pclass']
mslacc.loc[mslacc.index.values]
"mslacc=mslacc.iloc[:,2:6]"
result['PassengerId']=mslacc['PassengerId']
"mslacc=mslacc.drop(['Name','Sex'],axis=1)"
test['Pclass_3']=mslacc['Pclass']==3
"[mslacc.drop(columns=['Ticket'],inplace=True)fordfin[titanic_df,test_df]]"
test_df['Family']=mslacc['SibSp']+mslacc['Parch']+1
train['FareScaled']=mslacc['Fare']/(mslacc['Parch']+mslacc['SibSp'])
"mslacc=pd.read_csv('%s/%s'%(root_path,'train.csv'))"
mslacc=mslacc[0:t_n[0]][mslacc.columns[0:mslacc[1]]]
test_df['IsHusband1']=mslacc['Male1']
mslacc=mslacc['Fare']>mu+5*sd
"mslacc=mslacc.drop('Fare',1)"
mslacc=mslacc[train_len:].drop(columns=['Survived'])
"mslacc=mslacc.drop(['PassengerId','Age','Pclass','Sex','Name',
'SibSp','Parch','Ticket','Fare','Cabin','Embarked'],axis=1)"
"mslacc=mslacc['Fare'].loc[(mslacc['Embarked']=='S')&(mslacc['Pclass']==
3)]"
mslacc=pd.read_csv('../data/train.csv')
"mslacc.drop(['Name','Sex','Ticket','Cabin','Embarked','Age','MMs',
'Ms','m','Pch','Pc','p','SbS','Sb','s','Fem','F','Male',
'YourCoin5','Survived'],axis=1,inplace=True)"
mslacc=pd.read_csv(PATH+'train.csv')
mslacc.loc[mslacc.Title=='the']
"mslacc.drop(dropping,axis=1,inplace=True)"
"mslacc=mslacc.loc[(mslacc['Survived']==1)&(mslacc['Pclass']==1),'Age']"
"mslacc=mslacc.drop(['CabinBool'],axis=1)"
"mslacc.drop(['Pclass','Name','Sex','Age','SibSp','Parch','Ticket',
'Cabin','Embarked'],axis=1,inplace=True)"
test['family_size']=mslacc['SibSp']+mslacc['Parch']+1
train_df['aile_boyut']=mslacc['SibSp']+mslacc['Parch']
train['Age_4']=(30<=mslacc['Age'])&(mslacc['Age']<45)
"mslacc=mslacc.iloc[:,(mslacc.ids)]"
mslacc=mslacc['male']
"mslacc=[mslacc['Pclass']==1,mslacc['Pclass']==2,mslacc['Pclass']==3]"
"mslacc.loc[[0,5,10,20,50]]"
mslacc=mslacc[test_var]
test_X['FamilySize']=mslacc['SibSp']+mslacc['Parch']
"mslacc.drop('Age',axis=1,inplace=True)"
mslacc['isAlone']
"mslacc=pd.read_csv('../input/test.csv',delimiter=',')"
X_train['Family']=mslacc['Parch']+mslacc['SibSp']
"mslacc.drop(['ElitePerson'],axis=1,inplace=True)"
mslacc=mslacc['QDA']
"mslacc=mslacc.drop(['Survived','young','C'],axis=1)"
mslacc=mslacc[t_n[0]:f_n[0]]['PassengerId']
mslacc=mslacc[Xmat_nan>0]
mslacc=pd.read_csv('titanic_pred.csv')
output_data_frame['PassengerId']=mslacc['PassengerId']
"mslacc=mslacc[['PassengerId','Pclass','Sex','Age','Embarked',
'FamilySize','Fareband','Title']]"
mslacc=mslacc.iloc[mslacc[1]]
Fare_Set['Fare_Grp']=mslacc[0]
Test['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
mslacc=mslacc[0:700]
"mslacc.drop(['Name','Title','Ticket','Parch','SibSp','Age','Fare'],
axis=1,inplace=True)"
titanic_df['IsHusband2']=mslacc['Male2']
"mslacc=mslacc[['Age','Pclass_1','Pclass_2','Pclass_3','Sex_female',
'Sex_male']]"
"mslacc=mslacc[['Pclass','Sex','Age','SibSp','Parch','Fare']]"
mslacc['Salutation']
mslacc=mslacc['Fare'][mslacc['Survived']==1]
mslacc=mslacc[ISchild]
"mslacc.drop(['Embarked','Cabin','Pclass','Embarked','Title'],inplace=
True,axis=1)"
"mslacc=mslacc.drop(['Pclass_3','SibSp','Parch','Sex'],axis=1)"
mslacc=mslacc[_id]
"train['TSNE3']=mslacc.iloc[0:train_rows-1,(2)]"
"mslacc=mslacc.drop(fDrop,axis=1)"
"mslacc=[(mslacc[1],mslacc[0])forxinint_and_cat]"
mslacc.loc[nullFares]
"mslacc=mslacc[['Pclass','Sex','Parch','SibSp','title_age_level','Fare']]"
df_train['TicketRef']=mslacc['TicketRef'][:891]
"big_X.loc[ni,['Age']]=mslacc[i]"
train_df['Family']=mslacc['SibSp']+mslacc['Parch']
mslacc=mslacc[:ml_model]
"mslacc=mslacc[['PassengerId','Name','Fare','Sex','Age','SibSp',
'Parch','Pclass']]"
"mslacc.drop('Survived',inplace=True,axis=1)"
"n_test,m_test=mslacc.shape"
all_data['FamilyNum']=mslacc['SibSp']+mslacc['Parch']+1
mslacc=mslacc[key][0]
"mslacc=mslacc.loc[:,(mslacc.columns!='Survived')]"
"mslacc=mslacc.loc[:,'Pclass':'Occupation']"
df_submission['family_size']=mslacc['parch']+mslacc['sibsp']+1
titanic_train_dataset['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc=mslacc.loc[:,(feature_columns)]"
mslacc=pd.read_csv(f'{input_path}test.csv')
"mslacc=mslacc.drop(['TotalFamily'],axis=1)"
data_df['WomanChildTour']=(mslacc['IsWoman']>=1)&(mslacc['IsChild']>=1)
mslacc=mslacc[mslacc.Fare>181]
mslacc=mslacc[train['Survived']==1]['Age']
df_train[feature+'_bin_code']=mslacc[feature+'_bin_code'][:train_size]
"mslacc=pd.read_csv(train_file_path,index_col='PassengerId')"
mslacc=mslacc.drop(columns=['S'])
filt_df['has_family']=mslacc['sibling_count']+mslacc['parent_child_count']
"mslacc[0:train_size],"
"mslacc=mslacc.drop(['Survived','Cabin','Ticket','PassengerId'],axis=1)"
train_df['Fare']=mslacc['Fare']/mslacc['FamilySize']
"mslacc[['Fare','Fare_bin']].head(10)"
"mslacc=mslacc.drop(['Name','Parch','PassengerId','SibSp','Fsize',
'FareBand','AgeBand'],axis=1)"
train_data['Embark_C']=mslacc['C']
mslacc['Age'][0:15]
train['Age_1']=mslacc['Age']<4
train['Fare_fillin']=mslacc['Fare_fillin']/10.0
"mslacc=[mslacc[0]fortinall_predictionsifmslacc[1]==1andmslacc[2
]==0]"
df_test['Family_members']=mslacc['SibSp']+mslacc['Parch']
"mslacc.drop('Q',axis=1,inplace=True)"
mslacc=mslacc[lambd][gamma]/n_splits
mslacc=mslacc['Survived'][:891]
mslacc=mslacc[(mslacc.Age<20)|(mslacc.Title=='Master.')]
df['M_0-10']=mslacc['Sex_male']*mslacc['Age_0-10']
mslacc.Name.head(10)
"mslacc.drop(['Cabin','Ticket','Name','SibSp','Parch','PassengerId'],
axis=1,inplace=True)"
"mslacc.drop(['Female'],axis=1,inplace=True)"
data_test['FamilyPresent']=mslacc['SibSp']+mslacc['Parch']
"mslacc.iloc[3:5,:]"
mslacc=mslacc[:train_len]
"W[l]=mslacc[l],mslacc[l-1]"
"mslacc=pd.read_csv('../input/titanicdivethrough/prepared_test.csv',
index_col=0)"
"mslacc=pd.read_csv(ROOT_DIR+'test.csv',sep=',')"
mslacc=mslacc[eighty_precentile:]
"mslacc=pd.read_csv(input_io_dir+'train_features.csv',header=0)"
titanic['FamilySize']=mslacc['SibSp']+mslacc['Parch']
"mslacc=mslacc.loc[mslacc.label=='train'].drop('label',axis=1)"
"mslacc.drop(columns=['PassengerId','Cabin','Name','SibSp','Parch',
'Ticket'],inplace=True)"
mslacc=running_loss/mslacc[phase]
mslacc[3]
df_features['FamilySize']=mslacc['SibSp']+mslacc['Parch']
train['Age_2']=(4<=mslacc['Age'])&(mslacc['Age']<15)
"ymin,ymax=mslacc[mslacc.name],mslacc[mslacc.name]"
"mslacc.drop([variable],axis=1,inplace=True)"
mslacc[(mslacc['PassengerId']==62)|(mslacc['PassengerId']==830)]
"mslacc=rawdata[rawdata.Age<18][rawdata.Parch<2][['Age','Parch']]"
"mslacc=mslacc.loc[:,(['Age','Embarked','Fare','Pclass','Sex',
'Cabin','FamMem','Title','isAlone','def_Cabin','rep_ticket',
'fare/ticket','age*Pclass','age*fare'])]"
"mslacc=mslacc.drop(['PassengerId','SibSp','Parch','Fare','Name',
'Cabin','Ticket'],axis=1)"
"mslacc.drop('Cabin',axis=1,inplace=True)"
"mslacc=mslacc[['PassengerId','Group_size']]"
mslacc=mslacc[(mslacc['Parch']>0)&(mslacc['Sex']=='female')]
"mslacc=mslacc.drop(['individualticket','Age','Name','PassengerId',
'SibSp','Parch'],axis=1)"
mslacc=feature_imp_sorted_ada.head(top_n_features)['feature']
df_test['Alone']=mslacc['Alone'][891:]
mslacc=mslacc['val_acc']
"mslacc=pd.read_csv('../input/train.csv',header='infer',index_col=
'PassengerId')"
"mslacc=mslacc.loc[:,(lstInclude)]"
mslacc=mslacc[Feature_Group1]
"mslacc=mslacc.drop(['SibSp','Parch'],1)"
train_df['Age']=mslacc['Age']
mslacc=[mslacc[4]forrindata]
mslacc=mslacc['Target']
mslacc[mslacc['SibSp']==8]
mslacc=pd.read_csv(f)
mslacc=[iforiinmslacc.describe()]
"ifdropFamilySize==True:
mslacc=mslacc.drop('FamilySize',axis=1)"
"mslacc.drop(['Cabin','Ticket','Name','Age'],axis=1,inplace=True)"
"mslacc=mslacc.drop('Cabin1',axis=1)"
train['AgeModified']=mslacc['Age']
"mslacc.drop(['PassengerId'],axis=1)"
mslacc=mslacc[(mslacc['Sex']=='male')&(mslacc['Survived']==1)].shape[0]
train_df['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc.drop(['Pclass','SibSp','Parch','Age','Fare'],axis=1,inplace=True)"
mslacc=mslacc.drop('total')
train['AgeGroups'][x]=mslacc[mslacc['Title'][x]]
test['Age'][x]=mslacc[mslacc['Title'][x]]
mslacc=mslacc[man]
mslacc=mslacc[test_indices]
"mslacc.drop(['PassengerId','Name','Sex','Ticket','Cabin','Embarked'],
inplace=True,axis=1)"
mslacc[:50]
"mslacc.drop(['PassengerId','Sex','Embarked','Name','Ticket','Title',
'Cabin','Pclass'],axis=1,inplace=True)"
"mslacc=mslacc.loc[mslacc.Survived==-888,columns]"
"mslacc.drop(['PassengerId','Name','Ticket','Cabin','Age','Fare_bin'],
axis=1,inplace=True)"
"mslacc[mark],"
test_df['family_onboard']=mslacc['Parch']+mslacc['SibSp']
mslacc=mslacc['CabinType']
"mslacc=mslacc.drop(['Name','Ticket','Cabin','Fare','PassengerId'],axis=1
)"
"mslacc.drop(labels='Name',axis=1,inplace=True)"
mslacc=pd.read_csv(melb_data_filepath)
newDF[new_name]=mslacc[new_name]
mslacc['logistic_regression_second_level_selected_cols']
"mslacc=mslacc[1].drop('kmeans_labels',axis=1)"
train_df['Pclass']=mslacc['Pclass']-1
mslacc=mslacc[mslacc['']]
mslacc=mslacc[real_vars]
mslacc=mslacc[key]
"mslacc=mslacc.loc[mslacc['Survived']==1,'Parch']"
"mslacc=mslacc.drop(['Dataset','PassengerId'],axis=1)"
"mslacc=mslacc.drop(['Ticket','Fare','Embarked','Cabin','Name'],axis=1)"
"mslacc.drop(columns=['Cabin','PassengerId','Name','Ticket'],inplace=True)"
mslacc=mslacc.drop(columns=['Survived'])
data_all['Cabin_A']=(mslacc['Cabin']=='A')+0
df_train['Alone']=mslacc['Alone'][:891]
"mslacc=mslacc[['Fare','Survived']][mslacc['Fare']<200]"
"mslacc=mslacc.drop('Alone',axis=1)"
traindf.describe()['Fare']
"mslacc=mslacc.drop('isSenior',axis=1,errors='ignore')"
"mslacc=mslacc.drop(['Name','PassengerId','Ticket','Cabin'],axis=1)"
mslacc=mslacc[0:m]
mslacc[(mslacc['Pclass']==3)&(mslacc['Embarked']=='S')].head()
"mim,mom=mslacc[0]"
"mslacc=mslacc.drop(['MaidenFirstName'],axis=1)"
mslacc[one_hot_columns].shape
"mslacc['Sex']==gender,"
train_data['Fsize']=mslacc['SibSp']+mslacc['Parch']
mslacc[(mslacc.PassengerId==27)|(mslacc.PassengerId==88)]
mslacc=mslacc.query('Modelnotin@ignore')
"mslacc.drop(['Person','Embarked'],axis=1,inplace=True)"
"mslacc=pd.read_csv(test_file_path,index_col='PassengerId')"
test_df['IsAgeNaN']=mslacc['Age']
"mslacc=mslacc.drop('Cabin_cat',axis=1)"
"mslacc[mslacc['Ticket']=='347082'].drop('logFare',axis=1)"
df[2]=mslacc['Fare'].loc[mslacc.Pclass==2]
mslacc=mslacc.iloc[:ntrain]
acc_train[k]=mslacc[k]['acc_train']
train_df['Agebins']=mslacc['Age']
mslacc=pd.read_csv(titanic_train_file_path)
mslacc=pd.read_csv(path)
mslacc=mslacc[model_columns]
test['Family_size']=mslacc['Parch']+mslacc['SibSp']+1
mslacc=mslacc[train['Survived']==0]['Age']
mslacc=mslacc[:training_data_length]
"mslacc=mslacc.iloc[:,0:13]"
mslacc=mslacc['Fare']
"mslacc[(mslacc.Sex=='female')&(mslacc.Pclass==2)&(mslacc.Survived==1)
].head()"
"mslacc.drop(['Embarked'],1,inplace=True)"
"mslacc.drop('Age',axis=1)"
X2[i]=(mslacc[i]-m2)/(max2-min2)
"mslacc[~((mslacc.Title=='Mr')|(mslacc.Title=='Mrs')|(mslacc.Title==
'Master')|(mslacc.Title=='Miss'))]"
"mslacc[(mslacc['Pclass']==1)&(mslacc['Fare_eff']>0)&(mslacc[
'Fare_eff']<10)]"
"mslacc.drop(['Name','SibSp','Parch','Ticket'],axis=1,inplace=True)"
df_test['Fare']=mslacc['Fare'][891:]
mslacc=mslacc[best_score]
test['family_size']=mslacc['SibSp']+mslacc['Parch']
data_test['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc=mslacc.drop(['PassengerId','Ticket','Cabin','Name','Sex',
'SibSp','Parch','Embarked','Fare'],axis=1)"
"mslacc.drop(['PassengerId','Ticket','Name','Age','SibSp','Parch',
'Fare'],axis=1,inplace=True)"
"mslacc.drop('embarked_Q',axis=1,inplace=True)"
mslacc=mslacc[best_model]
mslacc.loc['Store2']
"mslacc.drop(['Embarked','Title'],axis=1,inplace=True)"
mslacc=mslacc[:600]
mslacc=mslacc[prediction_fields]
"mslacc=mslacc.drop(['PassengerId','Parch','Name','Ticket',
'Salutation'],axis=1)"
"mslacc=pd.read_csv('../input/gender_submission.csv',index_col='PassengerId')"
"mslacc.loc[(single_poor_wmn),:]"
"mslacc=mslacc.loc[:,('Survived')]"
"mslacc=mslacc.drop(['Survived','Cabin','Ticket','Name'],axis=1)"
"mslacc[[mslacc.Embarked,'Embarked_C','Embarked_Q','Embarked_S']].head()"
"test_df.loc[test_df['Name']==NameTestListIndex[x],'Name']=mslacc[x]"
test_df['F']=mslacc['Female']
"mslacc=mslacc.iloc[:train_rows,:]"
train_df['FamilyMembers']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc.drop(['Name','Ticket','Cabin','PassengerId','Age_cats'],1,
inplace=True)"
"mslacc.drop(columns=drop_col,axis=1,inplace=True)"
"mslacc.drop(drop_rows,inplace=True)"
"mslacc.drop(['Cabin','family_size','Ticket','Name','Fare'],axis=1,
inplace=True)"
"mslacc.drop(['Pclass','Sex','PassengerId','Name','Ticket'],axis=1,
inplace=True)"
"mslacc=train_df.drop('Survived',axis=1)[train_set_size:train_set_size+
valid_set_size]"
"mslacc=mslacc.drop(['Embarked','Sex'],axis=1)"
"mslacc=mslacc.drop('CabinNum2',axis=1)"
"mslacc.drop(['AgeBand'],axis=1)"
trainPCA2['6']=mslacc['Pclass2']
mslacc=title_base_string_1+mslacc[field]
"mslacc=mslacc.drop(['Survived','Name','Ticket'],axis=1)"
mslacc.head(30)
"mslacc.drop(['Ticket'],1,inplace=True)"
"mslacc[dftrain.FamilyName=='Panula'][['Survived','Pclass','Name',
'Ticket','Fare','FareCorrect']]"
"mslacc=mslacc[0,0]/(mslacc[0,0]+mslacc[0,1])"
mslacc[features].head()
"mslacc.drop(['Name','PassengerId'],axis=1,inplace=True)"
"mslacc.drop(columns=['Cabin','PassengerId','Name','Ticket','LastName',
'FirstName'],inplace=True)"
"mslacc=pd.read_csv('../input/train.csv',dtype={'Age':np.float32,'Fare':
np.float32})"
"mslacc.drop(drop_list,axis=1,inplace=True)"
mslacc=mslacc[1:10]
"mslacc.drop('Survived',axis=1),mslacc['Survived']"
"mslacc=mslacc.drop(columns=['Cabin','Age','Parch','Ticket','Name',
'Embarked'])"
mslacc.head(n=4)
"mslacc=mslacc.loc[mslacc['Survived']==1,['Fare']]"
mslacc[mslacc.predicted!=mslacc.Survived]
"mslacc=mslacc['Age'],"
df['AgeClass']=mslacc['AgeFill']*mslacc['Pclass']
titanic['Sex']=mslacc['Sex']
"mslacc=mslacc.drop(['Age','Fare'],axis=1)"
"mslacc=mslacc.loc[(mslacc['Survived']==1)&(mslacc['Pclass']==2),'Age']"
mslacc=mslacc[Pid]
mslacc=mslacc[train.Survived==0]['Age']
"mslacc=mslacc.drop(['Age','Survived'],axis=1)"
mslacc=mslacc.shape[0]-nona
mslacc['Survived'].head()
"mslacc[(mslacc.Sex=='female')&(mslacc.Pclass==3)&(mslacc.Survived==1)
].head(20)"
"df_data['FamilySize']=mslacc['Singleton']+mslacc['FamilySmall'
]*2+mslacc['FamilyLarge']*3"
mslacc=mslacc[msk]
all['Fsize']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc=pd.read_csv('../input/train.csv',na_values=['NaN'])"
mslacc=[mslacc[0]for_iinticket_list]
submission_rfc['Survived']=mslacc['Survived']
"mslacc.drop(labels='tmpt_AgeBand',inplace=True,axis=1)"
mslacc=mslacc['Deck']
"mslacc.drop(['PassengerId','Cabin','Name','Sex','Ticket','Embarked',
'Age'],axis=1,inplace=True)"
mslacc=df.iloc[i]['GroupID']
"mslacc.drop(['PassengerId','Name','LastName','SibSp','Parch','Ticket'],
axis=1,inplace=True)"
new_df['Pclass_qd']=mslacc['Fare']**4
"mslacc.drop('Embarked',axis=1,inplace=True,errors='ignore')"
train['Famille_3']=mslacc['FamilleMember']=='3'
"cabin['%']=mslacc['Survived']/(mslacc['Survived']+mslacc['Non_survived']
)*100"
titanicANDtest_df['s']=mslacc['SibSpBinary']
"mslacc=mslacc.loc[:,(feature_list)]"
mslacc=mslacc[891:]['PassengerId']
mslacc=mslacc[mslacc['Sex']==0]
"mslacc=pd.read_csv(
'../input/titanic-voting-pipeline-stack-and-guide/test_hard_pred_matrix.csv'
,index_col='PassengerId')"
test['CategoricalFare']=mslacc[891:]
mslacc=pd.read_csv('../input/titanic-test-ready/train-ready.csv')
"mslacc[1]['best_model'],"
mslacc=mslacc.iloc[ntrain:]
train['Pclass2']=mslacc['Pclass']
"mslacc.drop(['Name','Surname'],axis=1,inplace=True)"
models[model]['n_features']=mslacc[model]['df'].shape[1]
train_df['GenderPclass']=mslacc['Pclass']-mslacc['Gender']+1
"mslacc=pd.read_csv(
'../input/titanic-voting-pipeline-stack-and-guide/train_hard_pred_matrix.csv'
,index_col='PassengerId')"
"mslacc=mslacc.drop(['Name','Ticket','Fare'],axis=1)"
mslacc.iloc[0:10]
mslacc=mslacc['Sex']=='female'
combine['AgeAvailable']=(mslacc['Age']==-0.5)==False
"mslacc={'PassengerId':mslacc['PassengerId'],'Survived':res}"
"mslacc=mslacc.drop(['Sex','Embarked','Name','Fare','FareType',
'Title'],axis=1,inplace=True)"
"mslacc.drop(['Sex','Embarked','Name','Ticket','Pclass','PassengerId',
'Cabin'],axis=1,inplace=True)"
"mslacc=mslacc.loc[:,(['Pclass','Sex','Embarked','Age','Title',
'SibSp','Parch'])]"
"mslacc.drop(['Survived'],axis=1),"
"mslacc=pd.read_csv(base_path_data+'/test.csv',sep=',',header=0,
encoding='utf-8')"
mslacc[df['Pclass']==3]['Fare'].describe()
"mslacc.drop(labels=['PassengerId','Name','Cabin','Survived','Ticket',
'Fare'],axis=1,inplace=True)"
data['Family']=mslacc['SibSp']+mslacc['Parch']
"mslacc=mslacc.drop(features_list,axis=1)"
"mslacc=mslacc.drop(columns=['PassengerId'],axis=1)"
"mslacc=mslacc[['Pclass','Title','Sex','Age','SibSp','Parch','Fare',
'Embarked','IsAlone']]"
"mslacc=mslacc.loc[(mslacc['Pclass']==1)&(mslacc['Survived']==0),'Age']"
mslacc=pd.read_csv('./data/train_final.csv')
"mslacc=mslacc.drop(['y'],axis=1)"
mslacc=mslacc[mslacc['Survived']==0]
"X_text_submit[e,p+max_name_length]=mslacc[w]"
mslacc=mslacc['col_name']
"mslacc.drop('FareCategorical',1,inplace=True)"
df['NumFamily']=mslacc['SibSp']+mslacc['Parch']+1
mslacc=count/mslacc.shape[0]*100
mslacc=mslacc[mslacc['Parch']==0]
test['Survived_nn_wtd']=mslacc['Survived_nn']*recall_nn
"mslacc=mslacc.drop(['Name','Pclass','Age','Ticket','Sex','SibSp',
'Parch','Fare','Cabin','Embarked','Age_categories',
'Fare_categories'],axis=1)"
"mslacc=mslacc.drop(['FareAdj','Embarked'],axis=1)"
mslacc=mslacc[mslacc.Fare<500]
df['Family_Size']=mslacc['Parch']+mslacc['SibSp']
"mslacc.drop(data_to_drop,axis=1,inplace=True)"
"mslacc=[mslacc['male']/total,mslacc['female']/total]"
"train_df,test_df=[pd.read_csv(f,index_col='PassengerId')forfin(
train_file,test_file)]"
mslacc.head(4)
data_test['Survived']=mslacc['SVC']
"mslacc.drop(columns={'Cabin','Cabin_prefix'},inplace=True)"
"mslacc.drop('Parch',inplace=True,axis=1)"
"mslacc=mslacc.loc[(mslacc['Sex']=='male'),:]"
"mslacc.drop(['Name_len_Class2','Name_len_Class'],axis=1,inplace=True,
errors='ignore')"
trainSample['Died']=1-mslacc['Survived']
"mslacc=mslacc.drop(mslacc.column_name,axis=1)"
mslacc=[mslacc[x]forxinalgos]
"mslacc.drop(labels='Title',axis='columns',inplace=True)"
"mslacc=mslacc.iloc[:,([1,2,4,5,6,7,9])]"
full_data['TravelSize']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc[(mslacc.Sex=='female')&(mslacc.Pclass==1)&(mslacc.Survived==0)
]"
"mslacc=mslacc.loc[(mslacc['Survived']==0)&(mslacc['Pclass']==2),'Age']"
test_df['Old_Female']=(mslacc['Age']>50)&(mslacc['Sex']=='female')
df['Title']=mslacc['title']
"mslacc=mslacc[['Survived','Age','Embarked','Fare','Pclass','Sex',
'Family_Size','Title2','Ticket_info','Cabin']]"
"mslacc=mslacc[['Pclass','Fare','Parch','Sex','Embarked','SibSp','Age']]"
"ts.loc[:,('Survived')]=mslacc['Survived']"
mslacc=w-learning_rate*mslacc['DerivativeWeight']
"mslacc=mslacc.loc[:,(featureName)]"
"mslacc=mslacc.drop('AgeBand',axis=1)"
mslacc=mslacc[-1]+mslacc[-1]-(mslacc[-1]-mslacc[-1])
mslacc=mslacc[SURV:][cols]
merged['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
"mslacc.drop('Ticket',1,inplace=True)"
final_test['PassengerId']=mslacc['PassengerId']
"data.loc[data['Sex']==1,'SexByAge']=mslacc.loc[mslacc['Sex']==1,'Age'
]+5"
test_df['Sb']=mslacc['SibSpBinary']
titanic_data['FamilySize']=mslacc['SibSp']+mslacc['Parch']+1
trainPCA2['3']=mslacc['Pclass2']
mslacc[combine['Embarked']=='C'][['Name']].head(10)
test['FamilleMember']=mslacc['SibSp']+mslacc['Parch']
mslacc=mslacc[training.Survived==1]['Age']
mslacc=mslacc[test_id:]
mslacc=(mslacc[i-1]+mslacc[i])/2
"mslacc=mslacc.drop(['Ticket','Cabin','Fare','SibSp'],axis=1)"
"mslacc.drop(['Train','Ticket','Name','Fare_fam','per_capita'],axis=1,
inplace=True)"
test[col]=(mslacc[col]-mean)/std
df['GroupID']=mslacc['Ticket']
"mslacc.drop(labels='tmpFareBand',axis=1,inplace=True)"
"mslacc=mslacc[['Pclass','Sex','Age','SibSp','Parch','Fare',
'family_size']]"
mslacc[mslacc.Ticket=='1601']
"mslacc=mslacc.drop(['Survived','Age','Sex'],axis=1)"
mslacc=mslacc['W5']
"mslacc=mslacc.drop(['Name','Age','PassengerId','Sex','Ticket',
'Cabin','Embarked'],axis=1)"
"mslacc=mslacc.drop(columns={'Name','Ticket','Fare','Cabin','Embarked',
'Parch','SibSp'})"
mslacc['Ticket'].head()
mslacc=mslacc[labels]
mslacc=mslacc[numeric_variables]
"mslacc=mslacc.drop('SibSp',axis=1)"
"mslacc=mslacc[['Pclass','Sex','SibSp','Parch']]"
mslacc=mslacc['Title']=='Ms'
mslacc.head(418)
mslacc=mslacc[(mslacc['Sex']==cat)&(mslacc['Pclass']==pclass)]
mslacc=mslacc[k]
mslacc.shape(Y_NumPy_Mat)
kaggle['Family']=mslacc['SibSp']+mslacc['Parch']+1
mslacc=mslacc[(mslacc['Sex']=='female')&(mslacc['Survived']==1)]
"mslacc=mslacc.loc[mslacc['PassengerId']>train_len].iloc[:,(mslacc.
columns!='Survived')]"
mslacc=mslacc[0][1]
df['Age_pred']=mslacc['Age']
combined['FamilySize']=mslacc['Parch']+mslacc['SibSp']+1
"mslacc.iloc[:2,]"
"mslacc.drop('title_extracted',axis=1,inplace=True)"
"mslacc['SibSp'],"
mslacc[r>30]
dataset['familysize']=mslacc['sibsp']+mslacc['parch']+1
"mslacc=mslacc.drop(['S'],axis=1)"
"mslacc=mslacc.drop(['Name','Cabin','Ticket'],axis=1)"
"mslacc=mslacc.drop(['Age','Name','Sex','Ticket','Cabin','Embarked',
'Fare'],axis=1)"
"mslacc=mslacc[['Pclass','AgeGroup','FareGroup','Person','IsAlone',
'Embarked','Title']]"
titanic_df['Pc']=mslacc['ParchBinary']
"df['Sex_Age']=mslacc.loc[:,('Sex')]*mslacc.loc[:,('Age')]"
df_test['Title']=mslacc['Title'][891:]
"mslacc=mslacc.iloc[:,(0)]"
mslacc[mslacc['price']>1500]
mslacc=mslacc[~mask]
"mslacc.drop(['Sex','Age','SibSp','Parch','Fare','Embarked',
'family_size'],axis=1,inplace=True)"
"mslacc=pd.read_csv(
'../input/featureengineering-titanic-procedure/fe_rfrage_scaled_data.csv')"
"_train_df,_test_df=mslacc.loc[(_train_idxs),:],mslacc.loc[(_test_idxs),:]"
data['Parch']=mslacc['Parch']*0.02
"mslacc=mslacc.drop('Ticket',1)"
mslacc=mslacc[Text]
"mslacc=mslacc[['Pclass','Age','SibSp','Parch','Fare','Embarked_C',
'Embarked_Q','Embarked_S','Sex_male']]"
mslacc['Fare'][q]
"mslacc.drop(['PassengerId','Pclass','Name','Sex','Age','Fare','Cabin',
'Embarked','Ticket'],axis=1,inplace=True)"
mslacc[mslacc.Name_len>50]
mslacc.SibSp.describe()
mslacc=mslacc[girl]
mslacc[train_nan_pct>0]
"df['GOOD']=mslacc['A']+mslacc['B']*mslacc['C']+mslacc['A']*mslacc['D'
]==mslacc['CLASS']"
"mslacc=mslacc['min_samples_split'],"
combined_train_test['Family_Size']=mslacc['Parch']+mslacc['SibSp']+1
"mslacc=mslacc.drop(['Embarked_C','Embarked_Q','Embarked_S'],axis=1)"
"mslacc=mslacc[['Sex','Embarked']]"
"mslacc.drop('FareCategory',axis=1)"
train_data['WithFamily']=mslacc['SibSp']+mslacc['Parch']
"mslacc=mslacc[['Pclass','SibSp','Parch','Fare','Q','S','male']]"
mslacc=pd.read_csv('../input/'+test+'.csv')
"mslacc=mslacc.drop(label,axis=1)"
"mslacc=pd.read_csv('../input/train.csv',usecols=['Survived','Pclass',
'Sex','Age','Fare'])"
mslacc[['Age']].describe()
"mslacc.drop(['PassengerId','Age','SibSp','Parch','Fare'],axis=1,
inplace=True)"
"titanicTest.iloc[i,2]=mslacc[x]"
mslacc[mslacc.Fare>300]
"mslacc=mslacc[['PassengerId','Pclass','Name','Sex','Age','SibSp',
'Parch','Fare','Embarked','family_member_no','ticket']]"
"mslacc.drop(columns='Survived',inplace=True)"
"mslacc=mslacc[mslacc['group_id']==mslacc.loc[pid,'group_id']]"
"combined.loc[p,'group_id']=mslacc[dominant_ln]"
mslacc.query('Age!=Age').head()
"mslacc=mslacc.loc[(mslacc['MissingAge']==0),:]"
mslacc=mslacc['Survived'][:-120]
data['Fare']=mslacc['Fare']*0.0001
titanic['Fareperperson']=mslacc['Fare']/mslacc['FamilySize']
"mslacc.drop(labels=['PassengerId','Sex','Name','Title','Embarked'],
axis=1,inplace=True)"
"mslacc.drop(['PassengerId','Name','Sex','Ticket','Cabin','Embarked',
'Age','MMs','Ms','m','Pch','Pc','p','SbS','Sb','s','Fem','F',
'Male'],axis=1,inplace=True)"
"mslacc=mslacc.drop(['Ticket','Cabin','Fare'],axis=1)"
mslacc=mslacc['Group_Size']
"mslacc=mslacc.drop(['Survived','Name','PassengerId','Ticket','Fare'],
axis=1)"
train_df['Deck']=mslacc[0:891]['Deck']
dataset_df['AgeLessThan17']=(mslacc['NewAge']<17)*1
"mslacc.drop(['Name','Ticket','Cabin'],axis=1,inplace=True)"
