snippets
mutate(FamSize = SibSp + Parch)
full$underTen[full$Age < 10 & full$Age > 0] <- T
"completeTrain$FareRange[completeTrain$Fare <= medianFare] <- ""low"""
data$Age <- imputes$Age
full2$Survived = as.numeric(full2$Survived)
ffpred[is.na(ffpred)] <- 0
summary(titanic)
summary(naiveBayesModel)
"full$Title[full$Title == ""Mme""]  <- ""Mrs"""
"train_data$Age[is.na(train_data$Age)&train_data$Sex==""male""]<-mean_male"
"data$Age[is.na(data$Age) & data$Title=="" Ms""]<-meanMs"
titanic$FsizeD <- FsizeD
indata$size = indata$SibSp + indata$Parch + 1
"full[id,]"
cm$table
"whole.data[whole.data$Fare>=15 & whole.data$Fare<31, 'FareBin'] <- '3'"
trn_m$Sex = factor(trn_m$Sex)
"fulldata$Title[c(760, 1306)] <- 'Mrs' "
"deck[is.na(deck)] <- ""Unknown"""
x$psex[which(x$Sex=='female')]<-1
"data$Sector[data$Sector==""""] <- NA"
TMPComplete$Age[1:30]
"test$Cabin_deck=substring(test$Cabin, 1, 1)"
"fea$TicketPrefix[sapply(strsplit(as.character(train$Ticket), "" ""), length) == 1] <- """""
mergedData$sharedCabin <- 'N'
summary(predictions)
which(fullComb$Embarked == '')
train_two$family_size <- train_two$SibSp + train_two$Parch + 1
"allData$Title <- (gsub(""(.*, )|(\\..*)"", """", allData$Name ))"
dim(train1)
fulldata$Title=as.character(fulldata$Title)
"whole.data[whole.data$Age>=39, 'AgeBin'] <- '4'"
"males[1:5,]"
rf_err$combined_err = rowSums(rf_err)
"Title[Title==""Dona""] <- ""Mrs."""
"my.train.data[is.na(my.train.data[,i]), i] <- mean(my.train.data[,i], na.rm = TRUE)"
summary(testData)
"fulldata[(which(is.na(fulldata$Embarked))) ,c(1,3,6,10,20) ]"
combo$Parch<-NULL
fulldata$isFemale[fulldata$Sex == 'female' & (fulldata$Parch > 0 | fulldata$TicketGroupSize>1 | fulldata$FamilynameSize>1) & fulldata$Age > 18 & fulldata$Title != 'Miss'] <- 1
"full[is.na(full$Age) & full$Title == ""Mr"", ]$Age <-age_by_title[age_by_title$Title== ""Mr"", ]$Age"
"full[full$Embarked=="""",]$Embarked<-""S"""
train$Name <- NULL
"select(PassengerId, Pclass, Sex, age_minor, Fare, cabin_code, Embarked)"
full$Name
data_test$Parch <- NULL
survived_age[na_age] <- 0
"data.combined[1:2,]"
train$PassengerId <- NULL
which(is.na(combi$SibSp))
"titanic$Fare[1044] <- median(titanic$Fare, na.rm=TRUE)"
full_data$FareRange[full_data$Fare <30 & full_data$Fare >= 20] <- 'bw20and30'
"test$Age[is.na(test$Age)]=sample(test$Age[!is.na(test$Age)],86)"
summary(data)
head(prediction)
"raw_test$Age[is.na(raw_test$Age)] <- mean(raw_test$Age,na.rm=T)"
"train$Age[train$Title == ""Master."" & is.na(train$Age)] <- mean.master"
combo$SibSp<-NULL
"train_data[is.na(train_data$Embarked),]$Embarked <- 'C'"
survival[i] <- 0
summary(balanced_train)
"whole.data[whole.data$Embarked == """",]"
full$FsizeD[full$Fsize == 1] <- 'Alone'
"trainset[,-2]<-data[1:891,-12]"
fulldata$Age[is.na(fulldata$Age)] <- predicted_output$Age[is.na(fulldata$Age)]
combi$Child[combi$Age >= 18] <- '0'
test$Age[is.na(test$Age)]=test_age_mean
combo$Age[i]<-mean_class(class_value)
trainData1$Age[which(is.na(trainData1$Age))] <- mean(as.numeric(trainData1$Age[which(!is.na(trainData1$Age))]))
combo$family<-combo$SibSp + combo$Parch
summary(titanic2$Age)
data_train$SibSp <- NULL
knn_test$Sex = NULL
train$Survived [train$Survived == 'Died'] <- 0
y_predict[y_predict == F] <- 0
which(is.na(combi$Embarked))
knn_train$Sex = NULL
"age[i] = sample(na.omit(allData$Age),1)"
full$FamilySize<-full$SibSp+full$Parch
train_full$Age[is.na(train_full$Age)]=121
"summary(trainingData[, predictorVar])"
"test[i,5] <- test[i,5]"
"test$age[is.na(test$age)] <- median(test$age, na.rm = TRUE)"
map[[keyv]]=(keyvalue[key==keyv])
"train_full$title= regmatches(train_full$Name, m)"
"whole.data[,'Title'] <- as.factor(whole.data[,'Title'])"
trn_m$Embarked = factor(trn_m$Embarked)
head(female)
Titanic_data$Title[Titanic_data$Title=='Mme']='Miss'
"full[1044,]   "
train$Cabin_recorded <- 'Yes'
head(d.all)
full$Sex = as.numeric(as.factor(full$Sex))-1
train$fareRange<-'30+'
"Exit[1] <-  min(VECTOR,na.rm=TRUE)"
knn_train$Survived = NULL
full$Title[full$Title == 'Mme'] <- 'Mrs'
"submission$Survived = as.data.frame(h2o.predict(model_rf,test.hex))[,1]"
"full_data$Embarked[full_data$Embarked==""""]=""S"""
"titanic2$Age[is.na(titanic2$Age)] <- mean(titanic2$Age,na.rm=T)"
"traintest.data$Age[is.na(traintest.data$Age)] <- predict(predicted_age, traintest.data[is.na(traintest.data$Age),])"
dt_model$finalModel
"head(train_data[,coloumns.to.fit],10)"
dim(dat)
"train$Age[train$Title == ""Mrs."" & is.na(train$Age)] <- mean.mrs"
"train$siblingyn[which(train[,7]>0)]<-1"
"trainset[which(is.na(trainset$Embarked)),]"
predTitanic$Survived[predTitanic$Survived>0.5] <- 1
head(pred.svm)
df$Sex=factor(df$Sex) 
test$Age <- mice_output_test$Age
"head(allData, n= 3)"
train$Name[c(1:5)]
"data[,i] <- as.numeric(data[,i])"
summary(train)
"test_data$Fare[ib] <- median(train_data$Fare,na.rm=TRUE)"
dim(full_data)
tst_m$Age_comp_FM = tst_m$Age
full$Title[full$Title == 'Mme']         <- 'Mrs'
"test$cat <- ""test"""
"full[,c(6,10)] <- scale(full[,c(6,10)])"
summary(full_data)
submission$test_model[submission$test_model<.5]<- 0
head(titanic)
train$Embarked[is.na(train$Embarked)] <- 'S'
tst_m$Age_comp_MICE = tst_imp$Age
"trainset$Embarked[c(62,830)] = ""C"""
train$family_size <- train$SibSp + train$Parch + 1
knn_test$Ticket = NULL
knn_train$Name = NULL
head(dat)
train$Survived<-NULL
submit$Survived[is.na(submit$Survived)] <- 0
train.hex$Survived = h2o.asfactor(train.hex$Survived)
"data$Age[is.na(data$Age)]<-mean(data$Age,na.rm = T)"
"Title[Title==""Ms. ""] <- ""Miss"""
"knn_test$Age[i] <- mean(knn_test$Age, na.rm = TRUE)"
"head(DstTrain, n=5L)"
df_combined$Parent[df_combined$Sex == 'female' & df_combined$Parch > 0 & df_combined$Age > 18 & df_combined$Title != 'Miss'] <- 'Mother'
head(test)
"traintest.data$Embarked[c(62, 830)] <- 'C'"
head(test_tbl)
"train$Age[is.na(train$Age)&train$Name==""Mrs.""]<-mrsage"
full$Child[full$Age < 16] <- 'Child'
NTicket$NAccompanied<-NTicket$NAccompanied-1
"full$Age[is.na(full$Age) == TRUE & full$Sex == 'female'] <- median(Female_Ages$Age , na.rm =  TRUE)"
test$Survived[test$Sex=='female' & test$Pclass==3 & test$Fare>=20]<-0
testset$Cabin <- NULL
combi$Mother[combi$Sex == 'female' & combi$Parch > 0 & combi$Age > 18 & combi$Title != 'Miss'] <- '1'
"df_combined[cols] <- lapply(df_combined[cols], factor)"
full$Fam.size <- full$SibSp + full$Parch + 1
"age_compare[5,] = c('Val', 'Filled by Mean', mean(val_m$Age_comp_FM), sd(val_m$Age_comp_FM))"
Titanic_data$Title[Titanic_data$Title=='Ms']='Miss'
select(Surname)
summary(Titanic_model)
"full$Fare[1044]<-mean(full[full$Pclass=='3',]$Fare,na.rm=T)"
data.clean$Family <- data.clean$SibSp + data.clean$Parch
"val_df[val_df$PassengerId == 503, ]"
"data.cleaned[,columns.to.scale] <- scale(data.cleaned[,columns.to.scale])"
"full_data$Fare[1044] <- median(full_data[full_data$Pclass == '3' & full_data$Embarked == 'S', ]$Fare, na.rm = TRUE)"
"data$title=gsub('(\\..*)|(.*, )', '', data$Name) "
"full_data$Age[is.na(full_data$Age)] <- predict(predicted_age, full_data[is.na(full_data$Age),])"
"train$Age[grepl(""Dr\\."", train$Name) & is.na(train$Age)] = mean.dr"
"full$Fare[1044] <- median(full[full$Pclass == 3 & full$Embarked == 'S', ]$Fare,na.rm = TRUE)"
mutate(rate=n/FamilySize)
test$p[predicted < 0.53] = 0
train$Age[ind]<-as.numeric(Imputed_age)
fullComb$FsizeD[fullComb$FamilySize > 4] <- 'large'
"tst_m[is.na(tst_m$Fare),c('Fare')] = fill_Fare"
full_data$family_size <- full_data$SibSp + full_data$Parch + 1
full_data$Child[full_data$Age >= 18] <- 0
fulldata$isKids=0
full$quote[full$PassengerId == tmp$PassengerId[j]] <- quote
data_test['PrevisÃ£o'] <- c(predictionrf)
mergedData$surname <- NULL
full$Age2[full$Age>48& full$Age<=64] = 4
data$Title[data$Title == 'Dona']<- 'Mrs'
"head(avFare,20)"
"data[[i]] <- full[train_dev_idx, var[[i]], drop=F]"
test$title= factor(test$title)
"train_new$Cabin[train_new$Cabin == """"] <- ""H"""
"train[is.na(train)] <- median(train$Age, na.rm = TRUE)"
head(preds)
"whole.data[whole.data$FamilySize > 4,'FamilyGroup'] <- 'large'"
"train$farediv[which(train[,10]>20)]<-2"
fullComb$FsizeD[fullComb$FamilySize < 5 & fullComb$Fsize > 1] <- 'small'
combi$Age <- mice_output$Age
"data$Age[is.na(data$Age) & data$Title=="" Miss""]<-meanMiss"
DataBind$Title[DataBind$Title == 'Mme']  <-'Mrs'
head(Data) 
"full[1040:1045,]"
"my.test.data[is.na(my.test.data[,i]), i] <- mean(my.test.data[,i], na.rm = TRUE)"
titanic_linear$Age <- titanic$Age
combined$Title[combined$Title == 'Ms']          <- 'Miss'
combined$Title[combined$Title == 'Mlle']        <- 'Miss' 
"combi$Fare[1044] <- median(combi$Fare, na.rm=TRUE)"
full$familyID2 <- full$familyID
submission[is.na(submission)] <- 0
full_data$AgeRange[full_data$Age <= 9] <- 'lessthan9'
"completeTrain$AgeRange[completeTrain$Age <= 16] <- ""kid"""
fulldata$Title[c(823)] <- 'Mr'
"train[ind,]"
data$Title[data$Title == 'Mme'] <- 'Mrs' 
full$Age2[full$Age>16& full$Age<=32] = 2
data$Age_Group[data$Age <= 20 & data$Age > 10] <- 'Teen'
"train$Embarked[c(62, 830)] <- ""S"""
"train$Embarked[which(is.na(train$Embarked))] = ""S"""
summary(Titanic_data)
"c(""age"", ""gender"", ""Fare"", ""family"", ""title"", ""pclass"", ""embarked"", ""ticket_str"", ""cabin_deck"")"
head(submission)
summary(my_tree)
full$FsizeD[full$Fsize < 5 & full$Fsize > 1] <- 'Small'
head(my_solution)
train$Cabin <- NULL
train_full$Cabin_num[!is.finite(train_full$Cabin_num)]=-1 
full$Alone[full$Fsize == 1] = 1
summary(test)
full$Title = as.numeric(as.factor(full$Title))-1
"test$Survived=predict(rf.fit, test)"
train$fareRange[train$Fare<10] <-'<10'
head(gbm.pred)
test$Survived[test$Sex == 'female'] <- 1
Titanic_data$Name=as.character(Titanic_data$Name)
knn_train$Ticket = NULL
train.df$Embarked[is.na(train.df$Embarked)] <- 'S'
predictedSurvival[predictTrain > 0.5] = 1
summary(test1$Survived)
"head(train,5)"
train$Child[train$Age < 16] <- 'Child'
"full$Cabin2[full$Cabin2 == """"] = ""N"""
head(solution)
"train[train$Embarked=='',]"
summary(combi$Fare)
combined$Mother <- 'Not Mother'
which(is.na(combi$FamilySize))
summary(logi)
full$Title[full$Title == 'Mme'] <- 'Miss'
full$FsizeD[full$FamilySize == 0] <- 'singleton'
summary(my_glm)
full_data$AgeRange[full_data$Age <= 25 & full_data$Age> 9] <- 'bw9and25' 
fullComb$FamilyID[fullComb$FamilySize <= 2] <- 'Small'
knn_train$Age <- (knn_train$Age - min_age) / (max_age - min_age)
"subset(full,is.na(Fare))"
mergedData$ticketsCnt <- NULL
"full_data$Embarked[c(62,830)] = ""S"""
data_train$PassengerId <- NULL
summary(first_lm_)
summary(p)
"test_data$Age[is.na(test_data$Age)&test_data$Sex==""male""]<-mean_male"
full.data$Child[full.data$Age >= 18] <- 'Adult'
ans_svm_predict[i] = as.integer(svm_predict[[i]]) - 1
full$quote[is.na(full$quote)] <- NaN
val_m$Age_comp_FM = val_m$Age
summary(out)
testData1$Age[which(is.na(testData1$Age))] <- mean(as.numeric(testData1$Age[which(!is.na(testData1$Age))]))
title[title != 'Mr' & title != 'Miss' & title != 'Mrs' & title != 'Master'] <- 'Rare'
"head(output_knn, n = 20)"
which(is.na(train$Age)==T) 
full$Fare2[full$Fare<=7.91] = 1
ans_rf_val[i] = as.integer(rf_model_val.fitted[[i]]) - 1
allData$Title[allData$Title == 'Ms'] <- 'Miss'
summary(df.example)
"full[full$PassengerId[is.na(full$Fare)],]"
full$deck <- full$Deck 
"fullComb$Age[is.na(fullComb$Age)] <- predict(Agefit, fullComb[is.na(fullComb$Age),])"
summary(log_model)
summary(fitmodel)
test$Name=as.character(test$Name)
"head(subset(cutoffs, fpr < 0.2))"
"df_combined$Embarked[c(62, 830)] <- 'C'"
mergedData$Cabin <- NULL
train$Fare2[train$Fare < 30 & train$Fare >= 20] <- '20-30'
"data$Fare[1044] <- median(data[data$Pclass == '3' & data$Embarked == 'S', ]$Fare, na.rm = TRUE)"
dim(traindata)
which(titanic$Embarked == '')
knn_test$Age <- (knn_test$Age - min_age) / (max_age - min_age)
"full_data$Age[is.na(full_data$Age)] <- predict(age_tree, full_data[is.na(full_data$Age),])"
data$Fare_Per_Person <- data$Fare/as.numeric(data$FamilySize)
"whole.data[whole.data$Age>=28 & whole.data$Age<39, 'AgeBin'] <- '3'"
traintest.data$Mother[traintest.data$Sex == 'female' & traintest.data$Parch > 0 & traintest.data$Age > 18 & traintest.data$Title != 'Miss'] <- 'Mother'
summary(titanic$Embarked)
combi$Child[combi$Age < 18] <- '1'
train_refined$Age[is.na(train_refined$Age)]=age_mean
filter(!is.na(Cabin_Deck_i2) & !is.na(Ticket_Digit) & !is.na(Title))
Titanic_data$Title[Titanic_data$Title=='Mlle']='Miss'
full$familySize[full$familySize < 5 & full$familySize > 1] <- 'small'
"dat_all[dat_all$with_fam==0, ""FM_Survive""] <- single_survive"
"train_full$Pclass=factor(train_full$Pclass,labels = c(""first"",""second"",""third""))"
head(train$Cabin)
full$FsizeD[full$Fsize > 4] <- 'Big'
head(submitData)
data$FamSize <- data$SibSp + data$Parch
"whole.data[whole.data$Age<18, 'Child'] <- '0'"
which(is.na(results_frame$Survived == T)) 
ensemble_predict$LR = as.numeric(ensemble_predict$LR)
full$Ticket = as.numeric(as.factor(full$Ticket))-1
train$Sex[male] <- 1
"full$Fare[1044] <- median(thirdclass$Fare , na.rm = TRUE)"
summary(combined.df$Fare)
"train$farediv[which(train[,10]>30)]<-2"
"allData$Fare[is.na(allData$Fare)] <- mean(allData$Fare, na.rm=TRUE)"
train$isTrain <- T
train_full$title= factor(train_full$title)
test$Pclass = factor(test$Pclass)
full$FsizeD[full$Fsize > 5] <- 'large'
"test$Sex[which(test$Sex==""female"")]<-1"
summary(logistic_model_filtered)
op$Survived <- Survived
"full[full$title=='Mme',]$title<-""Mr"""
"mergedData$title[mergedData$title == ""Mlle""] <- ""Miss"""
test$Title[test$Title == 'Mme']         <- 'Mrs' 
arrange(PassengerId)
df_combined$Parent[df_combined$Sex == 'male' & df_combined$Parch > 0 & df_combined$Age > 18] <- 'Father'
full$Pclass= as.numeric(full$Pclass)-1
knn_train$Embarked = NULL
head(whole.data)
"train$Age[grepl(""Mr\\."", train$Name) & is.na(train$Age)] = mean.mr"
"full_data[c(1:1309), 'Embarked']"
full$Fare2[full$Fare>7.91& full$Fare<=14.454] = 2
train$Embarked=as.factor(train$Embarked)
data_test$SibSp <- NULL
fullComb$FamilyID2[fullComb$FamilySize <= 3] <- 'Small'
dim(data)
test$survived<-sur
x$pembarked[which(x$Embarked=='C')]<-1
"train[which(train$Parch>0 & train$Age>18 & train$Name==""Mrs.""),c(""Mother"")]<-1"
"train$parentyn[which(train[,8]>0)]<-1"
full$Cabin2 = as.numeric(as.factor(full$Cabin2))-1
test$Fare[is.na(test$Fare)] <- mean_fare_NAN
"full[full$title == ""Mme"" | full$title == ""Ms"", ]$title <- ""Mrs"""
Titanic_data$Age=Titanic_data_preprocess_pred$Age
head(data_train)
summary(full)
head(data.test.use)
"test_new_Leviet$Cabin[test_new_Leviet$Cabin == """"] <- ""H"""
full$PassengerId[is.na(full$Fare)]
tot$Age<-mice_v
dft$logfare=log(dft$Fare)
full$Cabin = as.numeric(as.factor(full$Cabin))-1
titanic2$Fare2[titanic2$Fare < 10] <- '<10'
"tot[tot$Fare==0,]"
progress.bar$init(k)
which(is.na(combi$Fare))
summary(train_imp$imp$Age) 
head(full_data)
data.combined$cabinLetter <- fact
"trn_m[trn_m$Embarked == """",c('Embarked')] = 'S'"
combined$Mother[combined$Sex == 'female' & combined$Parch > 0 & combined$Age > 18 & combined$Title != 'Miss'] <- 'Mother'
"head(data[c(""FamilyName"", ""Sector"")])"
"test[""Survived""] <- empty"
summary(logistic_model)
test.data$Title[test.data$Title == 'Ms']          <- 'Miss'
"train$cat <- ""train"""
"whole.data[whole.data$FamilySize > 1 & whole.data$FamilySize < 5,'FamilyGroup'] <- 'small size'"
titanic2$Fare2 <- '30+'
test.data$Title[test.data$Title == 'Mme']         <- 'Mrs' 
"train$Age[train$Title == ""Miss."" & is.na(train$Age)] <- mean.miss"
fulldata$Groupticket=NA
summary(mast$Age)
combined$FamSize <- combined$SibSp + combined$Parch + 1
"test1$Survived=predict(final_ens_model,test1)"
"test$Cabin_num=substring(test$Cabin, regexpr(""(\\d)+"", test$Cabin),regexpr(""(\\d)+"", test$Cabin)+2)"
fulldata$FamilySize=fulldata$SibSp+ fulldata$Parch+1
"fulldata[(which(is.na(fulldata$Fare) | fulldata$Fare==0)) ,c(1,3,6,10,20) ]"
train$Age[is.na(train$Age)]=121
not_survived_age[na_age] <- 0
filter(Survived == 1)
"tmp[tmp$`Actual Outcome` == 1,]$`Actual Outcome` <- 'Survived'"
train_full$Cabin_num=as.numeric(train_full$Cabin_num)  
"full$FsizeD[full$Fsize < 5 & full$Fsize > 1] <- ""Small"""
"fulldata$Deck[is.na(fulldata$Deck)] <- predict(predicted_deck, fulldata[is.na(fulldata$Deck),])"
full$Fsize <- full$SibSp + full$Parch +1
train$Pclass= as.factor(train$Pclass)
"test$Fare[153] <- median(train$Fare, na.rm = TRUE)"
mergedData$ticketLetter <- NULL
"test$Sex[which(test$Sex==""male"")]<-0"
database_output$Survived <- y_pred
ans_rf[i] = as.integer(rf.fitted[[i]]) - 1
full_data$AgeRange[full_data$Age > 50] <- 'greaterthan50'
"full[is.na(full$Fare),]$Fare <- Fare_by_Pclass[Fare_by_Pclass$Pclass==""3"", ]$median_Fare"
head(df_train)
"test$Age[is.na(test$Age)&test$Name==""Mrs.""]<-mrsage"
"full[!complete.cases(full$Fare),]"
data_test$Cabin <- NULL
trn_m$Pclass = factor(trn_m$Pclass)
"age_compare[4,] = c('Val', 'Original', mean(val_m[complete.cases(val_m[,c('Age')]),c('Age')]), sd(val_m[complete.cases(val_m[,c('Age')]),c('Age')]))"
knn_test$Embarked = NULL
"fullComb$Embarked[c(62,830)] = ""S"""
"which(full$Embarked =="""")"
"full[c(62, 830), 'Embarked']"
"whole.data[whole.data$Age>=21 & whole.data$Age<28, 'AgeBin'] <- '2'"
full$familySize[full$familySize > 4] <- 'large'
head(database)
train$Survived = factor(train$Survived)
"dft$Embarked[dft$Embarked==""""]=""S"""
surv_test_logi$Survived[test_logi_pred > .5] <- 1
"full[full$ticket_num == ""LINE"", ]$ticket_num <- 1"
"select(PassengerId, Survived)"
trn_m$Age_comp_FM = trn_m$Age
"FsizeD[Fsize == 1] <- ""Alone"""
"Exit[2] <-  max(VECTOR,na.rm=TRUE)"
train$fareRange[train$Fare<20 & train$Fare>=10] <-'10-20'
"whole.data[whole.data$FamilySize == 1,'FamilyGroup'] <- 'single'"
combi$MenWithMoreRel[combi$Parch>2 & combi$Sex=='Male'] <- 1
"data[is.na(data$Embarked),'Embarked']=as.factor(names(which.max(table(na.omit(data$Embarked)))))"
train$Embarked[is.na(train$Embarked)]<-'C'
"full$Family_size_ratio[full$Family_count<=2]<-""Small"""
train$Fare2[train$Fare < 10] <- '<10'
fullComb$Child[fullComb$Age < 16] <- 'Child'
"title[i] = strsplit(lastname,"". "")[[1]][1]"
combined.df$Embarked[is.na(combined.df$Embarked)] <- 'S'
"full$Age<-Hmisc::impute(full$Age,mean)"
combo$Cabin[l]<-0
cabin[i] = length(s[[1]])
train$FamilySize <- train$SibSp + train$Parch + 1
"full[1044,]$Fare<- fare.Pred"
freq$frequency<-freq$n/nrow(train)*100;
traintest.data$FamilySizeCategory[traintest.data$FamilySize == 1] <- 'Single'
predTitanic$Survived[predTitanic$Survived!=1] <- 0
"full[ind,]"
full$Title[full$Title == 'Mlle']        <- 'Miss'
"test$Cabin_num[test$Cabin_num=='']=""-1"" "
"age_compare[2,] = c('Train', 'Filled by Mean', mean(trn_m$Age_comp_FM), sd(trn_m$Age_comp_FM))"
summary(full$Fsize)
head(data)
"train_data$Age[is.na(train_data$Age)&train_data$Sex==""female""]<-mean_female"
"train_full$Cabin_deck=substring(train_full$Cabin, 1, 1)"
test$Cabin_num=as.numeric(test$Cabin_num)  
"test_data$Age[ib] <- median(train_data$Age,na.rm=TRUE)"
test$Age[is.na(test$Age)]=121
"test$Age[is.na(test$Age)&test$Name==""Miss.""]<-missage"
full_data$Fsize <- full_data$SibSp + full_data$Parch + 1
"Exit[5] <-  sd(VECTOR,na.rm=TRUE)"
"Exit[is.na(Exit)] <- ""MISSING"""
train$Ticket_Num2[train$Ticket_Num <= 10000] <- 1
"data$Age[is.na(data$Age) & data$Title=="" Master""]<-meanMaster"
trn_m$FamilySize = trn_m$SibSp + trn_m$Parch +1
summary(tot)
summary(fit)   
freq$frequency<-freq$n/nrow(full);
combi$FamilySize <- combi$SibSp + combi$Parch + 1
which(is.na(full$Embarked)==TRUE)
"train[i,6] <- 38"
"conf[2,3] <- conf[2,1] /(conf[2,1]+conf[2,2])"
test$Cabin_deck=factor(test$Cabin_deck)
full$Age2[full$Age<=16] = 1
data$Age[NAindex[i]] <- age.NA.solved[i]
full$familySize[full$familySize == 1] <- 'singleton'
full$FsizeD[full$Fsize < 5 & full$Fsize > 1] <- 'small'
deck[this.deck != 0] <- letter
df$logfare=log(df$Fare)
combined$Fam_SizeD[combined$FamSize == 1] <- 'single'
"full[which(is.na(full$Cabin)), 1]"
"trClean1$Embarked[nchar(as.character(trClean1$Embarked)) == 0] <- colnames(emb_pred)[apply(emb_pred, 1, which.max)]"
"train$Age[is.na(train$Age)&train$Name==""Miss.""]<-missage"
train$fareRange[train$Fare<30 & train$Fare>=20] <-'20-30'
summary(Prediction)
Titanic_data$Fare=Titanic_data_preprocess_pred$Fare
"indata$title = gsub('(.*, )|(\\..*)',(""""),indata$Name)"
"ensemble_predict$NB = as.numeric(predict(model_NB_bal,test, type=""class""))-1"
"test$Age[is.na(test$Age)&test$Name==""Dr.""]<-drage"
data_train$Ticket <- NULL
"trainset$Survived[trainset$Survived==1]<-""Survived"""
final_ens_model$ens_model
summary(Titanic_data_preprocess)
x$ppclass[which(x$Pclass=='2')]<-.6
"database$Age[is.na(database$Age)] <- round(mean(database$Age, na.rm = TRUE))"
"Miss[1:5,]"
"full[full$PassengerId[is.na(full$Embarked)],]"
dim(DstTrain)
"combined.df$Embarked[c(62, 830)] <- 'C'"
"full$Fare[1044] <- median(full[full$Pclass == '3', ]$Fare, na.rm = TRUE)"
"test_new$Cabin[test_new$Cabin == """"] <- ""H"""
data$Fare[which(is.na(data$Fare))]<-mean(data$Fare[which(!is.na(data$Fare))])
raw_train$Embarked[is.na(raw_train$Embarked)] <- moda_embarked
head(a3) 
select(Fare)
summary(prediction)
full$FarePerPerson <- full$Fare/full$FamilySize
"train$Age[is.na(train$Age)&train$Name==""Dr.""]<-drage"
head(train_1)
"full[is.na(full$Age) & full$Title == ""Ms"", ]$Age <-age_by_title[age_by_title$Title== ""Ms"", ]$Age"
val_m$Embarked = factor(val_m$Embarked)
"combined[combined==""""]<-NA"
summary(model_glm)
summary(test_df)
"head(output, n = 20)"
"train$farediv[which(train[,10]>10)]<-1"
"full$deck[full$Pclass == 1] <- ""A"""
"full_data[,i]=as.factor(full_data[,i])"
x$ppclass[which(x$Pclass=='1')]<-1
summary(ens_model_result)
data$Age_Group[data$Age > 50] <- 'old'
"data$Fare[is.na(data$Fare)] <- median(data[data$Pclass == 'Lower' & data$Embarked=='S', ]$Fare, na.rm = TRUE)"
data$Title[data$Title == 'Mlle']<- 'Miss' 
Titanic_data$Title[Titanic_data$Title=='the Countess']='Miss'
mergedData$Ticket <- NULL
"train$Cabin[which(!train$Cabin=="""")]<-1"
tst_m$Fare_orig = tst_m$Fare
head(Features)
"test$Age[is.na(test$Age)] = mean(test$Age, na.rm = T)"
traintest.data$Mother <- 'Not Mother'
"New_Data$Age[is.na(New_Data$Age)] <- predict(predicted_age, New_Data[is.na(New_Data$Age),])"
head(tabulatedDf)
Titanic_data$Title[Titanic_data$Title=='Jonkheer']='Mr'
full$Title[full$Title == 'Ms'] <- 'Miss'
freq$frequency<-freq$n/nrow(train);
"val_m[is.na(val_m$Age_comp_FM),c('Age_comp_FM')] = fill_Age_mean"
Titanic_data$Title[Titanic_data$Title=='Rev']='Mr'
summary(df.train)
full$Alone = as.numeric(as.factor(full$Alone))-1
full$Title[full$Title == 'Mlle'] <- 'Miss'
full$Fare2[full$Fare>14.454& full$Fare<=31] = 3
"age_compare[7,] = c('Test', 'Original', mean(tst_m[complete.cases(tst_m[,c('Age')]),c('Age')]), sd(tst_m[complete.cases(tst_m[,c('Age')]),c('Age')]))"
train$Sex[female] <- 0
head(survived_dudes)
"full[full$title == ""Mlle"", ]$title <- ""Miss"""
full$Mother[full$Sex == 'female'  & full$Parch >0 & full$Age >= 18 & full$Title != 'Miss'] <- 'Mother'
train$Name = as.character(train$Name)
head(indata)
summary(titanic.tree)
"select(Sex, Age, Pclass, FamilySize, Survived)"
"df_test$Fare[is.na(df_test$Fare)] <- mean(df_test$Fare,na.rm=T)"
"full[is.na(full$Age) & full$Title == ""Mrs"", ]$Age <-age_by_title[age_by_title$Title== ""Mrs"", ]$Age"
full$Surname
"combined$Fare[1044] <- median(combined[combined$Pclass == '3' & combined$Embarked == 'S', ]$Fare, na.rm = TRUE)"
Titanic_data_preprocess$method
tst_m$Pclass = factor(tst_m$Pclass)
test$Title[test$Title == 'Mlle']        <- 'Miss' 
"allData$Title[allData$Title == ""Mme""] <- ""Mrs"""
filter(PassengerId != 62 & PassengerId != 830)
val_m$Age_comp_MICE = val_imp$Age
"df$Age[is.na(df$Age)]=mean(df$Age, na.rm=TRUE)"
train$Survived <- train1$Survived
summary(datamerging)
titanic$ESRIG <- titanic$KSIG/(titanic$KSIG+titanic$KDIG)
summary(fullComb$Fare)
"train$Age[train$Title == ""Mr."" & is.na(train$Age)] <- mean.mr"
full_data$Title[full_data$Title == 'Mme']         <- 'Mrs' 
"tot[is.na(tot$Fare),] "
train$Ticket_Num2[train$Ticket_Num > 30000] = 4
"test$Fare[is.na(test$Fare)]=sample(test$Fare[!is.na(test$Fare)],1)"
train$Title[train$Title == 'Mme']         <- 'Mrs' 
head(full_clean)
head(freq)
tst_m$FamilySize = tst_m$SibSp + tst_m$Parch +1
data$FamilySize <- data$SibSp + data$Parch + 1
df_combined$Family_Member_Count <- df_combined$SibSp + df_combined$Parch + 1
test$Fare[is.na(test$Fare)] <- median(train$Fare)
"train_new$Cabin[train_new$Cabin == ""T""] <- ""H"""
knn_train$PassengerId = NULL
summary(tr)
summary(modelTitanic14)
summary(question)
"embarked[which(embarked == """")] = ""S"""
"train_data$Fare[ib] <- median(train_data$Fare,na.rm=TRUE)"
"fulldata$Embarked[c(62, 830)] <- 'C'"
"val_m$Age_Bin = cut(val_m$Age_comp_MICE, breaks = c(0, 1, 12, 18, 60, 200))"
full$Title[full$Title == 'Mlle']        <- 'Miss' 
"full[1044,]"
select('A2')
full$isAlone <- T
full$Child
full_data$Fare[1044] <- 8.05
"train$farediv[which(train[,10]>30)]<-3"
full$Name = as.numeric(as.factor(full$Name))-1
"test$Cabin[which(!test$Cabin=="""")]<-1"
"titanic$Embarked[c(62,830)] = ""S"""
test$Fare[is.na(test$Fare)]<-mean(test3$Fare)
summary(train$SibSp)
cabin[i] = 0
summary(train$Fare)
"train$Age[is.na(Age)] = mean(train$Age, na.rm = T)"
full_data$familysize <- full_data$SibSp + full_data$Parch + 1
data$Title[data$Title == 'Don'] <- 'Mr'
"full$Title[full$Title == ""Ms""]  <- ""Miss"""
data[[i]]$Survived <- as.factor(data[[i]]$Survived)
dim(testdata)
val_m$Pclass = factor(val_m$Pclass)
"full_data[c(62, 830),]"
data$Survived=as.factor(as.character(data$Survived))
rf_model$importance
ageTrain$Age<-age.Predict
ensemble_predict$RF = as.numeric(ensemble_predict$RF)
"fullComb$Fare[1044] <- median(fullComb$Fare, na.rm=TRUE)"
"train$Sex[""Sex"" == ""male""] <- 1"
which(is.na(full$Fare)==TRUE)   
"select(arrange(by_Sex_Age, Age_Bin_Order.y),Age_Bin,Sex, Chance, -Age_Bin_Order.y, -Age_Bin_Order.x, -Total.x, -Total.y)"
head(data.test.prediction.lda)
"full$IsChild[train$Age < 18] <- ""Child"""
"full[which(is.na(full$Survived)),2] <- 0 "
"dft$Embarked=factor(dft$Embarked, levels=c(""S"",""C"",""Q""))"
test$FamilySize <- test$SibSp + test$Parch + 1
summary(fit)
"rf_err[which.min(rf_err$combined_err),]"
"summary(df[, c('Pclass', 'Survived')])"
"whole.data[whole.data$Age>=0 & whole.data$Age<21, 'AgeBin'] <- '1'"
"conf[1,3] <- conf[1,2] /(conf[1,1]+conf[1,2])"
knn_test$Pclass <- (knn_test$Pclass - min_class) / (max_class - min_class)
knn_test$PassengerId = NULL
"train[i,6] <- train[i,6]"
"val_m[val_m$Embarked == """",c('Embarked')] = 'S'"
combi$Title[combi$Title == 'Mme'] = 'Mrs'
test$PassengerId->PassengerId
combined$Status[combined$Age < 18] <- 'Child'
train.data$Title[train.data$Title == 'Mme']         <- 'Mrs' 
"train$Cabin[ind]<-""Missing"""
summary(train_full)
knn_test$Fare <- (knn_test$Fare - min_fare) / (max_fare - min_fare)
train$FamilySize<-train$SibSp+train$Parch
data$Age_Group[data$Age <= 10] <- 'Kid'
"testset$Fare[153] <- median(Fare_impute_df$Fare[Fare_impute_df$Pclass == 3 & Fare_impute_df$Embarked == ""S""], na.rm=TRUE)"
"full[is.na(full$Cabin), ]$cabin_deck <- ""unknown"""
"full$IsChild <- ""Adult"""
"database_test$Age[is.na(database_test$Age)] <- round(mean(database_test$Age, na.rm = TRUE))"
Features$Age[is.na(Features$Age)] <- meanAge
full$Alone[full$Fsize>=2] = 2
"combi$Embarked[c(62,830)] = ""S"""
"data[is.na(data[,'deck']),'deck']=names(which.max(table(na.omit(data[,'deck']))))"
summary(data.train)
val_m$Survived_F = factor(val_m$Survived)
"test[which(test$Age<14),c(""Child"")]<-1"
"train$Embarked[train$Embarked=='']=sample(train$Embarked[train$Embarked!=''],2)"
test$p[predicted >= 0.53] = 1
full$FsizeD[full$Fsize > 4] <- 'large'
fullComb$FamilyID2 <- fullComb$FamilyID
Titanic_data$Title=as.factor(Titanic_data$Title)
combined.df$TitleGroup <- combined.df$Title   
head(full$Name)
"New_Data$Embarked[c(62,830)] = ""S"""
summary(LeViet_Tree)
train$Family[i]<-train$SibSp[i]+train$Parch[i]+1
"full$Title[full$Title == ""Mlle""]  <- ""Miss"""
tot$Title[tot$Title=='Mrs' & tot$Sex=='male']<-'Mr'
combi$FamilySize <- combi$SibSp+combi$Parch+1
"full[full$ticket_str == """", ]$ticket_str <- ""unavailable"""
Exit[6] <-  sum(is.na(VECTOR))
data.cleaned[is.na(data.cleaned)] <- 0
full$Embarked = as.numeric(as.factor(full$Embarked))-1
"combi$Fare[1044] <- median(combi[combi$Pclass == '3' & combi$Embarked == 'S', ]$Fare, na.rm = TRUE)"
"full$Age[is.na(full$Age)] <- predict(predicted_age, full[is.na(full$Age),])"
full[c('Family')]
test_boost[boost_pred >= .5] <- 1
"whole.data[whole.data$Embarked == """", 'Embarked'] <- 'C'"
test$Age[which(is.na(test$Age))]<- 20
full.data$Age <- mice_output$Age
val_m$FamilySize = val_m$SibSp + val_m$Parch +1
combined$Status[combined$Age >= 18] <- 'Adult'
head(survived_all)
full$FsizeD[full$FamilySize< 4 & full$FamilySize > 0] <- 'small'
full$Age2 = as.numeric(as.factor(full$Age2))-1
train.data$Title[train.data$Title == 'Ms']          <- 'Miss'
df_combined$Age <- mice_output$Age
survivors_logi[logi_pred > .5] <- 1
which(is.na(titanic$Fare))
traintest.data$FamilySizeCategory[traintest.data$FamilySize > 1] <- 'Small'
"age_compare[9,] = c('Test', 'Filled by MICE', mean(tst_m$Age_comp_MICE), sd(tst_m$Age_comp_MICE))"
full_data$FsizeD[full_data$Fsize < 5 & full_data$Fsize > 1] <- 'small'
"full_data$Fare[1044] <- median(full_data$Fare, na.rm=TRUE)"
"data$Age[is.na(data$Age) & data$Title=="" Mr""]<-meanMr"
"allData$Title[allData$Title == ""Mlle""] <- ""Miss"""
"Title[Title==""the ""] <- ""Lady"""
survival[i] <- 1
train$Ticket_Num2[train$Ticket_Num <= 20000] = 2
"raw_test$Fare[is.na(raw_test$Fare)] <- mean(raw_test$Fare,na.rm=T)"
"titanic[a1, ""Fare""] <- Impute.fare$median"
titanic$Title <- Title
summary(trainset$Fare)
"test$Age[is.na(test$Age)] <- median(data$Age,na.rm=T)"
"train$embdiv[which(train[,12]=='C')]<-1"
data$Title[data$Title == 'Mlle']        <- 'Miss' 
"completeTrain$AgeRange[completeTrain$Age > 60] <- ""elderly"""
this.deck[is.na(this.deck==0)] <- 0
full$Fare[1044] <- mean_mv
"full$Fare[is.na(full$Fare)] <- median(thirdClass$Fare, na.rm=T)"
allData$Age[is.na(allData$Age)] <- preds
test$Survived[test$Sex == 'female' & test$Pclass == 3 & test$Fare >= 20] <- 0
progress.bar$step()
test$Survived=0
fullComb$FamilySize <- fullComb$SibSp + fullComb$Parch + 1
"full$Fare[1044] <- median(full[full$Pclass == ""3"" & full$Embarked == ""S"",]$Fare, na.rm = TRUE)"
"imputeData[toFactor] <- lapply(imputeData[toFactor], factor)"
"Titanic_data$Title=sapply(Titanic_data$Name,FUN=extract_Title)"
full$family <- full$SibSp + full$Parch + 1
summary(log_model_sig)
train$Fare2 <- '30+'
summary(rp_model)
full_data$FareRange[full_data$Fare <20 & full_data$Fare >= 10] <- 'bw10and20'
"data[[i]] <- cbind(train$Survived, data[[i]])"
"head(train1, n=20)"
"Chi[chirow, c(1,2)] <- c(disc_var[i], rownames(tbl)[f])"
accuracy_tab$target==accuracy_tab$pred->accuracy_vec
"train$Age[is.na(train$Age)&train$Name==""Mr.""]<-mrage"
full$Survived [full$Survived == '1'] <- 'Survived'
"full$Cabin[full$Cabin == """"] <- NA"
summary(training) 
head(g1)
knn_train$Fare <- (knn_train$Fare - min_fare) / (max_fare - min_fare)
train$Embarked[which(is.na(train$Embarked))] = 'S'
vdf$Survived
head(train)
"tmp[tmp$`Actual Outcome`== 0,]$`Actual Outcome` <- 'Died'"
combi$FamilyID2 <- combi$FamilyID
summary(train$Age)
head(trainset)
df_combined$Title[df_combined$Title == 'Mlle'] <- 'Miss' 
full_data$FareRange[full_data$Fare >= 30] <- 'morethan30'
"titanic[a1,""Embarked""] <- impute.embarked"
Titanic_data$Title[Titanic_data$Title=='Dr']='Sir'
knn_train$Cabin = NULL
head(database_output)
summary(L2.predict)
combo$Cabin[l]<-cabin_count
"summary(trainingData[, respondVar])"
data$Title[data$Title == 'Ms']  <- 'Miss'
summary(df_test)
"df$Embarked[df$Embarked==""""]=""S"" "
"titanic.test[, 'Survived'] <- 0"
"full[is.na(full$Age) & full$Title == ""Dr"", ]$Age <-age_by_title[age_by_title$Title== ""Dr"", ]$Age"
full$Family_count<-full$SibSp+full$Parch+1
test$Survived[test$Sex=='female']<-1
which(is.na(combi$Title))
"full$FsizeD[full$Fsize == 1] <- ""Single"""
summary(my_decision_tree)
full$Title[full$Title == 'Ms']          <- 'Miss'
full$RareTitle<- full$Title
dim(test.data)
"combined.df[i, ""Age""] <- predict(lmAge.fit, newdata = combined.df[i, ])  "
summary(trainData1)
data.combined$Pclass=as.factor(data.combined$Pclass)
summary(miss$Age)
cols[wts<0]<-neg.col
age.data$FamSize <- age.data$SibSp + age.data$Parch
"head(test,10)"
"data$Deck[is.na(data$Deck)] <- ""Unknown"""
train$Age2 <- mice_output$Age
"train$Sex[""Sex"" == ""female""] <- 0"
df_combined$Parent <- 'Not Parent'
"test$Age[is.na(test$Age)&test$Name==""Master.""]<-masterage"
"combo$Fare[fare_na_index]<-mean(vec,na.rm = TRUE)"
summary(D2)
"age_compare[8,] = c('Test', 'Filled by Mean', mean(tst_m$Age_comp_FM), sd(tst_m$Age_comp_FM))"
full$Parch = as.numeric(as.factor(full$Parch))
"FsizeD[Fsize <= 5 & Fsize > 3] <- ""Medium"""
"train$Cabin[which(train$Cabin=="""")]<-0"
summary(full) 
trn_m$Age_comp_MICE = trn_imp$Age
which(is.na(fullComb$Fare))
DEV$Age[is.na(DEV$Age)]=121
"train$Age[is.na(train$Age)&train$Name==""Master.""]<-masterage"
"test$Age[is.na(test$Age)&test$Name==""Mr.""]<-mrage"
full$FsizeD[full$FamilySize >=4 ] <- 'large'
rfmod$results
train_full$Name=as.character(train_full$Name)
"completeTrain$AgeRange[completeTrain$Age > 16 & completeTrain$Age <= 60] <- ""adult"""
fulldata$Fare[fulldata$Fare==0]=NA
summary(raw.data)
final_ens_model$error
"raw_train$Age[is.na(raw_train$Age)] <- mean(raw_train$Age,na.rm=T)"
full$Survived = as.numeric(as.factor(full$Survived))-1
full_data$Title[full_data$Title == 'Mlle']        <- 'Miss' 
"test[i,5] <- 28"
"traintest.data$Fare[1044] <- median(traintest.data$Fare, na.rm = TRUE)"
test.data$Title[test.data$Title == 'Mlle']        <- 'Miss' 
"train[i,6] <- 25"
head(train_clean)
head(data_test)
Titanic_data$Title[Titanic_data$Title=='Lady']='Miss'
predTitanicTrain['PassengerId'] <- trainData1$PassengerId
full_data$FsizeD[full_data$Fsize > 4] <- 'large'
full$SibSp = as.numeric(as.factor(full$SibSp))-1
head(workData)
knn_train$Pclass <- (knn_train$Pclass - min_class) / (max_class - min_class)
"full[is.na(full$age), ]$age <- full[is.na(full$age), ]$medians"
summary(full_df)
full$Fsize <- full$SibSp + full$Parch + 1
summary(L1.predict)
dim(datamerging)
val_m$Sex = factor(val_m$Sex)
"test_data$Age[is.na(test_data$Age)&test_data$Sex==""female""]<-mean_female"
"data$Ticket2=toupper(gsub('( )|([.])|(/)', '', gsub(""[[:digit:]]"", '', data$Ticket)))"
head(full_data$Name)
full_data$FareRange = as.factor(full_data$FareRange)
"train$Age[train$Title == ""Dr."" & is.na(train$Age)] <- mean.dr"
summary(SVMmodel) 
"fea$Fare[is.na(fea$Fare)] <- median(fea$Fare, na.rm=TRUE)"
age.reg.p[age.reg.p<0] <- 0
"completeTrain$FareRange[completeTrain$Fare > medianFare] <- ""high"""
"full$Family_size_ratio[full$Family_count>=6]<-""Big"""
"mergedData[nchar(mergedData$Cabin) > 0,""sharedCabin""] <- duplicated(mergedData[nchar(mergedData$Cabin) > 0,""Cabin""])|duplicated(mergedData[nchar(mergedData$Cabin) > 0,""Cabin""],fromLast=TRUE)"
"d.all[is.na(Embarked),""Embarked""] <- ""S"""
train$Mother[train$Sex == 'female' & train$Parch > 0 & train$Age > 18 & train$Title != 'Miss'] <- 'Mother'
fit$confusion
train$Survived=as.factor(train$Survived)
"data[,ivar] <- mice_output[,ivar]"
full$underTen <- F
head(full)
"test$title= regmatches(test$Name, m)"
"Exit[is.na(Exit)] <- mean(Exit, na.rm=TRUE)"
train$Survived [train$Survived == 'Survived'] <- 1
titanic2$Child[titanic2$Age<14]<-1
data$title=as.factor(data$title) 
"trn_m$Age_Bin = cut(trn_m$Age_comp_MICE, breaks = c(0, 1, 12, 18, 60, 200))"
"titanic$Fare[1044]<- mean(titanic$Fare,na.rm=TRUE)"
"Mrses[1:5,]"
summary(fm)
"tf$Survived[tf$Sex==""female""]<- 1"
"Title[Title==""Jonk""] <- ""Sir."""
"test[is.na(test)] <- median(test$Age, na.rm = TRUE)"
rpart_imputation$Age[missing_age_indexes] <- imputed_age
head(train_tbl)
"train$Sex[which(train$Sex==""male"")]<-0"
summary(testPredictions)
summary(fullComb)
DstTrain[is.na(DstTrain)] <- 0
which(is.na(combi$TitleCat))
"select(arrange(survival_age_tbl, Age_Bin_Order), -Age_Bin_Order)"
"test[i,5] <- 40"
"test[i,5] <- 24"
summary(train_df)
Titanic_data$Title[Titanic_data$Title=='Capt']='Mr'
"whole.data[whole.data$Fare>=31, 'FareBin'] <- '4'"
"head(dat_all,2)"
dft$Survived=newval 
combo$Name<-NULL
x$pfare[which(x$Fare>10)]<-.6
"full_data$Embarked[c(62, 830)] <- 'C'"
DataBind$Title[DataBind$Title == 'Mlle']  <-'Miss'
which(is.na(train$Sex))
train$Pclass = factor(train$Pclass)
"titanic$Age[is.na(titanic$Age)]<- predict(fit_age,titanic[is.na(titanic$Age),])"
summary(age_prediction)
traintest.data$Child[traintest.data$Age >= 18] <- 'Adult'
"dft$logfare[is.na(dft$Fare)]= mean(log( dft$Fare[dft$Fare>0]), na.rm=TRUE  )"
full$Cabin<-NULL
"full$Cabin2 = substr(full$Cabin,1,1)"
"data$Age[is.na(data$Age) & data$Title=="" Dr""]<-meanDr"
"full[is.na(full$embarked), ]$embarked <- 'S'"
test$survived
full$Fsize = as.numeric(as.factor(full$Fsize))-1
full$quote[full$quote >= 0.5 & full$quote <= 1] <- 1
"df_train$Embarked[is.na(df_train$Embarked)] <- names(sort(table(df_train$Embarked),decreasing=TRUE)[1])"
full$Cabin[1:28]
"subset(df_combined, is.na(Embarked) == TRUE)"
train.data$Title[train.data$Title == 'Mlle']        <- 'Miss' 
full$FsizeD[full$Fsize == 1] <- 'singleton'
"full[1044, ]"
summary(model)
"FsizeD[Fsize > 5] <- ""Large"""
summary(Titanic_data_preprocess_pred)
data$Age_Group[data$Age <= 30 & data$Age > 20] <- 'Young'
"testset[which(is.na(testset$Fare)),]"
train$Mother <- 'Not Mother'
combi$FamilyID2[combi$FamilySize <= 3] <- 'Small'
"embarked[i] = ""S"""
summary(rValues)
test$Cabin_num[!is.finite(test$Cabin_num)]=-1 
combi$Mother <- '0'
submission$Survived[is.na(submission$Survived)]=0
full$Age2[full$Age>32& full$Age<=48] = 3
full_data$AgeRange[full_data$Age <=50 & full_data$Age > 25] <- 'bw25and50' 
select(-Survived)
"train_full$Pclass=factor(train_full$Pclass,labels = c(""1st"",""2nd"",""3rd""))"
ans_dt[i] = 1
head(train_full)
full$Title 
full$FamilyID = as.numeric(as.factor(full$FamilyID))-1
"select(Cabin, Survived)"
ensemble_predict$NB = as.numeric(ensemble_predict$NB)
train$Embarked[train$Embarked==''] <- 'C'
"train_new_LeViet$Cabin[train_new_LeViet$Cabin == """"] <- ""H"""
dim(Titanic_data)
"select(Pclass, Age, Sex, Fare, Embarked)"
Titanic_data$Title[Titanic_data$Title=='Don']='Mr'
x$pfare[which(x$Fare>30)]<-1
full$Surname = as.numeric(as.factor(full$Surname))-1
data_test$Ticket <- NULL
variavel1[0]
"full$FsizeD[full$Fsize >4 ] <- ""Large"""
"whole.data[is.na(whole.data$Age) & whole.data$Title == i,'Age'] <- mean(whole.data[!is.na(whole.data$Age) & whole.data$Title == i,'Age'])"
combi$TitleCat <- combi$Title
datamerging$Survived=as.factor(datamerging$Survived)
head(trainDS)
"data$Embarked[which(is.na(data$Embarked))]<-""S"""
full$quote[full$quote < 0.5] <- 0
"age_compare[1,] = c('Train', 'Original', mean(trn_m[complete.cases(trn_m[,c('Age')]),c('Age')]), sd(trn_m[complete.cases(trn_m[,c('Age')]),c('Age')]))"
predTitanic['PassengerId'] <- testData1$PassengerId
head(LeViet_Solution)
"age_compare[3,] = c('Train', 'Filled by MICE', mean(trn_m$Age_comp_MICE), sd(trn_m$Age_comp_MICE))"
summary(titanic$Age)
data.combined$Survived=as.factor(data.combined$Survived)
"whole.data[,'FamilySize'] <- whole.data$SibSp + whole.data$Parch +1"
"Title[Title==""Don.""] <- ""Mr. """
"train$Age[is.na(train$Age)] <- predict(predicted_train_age, train[is.na(train$Age),])"
"trainset$Survived[trainset$Survived==0]<-""Perished"""
full$Child[full$Age >= 18] <- 'Adult'
tst_m$Embarked = factor(tst_m$Embarked)
Titanic_data$Title[Titanic_data$Title=='Sir']='Mr'
dim(train); dim(test); dim(full)
summary(final_ens_model)
full$familySize <- full$SibSp + full$Parch + 1
full$Age2[full$Age>64] = 5
"results_frame[153,2] <- 0"
train$Ticket_Num2[train$Ticket_Num <= 30000] = 3
ans_rf_train[i] = as.integer(rf_model_train.fitted[[i]]) - 1
head(data.train)
head(train_data)
naNumbers[naNumbers > 0]
combined$Title[combined$Title == 'Mme']         <- 'Mrs' 
"Titanic_data$Embarked[is.na(Titanic_data$Embarked=='')]=""S"""
"summary(df,exact_quantiles=TRUE)"
fulldata$Samesurname=NA
DstTest[is.na(DstTest)] <- 0
train$Ticket <- NULL
data_test$Name <- NULL
full_data$familysize = full_data$SibSp + full_data$Parch + 1
"train[i,6] <- 29"
"train$Sex[which(train$Sex==""female"")]<-1"
dim(full)
"full [c(62,830),]"
"FsizeD[Fsize <= 3 & Fsize > 1] <- ""Small"""
"full$Age[is.na(full$Age) == TRUE & full$Sex == 'male'] <- median(Male_Ages$Age , na.rm =  TRUE)"
summary(df_train)
summary(completeTrain$AgeRange)
"train$Embarked[ind]<-""C"""
full$isAlone[full$Parch > 0] <- F
predictedTestSurvival[predictTest > 0.5] = 1
summary(full$Age)
full$Ticket_Num = as.numeric(as.factor(full$Ticket_Num))-1
"full_data[c(62, 830), 'Fare']"
"train_full$Cabin_num=substring(train_full$Cabin, regexpr(""(\\d)+"", train_full$Cabin),regexpr(""(\\d)+"", train_full$Cabin)+2)"
which(combi$Embarked == '')
"filter(combined, is.na(Embarked))"
head(train_df)
Titanic_data$Title[Titanic_data$Title=='Col']='Mr'
test$isTrain <- F
summary(lrm)
data_test$PassengerId <- NULL
"full$Fare[1044] <- median(full[full$Pclass == '3' & full$Embarked == 'S', ]$Fare, na.rm = TRUE)"
summary(rf_model)
"dat_all[is.na(dat_all$Age)==TRUE,""Age""] <- mean(dat_all$Age, na.rm=TRUE)"
New_Data$Title[New_Data$PassengerId == 797] <- 'Mrs' 
"full$Embarked[ind]<-""C"""
Out$Survived <- gbm.predict
head(test_data)
test$family_size=(test$SibSp+test$Parch)
knn_test$Cabin = NULL
ans_rf_predict[i] = as.integer(rf_predict[[i]]) - 1
summary(combined.df)
train$Embarked=as.character(train$Embarked)
full_data$Title[full_data$Title == 'Ms']          <- 'Miss'
train_full$family_size=(train_full$SibSp+train_full$Parch)
head(data.train.use)
"age_compare[6,] = c('Val', 'Filled by MICE', mean(val_m$Age_comp_MICE), sd(val_m$Age_comp_MICE))"
titanic2$Fare2[titanic2$Fare < 30 & titanic2$Fare >= 20] <- '20-30'
"whole.data[whole.data$Title == 'Mme', 'Title'] <- 'Mrs'"
"tst_m$Age_Bin = cut(tst_m$Age_comp_MICE, breaks = c(0, 1, 12, 18, 60, 200))"
fullComb$FsizeD[fullComb$FamilySize == 1] <- 'singleton'
combined$Fam_SizeD[combined$FamSize > 4] <- 'large'
"train[which(train$Age<14),c(""Child"")]<-1"
combined.df$FamilySize <- combined.df$SibSp + combined.df$Parch + 1
"train_full$Cabin_num[train_full$Cabin_num=='']=""-1"" "
summary(combi$Embarked)
test$Family[i]<-test$SibSp[i]+test$Parch[i]+1
"df_combined$Fare[1044] <- median(df_combined[df_combined$Pclass == '3' & df_combined$Embarked == 'S', ]$Fare, na.rm = TRUE)"
summary(DataBind)
full$Age <- TMPComplete$Age
filter(Age >= 0)
"full$Fare[1044] <- median(full$Fare, na.rm = TRUE)"
data$Title[data$Title == 'Ms']          <- 'Miss'
df_combined$Title[df_combined$Title == 'Mme'] <- 'Mrs' 
data$Embarked=as.factor(as.character(data$Embarked))
"train$Age[grepl(""Mrs\\."", train$Name) & is.na(train$Age)] = mean.mrs"
"full_data[1044, ]"
data$Pclass=as.factor(as.character(data$Pclass))
summary(D1)
"full$Embarked[c(62, 830)] <- 'S'"
"whole.data[,'Title'] <- regmatches(whole.data$Name, m)"
"full[is.na(full$Age) & full$Title == ""Miss"", ]$Age <-age_by_title[age_by_title$Title== ""Miss"", ]$Age"
train$Child[train$Age >= 18] <- 0
gbm.tune$bestTune
"test[153,]"
data$Title[data$Title == 'Mme']         <- 'Mrs' 
"full$Embarked[c(62,830)] <- 'C'"
"test[is.na(test$Fare),]"
summary(d.all)
trn_m$Survived_F = factor(trn_m$Survived)
"test$Cabin[which(test$Cabin=="""")]<-0"
full_data$Title[full_data$Title == 'Mme']         <- 'Mrs'
rf_model$confusion
summary(whole.data)
"whole.data[whole.data$Fare>=0 & whole.data$Fare<8, 'FareBin'] <- '1'"
"train$Age[is.na(train$Age)] <- mean(train$Age,na.rm=T)"
train$Age <- mice_output_train$Age
"subset(df_combined, is.na(Fare) == TRUE)"
head(my_prediction)
summary(analysis)
train$Title[train$Title == 'Ms']          <- 'Miss'
"titanic$Age[is.na(titanic$Age)] <- predict(Agefit, titanic[is.na(titanic$Age),])"
"full$quote <- ""alone"""
"titanic[a1,]"
"full$Family_size_ratio[full$Family_count>=3 & full$Family_count<=5]<-""Medium"""
"full$Embarked[c(62, 830)] <- 'C'"
data_train$Cabin <- NULL
full$Cabin[1:10]
"train_data$Age[ib] <- median(train_data$Age,na.rm=TRUE)"
"full$Embarked[c(62,830)] = 'S'"
submission$test_model[submission$test_model>.5]<- 1
"dft$Age[is.na(dft$Age)]=mean(dft$Age, na.rm=TRUE) "
fea$Age[is.na(fea$Age)] <- -1
full$FamilySize <- full$Parch + full$SibSp + 1
Impute.fare$median 
dim(test)
fullComb$Child[fullComb$Age >= 16] <- 'Adult'
which(is.na(full$Fare))
"test$Pclass=factor(test$Pclass,labels = c(""first"",""second"",""third""))"
"full_data[c(62, 830), 'Embarked']"
summary(fullComb$Age)
test_data$prediction[is.na(test_data$prediction)] <- as.integer(round(mean(as.numeric(data$Survived))))
summary(model.logit)
trainset$Cabin <- NULL
train_full$Cabin_deck=factor(train_full$Cabin_deck)
titanic2$Fare2[titanic2$Fare < 20 & titanic2$Fare >= 10] <- '10-20'
"full[full$Embarked != 'C' &  full$Embarked != 'Q' & full$Embarked != 'S',]"
"Title[Title==""Capt""|Title==""Majo""|Title==""Col.""] <- ""Army"""
"fea$Embarked[fea$Embarked==""""] = ""S"""
test$Title[test$Title == 'Ms']          <- 'Miss'
test.data$FamilySize <- test.data$SibSp + test.data$Parch + 1
"theDataImpute[,i] <- predict(preProcAge, imputeDataDummy)$Age"
"titanic$Age <- theDataImpute[,1]"
summary(age.reg)
full$Child[full$Age < 18] <- 'Child'
mod_test2$Survived <- Tree1Prediction
full_data$FsizeD[full_data$Fsize == 1] <- 'singleton'
prRF$Survived <-prediction
"head(train, n=10)"
summary(titanic$Fare)
"age[age_na_rows] = sample(ages, length(age_na_rows))"
"train$Age[grepl(""Master\\."", train$Name) & is.na(train$Age)] = mean.master"
"train$agegroup[which(train[,6]>20)]<-1"
DataBind$Title[DataBind$Title == 'Ms']  <-'Miss'
data_train$Parch <- NULL
summary(nb_model)
datamerging$Ticket=as.factor(datamerging$Ticket)
test_new_Leviet$Survived <- NULL
full$Ticket_Pre = as.numeric(as.factor(full$Ticket_Pre))-1
full$PassengerId = as.numeric(as.factor(full$PassengerId))
"prediction[, i] <- predict(rfmod[[i]], newdata=devset[, -1, drop=F])"
combined$Fam_SizeD[combined$FamSize < 5 & combined$FamSize > 1] <- 'small'
full$isFemale <- F
"full[is.na(full$Fare),]"
"train_full$Cabin_deck[train_full$Cabin_deck=='']=""MiSS"""
full$Fare2 = as.numeric(as.factor(full$Fare2))-1
full$isAlone[full$SibSp > 0] <- F
summary(data$Age)
head(trial)
combined.df$Age[is.na(combined.df$Age)] <-28.00
full$Cabin2 = as.factor(full$Cabin2)
head(new_titanic)
"test$Pclass=factor(test$Pclass,labels = c(""1st"",""2nd"",""3rd""))"
head(titanic2)
train.data$FamilySize <- train.data$SibSp + train.data$Parch + 1
"Exit[4] <-  median(VECTOR,na.rm=TRUE)"
summary(train1)
"combined$Embarked[c(62, 830)] <- 'C'"
"trn_m[is.na(trn_m$Age_comp_FM),c('Age_comp_FM')] = fill_Age_mean"
"ans_logit[i] = round(fit_logit$fitted.values[[i]],0)"
"df$Embarked=factor(df$Embarked, levels=c(""S"",""C"",""Q"")) "
mergedData$Name <- NULL
combi$Child[combi$Age < 18] <- 1
"data[is.na(data[,'Age']),'Age'] <- predict(data.model, data.test)"
Titanic_data$Title[Titanic_data$Title=='Dona']='Mr'
"data$Age[is.na(data$Age) & data$Title=="" Mrs""]<-meanMrs"
summary(train_refined)
full$Fare2[full$Fare>31] = 4
"full[c(62,830),]"
rf_pred[is.na(rf_pred)] <- 1
full$Title = as.factor(full$Title)
"dat_all[dat_all$Embarked=='', ""Embarked""] <- ""S"""
"head(test1, n=20)"
full$Fare[ind]<-11.4508
"test[which(test$Parch>0 & test$Age>18 & test$Name==""Mrs.""),c(""Mother"")]<-1"
full$Mother[full$Sex == 'female' & full$Parch > 0 & full$Age > 18 & full$Title != 'Miss'] <- 'Mother'
datamerging$Pclass=as.factor(datamerging$Pclass)
y_predict[y_predict == T] <- 1
Titanic_data$Title[Titanic_data$Title=='Major']='Mr'
"data$Embarked[c(62, 830)] <- 'C'"
"whole.data[whole.data$Title == 'Mlle' | whole.data$Title == 'Ms', 'Title'] <- 'Miss'"
"full$isFemale[full$Sex == ""female""] <- T"
full_data$AgeRange = as.factor(full_data$AgeRange)
full$age <- full$Age
df$logfare[df$Fare==0] = mean(log( df$Fare[df$Fare>0])  )
bag_pred[is.na(bag_pred)] <- 1
"whole.data[, name] <- as.factor(whole.data[, name])"
dim(train.data)
testdata$Survived=NA
full$Age[ind]<-as.numeric(Imputed_age)
fulldata$isFemale=0
head(LeViet_prediction)
"head(titanic,3)"
data[!is.na(data) & data =='']=NA
"df[tmp[df$title] == TRUE,]$title <- 'Other'"
"age[i] = sample(na.omit(full$Age),1)"
"New_Data$Fare[1044] <-median(New_Data$Fare, na.rm = TRUE)"
train$Child[train$Age >= 16] <- 'Adult'
full_data$Sex = as.factor(full_data$Sex)
"df[is.na(df$Age),]$age_missing <- 1"
"mergedData$title[mergedData$title == ""Ms""] <- ""Miss"""
full$Age[1:30]
train$Child[train$Age < 18] <- 1
summary(train$Sex)
"select(PassengerId, Survived, Pclass, Sex, age_minor, Fare, cabin_code, Embarked)"
"median_fare[median_fare$Pclass==full[is.na(full$Fare), ]$Pclass ,]$medians"
ans_dt[i] = 0
full$Fare[c(1044)] = 8.05
data$Fare[data$Fare <3.0] = NA
cm$byClass[['F1']]
"full[is.na(full$Age) & full$Title == ""Master"", ]$Age <-age_by_title[age_by_title$Title== ""Master"", ]$Age"
full$Mother <- 'Not Mother'
"data.test[,'Age'] <- data.global[-c(1:dim(data.train)[1]), 'Age']"
"titanic.train[,'flag'] <- 0"
train$Title[train$Title == 'Mme'] = 'Mrs'
"test.data$SurvivedGender[test.data$Sex == ""female""] <- 1"
"full$Embarked[c(62,830)] <- ""C"""
New_Data$family_size <- New_Data$SibSp + New_Data$Parch + 1
traintest.data$Child[traintest.data$Age < 18] <- 'Child'
summary(fullComb$Embarked)
full$Child[full$Age >= 16] <- 'Adult'
"full_data[c(1044), 'Fare']"
train$Survived = as.factor(train$Survived)
"data.combined[which(data.combined$Cabin==""""),""Cabin""] <- ""U"""
"data.train[,'Age'] <- data.global[1:dim(data.train)[1], 'Age']"
"full[full$title=='Ms',]$title<-""Miss"""
"full[c(""Title"",""Name"")]"
test$Survived<-y_pred
"Title[Title==""Mlle""] <- ""Miss"""
summary(full_data$Embarked)
"test$Age[is.na(test$Age)] <- mean(test$Age,na.rm=T)"
"titanic.test[,'flag'] <- 1"
which(is.na(train$Pclass))
final_ens_model$models
"combi$Age[is.na(combi$Age)] <- predict(Agefit, combi[is.na(combi$Age),])"
"whole.data[whole.data$Age>=18, 'Child'] <- '1'"
"data$Fare[data$Fare > 300] <- median(data[data$Pclass == '1' & data$Embarked == 'C', ]$Fare, na.rm = TRUE)"
full$familyID[full$familySize <= 2] <- 'Small'
summary(titanic$Age)  
"ensemble_predict$RF = as.numeric(predict(model_RF_bal,test, type=""response""))-1"
data$Cabin=as.factor(as.character(data$Cabin))
df_combined$Title[df_combined$Title == 'Ms'] <- 'Miss' 
"train$Cabin_recorded[is.na(train$Cabin) |train$Cabin==''] <- ""No"""
dim(traintest.data)
train$Title[train$Title == 'Mlle']        <- 'Miss' 
full$Age <- mice_output$Age
"whole.data[whole.data$Fare>=8 & whole.data$Fare<15, 'FareBin'] <- '2'"
rValues$values
data_train$Name <- NULL
dim(train)
fulldata$Deck=as.factor(fulldata$Deck)
full$Surname                          
"test_one$Survived[test_one$Sex == ""female""] <- 1"
full_data$FareRange[full_data$Fare < 10] <- 'lessthan10'
combo$Ticket<-NULL
head(titanic.train)
summary(results)
data$Ticket2=as.factor(data$Ticket2) 
head(trClean2)
which(is.na(combi$Sex))
data$Age_Group[data$Age <= 50 & data$Age > 40] <- 'Senior'
"tst_m[is.na(tst_m$Age_comp_FM),c('Age_comp_FM')] = fill_Age_mean"
"test$Cabin_deck[test$Cabin_deck=='']=""MiSS"""
x$score<-(x$psex*.56)+(x$pfare*.39)+(x$ppclass*.38)+(x$pembarked*.21)
combi$FamilyID[combi$FamilySize <= 2] <- 'Small'
fulldata$isKids[fulldata$Age <=18  & (fulldata$Parch > 0 | fulldata$TicketGroupSize>1 | fulldata$FamilynameSize>1)  & fulldata$Title != 'Mrs'] <- 1
"full$Embarked[full$Embarked == """"] <- NA"
df[[response]] <- as.factor(df[[response]])
full$Child <- 'Adult'
summary(solution_1)
head(full)  
combined$Age <- mice_output$Age
"data[is.na(data$Age),'Age']=median(data$Age, na.rm=T)"
"train_new_LeViet$Cabin[train_new_LeViet$Cabin == ""T""] <- ""H"""
"head(full, 1)"
"age[age_na_rows] = sample(na.omit(full$Age), length(age_na_rows))"
"full[full$title=='Mlle',]$title<-""Miss"""
"Title[Title==""Mme.""] <- ""Mrs."""
"select(Survived,Sex,Fare,Pclass,Age,Title,SibSp,Parch,Embarked) "
full$Survived [full$Survived == '0'] <- 'Died'
"titanic[!complete.cases(titanic$Fare),]"
test$Survival<-y_pred
ans_svm[i] = as.integer(svm.fitted[[i]]) - 1
"filter(combined, is.na(Fare))"
knn_test$Name = NULL
traintest.data$FamilySizeCategory[traintest.data$FamilySize > 4] <- 'Large'
"full[which(is.na(full$Embarked)), 1]"
"train$Age[grepl(""Miss\\."", train$Name) & is.na(train$Age)] = mean.miss"
test$family_size <- test$SibSp + test$Parch + 1
dim(training) 
data$Age_Group[data$Age <= 40 & data$Age > 30] <- 'Adult'
titanic2$Child[titanic2$Age<18]<-1
"test$Age[is.na(test$Age)] <- predict(predicted_test_age, train[is.na(test$Age),])"
"df[!is.na(df$Cabin),]$has_cabin <- 1"
"Exit[3] <-  mean(VECTOR,na.rm=TRUE)"
"train$Age[is.na(train$Age)]=sample(train$Age[!is.na(train$Age)],177)"
full_data$Child[full_data$Age < 18] <- 1
"knn_test$Fare[i] <- mean(knn_test$Fare, na.rm = TRUE)"
head(submit)
head(train_tbl_with_age)
tst_m$Sex = factor(tst_m$Sex)
summary(test_titanic)
full$Title[full$Title == 'Mme']         <- 'Mrs' 
"select(Pclass, Age, Sex, Fare, Embarked, Survived)"
"df[df$Sex == 'male',]$Sex.int <- 1"
full.data$Child[full.data$Age < 18] <- 'Child'
test_new$Survived <- NULL
